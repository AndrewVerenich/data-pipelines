{"version":3,"file":"module.js","mappings":"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I,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,IAAI,IAAI,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,IAAIC,GAAK,CAAC,EAAE,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,IAAIC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,IAAIC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,I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IC,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAG,IAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,IAAIC,EAAI,IAAI,GAAG,IAAI,GAAG,IAAIC,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAG,IAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,IAAIC,EAAI,IAAI,GAAG,IAAI,GAAG,IAAIC,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAG,IAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,IAAIC,EAAI,IAAI,GAAG,IAAI,GAAG,IAAIC,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAG,IAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,IAAIC,EAAI,IAAI,GAAG,IAAI,GAAG,IAAIC,GAAKrQ,EAAE2Q,EAAI,CAAC,EAAE,MAAM3Q,EAAE2Q,EAAI,CAAC,EAAE,MAAM3Q,EAAE,CAAC,GAAG,GAAG,GAAG,KAAKgS,GAAK,CAAC,IAAI,IAAI,IAAID,KAAM,CAAC,GAAG7C,EAAI,GAAG,CAAC,EAAE,KAAK,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,EAAE,KAAK,IAAIE,GAAKrQ,EAAEwS,GAAK,CAAC,EAAE,MAAMxS,EAAEwS,GAAK,CAAC,EAAE,MAAMxS,EAAEwS,GAAK,CAAC,EAAE,MAAMxS,EAAEwS,GAAK,CAAC,EAAE,MAAMxS,EAAEwS,GAAK,CAAC,EAAE,MAAMxS,EAAEwS,GAAK,CAAC,EAAE,MAAMxS,EAAEwS,GAAK,CAAC,EAAE,MAAMxS,EAAEiR,EAAI,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG/B,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EA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CA,mBAEA,QACA,SAEA,UACA,oBACA,OACA,WACA,SACA,aACA,QACA,YACA,QACA,QACA,WACA,UACA,MACA,UACA,QACA,oBACA,qBACA,uBACA,QACA,SACA,OAEA,SAEA,gBAEEuD,GAAwBvD,GAAc,CACxC,yBACA,kBACA,uBAEEwD,GAAgBxD,GAAc,CAChC,OACA,qCACA,yBAEEyD,GAAyBzD,GAAc,CAEzC,qBAEA,WACA,cACA,oBAEA,yBAEA,2BAEE0D,GAA0B1D,GAAc,IAEjC2D,GAAW,CACpB1vG,KAAM,WACN2vG,iBAAkB,CACdT,kBACAC,gBAAiB,IAAIA,MAAoBE,MAA0BD,IACnEE,yBACAC,iBACAC,0BACAC,2BACAG,iBChKgB,CAEpB,MACA,MACA,MACA,KACA,MACA,uBACA,KACA,UACA,KACA,OACA,OACA,UACA,WACA,SACA,QACA,OACA,UACA,UACA,SACA,OACA,WACA,OACA,MACA,OACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,YACA,MACA,OACA,OACA,QACA,WACA,SACA,OACA,SACA,KACA,SACA,KACA,QACA,YACA,OACA,KACA,OACA,UACA,OACA,QACA,SACA,QACA,UACA,MACA,KACA,MACA,OACA,QACA,KACA,KACA,KACA,QACA,QACA,OACA,YACA,YACA,QACA,QACA,YACA,UACA,QACA,SACA,OACA,SACA,MACA,OACA,QACA,cACA,OACA,KACA,QACA,OACA,YACA,QACA,SACA,QACA,OACA,QACA,SACA,OACA,SAEA,OAEA,OACA,OACA,QACA,KACA,MACA,QACA,UACA,WACA,UACA,WACA,iBDsDIC,kBCpDiB,CAErB,QACA,OACA,QACA,OACA,WACA,YACA,WACA,QACA,MACA,WACA,UACA,SACA,UACA,UACA,UACA,UACA,aACA,aACA,UACA,SACA,SACA,OACA,YD6BIC,sBElKiB,CAErB,kBACA,8BACA,qBACA,sBACA,eACA,oBACA,wBACA,sBACA,qBACA,qBAEA,YACA,YACA,MACA,OACA,QACA,UACA,YACA,aACA,MACA,MACA,mBACA,aACA,cACA,aACA,MACA,UACA,WAEA,YACA,YACA,mBACA,MACA,UACA,SACA,UACA,QACA,UACA,cACA,aACA,MACA,MACA,aACA,MAEA,wBACA,mBACA,mBACA,iBAGA,eACA,eACA,kBACA,iBACA,sBACA,2BACA,gBACA,SACA,cACA,UACA,eAEA,YAGA,mBACA,gBACA,YAEA,eACA,UACA,OACA,WACA,WACA,YACA,aACA,sBACA,cACA,WACA,aACA,YAEA,mBACA,WACA,UACA,eACA,eACA,gBACA,iBACA,kBACA,WACA,iBAEA,QAEA,iBAEA,qBACA,qBACA,WACA,UACA,cACA,eACA,YACA,aACA,cACA,iBACA,YACA,yBACA,cACA,kBACA,kBACA,mBACA,cACA,gBACA,eACA,YACA,gBACA,eACA,cACA,cACA,UACA,aACA,cACA,YACA,YACA,kBACA,cACA,qBACA,kBACA,iBACA,eACA,0BACA,aACA,kBACA,mBACA,kBACA,gBACA,mBACA,kBACA,aACA,YACA,cACA,iBACA,yBACA,iBACA,aACA,mBACA,eACA,eACA,YACA,cACA,gBACA,gBACA,aACA,WACA,eACA,YACA,OACA,OAEA,mBACA,MACA,OACA,SACA,SAEA,iBACA,kBACA,0BACA,oBAEA,gBACA,UACA,eACA,gBACA,mBAEA,eACA,aACA,sBACA,aACA,qBACA,mBACA,4BACA,mBACA,iBAEA,MACA,OACA,SACA,SACA,cACA,OACA,OACA,MACA,QACA,MACA,KACA,MACA,QACA,WACA,QACA,MACA,cACA,gBACA,cACA,WACA,gBACA,MACA,QACA,QACA,OACA,UACA,QACA,MACA,OACA,OACA,QACA,MACA,OACA,OACA,QACA,MACA,OACA,OACA,QACA,QACA,eAEA,cACA,aACA,YACA,OACA,MACA,kBACA,kBAEA,qBACA,0BACA,mBACA,kBACA,eACA,sBACA,oBACA,WACA,oBACA,iBAEA,OACA,aACA,eACA,YACA,QACA,aAEA,eAEA,OACA,YACA,aACA,aACA,cACA,SACA,UACA,WACA,WAEA,QACA,cACA,cACA,mBACA,MACA,uBACA,wBACA,SACA,kBACA,YACA,SACA,cACA,cACA,WACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,YACA,yBACA,eACA,kBACA,iBACA,qBACA,eACA,iBACA,gBACA,UACA,SACA,UACA,QACA,OACA,QACA,+BACA,UACA,QACA,cACA,SACA,SACA,YACA,YACA,YACA,iBACA,SACA,YACA,OACA,UACA,QAEA,eACA,OACA,UACA,WACA,WACA,YACA,aACA,cACA,aAEA,oBACA,UACA,SACA,YACA,gBACA,gBACA,iBACA,kBACA,mBACA,kBACA,oBACA,mBACA,mBACA,eACA,cACA,cAEA,gBAEA,WACA,KACA,SACA,SAGA,MACA,UACA,SACA,UACA,OACA,QACA,YACA,aACA,uBACA,QACA,eACA,wBACA,OACA,MACA,MACA,OACA,MACA,YACA,SACA,aACA,cACA,MACA,MACA,SACA,WACA,UACA,WAEA,YAEA,UACA,QACA,OACA,QACA,aACA,UACA,SAGA,WACA,WACA,SACA,SACA,SACA,wBACA,QACA,MAEA,eACA,eACA,oBACA,OACA,WACA,WACA,MACA,YACA,YACA,kBACA,OACA,SACA,QACA,oBACA,MACA,iBACA,UACA,mBACA,SACA,oBACA,OACA,YACA,oBACA,mBACA,oBACA,oBACA,kBACA,mBACA,oBACA,mBACA,mBACA,OACA,OAEA,YACA,WACA,mBACA,kBAEA,eACA,sBAEA,MACA,OACA,QACA,OACA,QACA,OACA,QACA,QACA,OACA,MACA,OACA,UACA,MACA,QACA,KACA,MACA,OACA,QACA,KACA,MACA,UACA,OACA,QACA,MACA,OACA,OACA,MACA,OAEA,eACA,iBACA,iBAEA,SAEA,QACA,OACA,SACA,QACA,OACA,QACA,UACA,QACA,OACA,QACA,QACA,SACA,QAEA,mBACA,0BACA,cAEA,OACA,SACA,MAEA,MACA,QACA,MACA,MACA,SACA,MACA,YACA,aACA,cACA,MACA,aACA,OACA,YACA,QACA,eACA,kBACA,kBACA,OAC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,iBACA,mBACA,gBACA,wBACA,aACA,8CACA,QACA,wBACA,OACA,QACA,aACA,gBACA,UACA,qCACA,sBACA,oBACA,kCACA,uBACA,+BACA,0BACA,4BACA,wBACA,yBACA,2BACA,2BACA,6BACA,+BACA,iCACA,gCACA,cACA,gBACA,oCACA,yBACA,+BACA,uBACA,gBACA,kBACA,iBACA,kEACA,mBACA,sCACA,8BACA,yBACA,2BACA,sBACA,oBACA,0BACA,+BACA,yBACA,wBACA,kBACA,iBACA,UACA,iCACA,4BACA,aACA,sBACA,oBACA,kBACA,gCACA,qBACA,2BACA,wBACA,0BACA,yBACA,YACA,yBACA,cACA,gBACA,eACA,kBACA,4BACA,YACA,cACA,kCACA,uBACA,gBACA,cACA,qBACA,gBACA,uBACA,kCACA,gCACA,iBACA,eACA,uBACA,sBACA,kBACA,wBACA,gBACA,wBACA,iCACA,gBACA,eACA,iBACA,sBACA,sBACA,iCACA,eACA,uCACA,sBACA,wBACA,mCACA,gCACA,uCACA,eACA,kBACA,OACA,QACA,UACA,UACA,QACA,aACA,OACA,OACA,OACA,UACA,gBACA,UACA,yBACA,iDACA,SACA,WACA,SACA,SACA,iCACA,YACA,8BACA,iBACA,cACA,0BACA,0BACA,gBACA,eACA,WACA,WACA,aACA,oBACA,6CACA,iBACA,SACA,wBACA,+CACA,UAEE,GAAwBA,GAAc,CAAC,cAAe,eAAgB,oBACtE,GAAgBA,GAAc,CAChC,OACA,qCACA,yBAEE,GAAyBA,GAAc,CACzC,YACA,YACA,WACA,2BAEE,GAA0BA,GAAc,IACjC4F,GAAM,CACf3xG,KAAM,MACN2vG,iBAAkB,CACdT,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,uBAAsB,GACtBC,wBAAuB,GACvBG,iBCvQgB,CAEpB,WACA,MACA,QACA,QACA,MACA,WACA,QACA,QACA,MACA,MACA,KACA,aACA,YACA,UACA,KACA,aACA,QACA,gBACA,MACA,YACA,SACA,QACA,UACA,SACA,aACA,KACA,QACA,OACA,SACA,UACA,cACA,WACA,OACA,OACA,QACA,QACA,QACA,UACA,aACA,SACA,SACA,UACA,SACA,SACA,YACA,UACA,aACA,aACA,WACA,WACA,QACA,YACA,SACA,QACA,UACA,eACA,mBACA,eACA,iBACA,iBACA,eACA,oBACA,mBACA,eACA,SACA,QACA,OACA,WACA,oBACA,mBACA,MACA,OACA,aACA,WACA,SACA,SACA,kBACA,iBACA,aACA,UACA,UACA,WACA,aACA,SACA,YACA,aACA,WACA,aACA,gBACA,cACA,UACA,WACA,aACA,WACA,KACA,WACA,OACA,SACA,UACA,OACA,WACA,OACA,SACA,SACA,WACA,aACA,MACA,WACA,SACA,QACA,SACA,QACA,SACA,YACA,YACA,YACA,UACA,SACA,OACA,UACA,WACA,WACA,UACA,SACA,QACA,YACA,OACA,QACA,SACA,MACA,UACA,OACA,OACA,OACA,WACA,UACA,YACA,MACA,SACA,KACA,OACA,QACA,UACA,QACA,UACA,OACA,eACA,SACA,OACA,OACA,OACA,QACA,WACA,KACA,YACA,SACA,KACA,YACA,YACA,YACA,QACA,YACA,aACA,MACA,WACA,UACA,QACA,QACA,cACA,SACA,YACA,YACA,OACA,KACA,SACA,SACA,YACA,UACA,MACA,OACA,OACA,OACA,MACA,QACA,WACA,QACA,UACA,WACA,QACA,OACA,OACA,QACA,WACA,QACA,YACA,SACA,YACA,iBACA,UACA,WACA,OACA,UACA,WACA,OACA,aACA,eACA,WACA,cACA,eACA,SACA,UACA,WACA,OACA,WACA,QACA,SACA,MACA,MACA,YACA,UACA,KACA,UACA,UACA,WACA,aACA,aACA,aACA,OACA,UACA,aACA,OACA,UACA,OACA,QACA,WACA,OACA,KACA,MACA,SACA,MACA,YACA,KACA,OACA,eACA,WACA,SACA,KACA,QACA,MACA,QACA,OACA,aACA,UACA,SACA,WACA,YACA,OACA,YACA,cACA,eACA,aACA,WACA,OACA,UACA,YACA,OACA,WACA,YACA,UACA,UACA,UACA,SACA,aACA,YACA,UACA,OACA,SACA,QACA,UACA,QACA,OACA,OACA,QACA,WACA,aACA,cACA,UACA,UACA,SACA,SACA,QACA,WACA,UACA,WACA,SACA,qBACA,SACA,UACA,SACA,QACA,OACA,WACA,gBACA,aACA,cACA,kBACA,kBACA,gBACA,WACA,UACA,MACA,YACA,OACA,SACA,aACA,MACA,MACA,YACA,SACA,aACA,SACA,SACA,SACA,UACA,SACA,WACA,SACA,YACA,WACA,UACA,eACA,MACA,SACA,SACA,OACA,OACA,SACA,WACA,MACA,QACA,UACA,WACA,QACA,WACA,YACA,SACA,WACA,OACA,WACA,SACA,QACA,YACA,UACA,UACA,SACA,SACA,UACA,SACA,cACA,QACA,aACA,OACA,KACA,cACA,UACA,OACA,WACA,OACA,OACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,YACA,QACA,SACA,WACA,UACA,OACA,UACA,OACA,WACA,UACA,OACA,WACA,QACA,QACA,OACA,UACA,MACA,QACA,aACA,YACA,gBACA,OACA,SDxIIC,kBC0IiB,CAErB,QACA,SACA,SACA,OACA,UACA,QACA,OACA,YACA,OACA,OACA,WACA,SACA,MACA,UACA,SACA,mBACA,QACA,SACA,SACA,UACA,MACA,OACA,OACA,OACA,UACA,WACA,eACA,kBACA,QACA,OACA,QACA,WACA,UACA,WACA,OACA,OACA,YACA,YACA,UACA,cDlLIC,sBDzQiB,CAErB,YACA,MACA,cACA,QACA,YACA,aACA,kBACA,YACA,WACA,UACA,MACA,SACA,MACA,kBACA,kBACA,eACA,YACA,YACA,aACA,iBACA,YACA,UACA,aACA,WACA,WACA,WACA,SACA,cACA,MACA,WACA,gBACA,SACA,WAEA,MACA,SACA,OACA,WACA,YACA,cACA,aACA,cACA,YACA,MACA,eACA,cACA,aACA,aACA,cACA,QACA,YACA,OACA,OACA,QACA,QACA,SACA,YACA,QACA,SACA,SACA,SACA,eACA,QACA,cACA,UACA,OACA,mBACA,MACA,WACA,gBACA,oBACA,mBACA,SACA,MACA,OACA,MACA,kBACA,mBACA,YACA,aACA,MACA,UACA,aACA,YACA,gBACA,YACA,OACA,eACA,uBACA,iBACA,WACA,kBACA,SACA,cACA,eACA,UACA,QACA,aACA,SACA,mBACA,aACA,aACA,eACA,cACA,UACA,kBACA,MACA,UACA,YACA,QACA,qBACA,kBACA,UACA,WACA,OACA,QACA,QACA,cACA,MACA,WACA,OACA,gBACA,qBACA,SACA,UACA,SACA,QACA,SACA,SACA,SACA,UACA,SACA,UACA,UACA,SACA,aACA,cACA,aACA,eACA,aACA,aACA,WACA,QACA,QACA,OACA,SACA,UACA,UACA,UACA,KACA,SACA,mBACA,QACA,eACA,kBACA,QACA,OACA,QACA,MACA,kBACA,cACA,mBACA,MACA,SACA,kBACA,MACA,QACA,YACA,iBACA,eACA,WACA,aACA,eACA,YACA,YACA,qBACA,MACA,SACA,MACA,OACA,eACA,UACA,YACA,WACA,SACA,MACA,QACA,WACA,UACA,cACA,gBACA,UACA,cACA,OACA,SACA,WACA,UACA,eACA,iBACA,eACA,cACA,qBACA,iBACA,gBACA,SACA,UACA,MACA,UACA,QACA,QACA,kBACA,OACA,QACA,WACA,mBACA,mBACA,SACA,kBACA,OACA,MACA,OACA,UACA,QACA,OACA,QACA,UACA,SACA,WACA,SACA,UACA,UACA,UACA,YACA,aACA,eACA,MACA,OACA,aACA,eACA,YACA,YACA,mBACA,gBACA,gBACA,WACA,UACA,UACA,UACA,SACA,gBACA,WACA,WACA,YACA,iBACA,eACA,mBACA,aACA,YACA,OACA,aACA,kBACA,WACA,QACA,UACA,YACA,cACA,QACA,cACA,QACA,QACA,qBACA,iBACA,qBACA,wBACA,uBACA,uCACA,OACA,WACA,gBACA,eACA,gBACA,aACA,YACA,cACA,aACA,YACA,gBACA,WACA,QACA,WACA,SACA,eACA,UACA,cACA,iBACA,eACA,OACA,gBACA,cAEA,aACA,aACA,SACA,WAGA,OACA,aACA,QACA,MACA,OACA,aACA,cACA,aACA,YACA,kBAEA,QCrDIC,YAAa,CAAC,MACdC,YAAa,CACT,CAAEC,MAAO,QAASC,SAAU,CAAC,IAAK,IAAK,OACvC,CAAED,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAM,KAAM,MAAOC,eAAe,IAEzEC,WAAY,CAAC,SACbC,WAAY,CAAExrG,MAAO,MAAO+sG,KAAM,OAClCrB,WAAY,CAAEC,YAAY,EAAMC,MAAO,CAAC,MACxCoB,WAAY,CAAEhtG,MAAO,MAAO+sG,KAAM,OAClCd,UAAW,CACP,KACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGRnsB,cAAe,CACX8sB,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KEtSvB,GAAiBtD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,OACA,QACA,WACA,SACA,eACA,uCACA,QACA,SACA,uBACA,kBACA,gBACA,eAGA,cACA,SAEA,MAEA,aACA,4BACA,aACA,SACA,SAEA,oBAEE,GAAyBA,GAAc,CAAC,8BACxC,GAAwBA,GAAc,CAExC,uCAEA,SACA,mBACA,gCAEA,cAEA,aAEA,cACA,eACA,iBACA,gBACA,gBACA,gDACA,eACA,uCACA,gBACA,sFAEA,mBAEA,uBACA,qBAEA,kBACA,iDACA,0CACA,iDACA,8CACA,wBACA,OACA,QACA,iJACA,yDACA,iEACA,4CACA,2EACA,uBACA,4BACA,yGACA,gCACA,uCACA,gBACA,cACA,+CACA,iBACA,iCACA,UACA,kBACA,iBACA,oBACA,iCACA,iBACA,uBACA,uBACA,2HACA,+DACA,sBACA,sBAEA,eACA,wCACA,sCACA,qJACA,eACA,UACA,mIACA,uDACA,aACA,OACA,UACA,gBACA,UACA,yBACA,4BACA,sJACA,wCACA,YACA,iBACA,+GACA,wCACA,0BACA,aACA,iDACA,wDACA,4BACA,mBACA,kBACA,0BACA,MACA,wBACA,iDAEE,GAAwBA,GAAc,CAAC,cAAe,eAAgB,oBACtE,GAAgBA,GAAc,CAChC,OACA,qCACA,gCACA,yBAEE,GAAyBA,GAAc,CACzC,YACA,YACA,WACA,2BAEE,GAA0BA,GAAc,IAEjC+F,GAAO,CAChB9xG,KAAM,OACN2vG,iBAAkB,CACdT,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,uBAAsB,GACtBC,wBAAuB,GACvBG,iBC7JgB,CAIpB,SACA,YACA,SACA,SACA,WACA,MACA,QACA,MACA,WACA,QACA,QACA,MACA,MACA,SACA,WACA,QACA,YACA,aACA,KACA,MACA,aACA,YACA,SACA,SACA,aACA,gBACA,aACA,SACA,QACA,UACA,OACA,OACA,aACA,KACA,QACA,OACA,SACA,cACA,OACA,OACA,QACA,KACA,QACA,UACA,UACA,aACA,SACA,UACA,SACA,UACA,cACA,WACA,SACA,aACA,YACA,UACA,kBACA,aACA,WACA,aACA,WACA,UACA,WACA,OACA,QACA,YACA,SACA,WACA,QACA,OACA,YACA,UACA,eACA,eACA,iBACA,iBACA,eACA,oBACA,mBACA,eACA,SACA,QACA,WACA,oBACA,mBACA,MACA,OACA,aACA,WACA,SACA,SACA,kBACA,iBACA,aACA,aACA,UACA,UACA,WACA,QACA,SACA,aACA,SACA,WACA,aACA,YACA,OACA,WACA,aACA,SACA,gBACA,cACA,UACA,WACA,aACA,WACA,KACA,WACA,OACA,UACA,OACA,OACA,SACA,QACA,SACA,WACA,aACA,MACA,WACA,SACA,WACA,QACA,SACA,QACA,SACA,YACA,YACA,YACA,UACA,SACA,OACA,SACA,WACA,UACA,QACA,SACA,QACA,YACA,OACA,QACA,cACA,MACA,UACA,SACA,OACA,WACA,OACA,OACA,WACA,WACA,UACA,YACA,MACA,SACA,KACA,OACA,QACA,QACA,UACA,OACA,WACA,eACA,SACA,OACA,OACA,OACA,QAEA,WACA,KACA,SACA,YACA,aACA,KACA,UACA,YACA,YACA,YACA,QACA,UACA,YACA,MACA,WACA,UACA,SACA,QACA,QACA,cACA,SACA,YACA,YACA,YACA,YACA,OACA,KACA,SACA,YACA,UACA,OACA,OACA,OACA,aACA,gBACA,cACA,cACA,iBACA,aACA,aACA,aACA,OACA,MACA,OACA,QACA,MACA,WACA,aACA,UACA,OACA,QACA,OACA,SACA,OACA,QACA,WACA,UACA,QACA,YACA,YACA,iBACA,WACA,UACA,OACA,WACA,MACA,SACA,OACA,aACA,OACA,UACA,eACA,WACA,QACA,cACA,eACA,aACA,SACA,UACA,WACA,SACA,QACA,OACA,WACA,QACA,SACA,YACA,MACA,WACA,QACA,QACA,SACA,MACA,YACA,UACA,KACA,UACA,UACA,WACA,aACA,aACA,aACA,OACA,UACA,aACA,MACA,UACA,YACA,QACA,OACA,QACA,WACA,OACA,SACA,KACA,MACA,SACA,MACA,YACA,OACA,KACA,OACA,OACA,WACA,SACA,KACA,QACA,aACA,WACA,MACA,QACA,OACA,UACA,aACA,UACA,SACA,OACA,WACA,YACA,OACA,YACA,cACA,eACA,aACA,UACA,WACA,OACA,UACA,eACA,kBACA,kBACA,SACA,aACA,YACA,OACA,OACA,WACA,UACA,UACA,UACA,QACA,SACA,aACA,YACA,UACA,YACA,QACA,QACA,OACA,kBACA,SACA,OACA,QACA,WACA,aACA,cACA,UACA,cACA,UACA,SACA,SACA,QACA,WACA,UACA,SACA,qBACA,SACA,YACA,UACA,SACA,MACA,QACA,WACA,SACA,UACA,MACA,aACA,YACA,OACA,MACA,MACA,YACA,OACA,SACA,SACA,aACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,YACA,WACA,UACA,eACA,MACA,SACA,SACA,OACA,OACA,OACA,SACA,WACA,MACA,QACA,iBACA,oBACA,UACA,QACA,WACA,YACA,SACA,WACA,YACA,UACA,UACA,cACA,cACA,QACA,aACA,cACA,MACA,OACA,aACA,KACA,cACA,WACA,UACA,OACA,aACA,OACA,WACA,WACA,OACA,OACA,QACA,SACA,OACA,UACA,SACA,QACA,SACA,WACA,MACA,QACA,MACA,OACA,SACA,QACA,QACA,SACA,WACA,UACA,OACA,UACA,aACA,OACA,WACA,OACA,OACA,WACA,QACA,QACA,OACA,SACA,UACA,UACA,UACA,QACA,aACA,SACA,gBACA,UACA,aACA,YACA,cACA,aACA,YACA,WACA,gBACA,WACA,QACA,SACA,eACA,WACA,UACA,cACA,eACA,YACA,OACA,QACA,MACA,QDjVIC,kBCmViB,CAErB,QACA,SACA,SACA,MACA,OACA,UACA,QACA,OACA,YACA,OACA,OACA,WACA,OACA,SACA,WACA,UACA,MACA,SACA,mBACA,QACA,UACA,MACA,UACA,OACA,UACA,OACA,QACA,WACA,OACA,YACA,YACA,UACA,aACA,ODrXIC,sBE/JiB,CAGrB,YACA,MACA,OACA,cACA,QACA,YACA,YACA,aACA,QACA,aACA,kBACA,QACA,WACA,gBACA,iBACA,UACA,MACA,SACA,MACA,kBACA,kBAEA,YACA,YACA,aACA,iBACA,UACA,aACA,WACA,WACA,WACA,OACA,aACA,SACA,cACA,MACA,UACA,WACA,MACA,WACA,gBACA,SACA,WAEA,MACA,SACA,OACA,WACA,YACA,cACA,aACA,cACA,YACA,UACA,wBACA,aACA,QACA,OACA,OACA,QACA,QACA,gBACA,gBACA,aACA,SACA,YACA,SACA,QACA,SACA,eACA,cACA,OACA,UACA,cACA,mBACA,MACA,WACA,mBACA,SACA,WACA,MACA,OACA,MACA,UACA,UACA,WACA,oBACA,mBACA,MACA,UACA,aACA,gBACA,YACA,YACA,OACA,kBACA,iBACA,kBACA,mBACA,iBACA,cACA,eACA,aACA,UACA,aACA,SACA,YACA,aACA,gBACA,YACA,gBACA,cACA,cACA,UACA,mBACA,SACA,UACA,cACA,iBACA,cACA,eACA,MACA,UACA,YACA,QACA,kBACA,qBACA,qBACA,uBACA,eACA,UACA,WACA,WACA,WACA,YACA,cACA,cACA,cACA,eACA,MACA,WACA,OACA,qBACA,qBACA,mBACA,cACA,gBACA,WACA,kBACA,aACA,iBACA,YACA,gBACA,WACA,qBACA,SACA,SACA,QACA,YACA,UACA,aACA,YACA,SACA,aACA,cACA,aACA,eACA,cACA,aACA,aACA,OACA,WACA,QACA,QACA,OACA,SACA,KACA,OACA,mBACA,SACA,QACA,MACA,QACA,OACA,QACA,kBACA,MACA,cACA,mBACA,MACA,SACA,MACA,QACA,YACA,iBACA,SACA,aACA,YACA,gBACA,SACA,eACA,WACA,qBACA,MACA,SACA,MACA,eACA,UACA,KACA,WACA,SACA,MACA,QACA,WACA,UACA,UACA,cACA,SACA,OACA,eACA,eACA,iBACA,gBACA,SACA,UACA,MACA,QACA,kBACA,QACA,OACA,MACA,QACA,QACA,SACA,OACA,MACA,OACA,UACA,QACA,OACA,QACA,UACA,SACA,WACA,SACA,YACA,aACA,eACA,MACA,OACA,mBACA,gBACA,oBACA,gBACA,UACA,UACA,UACA,YACA,eACA,aACA,YACA,aACA,OACA,kBACA,QACA,WACA,QACA,QACA,aACA,aACA,QACA,mBACA,qBACA,wBACA,iBACA,wBACA,WACA,OACA,OACA,gBACA,aACA,YACA,cACA,aACA,YACA,gBACA,WACA,QACA,SACA,eACA,UACA,cACA,MACA,eACA,OACA,QAEA,aACA,2BACA,sBACA,wBACA,mBACA,0BACA,qBACA,yBACA,oBACA,wBACA,mBACA,aACA,YACA,gBACA,eACA,mBACA,WAEA,SAEA,YACA,aACA,cACA,MACA,aACA,OACA,YACA,QACA,eACA,OACA,kBACA,aAEA,QF7KIiC,qBAAqB,EACrBhC,YAAa,CAAC,MACdC,YAAa,CACT,CAAEC,MAAO,QAASC,SAAU,CAAC,IAAK,MAClC,CAAED,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAM,KAAM,MAAOC,eAAe,IAEzEC,WAAY,CAAC,SACbC,WAAY,CAAExrG,MAAO,MAAO+sG,KAAM,OAClCrB,WAAY,CAAEC,YAAY,EAAMC,MAAO,CAAC,MACxCoB,WAAY,CAAEhtG,MAAO,MAAO+sG,KAAM,OAClCd,UAAW,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAE1DnsB,cAAe,CACX8sB,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KG3KvB,GAAiBtD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,iBACA,SACA,SACA,eACA,iBACA,QACA,SAEA,eACA,UAGA,2BACA,SACA,iBAEA,MAEA,cAEE,GAAyBA,GAAc,CACzC,iEAEE,GAAwBA,GAAc,CAGxC,SAEA,cAEA,cAEA,yBAEA,WAEA,cACA,+BACA,kBACA,4BACA,iBACA,kBACA,YACA,kBACA,uBACA,wBAEA,4DACA,iCACA,4BAEA,wCACA,yBAEA,6CACA,0BAEA,sEACA,mDAEA,kDACA,4BAEA,8DACA,wBACA,aAEA,cACA,wBAEA,UACA,oCACA,gCACA,OACA,qBACA,qFACA,uBACA,WACA,kBACA,kBACA,UACA,OACA,QACA,cACA,UACA,oBAEA,iCACA,mCACA,yBACA,YACA,oBACA,WACA,SACA,QACA,MACA,mBAEA,UACA,UACA,yBAEE,GAAwBA,GAAc,CACxC,wBACA,eACA,oBAEE,GAAgBA,GAAc,CAChC,OACA,qCACA,uBACA,gCACA,sDACA,kBACA,YACA,cAEE,GAAyBA,GAAc,CACzC,kCACA,aACA,2BAEE,GAA0BA,GAAc,CAAC,6BAClCiG,GAAS,CAClBhyG,KAAM,SACN2vG,iBAAkB,CACdT,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,uBAAsB,GACtBC,wBAAuB,GACvBwC,aAAa,EACbrC,iBC9IgB,CAMpB,MACA,UACA,UACA,MACA,MACA,KACA,MACA,SACA,aACA,OACA,OACA,OACA,QACA,UACA,SACA,aACA,SACA,UACA,aACA,OACA,WACA,SACA,WACA,KACA,OACA,MACA,SACA,QACA,QACA,MACA,UACA,OACA,QACA,QACA,SACA,KACA,YACA,YACA,OACA,KACA,UACA,UACA,QACA,MACA,OACA,SACA,KACA,OACA,KACA,QACA,QACA,eACA,cACA,UACA,UACA,aACA,YACA,SACA,OACA,OACA,YACA,YACA,QACA,OACA,KACA,WACA,OACA,QACA,SACA,UACA,QACA,WACA,OACA,QACA,SACA,QD8DIC,kBC5DiB,CAKrB,QACA,SACA,SACA,MACA,YACA,OACA,OACA,UACA,SACA,QACA,OACA,OACA,WACA,MACA,UACA,SACA,OACA,QACA,SACA,SACA,OACA,UACA,OACA,MACA,OACA,SACA,QACA,OACA,QACA,OACA,QACA,OACA,UACA,WACA,WACA,OACA,OACA,UACA,OACA,MAEA,UACA,WACA,MACA,OACA,MACA,QACA,SACA,WACA,SACA,SACA,OACA,OACA,eACA,eACA,cACA,eACA,YACA,cACA,SACA,UACA,UACA,WACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,YACA,WACA,OACA,YACA,WDlBIC,sBEhJiB,CAMrB,MACA,OACA,MACA,kBACA,MACA,YACA,QACA,uBACA,YACA,QACA,wBACA,kBACA,YACA,SACA,SACA,UACA,eACA,UACA,eACA,YACA,aACA,kBACA,eACA,cACA,YACA,eACA,iBACA,0BACA,sBACA,iBACA,iBACA,oBACA,gBACA,eACA,iBACA,YACA,gBACA,gBACA,gBACA,sBACA,kBACA,eACA,iBACA,kBACA,iBACA,gBACA,kBACA,mBACA,eACA,eACA,gBACA,qBACA,eACA,cACA,aACA,gBACA,kBACA,kBACA,eACA,cACA,cACA,YACA,aACA,kBACA,QACA,OACA,OACA,QACA,MACA,SACA,MACA,YACA,gBACA,UACA,YACA,aACA,SACA,eACA,UACA,WACA,UACA,cACA,OACA,OACA,UACA,UACA,aACA,MACA,aACA,kBACA,UACA,SACA,YACA,mBACA,WACA,gBACA,OACA,MACA,MACA,QACA,WACA,aACA,YACA,aACA,kBACA,kBACA,mBACA,eACA,oBACA,yBACA,gBACA,eACA,iBACA,kBACA,kBACA,eACA,UACA,sBACA,gBACA,gBACA,WACA,WACA,UACA,YACA,WACA,YACA,YACA,WACA,aACA,MACA,UACA,aACA,YACA,YACA,SACA,SACA,UACA,iCACA,uBACA,oBACA,6BACA,kBACA,oBACA,uBACA,uBACA,0BACA,2BACA,6BACA,4BACA,SACA,iBACA,qBACA,mBACA,sBACA,oBACA,mBACA,iBACA,kBACA,gBACA,oBACA,iBACA,iBACA,mBACA,kBACA,gBACA,yBACA,eACA,eACA,OACA,YACA,aACA,gCACA,sBACA,mBACA,4BACA,iBACA,mBACA,sBACA,sBACA,SACA,YACA,UACA,YACA,aACA,YACA,aACA,sBACA,QACA,WACA,WACA,WACA,MACA,QACA,OACA,MACA,YACA,OACA,OACA,SACA,WACA,QACA,UACA,QACA,OACA,mBACA,SACA,4BACA,qBACA,eACA,iBACA,cACA,cACA,cACA,WACA,YACA,mBACA,OACA,YACA,QACA,MACA,kBACA,sBACA,kBACA,UACA,iBACA,SACA,UACA,iBACA,mBACA,wBACA,OACA,WACA,WACA,0BACA,eACA,UACA,OACA,2BACA,uBACA,yBACA,qCACA,yBACA,yBACA,uBACA,yBACA,uBACA,2BACA,sBACA,MACA,YACA,OACA,qBACA,eACA,eACA,kBACA,aACA,mBACA,mBACA,mBACA,mBACA,QACA,iBACA,WACA,QACA,QACA,SACA,UACA,UACA,kBACA,0BAEA,aACA,oBACA,gBACA,uBACA,8BACA,eACA,oBACA,yBACA,sBACA,mBACA,oBACA,uBACA,YACA,mBACA,cACA,aACA,sBACA,qBACA,iBACA,iBACA,wBACA,YACA,aACA,SACA,YACA,WACA,eACA,OACA,WACA,QACA,MACA,QACA,wBACA,OACA,gBACA,MACA,SACA,kBACA,cACA,SACA,cACA,OACA,UACA,YACA,iBACA,iBACA,cACA,aACA,6BACA,WACA,eACA,cACA,eACA,gBACA,eACA,WACA,cACA,gBACA,yBACA,aACA,gBACA,gBACA,mBACA,eACA,eACA,eACA,cACA,aACA,gBACA,WACA,eACA,eACA,iBACA,eACA,qBACA,iBACA,gBACA,oBACA,YACA,WACA,WACA,cACA,WACA,YACA,YACA,gBACA,eACA,eACA,cACA,cACA,eACA,oBACA,cACA,WACA,gBACA,aACA,YACA,kBACA,mBACA,kBACA,WACA,iBACA,cACA,aACA,eACA,gBACA,aACA,WACA,KACA,MACA,QACA,OACA,QACA,OACA,SACA,QACA,MACA,YACA,YACA,iBACA,mBACA,MACA,aACA,cACA,cACA,mBACA,WACA,aACA,MACA,SACA,MACA,aACA,mBACA,mBACA,OACA,SACA,gBACA,cACA,aACA,cACA,MACA,SACA,SACA,aACA,MACA,OACA,QACA,YACA,WACA,YACA,UACA,gBACA,mBACA,kBACA,MACA,SACA,kBACA,eACA,MACA,wBACA,sBACA,mBACA,eACA,iBACA,gBACA,gBACA,iBACA,aACA,0BACA,oBACA,2BACA,yBACA,uBACA,cACA,iBACA,cACA,0BACA,oBACA,wBACA,yBACA,yBACA,2BACA,iBACA,sBACA,oBACA,0BACA,wBACA,0BACA,4BACA,YACA,qBACA,KACA,WACA,WACA,MACA,QACA,oBACA,uBACA,uBACA,kBACA,cACA,sBACA,oBACA,oBACA,iBACA,SACA,SACA,UACA,WACA,gBACA,gBACA,UACA,UACA,SACA,QACA,WACA,YACA,WACA,gBACA,YACA,iBACA,oBACA,yBACA,cACA,mBACA,sBACA,eACA,YACA,SACA,gBACA,iBACA,qBACA,oBACA,iBACA,iBACA,wBACA,wBACA,YACA,YACA,aACA,iBACA,UACA,aACA,WACA,WACA,WACA,SACA,aACA,UACA,qBACA,UACA,QACA,iBACA,QACA,eACA,aACA,MACA,cACA,OACA,QACA,SACA,MACA,WACA,eACA,UACA,UACA,SACA,OACA,mBACA,oBACA,gBACA,sBACA,eACA,oBACA,OACA,iBACA,cACA,uBACA,OACA,UACA,MACA,WACA,YACA,QACA,aACA,oBACA,OACA,cACA,QACA,SACA,aACA,cACA,eACA,WACA,aACA,eACA,qBACA,kBACA,gBACA,SACA,SACA,WACA,iBACA,gBACA,cACA,YACA,kBACA,SACA,YACA,qBACA,WACA,SACA,MACA,WACA,UACA,kBACA,aACA,MACA,iBACA,oBACA,WACA,gBACA,kBACA,cACA,QACA,UACA,YACA,YACA,eACA,UACA,aACA,SACA,WACA,UACA,kBACA,eACA,kBACA,aACA,YACA,aACA,eACA,WACA,WACA,wBACA,YACA,OACA,QACA,eACA,eACA,SACA,QACA,QACA,QACA,UACA,gBACA,YACA,cACA,SACA,eACA,QACA,OACA,aACA,OACA,WACA,UACA,WACA,cACA,kBACA,mBACA,qBACA,oBACA,UACA,OACA,UACA,aACA,eACA,YACA,MACA,OACA,WAEA,OACA,WAEA,OACA,cFrgBIiC,qBAAqB,EACrBhC,YAAa,CAAC,KAAM,MACpBmC,sBAAsB,EACtBlC,YAAa,CACT,KACA,QACA,CAAEC,MAAO,WAAYC,SAAU,CAAC,KAAMC,eAAe,GACrD,CAAEF,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAMC,eAAe,IAE5DC,WAAY,CAAC,SACbC,WAAY,CAAEuB,KAAM,KAEpBrB,WAAY,CAAEC,YAAY,EAAM2B,SAAU,CAAC,KAAMzB,OAAQ,CAAC,MAC1DI,UAAW,CAEP,KACA,IACA,KACA,IACA,IAEA,IACA,IACA,IACA,KACA,KAEA,KAEA,KAEA,KAEA,MAEA,IAEA,KACA,KAEA,KACA,MACA,MACA,OACA,MAEA,IACA,KACA,KACA,MAEA,KACA,KAEA,MACA,QAGRnsB,cAAe,CACXytB,qBAAsB,CAAC,MACvBX,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KG3MvB,GAAiBtD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,OACA,OACA,QACA,WACA,SACA,SACA,eACA,WACA,UACA,aACA,gBACA,QAKA,sBACA,SAEA,MAEA,aACA,4BACA,aACA,kBAGA,qCAGA,2BACA,2BAEE,GAAyBA,GAAc,CACzC,wDAEE,GAAwBA,GAAc,CAExC,6CAEA,SAEA,cAEA,yBAEA,cACA,YAEA,mBAEA,QACA,SACA,MACA,WACA,OACA,QACA,OACA,YACA,YACA,eAEE,GAAwBA,GAAc,CAAC,2BACvC,GAAgBA,GAAc,CAChC,OACA,qCACA,uBAEA,mBAEEsG,GAAkBtG,GAAc,CAAC,2BACjC,GAA0BA,GAAc,IAEjCuG,GAAO,CAChBtyG,KAAM,OACN2vG,iBAAkB,CACdT,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,uBAAwB6C,GACxB5C,wBAAuB,GACvBG,iBCxFgB,CAGpB,MACA,QACA,QACA,UACA,UACA,MACA,SACA,SACA,UACA,UACA,SACA,UACA,YACA,gBACA,aACA,UACA,UACA,UACA,cACA,UACA,cACA,WACA,OACA,YACA,WACA,MACA,eACA,WACA,UACA,YACA,aACA,OACA,cACA,YACA,UACA,aACA,YACA,SACA,UACA,YACA,UACA,SACA,SACA,OACA,aACA,QACA,SACA,YACA,YACA,eACA,OACA,gBACA,SACA,QACA,UACA,SACA,cACA,cACA,QACA,MACA,OACA,WACA,QACA,QACA,OACA,WACA,OACA,QACA,UACA,OACA,UACA,eACA,WACA,QACA,SACA,QACA,OACA,SACA,UACA,UACA,SACA,eACA,eACA,YACA,QACA,cACA,aACA,OACA,SACA,aACA,aACA,QACA,OACA,WACA,UACA,eACA,eACA,SACA,SACA,SACA,UACA,cACA,WACA,UACA,OACA,QACA,SACA,UACA,SACA,OACA,QACA,kBACA,SACA,OACA,SACA,OACA,gBACA,SACA,OACA,SACA,MACA,aACA,SACA,cACA,SACA,SACA,gBACA,YACA,aACA,UACA,QACA,eACA,YACA,OACA,YACA,SACA,QACA,WACA,MACA,MACA,MACA,eACA,aACA,OACA,QACA,OACA,aACA,YACA,QACA,SACA,WACA,cACA,OACA,QACA,QACA,MACA,OACA,SACA,aACA,QACA,OACA,WACA,SACA,MACA,aACA,WACA,UACA,UACA,gBACA,OACA,QACA,SACA,QACA,OACA,QACA,UACA,UACA,cACA,OAEA,MACA,QACA,MACA,KACA,gBACA,UACA,OACA,KACA,OACA,OACA,SACA,OACA,SACA,QACA,OACA,UACA,eACA,oBACA,SACA,WACA,SACA,WACA,WACA,OACA,OACA,MACA,WACA,SACA,WACA,WACA,QACA,QACA,YACA,MACA,OACA,OACA,WACA,QACA,QACA,WACA,SACA,KACA,SACA,KACA,QACA,SACA,YACA,OACA,KACA,OACA,UACA,OACA,OACA,OACA,QACA,QACA,OACA,OACA,MACA,OACA,KACA,KACA,KACA,QACA,MACA,QACA,OACA,cACA,YACA,UACA,YACA,WACA,YACA,QACA,QACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,QACA,cACA,OACA,KACA,YACA,UACA,OACA,WACA,YACA,QACA,aACA,SACA,OACA,QACA,eACA,SACA,OACA,QACA,SACA,OACA,SACA,OACA,SACA,QACA,WACA,QACA,QACA,aACA,UACA,UACA,aACA,YACA,UACA,QACA,QACA,OACA,OAEA,WACA,eACA,MACA,MACA,MACA,UACA,OACA,SACA,WACA,cACA,gBDjOIC,kBCmOiB,CAErB,QACA,SACA,SACA,UACA,OACA,OACA,UACA,SACA,QACA,MACA,UACA,WACA,MACA,UACA,YACA,WACA,SACA,YACA,WDtPIC,sBE1FiB,CAGrB,MACA,OACA,OACA,OACA,MACA,SACA,OACA,OACA,UACA,OACA,MACA,UAEA,MACA,YACA,QACA,WACA,MACA,QACA,KACA,MACA,QACA,OACA,WACA,KACA,OACA,WACA,MACA,QACA,UACA,OACA,QACA,YACA,aACA,qBACA,OACA,MACA,OACA,MACA,QACA,eAEA,iBACA,WACA,aACA,OACA,aAEA,SACA,OAEA,aACA,OACA,WACA,cACA,WACA,WACA,MACA,UACA,aACA,YACA,UACA,gBACA,qBACA,OACA,WACA,SACA,QACA,iBACA,WACA,UACA,SACA,YACA,UACA,mBACA,QACA,iBACA,aACA,OAEA,cACA,WACA,KACA,YACA,SACA,SACA,MAEA,QACA,SACA,mBACA,MACA,SACA,YACA,iBACA,SACA,MACA,SACA,QACA,cACA,gBACA,kBACA,UACA,UACA,QACA,QACA,SACA,cACA,SACA,QACA,OACA,QACA,SACA,eACA,YACA,SACA,QACA,iBACA,iBACA,SACA,UACA,OACA,QACA,YACA,UACA,QACA,QACA,aACA,SACA,YACA,YACA,OACA,QACA,WACA,QAEA,OACA,eACA,YACA,cACA,oBACA,mBAEA,cACA,cACA,QACA,mBACA,eACA,OACA,cACA,iBACA,MACA,UACA,MACA,OACA,OACA,gBACA,UAEA,MACA,eACA,cACA,OACA,QACA,YACA,aACA,oBACA,MACA,MACA,QACA,aACA,oBACA,YACA,YACA,aACA,iBACA,UACA,aACA,WACA,WACA,WACA,aACA,cACA,MACA,UACA,WACA,WAEA,UACA,SACA,aACA,kBACA,aACA,QAEA,OACA,MACA,cACA,aACA,OACA,aACA,aACA,YACA,eACA,SFpHIC,YAAa,CAAC,MACdC,YAAa,CAAC,QAAS,SACvBI,WAAY,CAAC,MACbO,cAAe,CAAC,CAAEV,MAAO,KAAMC,SAAU,CAAC,KAAMC,eAAe,IAC/DW,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,KAAM,IAAK,OAE3DnsB,cAAe,CACX8sB,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KGjGtB,SAAS,GAAYlkE,GACxB,OAAOA,EAAOpzC,IAAI,CAAC6K,EAAO5F,KACtB,MAAMu1G,EAAYpnE,EAAOnuC,EAAI,IAAMowG,GACnC,GAAIt/D,GAAQ8/D,IAAIhrG,IAA6B,MAAnB2vG,EAAUtvG,KAEhC,OAAO1I,OAAO2rB,OAAO3rB,OAAO2rB,OAAO,CAAC,EAAGtjB,GAAQ,CAAE/E,KAAMqvG,GAAUgB,yBAErE,MAAM8C,EAAY7lE,EAAOnuC,EAAI,IAAMowG,GACnC,OAAIt/D,GAAQkgE,OAAOprG,IAA6B,MAAnBouG,EAAU/tG,KAE5B1I,OAAO2rB,OAAO3rB,OAAO2rB,OAAO,CAAC,EAAGtjB,GAAQ,CAAE/E,KAAMqvG,GAAUgB,yBAE9DtrG,GAEf,CChBO,MCID,GAAiBmpG,GAAc,CAAC,0CAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,WACA,SACA,eACA,WACA,QACA,SACA,uBAGA,kEACA,0CACA,SACA,0BAEA,MAEA,cAEE,GAAyBA,GAAc,CACzC,0DAEE,GAAwBA,GAAc,CAExC,yFAEA,iCAEA,8CAEA,qCAEA,4CACA,+BACA,yCACA,4BACA,cACA,gBACA,iBACA,uBACA,4BAEA,mBAEA,iBACA,yBACA,cACA,iBACA,kBACA,eACA,uBACA,iBACA,eACA,aACA,aACA,UACA,gBACA,cACA,eACA,gBACA,QACA,SACA,cACA,OACA,mBACA,cACA,aACA,iBACA,SACA,4BACA,kBACA,eACA,kBACA,eACA,mBACA,cACA,kBACA,gBACA,uBACA,iBACA,sBACA,cACA,qBACA,WACA,gBACA,aACA,gBACA,aACA,eACA,iBACA,YACA,gBACA,cACA,eACA,YACA,YACA,UACA,UACA,QACA,kBACA,4BACA,QACA,UACA,OACA,iBACA,iBACA,OACA,mBACA,wBACA,kBACA,aACA,iBACA,UACA,oBACA,oBACA,oBACA,eACA,cACA,eACA,cACA,eACA,oBACA,gBACA,cACA,WACA,SACA,WACA,YACA,oBACA,mBACA,yBACA,YACA,eACA,WACA,gBACA,kBACA,OACA,2BACA,yBACA,eACA,mBACA,qBACA,qBACA,qBACA,yBACA,iBACA,eACA,oBACA,uBACA,oBACA,uBACA,sBACA,2BACA,wBACA,uBACA,oBACA,sBACA,mBACA,mBACA,iBACA,cACA,4BACA,eACA,cACA,cACA,eACA,qBACA,uBACA,cACA,aACA,eACA,wBACA,YACA,eACA,mBACA,qBACA,mBACA,yBACA,2BACA,sBACA,eACA,sBACA,kBACA,sBACA,wBACA,mBACA,eACA,gBACA,2BACA,uBACA,eACA,qBACA,sBACA,eACA,aACA,mBACA,oBACA,cACA,uBACA,oBACA,cACA,gBACA,uBACA,iBACA,gBACA,wBACA,oBACA,WACA,SACA,qBACA,mBACA,gBACA,cACA,oBACA,oBACA,kBACA,eACA,aACA,mBACA,mBACA,eACA,MACA,WACA,YACA,SACA,aACA,aACA,cACA,aAEE,GAAwBA,GAAc,CACxC,yBACA,0BACA,6BACA,2BAEE,GAAgBA,GAAc,CAChC,OACA,8BACA,uBACA,eACA,sCAEA,kBAEE,GAAyBA,GAAc,CACzC,gDACA,gBACA,yBACA,kBAEE,GAA0BA,GAAc,IAEjCyG,GAAU,CACnBxyG,KAAM,UACN2vG,iBAAkB,CACdT,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,uBAAsB,GACtBC,wBAAuB,GACvBwC,aAAa,EACbrC,iBDhRgB,CAEpB,aACA,MACA,MACA,QACA,UACA,MACA,KACA,MACA,aACA,SACA,UACA,OACA,KACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,YACA,aACA,WACA,UACA,SACA,QACA,eACA,eACA,eACA,oBACA,eACA,SACA,WACA,YACA,WACA,kBACA,aACA,aACA,UACA,UACA,UACA,SACA,mBACA,OACA,WACA,gBACA,WACA,cACA,MACA,gBACA,OACA,OACA,OACA,OACA,SACA,WACA,UACA,SACA,SACA,OACA,UACA,QACA,QACA,MACA,QACA,UACA,OACA,WACA,UACA,QACA,QACA,SACA,gBACA,mBACA,cACA,cACA,KACA,SACA,oBACA,oBACA,KACA,QACA,SACA,QACA,QACA,cACA,SACA,YACA,WACA,OACA,KACA,UACA,OACA,MACA,OACA,OACA,UACA,QACA,OACA,OACA,QACA,SACA,QACA,OACA,YACA,iBACA,OACA,OACA,eACA,0BACA,gCACA,QACA,WACA,qBACA,gBACA,MACA,WACA,UACA,MACA,qBACA,OACA,SACA,KACA,WACA,SACA,aACA,KACA,QACA,MACA,QACA,UACA,OACA,gBACA,kBACA,YACA,WACA,UACA,YACA,QACA,QACA,OACA,QACA,aACA,YACA,gBACA,aACA,SACA,UACA,SACA,SACA,UACA,UACA,WACA,WACA,SACA,YACA,SACA,QACA,QACA,aACA,OACA,SACA,UACA,qBACA,SACA,YACA,YACA,MACA,OACA,SACA,OACA,UACA,WACA,MACA,eACA,WACA,aACA,iBACA,sBACA,mBACA,MACA,WACA,oBACA,mBACA,qBACA,gBACA,QACA,aACA,OACA,KACA,WACA,UACA,OACA,OACA,QACA,SACA,SACA,WACA,SACA,QACA,MACA,QACA,WACA,WACA,gBACA,SACA,OACA,QACA,QACA,SACA,OACA,QACA,MACA,aACA,YCyDIC,kBDvDiB,CAErB,SACA,SACA,MACA,OACA,YACA,OACA,YACA,WACA,MACA,UACA,mBACA,SACA,OACA,QACA,QACA,SACA,SACA,MACA,OACA,OACA,OACA,OACA,OACA,UACA,OACA,WACA,WACA,aACA,YACA,aACA,YACA,gBACA,mBACA,UACA,YACA,OACA,WACA,OACA,YACA,WACA,UACA,WACA,YACA,UACA,eACA,UACA,QCQIC,sBClRiB,CAErB,UACA,aACA,UACA,SACA,UACA,OACA,QACA,YACA,UACA,UACA,WACA,WACA,cACA,SACA,aACA,UACA,cACA,eACA,gBACA,iBACA,MACA,OACA,MACA,SACA,MACA,MACA,MACA,YACA,QACA,WACA,eACA,kBACA,kBACA,OACA,aACA,eACA,MACA,SACA,aACA,cACA,UACA,SACA,YACA,MACA,cACA,OACA,cACA,WACA,UACA,WACA,MACA,OACA,UACA,cACA,cACA,OACA,OACA,QACA,YACA,MACA,kBACA,YACA,aACA,OACA,UACA,mBACA,cACA,MACA,eACA,eACA,gBACA,cACA,cACA,WACA,SACA,yBACA,YACA,gBACA,OACA,aACA,MACA,MACA,QACA,WACA,UACA,aACA,YACA,YACA,UACA,mBACA,gBACA,cACA,cACA,MACA,SACA,UACA,MACA,aACA,eACA,QACA,cACA,QACA,SACA,aACA,cACA,YACA,gBACA,WACA,WACA,MACA,SACA,QACA,SACA,eACA,eACA,aACA,oBACA,oBACA,eACA,gBACA,qBACA,aACA,gBACA,cACA,eACA,cACA,YACA,cACA,aACA,aACA,mBACA,sBACA,aACA,aACA,cACA,cACA,eACA,WACA,cACA,YACA,eACA,aACA,aACA,WACA,iBACA,QACA,QACA,SACA,UACA,KACA,YACA,SACA,MACA,QACA,OACA,QACA,OACA,cACA,QACA,eACA,WACA,WACA,WACA,mBACA,kBACA,MACA,YACA,aACA,MACA,OACA,MACA,eACA,MACA,aACA,cACA,KACA,MACA,QACA,QACA,eACA,iBACA,gBACA,UACA,OACA,oBACA,eACA,iBACA,UACA,QACA,OACA,cACA,QACA,eACA,cACA,MACA,OACA,OACA,OACA,MACA,QACA,UACA,QACA,OACA,SACA,cACA,gBACA,kBACA,UACA,WACA,MACA,WACA,cACA,cACA,YACA,UACA,UACA,aACA,QACA,aACA,sBACA,QACA,iBACA,YACA,QACA,OACA,aACA,UACA,UACA,aACA,0BACA,uBACA,4BACA,WAEA,WACA,UDuCIE,YAAa,CACT,WACA,WACA,CAAEC,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAMC,eAAe,IAE5DC,WAAY,CAAC,MACbC,WAAY,CAAExrG,MAAO,IAAK+sG,KAAM,IAAKa,sBAAsB,GAC3D9B,cAAe,CACX,CAAEC,MAAO,sBACT,CAAEX,MAAO,WAAYC,SAAU,CAAC,KAAMC,eAAe,GACrD,CAAEF,MAAO,WAAYC,SAAU,CAAC,KAAMC,eAAe,GACrD,CAAEF,MAAO,KAAMC,SAAU,CAAC,KAAMC,eAAe,IAEnDI,WAAY,CAAEC,YAAY,GAC1BK,iBAAkB,CAAC,KAAM,KACzBC,UAAW,CACP,IACA,KACA,IACA,IACA,IACA,IACA,KACA,KACA,MACA,KACA,KACA,IACA,OAEJC,YAAW,IAEfpsB,cAAe,CACX8sB,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KElTvB,GAAiBtD,GAAc,CAAC,0CAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,WACA,SACA,SACA,eACA,WACA,QACA,SAGA,kEACA,0CACA,SACA,0BAEA,QAEE,GAAyBA,GAAc,CAAC,6CACxC,GAAwBA,GAAc,CAExC,yFAEA,iCAEA,8CAEA,qCAEA,cACA,eACA,6BACA,gBACA,mBACA,gBACA,iBACA,uBAEA,mBAEA,iBACA,cACA,iBACA,iBACA,sBACA,kBACA,uBACA,eACA,mBACA,aACA,aACA,gBACA,SACA,cACA,OACA,mBACA,4BACA,+BACA,cACA,iBACA,QACA,SACA,kBACA,eACA,kBACA,kBACA,eACA,uBACA,mBACA,wBACA,cACA,gBACA,kCACA,oBACA,iBACA,cACA,qBACA,WACA,gBACA,aACA,gBACA,gBACA,aACA,qBACA,iBACA,sBACA,YACA,cACA,gCACA,kBACA,eACA,YACA,YACA,UACA,UACA,QACA,QACA,UACA,OACA,eACA,oBACA,iBACA,OACA,YACA,wBACA,WACA,2BACA,cACA,kBACA,iBACA,UACA,oBACA,oBACA,eACA,cACA,eACA,QACA,eACA,gBACA,gBACA,cACA,UACA,SACA,WACA,wBACA,YACA,oBACA,mBACA,YACA,eACA,qBACA,WACA,kBACA,OACA,mBACA,qBACA,qBACA,iBACA,eACA,uBACA,oBACA,uBACA,wBACA,oBACA,sBACA,mBACA,mBACA,iBACA,cACA,eACA,cACA,cACA,qBACA,uBACA,cACA,aACA,qBACA,mBACA,eACA,kBACA,sBACA,wBACA,mBACA,eACA,gBACA,uBACA,sBACA,gBACA,aACA,mBACA,cACA,oBACA,cACA,gBACA,iBACA,gBACA,WACA,kBACA,0BACA,gBACA,cACA,oBACA,yBACA,eACA,aACA,QACA,sBACA,mBACA,kBACA,gBACA,MACA,KAGA,UACA,QACA,OACA,SACA,SACA,UAEE,GAAwBA,GAAc,CAAC,2BACvC,GAAgBA,GAAc,CAChC,OACA,8BACA,uBACA,uBACA,sCAEA,kBAEE,GAAyBA,GAAc,CACzC,kCACA,gBACA,yBACA,kBAEE,GAA0BA,GAAc,IAEjC2G,GAAQ,CACjB1yG,KAAM,QACN2vG,iBAAkB,CACdT,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,uBAAsB,GACtBC,wBAAuB,GACvBwC,aAAa,EACbrC,iBC7OgB,CAEpB,aACA,MACA,MACA,QACA,UACA,MACA,KACA,MACA,aACA,SACA,UACA,OACA,KACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,YACA,aACA,WACA,UACA,SACA,QACA,OACA,YACA,eACA,eACA,oBACA,eACA,SACA,WACA,YACA,WACA,kBACA,aACA,aACA,UACA,UACA,UACA,SACA,aACA,OACA,WACA,gBACA,WACA,cACA,MACA,OACA,OACA,OACA,OACA,SACA,QACA,WACA,UACA,SACA,SACA,OACA,UACA,QACA,QACA,cACA,MACA,QACA,UACA,OACA,WACA,WACA,YACA,MACA,QACA,QACA,WACA,SACA,SACA,gBACA,mBACA,cACA,cACA,KACA,SACA,KACA,QACA,SACA,QACA,QACA,cACA,SACA,KACA,YACA,WACA,OACA,iBACA,kBACA,KACA,UACA,OACA,aACA,MACA,OACA,OACA,MACA,aACA,UACA,OACA,UACA,QACA,OACA,OACA,QACA,SACA,QACA,OACA,YACA,iBACA,OACA,OACA,OACA,eACA,cACA,gCACA,QACA,WACA,qBACA,gBACA,MACA,WACA,UACA,MACA,qBACA,YACA,QACA,OACA,KACA,KACA,WACA,kBACA,SACA,aACA,KACA,QACA,MACA,QACA,UACA,OACA,YACA,eACA,UACA,YACA,QACA,QACA,OACA,OACA,QACA,aACA,YACA,aACA,SACA,UACA,SACA,SACA,UACA,UACA,WACA,WACA,SACA,SACA,QACA,QACA,MACA,OACA,aACA,SACA,UACA,qBACA,SACA,YACA,YACA,MACA,OACA,SACA,UACA,WACA,MACA,eACA,WACA,aACA,iBACA,sBACA,mBACA,MACA,WACA,SACA,gBACA,SACA,QACA,aACA,OACA,KACA,WACA,UACA,OACA,OACA,QACA,SACA,SACA,WACA,SACA,QACA,MACA,QACA,WACA,WACA,gBACA,SACA,UACA,OACA,QACA,QACA,SACA,OACA,QACA,MACA,aACA,YDSIC,kBCPiB,CAErB,SACA,SACA,MACA,OACA,OACA,UACA,OACA,YACA,OACA,WACA,MACA,UACA,mBACA,SACA,OACA,QACA,QACA,SACA,SACA,MACA,OACA,OACA,OACA,OACA,OACA,UACA,WACA,WACA,aACA,YACA,aACA,YACA,gBACA,mBACA,UACA,YACA,OACA,WACA,OACA,OACA,YACA,WACA,UACA,WACA,YACA,UACA,eACA,UACA,QD1CIC,sBE/OiB,CAErB,MACA,OACA,UACA,UACA,cACA,cAEA,YACA,QACA,OACA,OACA,QACA,MACA,YACA,MACA,cACA,SACA,UACA,YACA,aACA,SACA,UACA,oBACA,sBACA,mBACA,kBACA,kBACA,OACA,OACA,UACA,OACA,cACA,mBACA,UACA,WACA,eACA,YACA,WACA,SACA,YACA,gBACA,OACA,UACA,aACA,MACA,MACA,QACA,QACA,YACA,UACA,eACA,eACA,eACA,oBACA,eACA,UACA,WACA,OACA,WACA,cACA,WACA,WACA,MACA,UACA,aACA,YACA,YACA,UACA,UACA,aACA,MACA,MACA,MACA,aACA,UACA,eACA,QACA,cACA,cACA,QACA,SACA,eACA,mBACA,aACA,cACA,YACA,gBACA,iBACA,qBACA,2BACA,wBACA,+BACA,aACA,WACA,WACA,eACA,WACA,cACA,gBACA,MACA,OACA,cACA,KACA,SAEA,YACA,YACA,aACA,aACA,SACA,QACA,0BACA,0BACA,sBACA,oBACA,qBACA,uBACA,0BACA,gCACA,iCACA,wBACA,wBACA,qCACA,oCACA,wBACA,2BACA,6BACA,yBACA,2BACA,sBACA,uBACA,WACA,KACA,eACA,UACA,iBACA,iBACA,UACA,SACA,cACA,UACA,eACA,UACA,SACA,aACA,oBACA,oBACA,gBACA,gBACA,qBACA,aACA,eACA,cACA,YACA,cACA,aACA,mBACA,sBACA,cACA,iBACA,gBACA,cACA,aACA,cACA,eACA,oBACA,gCACA,cACA,WACA,oBACA,oBACA,aACA,YACA,eACA,aACA,aACA,MACA,WACA,iBACA,aACA,QACA,OACA,QACA,OACA,SACA,OACA,aACA,KACA,YACA,YACA,iBACA,SACA,MACA,QACA,OACA,QACA,OACA,QACA,WACA,WACA,WACA,kBACA,QACA,MACA,cACA,eACA,YACA,cACA,YACA,gBACA,cACA,aACA,YACA,MACA,YACA,cACA,MACA,MACA,SACA,MACA,QACA,YACA,kBACA,aACA,eACA,aACA,MACA,SACA,WACA,aACA,MACA,YACA,QACA,SACA,MACA,eAEA,MACA,eACA,aACA,cACA,KACA,QACA,UACA,WACA,MACA,QACA,uBACA,eACA,UACA,QACA,UACA,OACA,eACA,OACA,SACA,eACA,cACA,iBACA,gBACA,oBACA,eACA,SACA,UACA,UACA,QACA,QACA,gBACA,QACA,YACA,aACA,OACA,QACA,SACA,cACA,SACA,eACA,OACA,OACA,OACA,MACA,QACA,UACA,cACA,kBACA,QACA,OACA,UACA,cACA,eACA,YACA,YACA,qBACA,cACA,aACA,cACA,gBACA,aACA,gBACA,eACA,cACA,cACA,qBACA,cACA,cACA,YACA,kBACA,qBACA,aACA,sBACA,qBACA,eACA,kBACA,qBACA,kBACA,iBACA,uBACA,mBACA,kBACA,gBACA,cACA,aACA,cACA,aACA,oBACA,cACA,YACA,kBACA,iBACA,0BACA,2BACA,qBACA,eACA,kBACA,mBACA,kBACA,oBACA,mBACA,mBACA,kBACA,mBACA,qBACA,eACA,cACA,qBACA,sBACA,mBACA,kBACA,YACA,kBACA,iBACA,cACA,UACA,gBACA,YACA,mBACA,aACA,eACA,WACA,cACA,YACA,OACA,OACA,mBACA,wBACA,MACA,SACA,aACA,cACA,cACA,SACA,UACA,SACA,YACA,kBACA,UACA,MACA,UACA,cACA,MACA,OACA,cACA,cACA,WACA,YACA,eACA,gBACA,YACA,UACA,aACA,OACA,WACA,QACA,aACA,sBACA,QACA,iBACA,YACA,QAEA,WACA,WACA,gBACA,OACA,aACA,cACA,6BACA,SACA,UACA,WACA,WACA,UACA,6BACA,oCACA,OACA,UACA,aACA,gBAEA,OACA,YFrLIE,YAAa,CACT,WACA,CAAEC,MAAO,WAAYC,SAAU,CAAC,MAChC,CAAED,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAMC,eAAe,IAE5DC,WAAY,CAAC,MACbC,WAAY,CAAExrG,MAAO,IAAK+sG,KAAM,IAAKa,sBAAsB,GAC3D9B,cAAe,CACX,CAAEC,MAAO,sBACT,CAAEX,MAAO,WAAYC,SAAU,CAAC,KAAMC,eAAe,GACrD,CAAEF,MAAO,WAAYC,SAAU,CAAC,KAAMC,eAAe,GACrD,CAAEF,MAAO,KAAMC,SAAU,CAAC,KAAMC,eAAe,IAEnDI,WAAY,CAAEC,YAAY,GAC1BK,iBAAkB,CAAC,KAAM,KACzBC,UAAW,CACP,IACA,KACA,IACA,IACA,IACA,IACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,IACA,OAEJC,YAAW,IAEfpsB,cAAe,CACX8sB,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KGjRvB,GAAiBtD,GAAc,CAAC,0CAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,WACA,SACA,SACA,eACA,WACA,QACA,SAGA,kEACA,0CACA,SACA,0BAEA,QAEE,GAAyBA,GAAc,CAAC,6CACxC,GAAwBA,GAAc,CAExC,yFAEA,iCAEA,8CAEA,qCAEA,cACA,eACA,6BACA,gBACA,mBACA,gBACA,iBACA,uBAEA,mBAEA,iBAEA,iBACA,uBACA,iBAEA,aACA,aACA,gBACA,cACA,iBACA,SACA,kBACA,eACA,wBACA,cACA,kBACA,cACA,qBACA,WACA,gBACA,aACA,sBACA,YACA,kBACA,YACA,YACA,UACA,QAEA,QACA,eACA,oBACA,iBACA,OACA,YACA,2BACA,cACA,iBACA,UACA,oBACA,eACA,cACA,eACA,QACA,SACA,WACA,wBACA,YACA,oBACA,mBACA,YACA,eACA,qBACA,WACA,kBACA,OACA,mBACA,qBACA,qBACA,iBACA,eACA,uBACA,oBACA,mBACA,mBACA,iBACA,cACA,eACA,cACA,cACA,cACA,aACA,qBACA,mBACA,eACA,kBACA,mBACA,eACA,gBACA,cACA,oBACA,cACA,gBACA,iBACA,gBAEA,QACA,sBACA,mBACA,kBACA,gBAEA,QAEE,GAAwBA,GAAc,CAAC,2BACvC,GAAgBA,GAAc,CAChC,OACA,8BACA,uBACA,uBACA,sCAEA,kBAEE,GAAyBA,GAAc,CACzC,kCACA,gBACA,yBACA,kBAEE,GAA0BA,GAAc,IAEjC4G,GAAO,CAChB3yG,KAAM,OACN2vG,iBAAkB,CACdT,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,uBAAsB,GACtBC,wBAAuB,GACvBwC,aAAa,EACbrC,iBC3KgB,CAEpB,MACA,MACA,QACA,UACA,MACA,QACA,KACA,MACA,UACA,OACA,KACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,aACA,WACA,UACA,SACA,QACA,eACA,eACA,eACA,oBACA,eACA,SACA,WACA,YACA,WACA,kBACA,aACA,aACA,UACA,UACA,SACA,OACA,WACA,WACA,cACA,MACA,SACA,OACA,OACA,OACA,SACA,WACA,UACA,SACA,SACA,OACA,UACA,QACA,QACA,MACA,QACA,UACA,OACA,WACA,YACA,QACA,QACA,SACA,SACA,gBACA,mBACA,cACA,cACA,KACA,SACA,QACA,KACA,QACA,SACA,QACA,QACA,SACA,YACA,WACA,OACA,KACA,UACA,OACA,MACA,OACA,OACA,UACA,QACA,OACA,OACA,QACA,SACA,QACA,OACA,YACA,iBACA,OACA,OACA,eACA,QACA,WACA,qBACA,gBACA,MACA,UACA,MACA,qBACA,OACA,KACA,KACA,WACA,SACA,aACA,KACA,QACA,MACA,QACA,UACA,OACA,YACA,UACA,YACA,QACA,OACA,YACA,aACA,SACA,UACA,SACA,SACA,UACA,UACA,WACA,SACA,QACA,QACA,MACA,OACA,qBACA,SACA,MACA,OACA,UACA,MACA,eACA,WACA,aACA,iBACA,sBACA,mBACA,MACA,WACA,iBACA,SACA,gBACA,QACA,cACA,aACA,OACA,KACA,WACA,UACA,OACA,mBACA,QACA,SACA,SACA,WACA,QACA,SACA,QACA,MACA,QACA,WACA,WACA,gBACA,SACA,UACA,OACA,QACA,QACA,SACA,OACA,QACA,MACA,aACA,YDlBIC,kBCoBiB,CAErB,SACA,SACA,MACA,OACA,OACA,UACA,OACA,YACA,OACA,WACA,MACA,UACA,mBACA,SACA,OACA,QACA,MACA,OACA,OACA,OACA,OACA,OACA,UACA,WACA,WACA,aACA,YACA,YACA,gBACA,mBACA,UACA,YACA,WACA,OACA,OACA,YACA,WACA,UACA,WACA,YACA,UACA,eACA,UACA,QDhEIC,sBE7KiB,CAKrB,MACA,OACA,UACA,UACA,cACA,cAEA,YACA,QACA,OACA,OACA,QACA,MACA,YACA,MACA,cACA,UACA,YACA,aACA,SACA,UACA,SACA,SACA,QACA,SACA,OACA,OACA,OACA,UACA,YACA,cACA,mBACA,UACA,WACA,eACA,YACA,WACA,SACA,YACA,gBACA,OACA,UACA,aACA,MACA,MACA,QACA,QACA,YACA,UACA,eACA,yBACA,eACA,eACA,oBACA,eACA,UACA,WACA,OACA,WACA,cACA,WACA,WACA,MACA,UACA,aACA,YACA,YACA,SACA,eACA,UACA,aACA,cACA,cACA,MACA,MACA,SACA,UACA,KACA,MACA,aACA,UACA,QACA,cACA,cACA,QACA,SACA,eACA,mBACA,aACA,cACA,YACA,gBACA,KACA,aACA,WACA,WACA,WACA,eACA,WACA,KACA,MACA,OACA,KACA,SACA,QAEA,aACA,aACA,YACA,YACA,cACA,QACA,SACA,WACA,eACA,UACA,iBACA,iBACA,UACA,eACA,UACA,UACA,SACA,SACA,aACA,gBACA,oBACA,oBACA,gBACA,qBACA,aACA,eACA,cACA,YACA,cACA,gBACA,aACA,mBACA,sBACA,cACA,iBACA,gBACA,cACA,aACA,cACA,eACA,cACA,WACA,oBACA,oBACA,YACA,eACA,aACA,MACA,WACA,iBACA,aACA,UACA,QACA,KACA,OACA,QACA,OACA,YACA,SACA,OACA,KACA,YACA,YACA,iBACA,SACA,MACA,QACA,OACA,QACA,OACA,KACA,QACA,WACA,WACA,WACA,kBACA,MACA,MACA,cACA,MACA,MACA,QACA,SACA,MACA,QACA,YACA,MACA,aACA,KACA,UACA,MACA,MACA,YACA,QACA,SACA,MACA,eACA,eAEA,MACA,gBACA,eACA,aACA,cACA,KACA,OACA,WACA,MACA,QACA,UACA,QACA,UACA,OACA,eACA,OACA,SACA,eACA,cACA,iBACA,gBACA,oBACA,eACA,SACA,UACA,UACA,QACA,aACA,QACA,YACA,aACA,OACA,QACA,SACA,cACA,SACA,eACA,SACA,SACA,MACA,OACA,OACA,OACA,MACA,QACA,MACA,QACA,OACA,MACA,SACA,aACA,cACA,cACA,SACA,UACA,SACA,YACA,kBACA,UACA,MACA,UACA,cACA,MACA,yBACA,mBACA,0BACA,kBACA,mBACA,0BACA,yBACA,oBACA,iBACA,yBACA,oBACA,aACA,eACA,OACA,cACA,cACA,WACA,YACA,eACA,gBACA,YACA,UACA,aACA,YACA,OACA,WACA,QACA,aACA,aACA,sBACA,QACA,iBACA,QAEA,WACA,WACA,gBACA,OACA,aACA,cACA,6BACA,UACA,WACA,WACA,UACA,cACA,OACA,UACA,aACA,gBAEA,OACA,YFtJIE,YAAa,CACT,WACA,CAAEC,MAAO,WAAYC,SAAU,CAAC,MAChC,CAAED,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAMC,eAAe,IAE5DC,WAAY,CAAC,MACbC,WAAY,CAAExrG,MAAO,IAAK+sG,KAAM,IAAKa,sBAAsB,GAC3D9B,cAAe,CACX,CAAEC,MAAO,sBACT,CAAEX,MAAO,WAAYC,SAAU,CAAC,KAAMC,eAAe,GACrD,CAAEF,MAAO,WAAYC,SAAU,CAAC,KAAMC,eAAe,GACrD,CAAEF,MAAO,KAAMC,SAAU,CAAC,KAAMC,eAAe,IAEnDI,WAAY,CAAEC,YAAY,GAC1BK,iBAAkB,CAAC,KAAM,KACzBC,UAAW,CACP,IACA,KACA,IACA,IACA,IACA,IACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,IACA,OAEJC,YAAW,IAEfpsB,cAAe,CACX8sB,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KGhNvB,GAAiBtD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,OACA,OACA,QACA,WACA,SACA,SACA,eACA,WACA,QACA,SAGA,cACA,SAEA,MAEA,aACA,0BACA,aACA,SAEA,OACA,SACA,cAEE0F,GAAiB1F,GAAc,CAEjC,SAEA,cAEA,aAEA,SACA,cACA,oBACA,cACA,qBACA,oBACA,kBACA,eACA,uBACA,eACA,kBACA,gBACA,aACA,qBACA,aACA,UACA,mBACA,UACA,QACA,QACA,UACA,SACA,uBACA,YACA,kBACA,oBACA,SAEA,MACA,qBACA,OACA,uBAEE,GAAwBA,GAAc,CAAC,cAAe,eAAgB,oBACtE,GAAgBA,GAAc,CAAC,OAAQ,8BAA+B,eACtE,GAAyBA,GAAc,CAAC,oCACxC,GAA0BA,GAAc,IAEjC6G,GAAO,CAChB5yG,KAAM,OACN2vG,iBAAkB,CACdT,eAAc,GACdC,gBAAiB,IAAI,MAAoBsC,IACzCnC,sBAAqB,GACrBC,cAAa,GACbC,uBAAsB,GACtBC,wBAAuB,GACvBwC,aAAa,EACbrC,iBCxFgB,CAEpB,SACA,MACA,QACA,UACA,MACA,MACA,QACA,KACA,MACA,KACA,QACA,UACA,SACA,UACA,QACA,SACA,QACA,KACA,OACA,OACA,OACA,UACA,UACA,aACA,SACA,YACA,UACA,WACA,aACA,QACA,SACA,UACA,WACA,UACA,YACA,UACA,YACA,SACA,UACA,OACA,WACA,WACA,KACA,OACA,OACA,UACA,OACA,MACA,QACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,SACA,QACA,UACA,QACA,YACA,MACA,QACA,OACA,MACA,WACA,SACA,QACA,QACA,SACA,MACA,OACA,SACA,KACA,SACA,QACA,KACA,UACA,YACA,QACA,QACA,SACA,QACA,SACA,YACA,OACA,KACA,YACA,aACA,OACA,MACA,OACA,WACA,QACA,WACA,OACA,OACA,MACA,UACA,QACA,OACA,QACA,MACA,MACA,UACA,UACA,eACA,QACA,QACA,UACA,YACA,OACA,KACA,KACA,MACA,YACA,OACA,QACA,SACA,SACA,SACA,KACA,SACA,UACA,KACA,QACA,SACA,QACA,OACA,QACA,YACA,WACA,OACA,OACA,YACA,UACA,UACA,UACA,YACA,QACA,YACA,SACA,QACA,MACA,QACA,SACA,SACA,UACA,SACA,YACA,SACA,QACA,OACA,WACA,MACA,OACA,YACA,YACA,SACA,QACA,SACA,OACA,OACA,MACA,OACA,OACA,QACA,aACA,SACA,SACA,OACA,OACA,KACA,OACA,cACA,UACA,OACA,WACA,YACA,QACA,QACA,SACA,UACA,SACA,QACA,SACA,SACA,MACA,OACA,QACA,WACA,QACA,SACA,SACA,MACA,OACA,OACA,QACA,QACA,SACA,OACA,SACA,OACA,ODpHIC,kBCsHiB,GDrHjBC,sBE1FiB,CAErB,QACA,MACA,OACA,UACA,YACA,YACA,eACA,YACA,sBACA,eACA,iBACA,cACA,iBACA,eACA,gBACA,eACA,eACA,kBACA,eACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,eACA,eACA,gBACA,gBACA,aACA,aACA,YACA,gBACA,iBACA,iBACA,cACA,OACA,OACA,QACA,MACA,SACA,gBACA,gBACA,UACA,YACA,UACA,SACA,UACA,YACA,WACA,UACA,OACA,cACA,eACA,YACA,WACA,YACA,WACA,SACA,UACA,WACA,iBACA,sBACA,wBACA,MACA,QACA,QACA,SACA,YACA,OACA,kBACA,eACA,mBACA,gBACA,kBACA,mBACA,gBACA,oBACA,iBACA,oBACA,iBACA,SACA,cACA,UACA,aACA,kBAEA,eACA,cACA,MACA,cACA,QACA,WACA,YACA,QACA,YACA,kBACA,QACA,aACA,SACA,UACA,UACA,SACA,WACA,YACA,WACA,WACA,WACA,MACA,aACA,OACA,QACA,SACA,KACA,MACA,QACA,QACA,MACA,OACA,SACA,OACA,SACA,kBACA,gBACA,eACA,gBACA,sBACA,MACA,YACA,QACA,WACA,YACA,aACA,UACA,SACA,UACA,YACA,QACA,SACA,MACA,OACA,aACA,gBACA,qBACA,sBACA,gBACA,eACA,eACA,aACA,gBACA,gBACA,iBACA,gBACA,gBACA,QACA,eACA,KACA,cACA,WACA,WACA,QACA,UACA,SACA,OACA,kBACA,kBACA,cACA,iBACA,kBACA,iBACA,eACA,iBACA,aACA,gBACA,iBACA,gBACA,cACA,SACA,UACA,UACA,QACA,aACA,QACA,SACA,cACA,eACA,OACA,MACA,QACA,OACA,SACA,aACA,cACA,kBACA,gBACA,YACA,aACA,mBACA,SACA,WACA,MACA,MACA,QACA,UACA,SACA,YACA,SACA,SACA,WACA,WACA,WACA,OACA,QAEA,QACA,OACA,WACA,eACA,gBACA,UACA,WACA,iBACA,cAIA,QFvIIE,YAAa,CAAC,QAAS,SACvBI,WAAY,CAAC,MACbL,YAAa,CAAC,KAAM,MACpBQ,WAAY,CAAEC,YAAY,EAAM2B,SAAU,CAAC,KAAM1B,MAAO,CAAC,MACzDI,iBAAkB,CAAC,IAAK,MACxBC,UAAW,CAAC,IAAK,KAAM,IAAK,OAEhCnsB,cAAe,CACX8sB,oBGlGF,GAAiB1F,GAAc,CAAC,qCAChC,GAAkBA,GAAc,CAElC,OACA,OACA,QACA,WACA,SACA,eACA,sBACA,SACA,uBACA,kBAGA,2BACA,SAEA,MAEA,eACA,4BACA,aAEA,cAEE,GAAyBA,GAAc,CACzC,+HAEE,GAAwBA,GAAc,CAExC,mHACA,2BAEA,gBAEA,qBAEA,aAEA,cACA,MACA,oDACA,SACA,YACA,gBAEA,iBAEA,aACA,QACA,aACA,UACA,SACA,YACA,OACA,eAEE,GAAwBA,GAAc,CAAC,cAAe,QAAS,cAC/D,GAAgBA,GAAc,CAChC,OACA,qCACA,uBACA,uBACA,6CAEA,0BAEE,GAAyBA,GAAc,CACzC,kCACA,YACA,2BAEE,GAA0BA,GAAc,IACjC8G,GAAQ,CACjB7yG,KAAM,QACN2vG,iBAAkB,CACdT,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,uBAAsB,GACtBC,wBAAuB,GACvBwC,aAAa,EACbrC,iBCxFgB,CAGpB,MACA,QACA,YACA,MACA,QACA,MACA,MACA,QACA,KACA,MACA,KACA,YACA,SACA,MACA,QACA,UACA,QACA,OACA,OACA,QACA,OACA,KACA,OAEA,OACA,UACA,UACA,OACA,UACA,cACA,YACA,QACA,QACA,UACA,WACA,UACA,UACA,UACA,UACA,SACA,YACA,WACA,WACA,UACA,WACA,cACA,UACA,UACA,QACA,QACA,SACA,UACA,SACA,cACA,WACA,OACA,MACA,UACA,UACA,SACA,SACA,OACA,gBACA,WACA,OACA,WACA,UACA,OACA,QACA,QACA,MACA,SACA,SACA,YACA,aACA,YACA,UACA,SACA,OACA,WACA,QACA,QACA,QACA,MACA,SACA,QACA,OACA,OACA,WACA,UACA,OACA,QACA,QACA,OACA,SACA,OACA,SACA,OACA,aACA,KACA,YACA,KACA,YACA,QACA,UACA,YACA,UACA,WACA,SACA,eACA,YACA,YACA,WACA,OACA,aACA,KACA,YACA,OACA,WACA,QACA,UACA,SACA,QACA,UACA,OACA,QACA,QACA,QACA,QACA,UACA,QACA,OACA,OACA,MACA,MACA,SACA,SACA,QACA,MACA,QACA,SACA,MACA,OACA,SACA,QACA,WACA,OACA,MACA,WACA,SACA,MACA,aACA,SACA,MACA,SACA,OACA,SACA,UACA,UACA,cACA,cACA,cACA,gBACA,YACA,SACA,SACA,eACA,WACA,YACA,UACA,KACA,KACA,OACA,SACA,OACA,WACA,SACA,KACA,SACA,UACA,QACA,WACA,eACA,SACA,UACA,SACA,MACA,aACA,UACA,kBACA,YACA,aACA,YACA,SACA,OACA,YACA,SACA,QACA,UACA,YACA,SACA,QACA,QACA,OACA,SACA,MACA,YACA,MACA,YACA,SACA,WACA,SACA,SACA,YACA,UACA,SACA,WACA,MACA,SACA,OACA,YACA,MACA,MACA,MACA,SACA,UACA,SACA,OACA,WACA,WACA,eACA,MACA,QACA,QACA,OACA,SACA,OACA,SACA,MACA,UACA,UACA,UACA,WACA,WACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,cACA,eACA,gBACA,UACA,MACA,UACA,UACA,QACA,MACA,MACA,OACA,OACA,gBACA,gBACA,kBACA,kBACA,KACA,WACA,UACA,gBACA,UACA,OACA,MACA,MACA,MACA,QACA,QACA,SACA,WACA,YACA,SACA,MACA,QACA,SACA,QACA,SACA,WACA,WACA,SACA,OACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,UACA,QACA,OACA,QDvNIC,kBCyNiB,CAErB,QACA,aACA,SACA,YACA,eACA,YACA,OACA,oBACA,YACA,YACA,YACA,OACA,UACA,SACA,QACA,MACA,eACA,gBACA,OACA,wBACA,gBACA,6BACA,qBACA,gBACA,QACA,QACA,cACA,SACA,WACA,WACA,YACA,MACA,YACA,SACA,UACA,YD7PIC,sBE1FiB,CAGrB,MACA,OACA,OACA,OACA,QACA,SACA,OACA,MACA,OACA,MACA,QACA,KACA,MACA,MACA,QACA,QACA,YACA,QACA,OACA,MACA,OACA,OACA,MACA,OACA,QACA,eAEA,MACA,SACA,UACA,QACA,OACA,QACA,cACA,YACA,UACA,YACA,iBACA,gBACA,UACA,OACA,QACA,UACA,SACA,YACA,QACA,OACA,QACA,uBACA,iBACA,mBACA,QACA,QACA,SACA,eAEA,aACA,eACA,oBACA,aACA,UACA,UACA,WACA,iBACA,iBACA,WACA,WACA,kBACA,kBACA,QACA,kBACA,kBACA,UACA,eACA,UACA,eACA,kBACA,gBACA,gBACA,QACA,YAEA,WACA,QAEA,WACA,aACA,OACA,cACA,UACA,UACA,YACA,WACA,kBACA,kBACA,WACA,YACA,cACA,eACA,mBACA,mBACA,mBACA,kBACA,UACA,UACA,UACA,gBACA,SACA,gBACA,WACA,WACA,YACA,gBACA,iBACA,eACA,kBACA,gBACA,gBACA,YACA,SAEA,YACA,cACA,aAEA,cACA,UACA,gBACA,+BACA,MAEA,sBAEA,aACA,sBACA,cACA,aACA,cACA,gBACA,aACA,kBACA,qBACA,yBACA,iBAEA,iBACA,YACA,QACA,UACA,aACA,eACA,iBACA,kBACA,OACA,eACA,aACA,aACA,YACA,SACA,WACA,eACA,aACA,YACA,YACA,WACA,QACA,WACA,UACA,cACA,eACA,WACA,eAEA,SACA,OACA,WACA,QAEA,WACA,QACA,SACA,MACA,OAEA,cACA,WACA,aACA,MACA,OACA,UAEA,MACA,UACA,OACA,SACA,SACA,QACA,YACA,aACA,YACA,aACA,QACA,WACA,WACA,cACA,OACA,MACA,SACA,MACA,kBACA,kBACA,eACA,OACA,aACA,iBACA,aACA,UACA,YACA,YACA,WACA,WACA,WACA,sBACA,iBACA,eACA,gBACA,aACA,gBACA,sBACA,mBACA,sBACA,qBACA,sBACA,iBACA,SACA,aACA,cACA,MACA,UACA,WACA,WAGA,cACA,MACA,aACA,OACA,QACA,kBACA,aAEA,QACA,WACA,MACA,WACA,QAEA,KACA,mBACA,aACA,WACA,YF7KIE,YAAa,CACT,CAAEC,MAAO,QAASC,SAAU,CAAC,MAC7B,CAAED,MAAO,MAAOC,SAAU,CAAC,OAK/BE,WAAY,CAAC,SACbC,WAAY,CAAEuB,KAAM,MACpBjB,cAAe,CAAC,CAAEC,MAAO,kCACzBL,WAAY,CAAE4B,SAAU,CAAC,KAAM1B,MAAO,CAAC,MACvCK,UAAW,CACP,KACA,KACA,IACA,KACA,KAEA,KACA,KACA,KACA,IACA,MAEJC,YAQR,SAAqB5lE,GACjB,IAAI2nE,EAAwB1F,GAC5B,OAAOjiE,EAAOpzC,IAAI6K,GAEVkrC,GAAQ8/D,IAAIhrG,IAAUkrC,GAAQ4/D,GAAGoF,GAC1Bv4G,OAAO2rB,OAAO3rB,OAAO2rB,OAAO,CAAC,EAAGtjB,GAAQ,CAAE/E,KAAMqvG,GAAUS,oBAEjEM,GAAWrrG,EAAM/E,QACjBi1G,EAAwBlwG,GAErBA,GAEf,GAlBI+hF,cAAe,CACXytB,qBAAsB,CAAC,KACvBX,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KGxHtB,MCGD,GAAiBtD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,4BACA,SACA,SACA,eACA,WACA,QACA,SACA,uBACA,wDAGA,cACA,SACA,iBAEA,MAEA,cAEE,GAAyBA,GAAc,CACzC,gFAEE,GAAwBA,GAAc,CAExC,0DACA,6CAEA,gBACA,mBAEA,cAEA,qBAEA,yBAEA,iCACA,gCACA,kBACA,YACA,+BACA,4BACA,iBACA,gBACA,uBACA,wBAEA,0BAEA,aACA,QAEA,QACA,kBACA,kBACA,mBACA,iBACA,2BACA,eACA,sBACA,kBACA,6BACA,sBACA,iBACA,cACA,cACA,iBACA,qBACA,0BACA,iBACA,uBACA,wBACA,eACA,kBACA,oBACA,aACA,gBACA,aACA,eACA,iBACA,eACA,mBACA,qBACA,eACA,mBACA,kCACA,+BACA,2BACA,6BACA,gBACA,aACA,aACA,qBACA,aACA,UACA,QACA,OACA,aACA,QACA,UACA,SACA,kBACA,OACA,uBACA,gCACA,cACA,mBACA,8BACA,kBACA,gBACA,uBACA,mBACA,8BACA,uBACA,+BACA,eACA,wBACA,sDACA,kBACA,wBACA,yBACA,gBACA,gCACA,qBACA,cACA,2BACA,gCACA,gDACA,gBACA,oBACA,sBACA,oBACA,mCACA,gCACA,4BACA,8BACA,gCACA,2CACA,cACA,cACA,sBACA,aACA,UACA,UACA,qBACA,iBACA,YACA,iBACA,kBACA,gBACA,cACA,qBACA,iBACA,4BACA,qBACA,gBACA,aACA,gBACA,aACA,gBACA,qCACA,gBACA,sBACA,uBACA,aACA,cACA,iBACA,mBACA,YACA,eACA,YACA,cACA,gBACA,cACA,kBACA,oBACA,kBACA,iCACA,8BACA,0BACA,4BACA,iBACA,eACA,YACA,YACA,oBACA,YACA,UACA,UACA,QACA,QACA,wBACA,SACA,OACA,OACA,OACA,SACA,0BACA,UACA,sBACA,iBACA,4BACA,UACA,oBACA,yCACA,SACA,WACA,oBACA,wBACA,YACA,iBACA,cACA,kBACA,WACA,4BACA,kBACA,OACA,oBACA,WACA,WAEE,GAAwBA,GAAc,CACxC,yBACA,0BACA,+BAEE,GAAgBA,GAAc,CAChC,OACA,qCACA,uBACA,uBACA,+CAEE,GAAyBA,GAAc,CACzC,cACA,8CACA,iFACA,wBACA,kBACA,kCAEA,yBACA,uBACA,oBAEE,GAA0BA,GAAc,CAE1C,kDAGSgH,GAAa,CACtB/yG,KAAM,aACN2vG,iBAAkB,CACdT,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,uBAAsB,GACtBC,wBAAuB,GACvBG,iBC5QgB,CAEpB,MACA,UACA,UACA,MACA,MACA,KACA,MACA,aACA,gBACA,UACA,SACA,OACA,OACA,OACA,QACA,UACA,YACA,SACA,eACA,aACA,SACA,QACA,kBACA,eACA,eACA,iBACA,eACA,oBACA,eACA,MACA,UACA,aACA,OACA,WACA,KACA,OACA,MACA,SACA,SACA,QACA,QACA,SACA,MACA,UACA,SACA,OACA,OACA,QACA,QACA,SACA,OACA,QACA,KACA,YACA,QACA,QACA,YACA,OACA,KACA,SACA,OACA,UACA,UACA,OACA,OACA,QACA,YACA,iBACA,SACA,QACA,UACA,MACA,UACA,OACA,SACA,SACA,KACA,OACA,KACA,QACA,MACA,QACA,OACA,WACA,UACA,UACA,aACA,YACA,QACA,MACA,SACA,SACA,eACA,UACA,OACA,YACA,QACA,cACA,OACA,KACA,WACA,OACA,QACA,SACA,OACA,QACA,SACA,WACA,UACA,OACA,QACA,SACA,OACA,SACA,UACA,QDwJIC,kBCtJiB,CAErB,QACA,SACA,MACA,cACA,OACA,UACA,OACA,YACA,oBACA,UACA,MACA,SACA,OACA,QACA,MACA,UACA,WACA,QACA,UACA,OACA,QACA,YACA,OACA,WACA,OACA,OACA,YACA,cACA,OACA,UACA,MACA,QDsHIC,sBD9QiB,CAIrB,MACA,OACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,OACA,UACA,MACA,OACA,OACA,MACA,OACA,UACA,MACA,MACA,YACA,QACA,MACA,MACA,KACA,MACA,QACA,YACA,MACA,KACA,QACA,UACA,SACA,QACA,QACA,UACA,OACA,MACA,OACA,OACA,OACA,MACA,OACA,OACA,aACA,QACA,eAEA,MACA,QACA,aACA,QACA,mBACA,cACA,MACA,SACA,YACA,SACA,UACA,OACA,SACA,QACA,OACA,QACA,MACA,YACA,eACA,UACA,cACA,qBACA,WACA,cACA,gBACA,iBACA,eACA,iBACA,iBACA,wBACA,wBACA,SACA,UACA,UACA,QACA,OACA,QACA,aACA,UACA,cACA,aACA,kBACA,kBACA,SACA,SACA,YACA,WACA,SACA,YACA,OACA,SACA,QAEA,YACA,aACA,QACA,UACA,eACA,aACA,SACA,SACA,UACA,WACA,SACA,QACA,MACA,eACA,UACA,WACA,QACA,UACA,WACA,SACA,SACA,SACA,SACA,aACA,SACA,YACA,OAEA,YACA,aACA,UACA,SACA,eACA,UACA,WACA,UACA,YAEA,eACA,iBACA,iBACA,wBACA,wBAEA,UACA,UACA,YACA,eAGA,kBACA,eACA,eACA,oBACA,WACA,YACA,aACA,UACA,WACA,eACA,gBACA,mBACA,YACA,iBACA,YACA,gBACA,YACA,iBACA,mBACA,MACA,WACA,eACA,iBACA,sBACA,YACA,eACA,wBAEA,aACA,YACA,aAEA,OACA,YACA,MACA,SACA,SACA,WACA,WACA,SACA,WACA,SACA,SACA,OACA,OACA,UACA,OACA,SACA,QACA,UACA,QACA,SACA,QACA,QAEA,SACA,YACA,SACA,OACA,WACA,aACA,mBACA,mBACA,UACA,UACA,UACA,cAEA,QAEA,oBACA,wBACA,oBACA,mBACA,SACA,UACA,mBACA,kBACA,YACA,YACA,QACA,aACA,cACA,iBACA,oBACA,WACA,YACA,YACA,cACA,YACA,WACA,UACA,aACA,aACA,UACA,gBACA,uBAEA,kBAEA,gBACA,sBACA,kBACA,wBACA,gCACA,UACA,eACA,qBACA,6BACA,gBACA,sBACA,8BACA,SACA,eACA,qBACA,6BACA,SACA,aACA,YACA,aACA,YACA,YACA,WACA,QACA,UACA,eACA,WACA,qBACA,6BACA,8BACA,QACA,eAEA,gBACA,YACA,uBACA,4BACA,qBACA,oBACA,qBACA,aACA,kBACA,qBACA,0BACA,eACA,eACA,mBACA,oBACA,oBACA,uBACA,mBACA,sBACA,mBACA,yBACA,4BACA,yBACA,4BACA,sBACA,wBACA,2BACA,eACA,YACA,gBACA,oBACA,kBACA,qBACA,eACA,WACA,sBACA,2BACA,oBACA,mBACA,oBACA,YACA,iBACA,oBACA,yBACA,cACA,kBACA,mBACA,uBACA,0BACA,mBACA,iBACA,oBACA,cACA,cACA,UACA,WACA,eAEA,UACA,UACA,UACA,SAGA,WACA,WACA,QACA,SAEA,YACA,eACA,YACA,aACA,aACA,eACA,cACA,cACA,iBACA,kBACA,gBACA,eACA,gBACA,kBACA,cACA,cACA,kBACA,aACA,SAEA,UACA,QACA,YACA,YACA,aACA,cACA,QACA,YACA,YAGA,YACA,MACA,UACA,SACA,UACA,WACA,UACA,WACA,OACA,QACA,YACA,aACA,YACA,aACA,QACA,WACA,YACA,mBACA,WACA,kBACA,MACA,MACA,OACA,kBACA,kBACA,eACA,YACA,sBACA,OACA,YACA,YACA,aACA,iBACA,UACA,aACA,WACA,WACA,WAEA,SACA,aACA,cACA,aACA,MACA,UACA,WACA,WACA,UACA,WACA,SAEA,YACA,aACA,cACA,MACA,aACA,OACA,YACA,QACA,eACA,OACA,aAEA,kBACA,sBAEA,aACA,aACA,kBACA,kBACA,mBACA,gBACA,eACA,iBACA,kBACA,eACA,cACA,2BACA,uBACA,yBACA,qCACA,yBACA,yBACA,uBACA,yBACA,uBACA,2BACA,sBACA,qBACA,mBACA,mBACA,mBACA,mBACA,cACA,kBACA,iBACA,mBACA,0BACA,oBACA,wBACA,kBACA,oBACA,2BACA,qBACA,sBACA,qBACA,iCACA,qBACA,yBACA,8BACA,uBACA,cACA,qBACA,4BACA,qCACA,yBACA,kBACA,kBACA,wBACA,wBACA,iBACA,yBACA,0BACA,oBACA,kBACA,iBACA,cACA,qBACA,gCACA,0BACA,+BACA,wBACA,0BACA,mBACA,yBACA,wBACA,oBACA,8BACA,wBACA,yBACA,yBACA,sBACA,2BACA,iCACA,kBACA,mBACA,mBACA,+BACA,0BACA,yBACA,sBACA,mBACA,0BACA,wBACA,0BACA,4BACA,YACA,qBACA,yBACA,2BACA,kCACA,iBACA,kBACA,sBACA,eACA,oBACA,cACA,kBACA,kBACA,aACA,iBACA,aACA,kBACA,aACA,aACA,eACA,2BACA,wBACA,oBACA,qBACA,qBACA,cACA,2BACA,OACA,UAEA,yBACA,4BACA,uBACA,eACA,kBACA,yBACA,mBACA,0BACA,qBACA,yBACA,4BACA,wBACA,+BACA,uBACA,oBACA,8BACA,wBACA,iBACA,mCACA,oCACA,qCACA,sCACA,0BACA,2BACA,4BACA,qBACA,mBACA,2BACA,qBACA,uBACA,gCACA,8BACA,kBACA,kBACA,oBACA,0BACA,0BACA,yBACA,gCACA,0BACA,qCACA,8BACA,sCACA,+BACA,iCACA,0BACA,YACA,eACA,eACA,eACA,yBACA,oBACA,oBACA,aACA,sBACA,eACA,uBACA,uBACA,mBACA,iBACA,gCACA,+BACA,6BACA,4BACA,iCACA,yCACA,yCACA,sCACA,sCACA,mCACA,mCACA,8BACA,oBACA,gBACA,iBACA,kBACA,eACA,iBACA,gBACA,qBACA,gBACA,uBACA,yBACA,uBACA,8BACA,4BACA,mCACA,kBACA,yBACA,kBACA,sBACA,uBACA,aAEA,qCACA,0BACA,iCAEA,gCACA,mCACA,qCACA,wCACA,wBAEA,oBAEA,QC5ZIiC,qBAAqB,EACrBhC,YAAa,CAAC,MACdmC,sBAAsB,EACtBlC,YAAa,CACT,KACA,CAAEC,MAAO,QAASC,SAAU,CAAC,OAC7B,CAAED,MAAO,WAAYC,SAAU,CAAC,KAAMC,eAAe,GACrD,CAAEF,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAMC,eAAe,IAE5DC,WAAY,CAAC,CAAEH,MAAO,QAASC,SAAU,CAAC,QAC1CG,WAAY,CAAEuB,KAAM,KACpBrB,WAAY,CAAE4B,SAAU,CAAC,MACzBrB,UAAW,CAEP,IACA,IACA,KACA,MACA,IAEA,KAEA,IACA,IACA,IACA,IACA,KACA,KAEA,MACA,MACA,OACA,OAEA,MACA,KACA,KACA,MACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,KACA,KACA,KAEA,IACA,KACA,KACA,KACA,MACA,KACA,MACA,KAEA,KAEA,MACA,MAEA,KACA,MACA,MACA,OAEA,IACA,KACA,KACA,MAEA,MAEA,KAEA,MACA,KACA,KAEA,KACA,KACA,MACA,MACA,OACA,OACA,QACA,QAEA,KACA,IAGA,MACA,MACA,MACA,MACA,OAEJkC,iBAAiB,GAErBruB,cAAe,CACXytB,qBAAsB,CAAC,KAAM,KAC7BX,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KE5XvB,GAAiBtD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,WACA,SACA,UACA,eACA,WACA,QACA,SAGA,cACA,SAEA,QAEE,GAAyBA,GAAc,CACzC,mFAEE,GAAwBA,GAAc,CAExC,0CAEA,SAEA,gBAEA,yBAEA,cACA,qBACA,eACA,gBACA,YACA,gBACA,eACA,OACA,SAEA,mBAEA,QACA,iBACA,kBACA,2BACA,cACA,0BACA,kBACA,eACA,aACA,UACA,UACA,sBACA,sBACA,QACA,OACA,SACA,QACA,SACA,OACA,kBACA,mBACA,2BACA,yBACA,wBACA,kBACA,eACA,iBACA,eACA,mBACA,gBACA,cACA,aACA,UACA,iBACA,gBACA,iBACA,gBACA,aACA,eACA,aACA,yBACA,iBACA,cACA,YACA,YACA,OACA,UACA,UACA,QACA,QACA,OACA,UACA,4BACA,QACA,SACA,WACA,cACA,4BACA,8BACA,OACA,sBACA,aACA,kBACA,iBACA,aACA,YACA,oBACA,SACA,WAEE,GAAwBA,GAAc,CAAC,cAAe,SAAU,YAAa,UAC7E,GAAgBA,GAAc,CAChC,OACA,qCACA,uBACA,uBACA,+CAEE,GAAyBA,GAAc,CAEzC,UAEA,eACA,iBAEA,2BAEE,GAA0BA,GAAc,IAEjCkH,GAAW,CACpBjzG,KAAM,WACN2vG,iBAAkB,CACdT,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,uBAAsB,GACtBC,wBAAuB,GACvBG,iBClJgB,CAEpB,SACA,SACA,MACA,iBACA,MACA,KACA,MACA,gBACA,SACA,UACA,SACA,OACA,QACA,SACA,aACA,SACA,QACA,UACA,aACA,UACA,SACA,OACA,UACA,WACA,KACA,SACA,SACA,UACA,aACA,WACA,QACA,MACA,UACA,SACA,OACA,OACA,gBACA,gBACA,QACA,WACA,SACA,QACA,KACA,YACA,QACA,OACA,KACA,SACA,WACA,UACA,OACA,QACA,YACA,iBACA,MACA,OACA,QACA,UACA,MACA,MACA,UACA,OACA,QACA,MACA,UACA,SACA,MACA,MACA,KACA,OACA,OACA,QACA,QACA,WACA,WACA,YACA,UACA,cACA,UACA,UACA,UACA,aACA,YACA,SACA,UACA,UACA,UACA,WACA,OACA,SACA,QACA,MACA,OACA,OACA,YACA,KACA,MACA,WACA,OACA,SACA,QACA,UACA,SACA,UAEA,gBACA,iBACA,eACA,aACA,cACA,WACA,SACA,eACA,aACA,mBACA,eACA,eACA,UACA,aACA,aACA,kBAEA,WACA,aACA,WACA,SACA,aAEA,SACA,MACA,YACA,aACA,YACA,OACA,OACA,UACA,MAEA,gBACA,cACA,YACA,WACA,uBACA,oBACA,gBAEA,QACA,OACA,OACA,OAEA,WACA,YACA,SACA,MAEA,MACA,OACA,WACA,QACA,WACA,MACA,UACA,WACA,WACA,YACA,UACA,UAGA,eACA,aACA,WAEA,OACA,OACA,MACA,YAEA,eDlCIC,kBC2CiB,CAErB,QACA,SACA,SACA,OACA,oBACA,YACA,UACA,MACA,OACA,OACA,OACA,UACA,QACA,UACA,WACA,WACA,OACA,UACA,WD9DIC,sBEpJiB,CAErB,YACA,8BACA,MACA,QACA,UACA,MACA,SACA,MACA,kBACA,cACA,aACA,MACA,WACA,UAGA,eACA,gBACA,mBACA,iBACA,WAEA,UACA,SACA,WACA,UAEA,WACA,SACA,WACA,QACA,MACA,OACA,SAEA,aACA,eACA,mBACA,eACA,eACA,oBACA,WACA,qBACA,uBACA,iBACA,UACA,WACA,YACA,aACA,UACA,UACA,eACA,WACA,iBACA,WACA,UACA,YACA,gBACA,qBACA,4BACA,kBACA,uBACA,4BACA,WACA,eACA,QAEA,UACA,WACA,eACA,cACA,WACA,UACA,cACA,YACA,YACA,eACA,YACA,aACA,cACA,aACA,cACA,sBACA,gBACA,eACA,YACA,aACA,eACA,cACA,cACA,oBACA,aACA,cACA,cACA,YACA,kBACA,aACA,aACA,cACA,cACA,aACA,eACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,gBACA,kBACA,iBACA,cACA,kBACA,aACA,cACA,aACA,YACA,kBACA,cACA,wBACA,0BACA,OACA,kBACA,cACA,eACA,iBACA,aACA,UACA,UACA,WACA,WACA,aACA,YACA,mBACA,sBACA,eACA,eACA,iBACA,WACA,YACA,YACA,aACA,iBACA,aACA,cACA,aACA,cACA,UACA,gBACA,aACA,YACA,OACA,UACA,UACA,OACA,UACA,UACA,OACA,UACA,UACA,eAEA,WACA,YACA,WACA,MACA,MACA,OACA,OAEA,MACA,oBACA,kBACA,cAEA,gBACA,sBACA,oBACA,kCACA,yBACA,aACA,iBAEA,MACA,OACA,OACA,OACA,QACA,OACA,UACA,OACA,MACA,MACA,UACA,OACA,QACA,SACA,MACA,QACA,KACA,MACA,MACA,KACA,QACA,UACA,SACA,QACA,MACA,OACA,OACA,MACA,SACA,QAEA,gBAEA,QACA,YACA,QACA,qBACA,cACA,mBACA,YACA,MACA,UACA,SACA,QACA,aACA,UACA,OACA,QACA,MACA,SACA,QACA,OACA,OACA,QACA,aACA,eACA,WACA,cACA,gBACA,eACA,eACA,iBACA,gBACA,SACA,UACA,YACA,UACA,QACA,UACA,aACA,SACA,SACA,YACA,UACA,YACA,OACA,QAEA,oBACA,gBACA,WACA,YACA,aACA,UACA,aACA,WACA,aACA,YACA,YACA,cACA,aACA,cAEA,MACA,QACA,YACA,aACA,cACA,aACA,MACA,OACA,UACA,MACA,SACA,MACA,YACA,QACA,eACA,kBACA,kBACA,OACA,kBACA,aACA,cACA,aACA,MACA,WACA,UAEA,OACA,UACA,UACA,UACA,YACA,kBACA,sBAEA,wBACA,0BACA,uBACA,kBACA,oBACA,uBACA,iBACA,aAEA,sBACA,mBACA,oBACA,iBACA,kBACA,eACA,kBACA,2BACA,yBACA,uBACA,sBACA,iBACA,cACA,6BACA,0BACA,gCACA,qBACA,kBACA,oBACA,mBACA,uBACA,eACA,YACA,OACA,WFpMIC,YAAa,CAAC,MACdC,YAAa,CAAC,SACdI,WAAY,CAAC,SACbC,WAAY,CAAExrG,MAAO,KACrB0rG,WAAY,CAAE4B,SAAU,CAAC,MACzBrB,UAAW,CACP,IACA,IACA,IACA,KACA,MACA,IACA,IAEA,IACA,KACA,KACA,KACA,OAGRnsB,cAAe,CACXytB,qBAAsB,CAAC,MACvBX,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KGxKvB,GAAiBtD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,OACA,OACA,QACA,WACA,SACA,SACA,eACA,WACA,UACA,aACA,gBACA,QAGA,oCACA,SAGA,qCAGA,2BACA,2BAEE,GAAyBA,GAAc,CAAC,4CACxC,GAAwBA,GAAc,CAExC,0EAEA,yBAEA,cACA,cACA,0BACA,YACA,gBACA,eAEA,iBAEA,eACA,iBACA,aACA,kBACA,kBACA,gBACA,gBACA,YACA,eACA,eAEA,cACA,QACA,YACA,UAEA,WACA,UACA,gBACA,cACA,cACA,oBACA,oBACA,iBACA,iBACA,YACA,WACA,UACA,gBACA,mBACA,QACA,eACA,oBACA,iBACA,iBACA,kBACA,sBACA,cACA,qBACA,aACA,kBAEE,GAAwBA,GAAc,CACxC,yBACA,0BACA,+BAEE,GAAgBA,GAAc,CAChC,OACA,qCACA,uBACA,uBACA,6CAEA,4BACA,sCAEE,GAAyBA,GAAc,CACzC,YACA,YACA,cACA,2BAEE,GAA0BA,GAAc,IAEjCmH,GAAQ,CACjBlzG,KAAM,QACN2vG,iBAAkB,CACdT,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,uBAAsB,GACtBC,wBAAuB,GACvBwC,aAAa,EACbrC,iBC3HgB,CAEpB,MACA,QACA,MACA,QACA,UACA,MACA,OACA,MACA,UACA,KACA,MACA,KACA,gBACA,UACA,OACA,SACA,UACA,KACA,QACA,UACA,OACA,SACA,QACA,QACA,UACA,YACA,UACA,UACA,aACA,SACA,UACA,UACA,SACA,UACA,cACA,UACA,cACA,aACA,OACA,SACA,QACA,OACA,UACA,eACA,eACA,oBACA,eACA,OACA,WACA,YACA,MACA,eACA,UACA,SACA,YACA,OACA,WACA,MACA,cACA,YACA,WACA,aACA,MACA,OACA,SACA,UACA,SACA,WACA,SACA,SACA,WACA,WACA,UACA,QACA,QACA,SACA,SACA,aACA,QACA,cACA,YACA,MACA,UACA,SACA,YACA,OACA,WACA,YACA,SACA,QACA,QACA,WACA,OACA,KACA,SACA,SACA,KACA,QACA,UACA,QACA,SACA,cACA,YACA,OACA,KACA,QACA,OACA,OACA,aACA,UACA,OACA,UACA,OACA,OACA,QACA,OACA,QACA,WACA,OACA,QACA,UACA,QACA,UACA,QACA,SACA,QACA,OACA,YACA,aACA,UACA,KACA,MACA,OACA,QACA,KACA,OACA,SACA,UACA,KACA,QACA,MACA,QACA,eACA,OACA,WACA,UACA,YACA,QACA,YACA,cACA,aACA,UACA,UACA,WACA,YACA,UACA,aACA,aACA,QACA,QACA,QACA,eACA,eACA,UACA,SACA,aACA,SACA,SACA,UACA,UACA,WACA,SACA,QACA,QACA,OACA,QACA,WACA,SACA,MACA,OACA,SACA,SACA,SACA,OACA,YACA,QACA,kBACA,eACA,OACA,OACA,SACA,OACA,OACA,SACA,QACA,aACA,SACA,WACA,SACA,YACA,QACA,SACA,gBACA,YACA,aACA,OACA,KACA,QACA,WACA,cACA,eACA,OACA,OACA,WACA,YACA,YACA,UACA,SACA,UACA,SACA,QACA,MACA,OACA,QACA,OACA,SACA,OAEA,UACA,YACA,WACA,WACA,UACA,OACA,WACA,aACA,aACA,SACA,UACA,cACA,SACA,UACA,gBACA,QACA,WACA,eACA,QACA,cACA,cACA,SACA,QACA,QACA,gBACA,SACA,SACA,KACA,WACA,SACA,YACA,OACA,OACA,QACA,WACA,YACA,cD9IIC,kBCgJiB,CAErB,QACA,SACA,SACA,UACA,OACA,OACA,OACA,MACA,UACA,SACA,QACA,MACA,UACA,WACA,OACA,MACA,UACA,OACA,QACA,WACA,SACA,SACA,gBACA,gBACA,YACA,UACA,WD3KIC,sBE7HiB,CAKrB,wBACA,oBACA,MACA,UACA,SACA,UACA,WACA,UACA,eACA,cACA,OACA,QACA,QACA,QACA,WACA,mBACA,YACA,aACA,QACA,QACA,cACA,WACA,cACA,WACA,OACA,aACA,MACA,SACA,OACA,MACA,SACA,aACA,aACA,oBACA,WAEA,MACA,SACA,aACA,cACA,MACA,UACA,WACA,WAEA,YACA,aACA,MACA,OACA,YACA,QACA,eACA,OACA,aAEA,QACA,iBACA,iBACA,eACA,kBACA,aACA,YACA,YACA,iBACA,eACA,eACA,cACA,iBACA,aACA,UACA,WACA,UACA,QACA,aAEA,aACA,aACA,aACA,cACA,kBACA,mBACA,WACA,aACA,aAEA,aACA,eACA,eACA,oBACA,oBACA,mBACA,WACA,cACA,sBACA,YACA,WACA,aACA,WACA,MACA,aACA,YACA,YACA,UACA,gBACA,qBACA,OACA,WACA,YACA,mBACA,gBACA,iBACA,mBACA,SACA,QACA,iBACA,WACA,MACA,UACA,SACA,iBACA,mBACA,mBACA,oBACA,UACA,eACA,oBACA,mBACA,QACA,YACA,cACA,cACA,eACA,iBACA,UACA,aACA,SACA,OAEA,YACA,kBACA,oBACA,mBACA,aACA,iBACA,UAEA,MACA,OACA,QACA,YACA,aACA,QACA,OACA,QACA,cACA,OACA,QACA,QACA,SACA,MACA,YACA,UACA,aACA,SACA,QACA,cACA,OACA,OACA,UACA,cACA,mBACA,MACA,SACA,YACA,OACA,MACA,OACA,MACA,QACA,kBACA,mBACA,eACA,UAEA,MACA,MACA,QACA,YACA,cACA,QACA,SACA,gBACA,gBACA,WACA,SACA,OACA,MACA,QACA,UACA,SACA,eACA,0BACA,yBACA,kBACA,QACA,QACA,YACA,SACA,cACA,QACA,OACA,SACA,cACA,KACA,SACA,MACA,QACA,QACA,OACA,QACA,OACA,QACA,aACA,eACA,MACA,MACA,8BACA,eACA,QACA,WACA,MACA,OACA,eACA,UACA,YACA,KACA,OACA,aACA,mBACA,WACA,WACA,MACA,QACA,SACA,UACA,cACA,OACA,QACA,SACA,UACA,iBACA,qBACA,cACA,iBACA,SACA,UACA,UACA,QACA,OACA,QACA,OACA,QACA,gBACA,YACA,MACA,OACA,OACA,YACA,aACA,qBACA,OACA,SACA,MACA,OACA,UACA,QACA,qBACA,QACA,OACA,QACA,SACA,YACA,kBACA,MACA,OACA,SACA,iBACA,mBACA,YACA,OACA,UACA,aACA,SACA,QACA,WACA,QACA,QACA,OACA,UACA,eACA,QACA,gBACA,eACA,cACA,YACA,aACA,eACA,cACA,eACA,WACA,WAEA,OAEA,WACA,UFlMIC,YAAa,CAAC,MACdC,YAAa,CACT,QACA,QACA,CAAEC,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAMC,eAAe,GACxD,CAAEF,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAMC,eAAe,IAE5DC,WAAY,CAAC,MACbC,WAAY,CAAEoC,sBAAsB,GACpC9B,cAAe,CAAC,CAAEV,MAAO,KAAMC,SAAU,CAAC,KAAMC,eAAe,IAC/DW,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,KAAM,IAAK,KAAM,MAC7DC,YAOR,SAAqB5lE,GACjB,OAAOA,EAAOpzC,IAAI,CAAC6K,EAAO5F,KACtB,MAAMg0G,EAAY7lE,EAAOnuC,EAAI,IAAMowG,GAC7BmF,EAAYpnE,EAAOnuC,EAAI,IAAMowG,GAEnC,OAAIt/D,GAAQigE,OAAOnrG,IAAU2vG,EAAU10G,OAASqvG,GAAUiG,WAE/C54G,OAAO2rB,OAAO3rB,OAAO2rB,OAAO,CAAC,EAAGtjB,GAAQ,CAAE/E,KAAMqvG,GAAUgB,yBAGlD,UAAftrG,EAAMK,MAAoBL,EAAM/E,OAASqvG,GAAUS,kBAC1B,eAAnBqD,EAAU/tG,MAA4C,eAAnBsvG,EAAUtvG,KAKhDL,EAHQrI,OAAO2rB,OAAO3rB,OAAO2rB,OAAO,CAAC,EAAGtjB,GAAQ,CAAE/E,KAAMqvG,GAAUoE,WAAYruG,KAAML,EAAMyC,OAKzG,GAvBIs/E,cAAe,CACX8sB,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KG7ItB,MCGD,GAAiBtD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,WACA,SACA,SACA,eACA,WACA,QACA,SAGA,0EACA,eACA,SAEA,MAEA,cAEE,GAAyBA,GAAc,CAAC,oDACxC,GAAwBA,GAAc,CAExC,iDAEA,qEAEA,cAEA,cAEA,yBAEA,cACA,eACA,gBACA,kBACA,YAEA,eAEE,GAAwBA,GAAc,CAAC,cAAe,SAAU,cAEhE,GAAgBA,GAAc,CAChC,OACA,qCACA,uBACA,uBACA,+CAEE,GAAyBA,GAAc,CACzC,gDACA,kCACA,cAEE,GAA0BA,GAAc,IACjCqH,GAAS,CAClBpzG,KAAM,SACN2vG,iBAAkB,CACdT,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,uBAAsB,GACtBC,wBAAuB,GACvBG,iBCvEgB,CAIpB,QACA,SACA,MACA,QACA,MACA,QACA,MACA,MACA,SACA,UACA,KACA,MACA,SACA,gBACA,SACA,QACA,UACA,KACA,UACA,OACA,OACA,QACA,UACA,SACA,SACA,WACA,aACA,SACA,QACA,UACA,eACA,eACA,oBACA,WACA,UACA,aACA,WACA,SACA,OACA,SACA,WACA,KACA,OACA,OACA,OACA,MACA,SACA,SACA,UACA,YACA,SACA,UACA,OACA,SACA,QACA,YACA,MACA,UACA,OACA,OACA,YACA,OACA,QACA,SACA,KACA,SACA,YACA,KACA,QACA,UACA,YACA,QACA,SACA,UACA,YACA,OACA,KACA,SACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,eACA,UACA,KACA,MACA,UACA,UACA,OACA,QACA,KACA,SACA,KACA,OACA,OACA,KACA,QACA,SACA,QACA,OACA,YACA,OACA,SACA,YACA,UACA,QACA,QACA,QACA,YACA,aACA,SACA,UACA,UACA,SACA,UACA,WACA,YACA,QACA,WACA,MACA,OACA,YACA,SACA,MACA,QACA,OACA,YACA,OACA,OACA,KACA,cACA,UACA,YACA,QACA,SACA,SACA,QACA,SACA,SACA,OACA,UACA,OACA,QACA,SACA,OACA,WDhFIC,kBCkFiB,CAMrB,MACA,QACA,OACA,YACA,UACA,MACA,UACA,mBACA,QACA,UACA,WACA,OACA,OACA,UACA,qBDrGIC,sBDzEiB,CAErB,MACA,UACA,OACA,WACA,SACA,OACA,MACA,SACA,MACA,QACA,oBACA,SACA,OACA,aACA,SACA,iBACA,QACA,QACA,SACA,SACA,QACA,SACA,aACA,UACA,QACA,QACA,OACA,UACA,2BACA,4BACA,gBACA,mBACA,iBACA,SACA,YACA,gBACA,OACA,SACA,UACA,WACA,QACA,WAEA,MACA,QACA,eACA,MACA,MACA,MACA,QAEA,OACA,OACA,WACA,YACA,YACA,WAEA,aACA,OACA,aACA,eACA,YACA,QACA,MACA,OACA,cACA,aACA,YAEA,OACA,QACA,OACA,QACA,OACA,QACA,QACA,OACA,UACA,MACA,OACA,UACA,MACA,QACA,KACA,MACA,MACA,QACA,OACA,MACA,KACA,MACA,QACA,UACA,MACA,OACA,OACA,MACA,OACA,QAEA,OACA,aACA,oBACA,oBACA,eACA,cACA,cACA,aACA,cACA,eACA,WACA,YACA,YACA,aACA,aACA,mBACA,oBACA,YACA,YAEA,QCjDIE,YAAa,CACT,QACA,CAAEC,MAAO,SAAUC,SAAU,CAAC,KAAMC,eAAe,IAIvDC,WAAY,CAAC,QAAS,KAAM,MAE5BG,WAAY,CAAEC,YAAY,EAAM2B,SAAU,CAAC,KAAM1B,MAAO,CAAC,IAAK,IAAK,MACnEK,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,MAAO,OAEnEnsB,cAAe,CACX8sB,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KEpFvB,GAAiBtD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,4BACA,SACA,SACA,eACA,WACA,QACA,SACA,uBAGA,cACA,SAEA,QAEE,GAAyBA,GAAc,CAAC,sDACxC,GAAwBA,GAAc,CAExC,0BAEA,SACA,mBAEA,cAEA,aAEA,cACA,aACA,gBACA,gBACA,YACA,iBACA,uBACA,YACA,kCACA,eAEA,iBAEA,eAEE,GAAwBA,GAAc,CACxC,yBACA,0BACA,+BAEE,GAAgBA,GAAc,CAChC,OACA,qCACA,uBACA,uBACA,+CAEE,GAAyBA,GAAc,CACzC,gDACA,2BAEE,GAA0BA,GAAc,IACjCtyF,GAAM,CACfzZ,KAAM,MACN2vG,iBAAkB,CACdT,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,uBAAsB,GACtBC,wBAAuB,GACvBG,iBC7EgB,CAEpB,MACA,WACA,QACA,MACA,MACA,KACA,MACA,aACA,aACA,KACA,SACA,gBACA,QACA,UACA,OACA,KACA,OACA,SACA,WACA,OACA,QACA,QACA,WACA,UACA,SACA,SACA,YACA,UACA,aACA,gBACA,SACA,QACA,OACA,UACA,kBACA,kCACA,eACA,eACA,iBACA,mCACA,eACA,SACA,QACA,aACA,MACA,UACA,UACA,SACA,QACA,OACA,WACA,gBACA,aACA,WACA,OACA,UACA,OACA,UACA,WACA,SACA,QACA,SACA,OACA,UACA,SACA,WACA,QACA,QACA,SACA,MACA,UACA,OACA,OACA,OACA,WACA,MACA,SACA,QACA,QACA,SACA,OACA,OACA,WACA,KACA,YACA,QACA,QACA,cACA,SACA,YACA,OACA,KACA,WACA,QACA,UACA,UACA,OACA,OACA,aACA,QACA,QACA,SACA,QACA,SACA,SACA,WACA,SACA,QACA,UACA,MACA,KACA,OACA,MACA,OACA,SACA,KACA,MACA,KACA,OACA,OACA,QACA,MACA,QACA,OACA,WACA,YACA,YACA,YACA,UACA,UACA,YACA,QACA,QACA,OACA,YACA,MACA,aACA,cACA,UACA,SACA,SACA,UACA,SACA,QACA,WACA,SACA,MACA,OACA,YACA,QACA,SACA,SACA,SACA,SACA,YACA,eACA,MACA,UACA,OACA,WACA,MACA,eACA,WACA,aACA,QACA,SACA,cACA,YACA,SACA,cACA,QACA,cACA,OACA,gBACA,kBACA,KACA,WACA,cACA,QACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,WACA,SACA,SACA,UACA,QDvHIC,kBCyHiB,CAErB,QACA,SACA,sBACA,iBACA,SACA,OACA,UACA,oBACA,eACA,OACA,yBACA,oBACA,YACA,OACA,OACA,MACA,UACA,SACA,QACA,MACA,UACA,WACA,WACA,wBACA,gBACA,kCACA,6BACA,qBACA,qBACA,gBACA,QACA,QACA,UACA,WACA,OACA,YACA,YACA,WD/JIC,sBE/EiB,CAErB,WAEA,OACA,aACA,eACA,YACA,aAEA,WACA,oBACA,iBACA,UACA,cACA,mBACA,eACA,cACA,MACA,MACA,KACA,MACA,QACA,OACA,QACA,OACA,UACA,eAEA,YACA,kBACA,QACA,QACA,UACA,YACA,kBACA,OACA,UACA,YACA,eAEA,eACA,eACA,YACA,oBACA,iBAMA,QACA,MACA,MACA,MACA,MAIA,aACA,cACA,WACA,UACA,UACA,SACA,eACA,YACA,aACA,OACA,aACA,iBACA,aACA,UACA,YACA,YACA,WACA,WACA,WACA,kBACA,kBAMA,OAEA,WACA,SAEA,QACA,MACA,MACA,MACA,OACA,OACA,QFhBIE,YAAa,CACT,CAAEC,MAAO,WAAYC,SAAU,CAAC,IAAK,OACrC,CAAED,MAAO,SAAUC,SAAU,CAAC,KAAMC,eAAe,IAEvDC,WAAY,CAAC,QAAS,MACtBG,WAAY,CAAEC,YAAY,GAC1BM,UAAW,CAAC,OAEhBnsB,cAAe,CACX8sB,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KGvFvB,GAAiBtD,GAAc,CAAC,4BAEhC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,4BACA,SACA,SACA,eACA,WACA,QACA,SACA,uBAGA,cACA,SAEA,MAEA,kBACA,WACA,oBACA,qBACA,cACA,UACA,SACA,WAEE,GAAyBA,GAAc,CAAC,iCACxC,GAAwBA,GAAc,CAExC,0CAEA,SAEA,cAEA,yBAEA,0BACA,6BACA,0BACA,4BACA,YACA,kCACA,iBACA,UAEA,iBAEA,eACA,0BACA,aACA,gBACA,cACA,cACA,yBACA,YACA,YAEA,UACA,UACA,kBACA,0BACA,MACA,iBACA,kBACA,4BACA,gBACA,cACA,WACA,gBACA,cACA,oBACA,qBACA,mBACA,gCACA,cACA,eACA,gBACA,eACA,iBACA,aACA,qBACA,mBACA,iBACA,iBAIE,GAAwBA,GAAc,CACxC,yBACA,0BACA,+BAGE,GAAgBA,GAAc,CAChC,OACA,qCACA,uBACA,uBACA,+CAEE,GAAyBA,GAAc,CACzC,kCAEA,2BAEE,GAA0BA,GAAc,IACjCsH,GAAQ,CACjBrzG,KAAM,QACN2vG,iBAAkB,CACdT,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,uBAAsB,GACtBC,wBAAuB,GACvBG,iBC5HgB,CAEpB,SACA,MACA,QACA,QACA,MACA,QACA,UACA,MACA,MACA,KACA,MACA,KACA,gBACA,YACA,UACA,OACA,KACA,OACA,UACA,OACA,WACA,SACA,UACA,UACA,SACA,YACA,cACA,aACA,cACA,SACA,QACA,OACA,UACA,eACA,eACA,OACA,aACA,UACA,SACA,UACA,SACA,OACA,OACA,WACA,aACA,WACA,cACA,SACA,OACA,OACA,QACA,WACA,MACA,QACA,SACA,SACA,YACA,UACA,SACA,UACA,QACA,QACA,QACA,QACA,YACA,MACA,OACA,OACA,YACA,QACA,UACA,SACA,WACA,QACA,WACA,SACA,SACA,SACA,KACA,YACA,UACA,QACA,QACA,SACA,YACA,WACA,OACA,UACA,KACA,KACA,YACA,OACA,OACA,aACA,cACA,OACA,MACA,OACA,OACA,UACA,UACA,OACA,QACA,OACA,QACA,QACA,UACA,QACA,UACA,UACA,kBACA,eACA,WACA,UACA,OACA,MACA,MACA,OACA,OACA,KACA,OACA,MACA,OACA,QACA,SACA,KACA,SACA,OACA,KACA,MACA,OACA,SACA,KACA,QACA,aACA,QACA,SACA,OACA,WACA,YACA,aACA,UACA,OACA,OACA,UACA,MACA,UACA,YACA,YACA,UACA,aACA,aACA,QACA,SACA,QACA,OACA,YACA,UACA,SACA,aACA,QACA,UACA,WACA,YACA,SACA,QACA,OACA,QACA,WACA,SACA,MACA,OACA,UACA,SACA,SACA,UACA,WACA,OACA,SACA,eACA,UACA,MACA,OACA,OACA,OACA,OACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,cACA,OACA,OACA,OACA,OACA,YACA,KACA,WACA,cACA,OACA,OACA,UACA,YACA,cACA,gBACA,QACA,SACA,UACA,YACA,SACA,SACA,MACA,OACA,QACA,QACA,QACA,OACA,WACA,QACA,SACA,UACA,OACA,OACA,QACA,SACA,OACA,SACA,UACA,OACA,UACA,QACA,QD/GIC,kBCiHiB,CAGrB,SACA,MACA,UACA,WACA,UACA,UACA,OACA,UACA,OACA,SACA,cACA,UACA,UACA,gBACA,WACA,YACA,OACA,YACA,UACA,OACA,MACA,QACA,MACA,OACA,WACA,YACA,WACA,OACA,YACA,aACA,aACA,cACA,QACA,aACA,WACA,YDtJIC,sBE9HiB,CAOrB,MACA,OACA,YACA,YACA,kBACA,uBACA,oBACA,aACA,YACA,iBACA,YACA,iBACA,eACA,kBACA,aACA,YACA,YACA,iBACA,eACA,aACA,cACA,OACA,OACA,QACA,cACA,MACA,MACA,WACA,YACA,oBACA,eACA,wBACA,oBACA,oBACA,uBACA,cACA,kBACA,qBACA,cACA,aACA,iBACA,sBACA,iCACA,cACA,YACA,WACA,UACA,cACA,OACA,OACA,OACA,UACA,cACA,WACA,MACA,WACA,WACA,YACA,QACA,eACA,SACA,YACA,WACA,oBACA,kBACA,OACA,MACA,OACA,oBACA,QACA,WACA,YACA,aACA,QACA,YACA,kBACA,eACA,iBACA,iBACA,eACA,oBACA,mBACA,eACA,OACA,WACA,YACA,cACA,aACA,aACA,MACA,eACA,cACA,cACA,UACA,aACA,MACA,MACA,IACA,aACA,mBACA,kCACA,QACA,MACA,UACA,WACA,SACA,cACA,UACA,QACA,SACA,kBACA,gBACA,YACA,cACA,cACA,iBACA,qBACA,qBACA,wBACA,wBACA,WACA,kBACA,kBACA,oBACA,yBACA,+BACA,gBACA,sBACA,YACA,iBACA,6BACA,0BACA,0BACA,yBACA,iBACA,qBACA,WACA,wBACA,mBACA,cACA,YACA,WACA,YACA,cACA,cACA,OACA,yBACA,KACA,QACA,WACA,2BACA,mBACA,qBACA,YACA,cACA,iBACA,SACA,gBACA,sBACA,iBACA,oBACA,cACA,eACA,sBACA,cACA,aACA,aACA,YACA,aACA,WACA,MACA,oBACA,aACA,OACA,mBACA,0BACA,yBACA,kBACA,QACA,SACA,uBACA,yBACA,0BACA,oBACA,UACA,KACA,YACA,iBACA,MACA,QACA,OACA,QACA,OACA,QACA,aACA,kBACA,MACA,UACA,aACA,cACA,aACA,mBACA,WACA,YACA,aACA,eACA,MACA,SACA,MACA,QACA,mBACA,cACA,MACA,SACA,SACA,MACA,QACA,eACA,wBACA,UACA,MACA,SACA,aACA,YACA,aACA,MACA,YACA,QACA,SACA,oBACA,WACA,qBACA,kBACA,iBACA,iBACA,eACA,KACA,WACA,MACA,QACA,cACA,UACA,UACA,OACA,SACA,OACA,SACA,aACA,eACA,iBACA,qBACA,cACA,kBACA,iBACA,eACA,UACA,iBACA,aACA,SACA,SACA,UACA,UACA,MACA,QACA,aACA,OACA,QACA,SACA,WACA,OACA,SACA,SACA,UACA,OACA,oBACA,MACA,WACA,QACA,UACA,uBACA,qBACA,QACA,aACA,eACA,oBACA,oBACA,oBACA,OACA,cACA,SACA,aACA,cACA,SACA,UACA,cACA,YACA,cACA,YACA,cACA,cACA,gBACA,cACA,aACA,gBACA,eACA,cACA,cACA,cACA,cACA,mBACA,YACA,kBACA,gBACA,sBACA,eACA,kBACA,oBACA,mBACA,mBACA,kBACA,gBACA,cACA,aACA,YACA,cACA,aACA,YACA,kBACA,gBACA,gBACA,mBACA,qBACA,eACA,cACA,WACA,YACA,YACA,aACA,YACA,gBACA,mBACA,aACA,WACA,YACA,OACA,UACA,UACA,OACA,UACA,UACA,SACA,YACA,MACA,MACA,OACA,cACA,qBACA,gBACA,kBACA,UACA,YACA,YACA,eACA,mBACA,mBACA,UACA,UACA,sBACA,sBACA,cACA,SACA,gBACA,gBACA,aACA,kBACA,yBACA,eACA,cACA,UACA,YACA,iBACA,mBACA,YACA,OACA,aACA,WACA,MACA,WACA,SACA,QACA,aACA,aACA,uBACA,mBACA,wBACA,mBACA,mBACA,uBACA,oBACA,OACA,sBACA,oBACA,WACA,UACA,WACA,UACA,OACA,eACA,eACA,wBACA,wBACA,gBACA,YACA,WACA,OACA,eACA,MACA,MACA,WAEA,aACA,QACA,OACA,eACA,OACA,UACA,QF9SIC,YAAa,CAAC,KAAM,MAGpBC,YAAa,CACT,CAAEC,MAAO,QAASC,SAAU,CAAC,OAC7B,CAAED,MAAO,SAAUC,SAAU,CAAC,KAAMC,eAAe,IAGvDC,WAAY,CAAC,SACbG,WAAY,CAAEC,YAAY,GAC1BM,UAAW,CACP,IACA,KACA,KACA,IACA,KAEA,IACA,IACA,MAIRnsB,cAAe,CACX8sB,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KGzJvB,GAAiBtD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,OACA,OACA,OACA,QACA,WACA,SACA,SACA,eACA,WACA,SACA,uBACA,4BACA,SAGA,gBACA,SAEA,MAEA,eACA,oDACA,eAEE,GAAyBA,GAAc,CAAC,iBACxC,GAAwBA,GAAc,CAExC,wCAEA,SACA,mBAEA,gBAEA,yBAEA,cACA,MACA,0BACA,eAEA,iBAEA,oCAEA,kBACA,iBACA,4BAEA,8DACA,kDACA,6DAEA,KACA,MAEA,iCACA,gBACA,YACA,gBACA,aACA,qBACA,oBACA,eACA,gBACA,mBACA,aACA,cACA,WACA,iBACA,gBACA,qBACA,SACA,qBACA,oBACA,4BACA,2BACA,4BACA,kBACA,cACA,cACA,mBACA,sBACA,wBACA,oBACA,oBACA,0BACA,eACA,WACA,aACA,yBACA,yBACA,WACA,+BACA,0BACA,gBACA,gCACA,6BACA,eACA,YACA,aACA,oBACA,OACA,WACA,kBACA,iBACA,mBACA,WACA,qBACA,gBACA,aACA,uBACA,uBACA,oBACA,mBACA,yBACA,iBACA,eACA,UACA,YACA,mBACA,iBACA,oBACA,yBACA,0BACA,QACA,YACA,kBACA,wBACA,QACA,WACA,eACA,QACA,aACA,eACA,oBACA,UACA,SACA,qBACA,UACA,kBACA,qBACA,YACA,mBACA,4BACA,QACA,oBACA,UACA,yBACA,2BACA,oBACA,gBACA,UACA,uBACA,qBACA,oBACA,qBACA,qBACA,6BACA,qBACA,SACA,SACA,aACA,OACA,QACA,WACA,OACA,SACA,uBACA,kBACA,sBACA,OACA,6BACA,WACA,eACA,6BACA,uBACA,cACA,UACA,qBACA,UACA,eACA,gBACA,eACA,YACA,gBACA,aACA,gBACA,qBACA,kBACA,iBACA,gBACA,UACA,QACA,iBACA,WACA,8BACA,UACA,OACA,oBACA,OACA,iBACA,aACA,YACA,0BAEE,GAAwBA,GAAc,CAAC,cAAe,SAAU,cAChE,GAAgBA,GAAc,CAChC,OACA,qCACA,uBAEA,0BAEE,GAAyBA,GAAc,CACzC,gDACA,2BAEE,GAA0BA,GAAc,IAEjCuH,GAAc,CACvBtzG,KAAM,cACN2vG,iBAAkB,CACdT,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,uBAAsB,GACtBC,wBAAuB,GACvBG,iBC3OgB,CAGpB,MACA,MACA,QACA,MACA,MACA,KACA,MACA,gBACA,SACA,QACA,UACA,QACA,SACA,OACA,KACA,UACA,QACA,aACA,QACA,YACA,WACA,UACA,SACA,SACA,UACA,aACA,WACA,gBACA,WACA,UACA,SACA,QACA,UACA,eACA,eACA,oBACA,eACA,SACA,WACA,OACA,aACA,UACA,UACA,SACA,OACA,OACA,OACA,WACA,cACA,OACA,OACA,SACA,SACA,OACA,UACA,SACA,OACA,WACA,QACA,OACA,aACA,MACA,UACA,WACA,gBACA,OACA,OACA,WACA,OACA,QACA,QACA,SACA,WACA,WACA,cACA,kBACA,KACA,KACA,QACA,QACA,SACA,YACA,OACA,KACA,OACA,MACA,OACA,OACA,OACA,SACA,OACA,QACA,UACA,eACA,MACA,OACA,SACA,KACA,MACA,UACA,KACA,OACA,iBACA,YACA,aACA,UACA,SACA,KACA,QACA,QACA,OACA,UACA,QACA,OACA,UACA,QACA,OACA,YACA,SACA,YACA,OACA,WACA,cACA,aACA,cACA,UACA,WACA,SACA,SACA,SACA,QACA,WACA,WACA,aACA,OACA,OACA,SACA,gBACA,SACA,yBACA,iCACA,0BACA,eACA,MACA,UACA,WACA,OACA,aACA,cACA,QACA,cACA,WACA,OACA,KACA,MACA,OACA,cACA,UACA,WACA,cACA,UACA,QACA,SACA,UACA,SACA,aACA,MACA,OACA,SACA,OACA,UACA,QACA,QACA,OACA,eACA,YAEA,WDwDIC,kBCtDiB,CAErB,SACA,MACA,OACA,OACA,YACA,OACA,YACA,iBACA,MACA,UACA,SACA,QACA,MACA,UACA,WACA,QACA,UACA,WACA,YACA,OACA,WACA,OACA,YACA,YACA,WD6BIC,sBE7OiB,CAGrB,wBACA,MACA,eACA,QACA,YACA,WACA,cACA,MACA,MACA,QACA,SACA,MACA,MACA,OAEA,YACA,cACA,MACA,aACA,OACA,kBACA,kBACA,eACA,gCACA,+BAEA,SACA,WACA,aACA,iBACA,oBACA,kBACA,cACA,YACA,cACA,eACA,gBACA,SACA,aACA,YAEA,OACA,UACA,QACA,WACA,cACA,YAEA,aACA,kBACA,eACA,UACA,mBACA,mBACA,gBACA,eACA,0BACA,uBACA,sBACA,mBACA,gBACA,eACA,sBACA,YACA,kBACA,WACA,SACA,WACA,gBACA,aACA,iBACA,qBACA,wBAEA,gBACA,iBACA,gBAEA,aACA,gBACA,aACA,aACA,WACA,uBAEA,cACA,oBACA,mBACA,sBACA,UACA,WACA,eACA,gBACA,WACA,WACA,qBACA,oBACA,0BACA,MACA,UACA,UACA,aACA,SACA,QACA,yBACA,eACA,cACA,oBACA,iBACA,gBACA,mBACA,OACA,OACA,SACA,aACA,aACA,cAEA,MACA,OACA,OACA,OACA,OACA,UACA,MACA,MACA,UACA,MACA,QACA,MACA,QACA,KACA,QACA,UACA,OACA,QACA,OACA,MACA,OACA,SACA,MACA,SACA,WACA,MACA,QAEA,WACA,WACA,eACA,eACA,mBACA,aACA,WACA,iBACA,qBACA,QACA,UACA,UACA,YACA,YACA,eACA,iBACA,oBACA,eACA,iBACA,0BACA,0BACA,YACA,oBACA,gBACA,iBACA,oBACA,YACA,cACA,qBACA,iBACA,mBACA,mBACA,YACA,YACA,cACA,iBACA,iBACA,aACA,UACA,YACA,eAEA,aACA,QACA,OACA,aACA,uBAEA,cACA,iBACA,eACA,wBACA,eACA,oBACA,YACA,gBACA,mBACA,gBACA,iBACA,cACA,aACA,aACA,eACA,kBACA,WACA,aACA,YACA,cACA,cACA,OACA,UACA,YAEA,QACA,YACA,SACA,YACA,aACA,SACA,OACA,MACA,QACA,QACA,WACA,YACA,UACA,YACA,UACA,QACA,QACA,UACA,QACA,MACA,aACA,gBACA,QACA,YACA,YACA,OACA,UACA,QAEA,aACA,UACA,aACA,kBACA,aACA,cACA,kBACA,WACA,WACA,qBACA,eACA,qBACA,yBACA,aACA,aACA,gBACA,eACA,kBACA,iBACA,cACA,gBACA,qCACA,cACA,UACA,YACA,SACA,YACA,wBACA,QACA,kBACA,eACA,kBACA,aAEA,gBACA,aACA,SACA,YACA,cACA,kBACA,cACA,iBACA,eACA,gBACA,UACA,YAEA,kBACA,YACA,oBACA,SAEA,WACA,UFlEIiC,qBAAqB,EACrB/B,YAAa,CAAC,CAAEC,MAAO,QAASC,SAAU,CAAC,MAAQ,MACnDE,WAAY,CAAC,QAAS,MACtBC,WAAY,CAAExrG,MAAO,KAAM+sG,KAAM,OACjCrB,WAAY,CAAEE,MAAO,CAAC,KAAMC,OAAQ,CAAC,MACrCI,UAAW,CACP,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAEJyC,wBAAyB,CAAC,OAG9B5uB,cAAe,CACXytB,qBAAsB,CAAC,MACvBX,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KGxQvB,GAAiBtD,GAAc,CAAC,0CAChC,GAAkBA,GAAc,CAElC,OACA,OACA,QACA,WACA,SACA,eACA,WACA,QACA,SAGA,yBACA,SACA,iBACA,0BAEA,MAEA,4DACA,4CAEE,GAAyBA,GAAc,CACzC,uFAEE,GAAwBA,GAAc,CAExC,cAEA,SAEA,gBAEA,qCAEA,uBACA,eACA,6BACA,gBACA,kBACA,SACA,mBAEA,mBAEA,iBACA,WACA,2BACA,iBACA,iBACA,sBACA,aACA,aACA,gBACA,kBACA,cACA,kBACA,kBACA,SACA,uBACA,cACA,OACA,SACA,mBACA,4BACA,+BACA,sBACA,cACA,iBACA,yBACA,QACA,SACA,kBACA,eACA,eACA,cACA,mBACA,kBACA,uBACA,cACA,cACA,qBACA,WACA,kBACA,kBACA,gBACA,gBACA,aACA,YACA,gBACA,iBACA,qBACA,YACA,YACA,YACA,UACA,UACA,QACA,QACA,QACA,UACA,OACA,kBACA,kBACA,YACA,wBACA,WACA,2BACA,cACA,kBACA,iBACA,UACA,oBACA,uBACA,oBACA,oBACA,cACA,eACA,UACA,qBACA,QACA,eACA,gBACA,gBACA,cACA,UACA,mBACA,qBACA,SACA,WACA,wBACA,YACA,oBACA,mBACA,YACA,eACA,qBACA,WACA,kBACA,OACA,qBACA,iBACA,eACA,uBACA,uBACA,uBACA,wBACA,oBACA,mBACA,mBACA,iBACA,cACA,eACA,cACA,qBACA,uBACA,cACA,aACA,qBACA,mBACA,eACA,kBACA,sBACA,wBACA,mBACA,eACA,gBACA,uBACA,sBACA,gBACA,aACA,mBACA,cACA,oBACA,cACA,iBACA,gBACA,WACA,oBACA,kBACA,0BACA,iBACA,gBACA,cACA,oBACA,yBACA,gBACA,eACA,mBACA,aACA,gBACA,kBACA,gBACA,MACA,KAEA,UACA,QACA,OACA,SACA,SACA,UAEE,GAAwBA,GAAc,CACxC,yBACA,SACA,YACA,UAEE,GAAgBA,GAAc,CAChC,OACA,qCACA,uBACA,sCAEA,kBAEE,GAAyBA,GAAc,CACzC,YACA,YACA,gBACA,yBACA,kBAEE,GAA0BA,GAAc,IACjCyH,GAAgB,CACzBxzG,KAAM,gBACN2vG,iBAAkB,CACdT,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,uBAAsB,GACtBC,wBAAuB,GACvBG,iBChPgB,CAMpB,MACA,MACA,QACA,UACA,MACA,KACA,MACA,aACA,SACA,UACA,UACA,OACA,KACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,YACA,aACA,WACA,UACA,SACA,QACA,eACA,eACA,oBACA,eACA,SACA,WACA,YACA,WACA,kBACA,aACA,aACA,UACA,UACA,UACA,SACA,OACA,WACA,gBACA,WACA,cACA,MACA,OACA,OACA,OACA,OACA,SACA,WACA,UACA,SACA,SACA,OACA,UACA,aACA,QACA,QACA,MACA,QACA,sBACA,yBACA,UACA,OACA,OACA,WACA,QACA,QACA,SACA,uBACA,gBACA,mBACA,cACA,cACA,KACA,SACA,KACA,QACA,SACA,QACA,QACA,cACA,SACA,KACA,6BACA,YACA,WACA,OACA,UACA,OACA,MACA,OACA,OACA,UACA,QACA,OACA,OACA,QACA,QACA,OACA,YACA,iBACA,OACA,OACA,eACA,QACA,WACA,QACA,qBACA,gBACA,MACA,WACA,UACA,mBACA,MACA,qBACA,mBACA,OACA,KACA,WACA,SACA,aACA,KACA,QACA,MACA,QACA,UACA,OACA,UACA,YACA,QACA,QACA,OACA,QACA,aACA,SACA,UACA,SACA,SACA,UACA,UACA,WACA,SACA,SACA,QACA,kBACA,kBACA,sBACA,QACA,SACA,UACA,qBACA,SACA,YACA,YACA,YACA,MACA,OACA,SACA,UACA,WACA,MACA,iBACA,oBACA,YACA,sBACA,eACA,eACA,iBACA,mBACA,WACA,aACA,gBACA,QACA,aACA,OACA,KACA,WACA,UACA,OACA,YACA,OACA,QACA,SACA,SACA,SACA,QACA,MACA,QACA,WACA,WACA,gBACA,QACA,SACA,OACA,QACA,QACA,SACA,OACA,SACA,QACA,MACA,aACA,YD6BIC,kBC3BiB,CAErB,SACA,SACA,MACA,OACA,OACA,YACA,WACA,MACA,UACA,mBACA,SACA,OACA,QACA,QACA,SACA,SACA,MACA,OACA,OACA,OACA,OACA,OACA,UACA,OACA,WACA,WACA,aACA,YACA,aACA,YACA,gBACA,mBACA,UACA,YACA,OACA,WACA,OACA,OACA,YACA,WACA,UACA,WACA,WACA,YACA,UACA,eACA,QDpBIC,sBElPiB,CAgBrB,MACA,OACA,UACA,UACA,cACA,cACA,YACA,wBACA,mCACA,gCACA,iCACA,8BACA,oBACA,QACA,OACA,OACA,QACA,MACA,MACA,SACA,UACA,YACA,SACA,UACA,OACA,OACA,UACA,OACA,mBACA,cACA,UACA,WACA,eACA,YACA,UACA,SACA,YACA,gBACA,OACA,UACA,aACA,MACA,MACA,QACA,YACA,UACA,eACA,eACA,eACA,oBACA,eACA,UACA,WACA,OACA,WACA,WACA,cACA,WACA,aACA,MACA,UACA,aACA,YACA,YACA,SACA,UACA,UACA,aACA,MACA,cACA,MACA,qBACA,MACA,UACA,QACA,QACA,cACA,QACA,SACA,aACA,cACA,YACA,gBACA,iBACA,qBACA,qBACA,uBACA,qBACA,mBACA,sBACA,kBACA,4BACA,gBACA,oBACA,oBACA,kBACA,sBACA,kBACA,iBACA,2BACA,aACA,aACA,WACA,WACA,eACA,MACA,YACA,OACA,cACA,KACA,SACA,YACA,YACA,aACA,aACA,UACA,SACA,QACA,WACA,KACA,UACA,WACA,6BACA,2BACA,6BACA,yBACA,uBACA,yBACA,kBACA,sBACA,oBACA,sBACA,sBACA,gBACA,cACA,kBACA,gBACA,kBACA,qBACA,mBACA,qBACA,MACA,WACA,aACA,QACA,OACA,QACA,OACA,SACA,OACA,KACA,YACA,iBACA,SACA,MACA,QACA,OACA,OACA,QACA,QACA,MACA,MACA,SACA,cACA,MACA,SACA,MACA,QACA,YACA,iBACA,MACA,MACA,YACA,QACA,SACA,eACA,eACA,kBACA,kBACA,KACA,QACA,WACA,MACA,QACA,UACA,QACA,UACA,OACA,OACA,SACA,SACA,UACA,UACA,QACA,QACA,QACA,YACA,aACA,OACA,QACA,SACA,SACA,cACA,OACA,OACA,UACA,OACA,MACA,QACA,QACA,UACA,cACA,kBACA,QACA,OACA,SACA,aACA,cACA,cACA,UACA,SACA,YACA,kBACA,MACA,WACA,MACA,OACA,WACA,cACA,cACA,YACA,eACA,gBACA,cACA,YACA,UACA,UACA,UACA,YACA,aACA,eACA,OACA,QACA,WACA,QACA,QACA,iBACA,YACA,QAEA,WACA,WACA,gBACA,OACA,SACA,WACA,UACA,WACA,aACA,UACA,OACA,UACA,aACA,QFnCIE,YAAa,CACT,WACA,WACA,CAAEC,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAMC,eAAe,IAE5DC,WAAY,CAAC,MACbC,WAAY,CAAExrG,MAAO,IAAK+sG,KAAM,IAAKa,sBAAsB,GAC3D9B,cAAe,CACX,CAAEC,MAAO,qBACT,CAAEX,MAAO,KAAMC,SAAU,CAAC,KAAMC,eAAe,IAEnDU,iBAAkB,CAAC,KAAM,KACzBC,UAAW,CACP,KACA,IACA,IACA,IACA,IACA,KACA,KACA,MACA,KACA,KACA,KACA,MACA,MACA,KACA,MACA,OAEJC,YAAW,IAEfpsB,cAAe,CACXytB,qBAAsB,CAAC,KAAM,MAAO,OACpCX,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KGpRvB,GAAiBtD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,WACA,SACA,eACA,WACA,UACA,QACA,SACA,uBAGA,qDACA,qBACA,SAEA,MACA,aACA,oDACA,cACA,iBACA,aACA,qBACA,6BACA,iCAEE,GAAyBA,GAAc,CACzC,uDACA,gFAEE,GAAwBA,GAAc,CAExC,gEAEA,SAEA,cAEA,yBAEA,0BACA,YACA,YACA,+BACA,sBACA,eACA,gBACA,4BACA,gBACA,6CACA,oBACA,mCACA,oBACA,iCACA,+BACA,uBACA,wBACA,gBACA,gBACA,+BAEA,+BAcA,gBACA,wBACA,mBACA,iBACA,uBACA,uBACA,oBACA,iBACA,oBACA,uBACA,0BACA,uBACA,iCACA,aACA,kBACA,0BACA,yBACA,aACA,0BACA,eACA,6BACA,iBACA,gBACA,uBACA,cACA,cACA,4BACA,eACA,YACA,aACA,aACA,aACA,kBACA,QACA,OACA,SACA,YACA,iBACA,yBACA,oBACA,kBACA,2BACA,wBACA,wBACA,qBACA,kBACA,qBACA,yBACA,wBACA,2BACA,wBACA,kCACA,cACA,mBACA,2BACA,0BACA,cACA,2BACA,gBACA,8BACA,kBACA,wBACA,eACA,eACA,6BACA,gBACA,aACA,cACA,cACA,mBACA,SACA,oBACA,0BACA,uBACA,oBACA,uBACA,0BACA,6BACA,0BACA,gBACA,qBACA,kBACA,6BACA,kBACA,oBACA,0BACA,iBACA,iBACA,kBACA,iBACA,gBACA,uBACA,gBACA,gBACA,qBACA,kBACA,gBACA,sBACA,sBACA,mBACA,gBACA,mBACA,uBACA,sBACA,yBACA,sBACA,YACA,iBACA,yBACA,wBACA,YACA,yBACA,cACA,gBACA,sBACA,aACA,aACA,cACA,WACA,YACA,YACA,YACA,iBACA,oBACA,eACA,UACA,MACA,kBACA,aACA,SACA,OACA,QACA,MACA,SACA,cACA,WACA,eACA,mBACA,iBACA,mCACA,sCACA,gCACA,0BACA,uBACA,uBACA,oBACA,iBACA,uBACA,cACA,oBACA,aACA,wBACA,wBACA,0BACA,wBACA,eACA,6BACA,kBACA,aACA,oBACA,kBACA,eACA,4BACA,6BACA,0BACA,yBACA,aACA,2BACA,eACA,iBACA,wBACA,cACA,gCACA,mCACA,cACA,eACA,cACA,YACA,aACA,oBACA,sBACA,aACA,iBACA,aACA,kBACA,6BACA,kBACA,gBACA,eACA,aACA,QACA,eACA,WACA,aACA,sBACA,kBAEE,GAAwBA,GAAc,CAAC,cAAe,QAAS,SAAU,cACzE,GAAgBA,GAAc,CAChC,eACA,+CACA,2BAEE,GAAyBA,GAAc,CACzC,yBACA,kDAEE,GAA0BA,GAAc,IACjC0H,GAAY,CACrBzzG,KAAM,YACN2vG,iBAAkB,CACdT,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,uBAAsB,GACtBC,wBAAuB,GACvBG,iBC3SgB,CAIpB,UACA,MACA,QACA,MACA,MACA,KACA,UACA,KACA,OACA,OACA,QACA,SACA,UACA,aACA,aACA,SACA,QACA,UACA,eACA,eACA,oBACA,eACA,WACA,SACA,WACA,OACA,OACA,SACA,QACA,YACA,MACA,OACA,OACA,QACA,QACA,YACA,SACA,QACA,KACA,YACA,QACA,SACA,YACA,OACA,KACA,QACA,OACA,UACA,OACA,OACA,YACA,iBACA,QACA,UACA,MACA,OACA,KACA,KACA,KACA,QACA,eACA,UACA,SACA,SACA,QACA,QACA,MACA,OACA,SACA,SACA,SACA,MACA,OACA,QACA,QACA,cACA,OACA,KACA,UACA,OACA,WACA,QACA,SACA,SACA,QACA,SACA,OACA,OACA,WACA,QACA,OAEA,WD4MIC,kBC1MiB,CACrB,SACA,UACA,UACA,MACA,UACA,SACA,WACA,UACA,UACA,QACA,SACA,SACA,SACA,mBACA,OACA,UACA,OACA,YACA,SACA,OACA,SACA,YACA,UACA,OACA,WACA,OACA,YACA,gBACA,gBACA,YACA,eACA,UACA,SACA,QACA,YACA,YDuKIC,sBE7SiB,CAkBrB,MACA,OACA,QACA,aACA,iBACA,YACA,wBACA,oBACA,+BACA,4BACA,6BACA,eACA,0BACA,uBACA,wBACA,4BACA,yBACA,YACA,eACA,YACA,gBACA,kBACA,0BACA,iBACA,eACA,qBACA,iBACA,gBACA,aACA,cACA,kBACA,kBACA,mBACA,iBACA,WACA,YACA,aACA,UACA,aACA,UACA,aACA,YACA,YACA,UACA,aACA,YACA,UACA,mBACA,mBACA,kBACA,QACA,OACA,QACA,OACA,QACA,QACA,oCACA,+BACA,MACA,uBACA,uBACA,gBACA,aACA,SACA,aACA,sBACA,uBACA,uBACA,eACA,gBACA,SACA,QACA,YACA,eACA,gBACA,SACA,aACA,UACA,cACA,UACA,SACA,aACA,UACA,cACA,wBACA,uBACA,OACA,OACA,OACA,OACA,YACA,aACA,YACA,MACA,OACA,WACA,UACA,YACA,uBACA,WACA,SACA,YACA,2BACA,yBACA,WACA,mBACA,eACA,OACA,MACA,OACA,MACA,QACA,WACA,YACA,aACA,YACA,kBACA,0BACA,iBACA,mBACA,eACA,qBACA,iBACA,eACA,iBACA,kBACA,0BACA,kBACA,oBACA,sBACA,eACA,oBACA,sBACA,eACA,kBACA,oBACA,wBACA,2BACA,4BACA,mCACA,iCACA,kBACA,YACA,aACA,UACA,WACA,UACA,SACA,oBACA,oBACA,UACA,cACA,UACA,aACA,OACA,eACA,UACA,cACA,WACA,aACA,MACA,eACA,6BACA,uBACA,2CACA,UACA,8BACA,YACA,SACA,cACA,UACA,QACA,8BACA,YACA,MACA,oBACA,UACA,kBACA,wBACA,WACA,oBACA,oBACA,qBACA,SACA,WACA,wBACA,WACA,cACA,OACA,WACA,YACA,oBACA,oBACA,aACA,MACA,iBACA,cACA,eACA,aACA,aACA,OACA,SACA,SACA,aACA,MACA,SACA,QACA,YACA,eACA,UACA,SACA,eACA,gBACA,WACA,YACA,aACA,UACA,aACA,UACA,gBACA,aACA,YACA,UACA,6BACA,aACA,gBACA,YACA,qBACA,UACA,mBACA,mBACA,kBACA,yBACA,yBACA,WACA,MACA,WACA,gBACA,mBACA,aACA,OACA,QACA,OACA,SACA,MACA,OACA,WACA,WACA,UACA,KACA,YACA,iBACA,MACA,gBACA,wBACA,QACA,OACA,QACA,oCACA,MACA,UACA,aACA,yBACA,qBACA,qBACA,SACA,MACA,MACA,UACA,kBACA,MACA,OACA,YACA,iBACA,WACA,SACA,YACA,QACA,SACA,aACA,MACA,OACA,aACA,mBACA,6BACA,gBACA,gBACA,cACA,cACA,eACA,WACA,aACA,YACA,YACA,eACA,kBACA,kBACA,KACA,qBACA,iBACA,oBACA,WACA,MACA,QACA,eACA,6BACA,gBACA,2BACA,wBACA,6BACA,UACA,SACA,UACA,OACA,kBACA,SACA,eACA,eACA,cACA,iBACA,gBACA,oBACA,YACA,YACA,aACA,iBACA,UACA,aACA,WACA,WACA,WACA,YACA,YACA,SACA,UACA,oCACA,qCACA,4CACA,kCACA,4BACA,qBACA,cACA,UACA,QACA,QACA,QACA,aACA,OACA,QACA,kBACA,8BACA,OACA,OACA,OACA,OACA,0BACA,OACA,WACA,cACA,OACA,WACA,cACA,OACA,MACA,OACA,OACA,UACA,QACA,QACA,aACA,iBACA,OACA,SACA,UACA,YACA,YACA,eACA,WACA,cACA,WACA,YACA,aACA,cACA,aACA,cACA,eACA,YACA,gBACA,eACA,cACA,cACA,aACA,cACA,cACA,qBACA,0BACA,sBACA,sBACA,aACA,qBACA,qBACA,uBACA,kBACA,gBACA,YACA,mBACA,gBACA,cACA,eACA,WACA,iBACA,aACA,aACA,eACA,eACA,YACA,aACA,cACA,UACA,gBACA,mBACA,WACA,YACA,OACA,UACA,UACA,OACA,UACA,UACA,4CACA,8BACA,aACA,SACA,aACA,cACA,mBACA,SACA,wBACA,kBACA,SACA,YACA,MACA,UACA,uBACA,2BACA,+BACA,4CACA,uCACA,4BACA,sBACA,0BACA,gCACA,2BACA,gCACA,mCACA,mCACA,2CACA,wCACA,sCACA,uCACA,qCACA,4CACA,8BACA,2BACA,oCACA,2BACA,oCACA,gCACA,sCACA,yBACA,8CACA,gCACA,qCACA,iBACA,gCACA,mCACA,kCACA,sCACA,iCACA,sCACA,uCACA,2BACA,qBACA,4BACA,yCACA,0BACA,mCACA,oCACA,yBACA,gCACA,gBACA,6CACA,qCACA,cACA,mBACA,+BACA,iBACA,6BACA,8BACA,MACA,OACA,kBACA,eACA,kBACA,aACA,UACA,WACA,uBACA,eACA,gBACA,WACA,YACA,aACA,UACA,aACA,UACA,OACA,aACA,YACA,aACA,YACA,eACA,cACA,UACA,YACA,UACA,OACA,eACA,mBACA,mBACA,kBACA,aACA,SACA,YACA,OACA,WACA,QACA,QACA,2BACA,2BACA,WACA,wBACA,wBACA,iBACA,gBACA,iBACA,cACA,iBACA,gBACA,iBACA,gBACA,mBACA,kBACA,cACA,mBACA,uBACA,uBACA,sBACA,SACA,UACA,UACA,QACA,cACA,WACA,qBACA,UACA,WACA,WACA,gBACA,eACA,yBACA,6BACA,eACA,SACA,OACA,aACA,gBACA,MACA,aACA,YACA,eACA,YACA,OACA,OACA,aACA,UACA,QACA,UACA,aACA,QFjTIE,YAAa,CAAC,KAAM,YACpBI,WAAY,CAAC,SACbO,cAAe,CAEX,CAAEC,MAAO,gBAET,CAAEA,MAAO,+BAEbb,YAAa,CAAC,MACdM,WAAY,CAAEuB,KAAM,KACpBf,iBAAkB,CAAC,KAAM,MACzBC,UAAW,CAEP,IAEA,KAEA,KAEA,KAEA,KAEA,MAEJyC,wBAAyB,CAAC,MAE9B5uB,cAAe,CACXytB,qBAAsB,CAAC,MACvBX,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KG1UhBx6E,GAAQ6+E,GAAQA,EAAIA,EAAIz6G,OAAS,GAGjC06G,GAAoBC,GAAYA,EAAQl8G,KAAK,CAACL,EAAGC,IAAMA,EAAE2B,OAAS5B,EAAE4B,QAAU5B,EAAEk+B,cAAcj+B,IAI9Fu8G,GAAsBz4G,GAAMA,EAAEC,QAAQ,QAAS,KAE/Cy4G,GAAe7wG,GAAS,KAAK1D,KAAK0D,GCVlC8wG,GAAgB33G,GAAWA,EAAOf,QAAQ,uBAAwB,QAClE24G,GAAmB,QACnBC,GAAkBC,GAAY,IAAIv5G,OAAO,MAAMu5G,KAAY,MAE3DC,GAA4B96G,GAAWA,EAC/ChB,MAAM,IACNN,IAAIq8G,GAAS,MAAM70G,KAAK60G,GAAQ,OAAS,IAAIA,EAAKn6F,gBAAgBm6F,EAAKpyF,kBACvE7pB,KAAK,ICEGk8G,GAAc,CAAC3qF,EAAMqmF,EAAc,MAC5C,MAAMnuG,EAAiB,SAAT8nB,EAAkB,EAAI,EAC9B4qF,EAAS,CAAC,QAASvE,GAAah4G,IAAIw8G,GAAQA,EAAK3yG,IACvD,OAAOqyG,GAAeK,EAAOv8G,IAAIg8G,IAAc57G,KAAK,OAK3CgO,GAAY2qG,GAAcmD,GAAe,GAAGN,GAAiB7C,GAAW/4G,IAAIg8G,IAAc57G,KAAK,QAW/Fq8G,GAAe,CAAC5E,EAAkBS,EAAa,CAAC,KACzD,GAAgC,IAA5BT,EAAiB32G,OACjB,MAAO,QAEX,MAAMw7G,EARsB,GAAG7C,OAAMtB,YAAasB,GAAQtB,EAAS,OAAOsB,GAAQ,KAAKtB,EAAS,IAAM,OAAS,GAQvFoE,CAAwBrE,GAC1CsE,EAA0BhB,GAAiB/D,GAC5C73G,IAAIg8G,IACJ57G,KAAK,KACLkD,QAAQ,MAAO,QACpB,OAAO,IAAIV,OAAO,MAAMg6G,KAA2BF,OAAsB,QAOhE1mF,GAAY,CAACwiF,EAAY2D,KAClC,IAAK3D,EAAWt3G,OACZ,OAEJ,MAAM27G,EAAarE,EAAWx4G,IAAIg8G,IAAc57G,KAAK,KACrD,OAAO87G,GAAe,MAAMW,QAAiBV,OAyBpCW,GAAgB,CAEzB,KAAM,eAEN,KAAM5wG,OAAOoB,GAAI,gCAEjB,QAASpB,OAAOoB,GAAI,eACpB,QAASpB,OAAOoB,GAAI,+BACpB,WAAYpB,OAAOoB,GAAI,gCACvB,SAAUpB,OAAOoB,GAAI,cAErB,QAASpB,OAAOoB,GAAI,eACpB,QAASpB,OAAOoB,GAAI,+BACpB,WAAYpB,OAAOoB,GAAI,gCACvB,SAAUpB,OAAOoB,GAAI,cAErB,GAAMpB,OAAOoB,GAAI,iCAEjB,WAAYpB,OAAOoB,GAAI,gCAEvB,WAAYpB,OAAOoB,GAAI,gCAEvB,KAAMpB,OAAOoB,GAAI,iBAEjB,MA/CyB,MACzB,MAAMyvG,EAAsB,CACxB,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAKHC,EAAcx6G,OAAOuqC,QAAQgwE,GAAqB/8G,IAAI,EAAEma,EAAME,KAF9C,mCAEuE/W,QAAQ,UAAW04G,GAAa7hG,IAAO7W,QAAQ,WAAY04G,GAAa3hG,KAC/J4iG,EAAoBjB,GAAax5G,OAAOH,KAAK06G,GAAqB38G,KAAK,KAK7E,MADuB,WAFU8L,OAAOoB,GAAI,cAAc2vG,mCAEID,EAAY58G,KAAK,UAgCxE88G,IAELC,GAAsBC,GACE,iBAAfA,EACAN,GAAcM,GAEhB,UAAWA,EACTA,EAAWvE,MD/FK,GAAGV,WAAUC,mBAAoB,MAAMD,EAASn4G,IAAIo8G,IAA0Bh8G,KAAK,OAAOg4G,EAAgB,GAAK,OCkG/HiF,CAAgBD,GAAcN,GAAcM,EAAWlF,OAQzDoF,GAAiBF,GAAeA,EAAWp9G,IAAIm9G,IAAoB/8G,KAAK,KAExE,GAAUg9G,GAAelB,GAAeoB,GAAcF,IAItD5sG,GAAa,CAAC+sG,EAAe,CAAC,IAAMrB,GAAesB,GAAkBD,IAIrEC,GAAoB,EAAG1wG,QAAO+sG,OAAMtB,SAAQmC,wBAA0B,CAAC,KAEhF,MAAM+C,EAAS,4BAET99D,EAAS,sBACT+9D,EAAa1B,GAAalvG,QAAqCA,EAAQ,IACvE6wG,EAAY3B,GAAanC,QAAmCA,EAAO,IACnEsC,EAAUzB,EACV,IAAI+C,IAAS99D,IAAS+9D,MAAeD,IAAS99D,IAASg+D,MACvD,IAAIF,IAASC,MAAeD,IAAS99D,IAASg+D,MACpD,OAAOpF,EDhIe,CAAC4D,GAAYA,EAAU,OAASA,EAAU,KCgIhDyB,CAAWzB,GAAWA,GCtInC,SAAS0B,GAAiB35G,EAAQ2F,GACrC,MAAM+V,EAAQ1b,EAAOgD,MAAM,EAAG2C,GAAOvJ,MAAM,MAC3C,MAAO,CAAEwJ,KAAM8V,EAAM1e,OAAQ6I,IAAK6V,EAAMA,EAAM1e,OAAS,GAAGA,OAAS,EACvE,CCJe,MAAM48G,GACjB,WAAAn8G,CAAYwD,EAAO44G,GACfn8G,KAAKuD,MAAQA,EACbvD,KAAKm8G,YAAcA,EACnBn8G,KAAK2b,MAAQ,GACb3b,KAAKiI,MAAQ,CACjB,CAQA,QAAAm0G,CAASzgG,GACL3b,KAAK2b,MAAQA,EACb3b,KAAKiI,MAAQ,EACb,MAAMupC,EAAS,GACf,IAAIvoC,EAEJ,KAAOjJ,KAAKiI,MAAQjI,KAAK2b,MAAMrc,QAAQ,CAEnC,MAAM+8G,EAAsBr8G,KAAKs8G,gBACjC,GAAIt8G,KAAKiI,MAAQjI,KAAK2b,MAAMrc,OAAQ,CAGhC,GADA2J,EAAQjJ,KAAKu8G,gBACRtzG,EACD,MAAMjJ,KAAKw8G,mBAEfhrE,EAAO5tC,KAAKhD,OAAO2rB,OAAO3rB,OAAO2rB,OAAO,CAAC,EAAGtjB,GAAQ,CAAEozG,wBAC1D,CACJ,CACA,OAAO7qE,CACX,CACA,gBAAAgrE,GACI,MAAMlzG,EAAOtJ,KAAK2b,MAAMrW,MAAMtF,KAAKiI,MAAOjI,KAAKiI,MAAQ,KACjD,KAAEC,EAAI,IAAEC,GAAQ8zG,GAAiBj8G,KAAK2b,MAAO3b,KAAKiI,OACxD,OAAO,IAAI9F,MAAM,4BAA4BmH,cAAiBpB,YAAeC,OAASnI,KAAKy8G,gBAC/F,CACA,WAAAA,GACI,MAAyB,QAArBz8G,KAAKm8G,YACE,2JAIA,sBAAsBn8G,KAAKm8G,eAE1C,CACA,aAAAG,GACIjC,GAAiBhxG,UAAYrJ,KAAKiI,MAClC,MAAM8W,EAAUs7F,GAAiBz4G,KAAK5B,KAAK2b,OAC3C,GAAIoD,EAGA,OADA/e,KAAKiI,OAAS8W,EAAQ,GAAGzf,OAClByf,EAAQ,EAGvB,CACA,YAAAw9F,GACI,IAAK,MAAM54G,KAAQ3D,KAAKuD,MAAO,CAC3B,MAAM0F,EAAQjJ,KAAKyD,MAAME,GACzB,GAAIsF,EACA,OAAOA,CAEf,CAEJ,CAEA,KAAAxF,CAAME,GACFA,EAAKszG,MAAM5tG,UAAYrJ,KAAKiI,MAC5B,MAAM8W,EAAUpb,EAAKszG,MAAMr1G,KAAK5B,KAAK2b,OACrC,GAAIoD,EAAS,CACT,MAAM29F,EAAc39F,EAAQ,GACtB9V,EAAQ,CACV/E,KAAMP,EAAKO,KACXwH,IAAKgxG,EACLpzG,KAAM3F,EAAK2F,KAAO3F,EAAK2F,KAAKozG,GAAeA,EAC3Cx2G,MAAOlG,KAAKiI,OAOhB,OALItE,EAAKvD,MACL6I,EAAM7I,IAAMuD,EAAKvD,IAAIs8G,IAGzB18G,KAAKiI,OAASy0G,EAAYp9G,OACnB2J,CACX,CAEJ,ECzFJ,MAAM0zG,GAAQ,SACRC,GAAW,WACX,GAAM,SAKL,MAAMC,GACT,WAAA98G,GACIC,KAAKqJ,UAAY,CACrB,CACA,IAAAzH,CAAK+Z,GACD,IACIlY,EADAL,EAAS,GAET05G,EAAY,EAChB,KAAKr5G,EAAQzD,KAAK+8G,aAAaJ,GAAOhhG,IAKlC,OAAO,KAEX,IANIvY,GAAUK,EACVq5G,IAKGA,EAAY,GACf,GAAKr5G,EAAQzD,KAAK+8G,aAAaJ,GAAOhhG,GAClCvY,GAAUK,EACVq5G,SAEC,GAAKr5G,EAAQzD,KAAK+8G,aAAa,GAAKphG,GACrCvY,GAAUK,EACVq5G,QAEC,MAAKr5G,EAAQzD,KAAK+8G,aAAaH,GAAUjhG,IAI1C,OAAO,KAHPvY,GAAUK,CAId,CAEJ,MAAO,CAACL,EACZ,CACA,YAAA25G,CAAa9F,EAAOt7F,GAChBs7F,EAAM5tG,UAAYrJ,KAAKqJ,UACvB,MAAM0V,EAAUk4F,EAAMr1G,KAAK+Z,GAI3B,OAHIoD,IACA/e,KAAKqJ,WAAa0V,EAAQ,GAAGzf,QAE1Byf,EAAUA,EAAQ,GAAK,IAClC,ECzCW,MAAMi+F,GACjB,WAAAj9G,CAAYk9G,EAAKd,GACbn8G,KAAKi9G,IAAMA,EACXj9G,KAAKm8G,YAAcA,EACnBn8G,KAAKk9G,kBAAoBl9G,KAAKm9G,uBAAuBF,GACrDj9G,KAAKo9G,iBAAmBp9G,KAAKq9G,sBAAsBJ,EACvD,CACA,QAAAb,CAASzgG,EAAO2hG,GACZ,MAAM/5G,EAAQ,IACPvD,KAAKk9G,qBACLl9G,KAAKu9G,gBAAgBv9G,KAAKi9G,IAAKK,MAC/Bt9G,KAAKo9G,kBAEN5rE,EAAS,IAAI0qE,GAAgB34G,EAAOvD,KAAKm8G,aAAaC,SAASzgG,GACrE,OAAO3b,KAAKi9G,IAAI7F,YAAcp3G,KAAKi9G,IAAI7F,YAAY5lE,GAAUA,CACjE,CAGA,sBAAA2rE,CAAuBF,GACnB,IAAIjxF,EAAIyE,EAAImF,EJnBQshF,EIoBpB,OAAOl3G,KAAKw9G,WAAW,CACnB,CACIt5G,KAAMqvG,GAAUkK,gBAChBxG,MAAO,uFAEX,CACI/yG,KAAMqvG,GAAUmK,cAChBzG,MAAOgG,EAAI7E,oBAAsB,IAAIyE,GAAkB,qBAE3D,CACI34G,KAAMqvG,GAAUoK,aAChB1G,OJ/BYC,EI+B6C,QAA/BlrF,EAAKixF,EAAI/F,wBAAqC,IAAPlrF,EAAgBA,EAAK,CAAC,MJ/BtD,IAAIhrB,OAAO,MAAMk2G,EAAiB94G,IAAIg8G,IAAc57G,KAAK,2BAA4B,QIiC1H,CACI0F,KAAMqvG,GAAUqK,kBAChB3G,MAAO,GAAagG,EAAIxG,aAE5B,CACIvyG,KAAMqvG,GAAUsK,OAChB5G,MAAOgG,EAAI1E,qBACL,8IACA,uIAIV,CACIr0G,KAAMqvG,GAAUiB,wBAChByC,MAAO,GAAyD,QAArCxmF,EAAKwsF,EAAIpH,8BAA2C,IAAPplF,EAAgBA,EAAK,GAAIwsF,EAAIvG,YACrGptG,KAAMw0G,IAEV,CACI55G,KAAMqvG,GAAUkB,0BAChBwC,MAAO,GAA0D,QAAtCrhF,EAAKqnF,EAAInH,+BAA4C,IAAPlgF,EAAgBA,EAAK,GAAIqnF,EAAIvG,YACtGptG,KAAMw0G,IAEV,CACI55G,KAAMqvG,GAAUuB,KAChBmC,MAAO,YACP3tG,KAAMw0G,IAEV,CACI55G,KAAMqvG,GAAUwB,IAChBkC,MAAO,WACP3tG,KAAMw0G,IAEV,CACI55G,KAAMqvG,GAAU4B,QAChB8B,MAAO,eACP3tG,KAAMw0G,IAEV,CACI55G,KAAMqvG,GAAU7mD,MAChBuqD,MAAOgG,EAAIzH,gBAAgBp+D,SAAS,SAAW,kBAAe/2C,EAC9DiJ,KAAMw0G,IAEV,CACI55G,KAAMqvG,GAAUW,gBAChB+C,MAAO,GAAmBgG,EAAIzH,gBAAiByH,EAAIvG,YACnDptG,KAAMw0G,IAEV,CACI55G,KAAMqvG,GAAUmB,gBAChBuC,MAAO,GAAmBgG,EAAI1H,eAAgB0H,EAAIvG,YAClDptG,KAAMw0G,IAEV,CACI55G,KAAMqvG,GAAUoB,uBAChBsC,MAAO,GAAmBgG,EAAItH,sBAAuBsH,EAAIvG,YACzDptG,KAAMw0G,IAEV,CACI55G,KAAMqvG,GAAUyB,KAChBiC,MAAO,YACP3tG,KAAMw0G,IAEV,CACI55G,KAAMqvG,GAAU0B,KAChBgC,MAAO,YACP3tG,KAAMw0G,IAEV,CACI55G,KAAMqvG,GAAU2B,KAChB+B,MAAO,YACP3tG,KAAMw0G,IAEV,CACI55G,KAAMqvG,GAAUqB,cAChBqC,MAAO,GAAmBgG,EAAIrH,cAAeqH,EAAIvG,YACjDptG,KAAMw0G,IAEV,CACI55G,KAAMqvG,GAAU6B,IAChB6B,MAAO,WACP3tG,KAAMw0G,IAEV,CACI55G,KAAMqvG,GAAU8B,GAChB4B,MAAO,UACP3tG,KAAMw0G,IAEV,CACI55G,KAAMqvG,GAAU+B,IAChB2B,MAAOgG,EAAI3E,YAAc,gBAAaj4G,EACtCiJ,KAAMw0G,OAENb,EAAI5D,gBACF,CACE,CACIn1G,KAAMqvG,GAAUwK,SAChB9G,MAAO,2BAGb,GACN,CACI/yG,KAAMqvG,GAAUgB,uBAChB0C,MAAO,GAAmBgG,EAAI9G,sBAAuB8G,EAAIvG,YACzDptG,KAAMw0G,IAEV,CACI55G,KAAMqvG,GAAUO,mBAChBmD,MAAO,GAAmBgG,EAAI/G,kBAAmB+G,EAAIvG,YACrDptG,KAAMw0G,IAEV,CACI55G,KAAMqvG,GAAUS,iBAChBiD,MAAO,GAAmBgG,EAAIhH,iBAAkBgH,EAAIvG,YACpDptG,KAAMw0G,KAGlB,CAGA,qBAAAT,CAAsBJ,GAClB,IAAIjxF,EAAIyE,EJ9CSutF,EI+CjB,OAAOh+G,KAAKw9G,WAAW,CACnB,CACIt5G,KAAMqvG,GAAU0K,SAChBhH,MAAOgG,EAAIjG,eJlDFgH,EIkDiCf,EAAIjG,cJlDxBsD,GAAe0D,EAChD5/G,IAAI8/G,GAAY,UAAWA,EAAUA,EAAQjH,MAAQsE,GAAmB2C,IACxE1/G,KAAK,YIgDqE6B,GAEnE,CAAE6D,KAAMqvG,GAAU4K,OAAQlH,MAAO,GAAagG,EAAI5G,cAClD,CACInyG,KAAMqvG,GAAUoE,WAChBV,MAAO,GAAiBgG,EAAIvG,aAEhC,CAAExyG,KAAMqvG,GAAU6K,UAAWnH,MAAO,SACpC,CAAE/yG,KAAMqvG,GAAUwE,MAAOd,MAAO,QAChC,CACI/yG,KAAMqvG,GAAUiG,WAChBvC,MAAO,GAAkB,OAAQgG,EAAI7G,cAEzC,CACIlyG,KAAMqvG,GAAU8K,YAChBpH,MAAO,GAAkB,QAASgG,EAAI7G,cAE1C,CACIlyG,KAAMqvG,GAAUwK,SAChB9G,MAAO,GAAe,CAElB,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,QAC6B,QAAxBjrF,EAAKixF,EAAI9F,iBAA8B,IAAPnrF,EAAgBA,EAAK,MAGlE,CAAE9nB,KAAMqvG,GAAU+K,SAAUrH,MAAO,SACnC,CACI/yG,KAAMqvG,GAAUgL,yBAChBtH,MAAO,GAAe,CAAC,OAAgD,QAAtCxmF,EAAKwsF,EAAIrD,+BAA4C,IAAPnpF,EAAgBA,EAAK,OAGhH,CAGA,eAAA8sF,CAAgBN,EAAKK,GACjB,IAAItxF,EAAIyE,EAAImF,EAAIC,EAAIC,EAGpB,MAAM8gF,EAAa,CACfE,OAAQwG,aAAiE,EAASA,EAAoBxG,SAAqC,QAAzB9qF,EAAKixF,EAAIrG,kBAA+B,IAAP5qF,OAAgB,EAASA,EAAG8qF,QAAU,GACzLC,QAASuG,aAAiE,EAASA,EAAoBvG,UAAsC,QAAzBtmF,EAAKwsF,EAAIrG,kBAA+B,IAAPnmF,OAAgB,EAASA,EAAGsmF,SAAW,GAC5LyB,UAAW8E,aAAiE,EAASA,EAAoB9E,YAAwC,QAAzB5iF,EAAKqnF,EAAIrG,kBAA+B,IAAPhhF,OAAgB,EAASA,EAAG4iF,WAAa,GAClM3B,WAAkI,kBAA9GyG,aAAiE,EAASA,EAAoBzG,YAC5GyG,EAAoBzG,WACM,QAAzBhhF,EAAKonF,EAAIrG,kBAA+B,IAAP/gF,OAAgB,EAASA,EAAGghF,WACpE34D,QAASo/D,aAAiE,EAASA,EAAoBp/D,UAAsC,QAAzBpoB,EAAKmnF,EAAIrG,kBAA+B,IAAP9gF,OAAgB,EAASA,EAAGooB,SAAW,IAEhM,OAAOl+C,KAAKw9G,WAAW,CACnB,CACIt5G,KAAMqvG,GAAUiL,gBAChBvH,MAAO,GAAgBL,EAAWE,MAAO,GAAwBmG,EAAI/E,YAAc+E,EAAIvG,aACvFt2G,IAAKgL,GAAKA,EAAE9F,MAAM,IAEtB,CACIpB,KAAMqvG,GAAUkL,iBAChBxH,MAAO,GAAgBL,EAAWG,OAAQ,GAAoBkG,EAAIxG,aAClEr2G,IAAKgL,GAAK,GAAIszG,WAAUC,eAAgBD,EAASh9G,QAAQ,IAAIV,OAAOo5G,GAAa,KAAOuE,GAAY,MAAOA,GAAjG,CAA6G,CACnHD,SAAUtzG,EAAE9F,MAAM,GAAI,GACtBq5G,UAAWvzG,EAAE9F,OAAO,MAG5B,CACIpB,KAAMqvG,GAAUqL,mBAChB3H,MAAO,GAAgBL,EAAW4B,SAAU,UAC5Cp4G,IAAKgL,GAAKA,EAAE9F,MAAM,IAEtB,CACIpB,KAAMqvG,GAAUsL,qBAChB5H,MAAOL,EAAWC,WAAa,YAASx2G,MAEzCu2G,EAAW14D,OAAO9/C,IAAK0gH,IACtB,IAAI9yF,EACJ,MAAO,CACH9nB,KAAMqvG,GAAUwL,iBAChB9H,MAAOqD,GAAewE,EAAY7H,OAClC72G,IAAgC,QAA1B4rB,EAAK8yF,EAAY1+G,WAAwB,IAAP4rB,EAAgBA,EAAM5gB,GAAKA,MAInF,CAEA,UAAAoyG,CAAWj6G,GACP,OAAOA,EAAMsxB,OAAQlxB,GAAS4gD,QAAQ5gD,EAAKszG,OAC/C,EAOJ,MAAM6G,GAAe1yG,GAAM8uG,GAAmB9uG,EAAEkV,eCrQ1C6pB,GAAQ,IAAIjqC,IAcZ8+G,GAAsBC,IAAmB,CAC3CC,UAAW,IAAIlC,GAAUiC,EAAejJ,iBAAkBiJ,EAAe54G,MACzE2kF,cAAem0B,GAA4BF,EAAej0B,iBAExDm0B,GAA+BjhH,IACjC,IAAI8tB,EACJ,MAAO,CACHysF,qBAAsBv6G,EAAQu6G,sBAAwB,GACtDX,eAAgBl3G,OAAO06B,YAAYp9B,EAAQ45G,eAAe15G,IAAIiI,GAAQ,CAACA,GAAM,KAC7EqvG,sBAAuB90G,OAAO06B,aAAsD,QAAxCtP,EAAK9tB,EAAQw3G,6BAA0C,IAAP1pF,EAAgBA,EAAK9tB,EAAQ45G,gBAAgB15G,IAAIiI,GAAQ,CAACA,GAAM,OCR7J,SAAS+4G,GAAenC,GAC3B,MAA2B,gBAApBA,EAAIoC,aAAqD,iBAApBpC,EAAIoC,WACpD,CCfe,MAAMC,GACjB,WAAAv/G,CAAY8Z,GACR7Z,KAAK6Z,OAASA,EACd7Z,KAAKiI,MAAQ,CACjB,CAIA,GAAA9H,EAAI,IAAEC,EAAG,KAAEkJ,IACP,OAAKtJ,KAAK6Z,OAGNzZ,EACOJ,KAAK6Z,OAAOzZ,GAEhBJ,KAAK6Z,OAAO7Z,KAAKiI,SALbqB,CAMf,CAIA,2BAAAi2G,GACI,OAAOv/G,KAAKiI,KAChB,CAIA,2BAAAu3G,CAA4Bn8G,GACxBrD,KAAKiI,MAAQ5E,CACjB,E,eCNJ,MAAMo8G,GAA6B,CAACx2G,EAAO5F,EAAGmuC,KAC1C,GAAI8iE,GAAWrrG,EAAM/E,MAAO,CACxB,MAAMmzG,EAAYqI,GAAoBluE,EAAQnuC,GAC9C,GAAIg0G,GAAaA,EAAUnzG,OAASqvG,GAAUgL,yBAC1C,OAAO39G,OAAO2rB,OAAO3rB,OAAO2rB,OAAO,CAAC,EAAGtjB,GAAQ,CAAE/E,KAAMqvG,GAAUoE,WAAYruG,KAAML,EAAMyC,MAE7F,MAAMktG,EAAY+G,GAAoBnuE,EAAQnuC,GAC9C,GAAIu1G,GAAaA,EAAU10G,OAASqvG,GAAUgL,yBAC1C,OAAO39G,OAAO2rB,OAAO3rB,OAAO2rB,OAAO,CAAC,EAAGtjB,GAAQ,CAAE/E,KAAMqvG,GAAUoE,WAAYruG,KAAML,EAAMyC,KAEjG,CACA,OAAOzC,GAEL22G,GAAkB,CAAC32G,EAAO5F,EAAGmuC,KAC/B,GAAIvoC,EAAM/E,OAASqvG,GAAUgB,uBAAwB,CACjD,MAAMqE,EAAY+G,GAAoBnuE,EAAQnuC,GAC9C,IAAKu1G,IAAciH,GAAYjH,GAC3B,OAAOh4G,OAAO2rB,OAAO3rB,OAAO2rB,OAAO,CAAC,EAAGtjB,GAAQ,CAAE/E,KAAMqvG,GAAUoE,WAAYruG,KAAML,EAAMyC,KAEjG,CACA,OAAOzC,GAEL62G,GAAkC,CAAC72G,EAAO5F,EAAGmuC,KAC/C,GAAIvoC,EAAM/E,OAASqvG,GAAUO,mBAAoB,CAC7C,MAAM8E,EAAY+G,GAAoBnuE,EAAQnuC,GAC9C,GAAIu1G,GAAaiH,GAAYjH,GACzB,OAAOh4G,OAAO2rB,OAAO3rB,OAAO2rB,OAAO,CAAC,EAAGtjB,GAAQ,CAAE/E,KAAMqvG,GAAUwM,kCAEzE,CACA,OAAO92G,GAEL+2G,GAAoB,CAAC/2G,EAAO5F,EAAGmuC,KACjC,GAAIvoC,EAAM/E,OAASqvG,GAAUoE,WAAY,CACrC,MAAMiB,EAAY+G,GAAoBnuE,EAAQnuC,GAC9C,GAAIu1G,GAAaqH,GAAcrH,GAC3B,OAAOh4G,OAAO2rB,OAAO3rB,OAAO2rB,OAAO,CAAC,EAAGtjB,GAAQ,CAAE/E,KAAMqvG,GAAU2M,kBAEzE,CACA,OAAOj3G,GAELk3G,GAAyB,CAACl3G,EAAO5F,EAAGmuC,KACtC,GAAIvoC,EAAM/E,OAASqvG,GAAUO,mBAAoB,CAC7C,MAAM8E,EAAY+G,GAAoBnuE,EAAQnuC,GAC9C,GAAIu1G,GAAaqH,GAAcrH,GAC3B,OAAOh4G,OAAO2rB,OAAO3rB,OAAO2rB,OAAO,CAAC,EAAGtjB,GAAQ,CAAE/E,KAAMqvG,GAAUsB,eAEzE,CACA,OAAO5rG,GAELy2G,GAAsB,CAACluE,EAAQvpC,IAAU03G,GAAoBnuE,EAAQvpC,GAAQ,GAC7E03G,GAAsB,CAACnuE,EAAQvpC,EAAOm/C,EAAM,KAC9C,IAAI/jD,EAAI,EACR,KAAOmuC,EAAOvpC,EAAQ5E,EAAI+jD,IAAQg5D,GAAU5uE,EAAOvpC,EAAQ5E,EAAI+jD,KAC3D/jD,IAEJ,OAAOmuC,EAAOvpC,EAAQ5E,EAAI+jD,IAExBy4D,GAAeryG,GAAMA,EAAEtJ,OAASqvG,GAAUiG,YAAyB,MAAXhsG,EAAElE,KAC1D22G,GAAiBzyG,GAAMA,EAAEtJ,OAASqvG,GAAUiG,YAAyB,MAAXhsG,EAAElE,KAC5D82G,GAAa5yG,GAAMA,EAAEtJ,OAASqvG,GAAUmK,eAAiBlwG,EAAEtJ,OAASqvG,GAAUoK,aClFrE,MAAM0C,GACjB,WAAAtgH,CAAYq8G,GACRp8G,KAAKo8G,SAAWA,EAChBp8G,KAAKiI,MAAQ,EACbjI,KAAKwxC,OAAS,GACdxxC,KAAK2b,MAAQ,EACjB,CACA,KAAA7T,CAAMisC,EAAOusE,GACTtgH,KAAK2b,MAAQo4B,EACb/zC,KAAKiI,MAAQ,EACbjI,KAAKwxC,OAASxxC,KAAKo8G,SAASroE,EAChC,CACA,IAAArzC,GACI,OAAOV,KAAKwxC,OAAOxxC,KAAKiI,QAC5B,CACA,IAAAO,GAAS,CACT,WAAAkB,CAAYT,GACR,MAAM,KAAEf,EAAI,IAAEC,GAAQ8zG,GAAiBj8G,KAAK2b,MAAO1S,EAAM/C,OACzD,MAAO,yBAAyB+C,EAAMK,gBAAgBpB,YAAeC,GACzE,CACA,GAAAwC,CAAItE,GACA,OAAOA,KAAQktG,EACnB,ECxBG,IAAIgN,GCIX,SAAS3lF,GAAG5T,GAAK,OAAOA,EAAE,EAAI,EDH9B,SAAWu5F,GACPA,EAAoB,UAAI,YACxBA,EAAiB,OAAI,SACrBA,EAAwB,cAAI,gBAC5BA,EAAwB,cAAI,gBAC5BA,EAAkC,wBAAI,0BACtCA,EAA0B,gBAAI,kBAC9BA,EAA0B,gBAAI,kBAC9BA,EAAsB,YAAI,cAC1BA,EAA4B,kBAAI,oBAChCA,EAA0B,gBAAI,kBAC9BA,EAAoB,UAAI,YACxBA,EAAoB,UAAI,YACxBA,EAAuB,aAAI,eAC3BA,EAA+B,qBAAI,uBACnCA,EAAkB,QAAI,UACtBA,EAAqB,WAAI,aACzBA,EAAkB,QAAI,UACtBA,EAAoB,UAAI,YACxBA,EAAoB,UAAI,YACxBA,EAAmB,SAAI,WACvBA,EAAgB,MAAI,QACpBA,EAAuB,aAAI,eAC3BA,EAAwB,cAAI,gBAC5BA,EAA0B,gBAAI,iBACjC,CAzBD,CAyBGA,GAAWA,KAAaA,GAAW,CAAC,ICfvC,MAAMz2G,GAAQ,IAAIu2G,GAAatsE,GAAS,IAMlCpe,GAAS,GAAG6qF,MAASA,EACrBC,GAAiBx3G,IAAU,CAC7B/E,KAAMq8G,GAAS74G,QACfF,UAAWyB,EAAM/E,KACjBoF,KAAML,EAAMK,KACZoC,IAAKzC,EAAMyC,MAETg1G,GAAkBz3G,IAAU,CAC9B/E,KAAMq8G,GAASI,UACfr3G,KAAML,EAAMK,KACZoC,IAAKzC,EAAMyC,MAETk1G,GAAc,CAACr1E,GAAQs1E,UAASC,gBAC9BD,aAAyC,EAASA,EAAQvhH,UAC1DisC,EAAO3qC,OAAO2rB,OAAO3rB,OAAO2rB,OAAO,CAAC,EAAGgf,GAAO,CAAEw1E,gBAAiBF,MAEjEC,aAA2C,EAASA,EAASxhH,UAC7DisC,EAAO3qC,OAAO2rB,OAAO3rB,OAAO2rB,OAAO,CAAC,EAAGgf,GAAO,CAAEy1E,iBAAkBF,KAE/Dv1E,GAEL01E,GAAqB,CAACC,GAASL,UAASC,eAC1C,GAAID,aAAyC,EAASA,EAAQvhH,OAAQ,CAClE,MAAO4L,KAAU+sG,GAAQiJ,EACzBA,EAAQ,CAACN,GAAY11G,EAAO,CAAE21G,eAAe5I,EACjD,CACA,GAAI6I,aAA2C,EAASA,EAASxhH,OAAQ,CACrE,MAAM6hH,EAAOD,EAAM57G,MAAM,GAAI,GACvB41B,EAAOgmF,EAAMA,EAAM5hH,OAAS,GAClC4hH,EAAQ,IAAIC,EAAMP,GAAY1lF,EAAM,CAAE4lF,aAC1C,CACA,OAAOI,GAML5mF,GAAU,CACZr0B,MAAO6D,GACPsyB,YAAa,CACT,CAAE,KAAQ,cAAe,QAAW,IACpC,CAAE,KAAQ,cAAe,QAAW,CAAC,cAAe,aAAc,YAAgBpV,GAAMA,EAAE,GAAGxjB,OAAO,CAACwjB,EAAE,MACvG,CAAE,KAAQ,OAAQ,QAAW,CAAC,eAAgB,YAAe,EAAEo6F,MACvD,MAAMlmF,EAAOkmF,EAAWA,EAAW9hH,OAAS,GAC5C,OAAI47B,IAASA,EAAK/iB,aAGP+iB,EAAKoY,SAASh0C,OAAS,EAAI8hH,EAAaA,EAAW97G,MAAM,GAAI,GAI7D87G,IAInB,CAAE,KAAQ,4BAA6B,QAAW,CAAEt3G,GAAMa,IAAI,aAAe,CAAEzG,KAAM,aAAgBk6G,YACrG,CAAE,KAAQ,4BAA6B,QAAW,CAAEt0G,GAAMa,IAAI,OAAS,CAAEzG,KAAM,OAAUsZ,MACzF,CAAE,KAAQ,YAAa,QAAW,CAAC,yBAA0B,6BAA8B,YAAe,EAAE81B,GAAW+tE,OAAgB,CAC/Hn9G,KAAMq8G,GAASpzF,UACfmmB,WACAn7B,aAAckpG,EAAUn9G,OAASqvG,GAAU6K,aAGnD,CAAE,KAAQ,gCAAiC,QAAW,IACtD,CAAE,KAAQ,gCAAiC,QAAW,CAAC,gCAAiC,iBAAkB,YAAgBp3F,GAAMA,EAAE,GAAGxjB,OAAO,CAACwjB,EAAE,MAC/I,CAAE,KAAQ,gCAAiC,QAAW,IACtD,CAAE,KAAQ,gCAAiC,QAAW,CAAC,gCAAiC,UAAW,YAAgBA,GAAMA,EAAE,GAAGxjB,OAAO,CAACwjB,EAAE,MACxI,CAAE,KAAQ,yBAA0B,QAAW,CAAC,gCAAiC,iCAAkC,YAAe,EAAE0K,EAAa4vF,KAAa,IAAI5vF,KAAgB4vF,IAElL,CAAE,KAAQ,yBAA0B,QAAW,CAAC,iBAChD,CAAE,KAAQ,yBAA0B,QAAW,CAAC,kBAChD,CAAE,KAAQ,yBAA0B,QAAW,CAAC,iBAChD,CAAE,KAAQ,yBAA0B,QAAW,CAAC,kBAChD,CAAE,KAAQ,SAAU,QAAW,CAAC,0BAA2B,YAAe3rF,IAC1E,CAAE,KAAQ,6CAA8C,QAAW,CAAC,kBACpE,CAAE,KAAQ,6CAA8C,QAAW,CAAC,6CAA8C,iBAAkB,YAAgB3O,GAAMA,EAAE,GAAGxjB,OAAO,CAACwjB,EAAE,MACzK,CAAE,KAAQ,sCAAuC,QAAW,CAAEld,GAAMa,IAAI,SAAW,CAAEzG,KAAM,SAAY6zG,MAAQ,+CAC/G,CAAE,KAAQ,sBAAuB,QAAW,CAAC,uCAAwC,YAAen9E,IACpG,CAAE,KAAQ,sBAAuB,QAAW,GAAI,YAAe,IAAM,MACrE,CAAE,KAAQ,eAAgB,QAAW,CAAE9wB,GAAMa,IAAI,SAAW,CAAEzG,KAAM,SAAYwoD,MAAQ,IAAK,oBAAqB,uBAAwB,YAAe,EAAE60D,EAAY54F,EAAG64F,EAAMC,MACxK,GAAIA,EAAU,CACV,MAAOx4F,EAAOy4F,GAAQD,EACtB,MAAO,CACHv9G,KAAMq8G,GAASoB,aACfC,QAAShB,GAAYH,GAAcc,GAAa,CAAET,SAAUn4F,IAC5Dpf,OAAQi4G,EACRK,MAAOH,EAEf,CAEI,MAAO,CACHx9G,KAAMq8G,GAASoB,aACfC,QAAShB,GAAYH,GAAcc,GAAa,CAAET,SAAUn4F,IAC5Dk5F,MAAOL,KAKvB,CAAE,KAAQ,uCAAwC,QAAW,IAC7D,CAAE,KAAQ,uCAAwC,QAAW,CAAC,uCAAwC,iBAAkB,YAAgBx6F,GAAMA,EAAE,GAAGxjB,OAAO,CAACwjB,EAAE,MAC7J,CAAE,KAAQ,gCAAiC,QAAW,CAAC,uBAAwB,yCAC/E,CAAE,KAAQ,uCAAwC,QAAW,IAC7D,CAAE,KAAQ,uCAAwC,QAAW,CAAC,uCAAwC,iBAAkB,YAAgBA,GAAMA,EAAE,GAAGxjB,OAAO,CAACwjB,EAAE,MAC7J,CAAE,KAAQ,gCAAiC,QAAW,CAAC,6BAA8B,yCACrF,CAAE,KAAQ,gBAAiB,QAAW,CAAEld,GAAMa,IAAI,mBAAqB,CAAEzG,KAAM,mBAAsBwwG,gBAAkB,iCAAkC,YAAe,EAAEoN,GAAYnuE,EAAKjiB,OAAkB,CACrMxtB,KAAMq8G,GAASwB,OACfC,OAAQvB,GAAcqB,GACtBxuE,SAAU,CAACK,KAAQjiB,MAG3B,CAAE,KAAQ,gBAAiB,QAAW,CAAE5nB,GAAMa,IAAI,mBAAqB,CAAEzG,KAAM,mBAAsBwwG,iBAAmB,YAAe,EAAEoN,MAAe,CAChJ59G,KAAMq8G,GAASwB,OACfC,OAAQvB,GAAcqB,GACtBxuE,SAAU,MAGlB,CAAE,KAAQ,uBAAwB,QAAW,CAAExpC,GAAMa,IAAI,YAAc,CAAEzG,KAAM,YAAeo6G,UAAY,YAAe,KAAM,CAAGp6G,KAAMq8G,GAAS0B,wBAEjJ,CAAE,KAAQ,sBAAuB,QAAW,IAC5C,CAAE,KAAQ,sBAAuB,QAAW,CAAC,sBAAuB,iBAAkB,YAAgBj7F,GAAMA,EAAE,GAAGxjB,OAAO,CAACwjB,EAAE,MAC3H,CAAE,KAAQ,eAAgB,QAAW,CAAEld,GAAMa,IAAI,mBAAqB,CAAEzG,KAAM,mBAAsBgwG,gBAAkB,uBAAwB,YAAe,EAAE4N,EAAWxuE,MAAc,CAChLpvC,KAAMq8G,GAASwB,OACfC,OAAQvB,GAAcqB,GACtBxuE,cAGR,CAAE,KAAQ,uBAAwB,QAAW,IAC7C,CAAE,KAAQ,uBAAwB,QAAW,CAAC,uBAAwB,iBAAkB,YAAgBtsB,GAAMA,EAAE,GAAGxjB,OAAO,CAACwjB,EAAE,MAC7H,CAAE,KAAQ,gBAAiB,QAAW,CAAEld,GAAMa,IAAI,0BAA4B,CAAEzG,KAAM,0BAA6BywG,uBAAyB,wBAAyB,YAAe,EAAEmN,EAAWxuE,MAAc,CACvMpvC,KAAMq8G,GAAS2B,cACfF,OAAQvB,GAAcqB,GACtBxuE,cAGR,CAAE,KAAQ,2BAA4B,QAAW,CAAC,8BAClD,CAAE,KAAQ,2BAA4B,QAAW,CAAC,2BAA4B,6BAA8B,YAAgBtsB,GAAMA,EAAE,GAAGxjB,OAAO,CAACwjB,EAAE,MACjJ,CAAE,KAAQ,oBAAqB,QAAW,CAAC,4BAA6B,YAAe4T,IACvF,CAAE,KAAQ,0BAA2B,QAAW,IAChD,CAAE,KAAQ,0BAA2B,QAAW,CAAC,0BAA2B,6BAA8B,YAAgB5T,GAAMA,EAAE,GAAGxjB,OAAO,CAACwjB,EAAE,MAC/I,CAAE,KAAQ,mBAAoB,QAAW,CAAC,aAAc,2BAA4B,YAAe,EAAEqJ,EAAM8xF,KAAW,CAAC9xF,KAAS8xF,IAEhI,CAAE,KAAQ,kCAAmC,QAAW,IACxD,CAAE,KAAQ,kCAAmC,QAAW,CAAC,kCAAmC,qCAAsC,YAAgBn7F,GAAMA,EAAE,GAAGxjB,OAAO,CAACwjB,EAAE,MACvK,CAAE,KAAQ,2BAA4B,QAAW,CAAC,qBAAsB,mCAAoC,YAAe,EAAEqJ,EAAM8xF,KAAW,CAAC9xF,KAAS8xF,IAExJ,CAAE,KAAQ,4BAA6B,QAAW,CAAC,aAAc,KAAM,YAAe,EAAE9xF,EAAM1H,KAAOi4F,GAAYvwF,EAAM,CAAEywF,SAAUn4F,KAEnI,CAAE,KAAQ,4BAA6B,QAAW,CAAC,IAAK,cAAe,YAAe,EAAEA,EAAG0H,KAAUuwF,GAAYvwF,EAAM,CAAEwwF,QAASl4F,KAElI,CAAE,KAAQ,oCAAqC,QAAW,CAAC,IAAK,sBAAuB,YAAe,EAAEA,EAAG0H,KAAUuwF,GAAYvwF,EAAM,CAAEwwF,QAASl4F,KAElJ,CAAE,KAAQ,gCAAiC,QAAW,CAAC,+BACvD,CAAE,KAAQ,gCAAiC,QAAW,CAAC,aACvD,CAAE,KAAQ,gBAAiB,QAAW,CAAC,iCAAkC,YAAegN,IACxF,CAAE,KAAQ,6CAA8C,QAAW,CAAC,oCACpE,CAAE,KAAQ,6CAA8C,QAAW,CAAC,mBACpE,CAAE,KAAQ,6CAA8C,QAAW,CAAC,UACpE,CAAE,KAAQ,6CAA8C,QAAW,CAAC,YACpE,CAAE,KAAQ,6CAA8C,QAAW,CAAC,kBACpE,CAAE,KAAQ,6BAA8B,QAAW,CAAC,8CAA+C,YAAeA,IAClH,CAAE,KAAQ,6BAA8B,QAAW,CAAC,uBACpD,CAAE,KAAQ,6BAA8B,QAAW,CAAC,mBACpD,CAAE,KAAQ,aAAc,QAAW,CAAC,8BAA+B,YAAeA,IAClF,CAAE,KAAQ,qCAAsC,QAAW,CAAC,oCAC5D,CAAE,KAAQ,qCAAsC,QAAW,CAAC,aAC5D,CAAE,KAAQ,qBAAsB,QAAW,CAAC,sCAAuC,YAAeA,IAClG,CAAE,KAAQ,kDAAmD,QAAW,CAAC,sBACzE,CAAE,KAAQ,kDAAmD,QAAW,CAAC,sBACzE,CAAE,KAAQ,kDAAmD,QAAW,CAAC,oBACzE,CAAE,KAAQ,kCAAmC,QAAW,CAAC,mDAAoD,YAAeA,IAC5H,CAAE,KAAQ,oCAAqC,QAAW,CAAC,oBAC3D,CAAE,KAAQ,oCAAqC,QAAW,CAAC,kBAC3D,CAAE,KAAQ,oCAAqC,QAAW,CAAC,oBAC3D,CAAE,KAAQ,oCAAqC,QAAW,CAAC,gBAC3D,CAAE,KAAQ,oCAAqC,QAAW,CAAC,iBAC3D,CAAE,KAAQ,oCAAqC,QAAW,CAAC,oBAC3D,CAAE,KAAQ,oCAAqC,QAAW,CAAC,aAC3D,CAAE,KAAQ,oCAAqC,QAAW,CAAC,eAC3D,CAAE,KAAQ,oCAAqC,QAAW,CAAC,cAC3D,CAAE,KAAQ,oCAAqC,QAAW,CAAC,YAC3D,CAAE,KAAQ,oCAAqC,QAAW,CAAC,cAC3D,CAAE,KAAQ,oCAAqC,QAAW,CAAC,YAC3D,CAAE,KAAQ,oBAAqB,QAAW,CAAC,qCAAsC,YAAeA,IAChG,CAAE,KAAQ,kBAAmB,QAAW,CAAE7rB,GAAMa,IAAI,oBAAsB,CAAEzG,KAAM,oBAAuBg8G,iBAAmB,IAAK,mBAAoB,YAAe,EAAEkC,EAAYz5F,EAAG05F,MAAc,CAC3Ln+G,KAAMq8G,GAAS+B,gBACfr+G,MAAO28G,GAAY,CAAE18G,KAAMq8G,GAAS3xG,WAAYmoG,QAAQ,EAAOztG,KAAM84G,EAAW94G,MAAQ,CAAEw3G,SAAUn4F,IACpG+xF,YAAa2H,KAGrB,CAAE,KAAQ,kBAAmB,QAAW,CAAEv4G,GAAMa,IAAI,iBAAmB,CAAEzG,KAAM,iBAAoB2wG,cAAgB,IAAK,mBAAoB,YAAe,EAAEuN,EAAYz5F,EAAG05F,MAAc,CAClLn+G,KAAMq8G,GAAS+B,gBACfr+G,MAAO28G,GAAYH,GAAc2B,GAAa,CAAEtB,SAAUn4F,IAC1D+xF,YAAa2H,KAGrB,CAAE,KAAQ,gBAAiB,QAAW,CAAEv4G,GAAMa,IAAI,0BAA4B,CAAEzG,KAAM,0BAA6BqwG,uBAAyB,IAAK,eAAgB,YAAe,EAAEuN,EAAWn5F,EAAGgyF,MAAY,CACpMz2G,KAAMq8G,GAASgC,cACfP,OAAQpB,GAAYH,GAAcqB,GAAY,CAAEhB,SAAUn4F,IAC1D+xF,YAAaC,KAGrB,CAAE,KAAQ,cAAe,QAAW,CAAC,CAAE,QAAW,KAAO,yBAA0B,CAAE,QAAW,MAAQ,YAAe,EAAE6H,EAAMlvE,EAAU+oC,MAAW,CAC5In4E,KAAMq8G,GAAS7F,YACfpnE,SAAUA,EACVmvE,UAAW,IACXC,WAAY,OAGpB,CAAE,KAAQ,sBAAuB,QAAW,IAC5C,CAAE,KAAQ,sBAAuB,QAAW,CAAC,sBAAuB,iBAAkB,YAAgB17F,GAAMA,EAAE,GAAGxjB,OAAO,CAACwjB,EAAE,MAC3H,CAAE,KAAQ,eAAgB,QAAW,CAAC,CAAE,QAAW,KAAO,sBAAuB,CAAE,QAAW,MAAQ,YAAe,EAAEw7F,EAAMlvE,EAAU+oC,MAAW,CAC1In4E,KAAMq8G,GAAS7F,YACfpnE,SAAUA,EACVmvE,UAAW,IACXC,WAAY,OAGpB,CAAE,KAAQ,yBAA0B,QAAW,IAC/C,CAAE,KAAQ,yBAA0B,QAAW,CAAC,yBAA0B,iBAAkB,YAAgB17F,GAAMA,EAAE,GAAGxjB,OAAO,CAACwjB,EAAE,MACjI,CAAE,KAAQ,kBAAmB,QAAW,CAAC,CAAE,QAAW,KAAO,yBAA0B,CAAE,QAAW,MAAQ,YAAe,EAAEw7F,EAAMlvE,EAAU+oC,MAAW,CAChJn4E,KAAMq8G,GAAS7F,YACfpnE,SAAUA,EACVmvE,UAAW,IACXC,WAAY,OAGpB,CAAE,KAAQ,kCAAmC,QAAW,CAAC,eACzD,CAAE,KAAQ,kCAAmC,QAAW,CAAC,oBACzD,CAAE,KAAQ,kCAAmC,QAAW,CAAC,yBACzD,CAAE,KAAQ,kCAAmC,QAAW,CAAC,cACzD,CAAE,KAAQ,kBAAmB,QAAW,CAAC,oBAAqB,IAAM54G,GAAMa,IAAI,4BAA8B,CAAEzG,KAAM,4BAA+Bq6G,yBAA2B,IAAK,mCAAoC,YAKnN,EAAEr7G,EAAQy/G,EAAIj5F,EAAKk5F,GAAKn7F,OACb,CACHvjB,KAAMq8G,GAASsC,gBACf3/G,OAAQ09G,GAAY19G,EAAQ,CAAE49G,SAAU6B,IACxCn2G,SAAUkd,EAAIpgB,KACdme,SAAUm5F,GAAYn5F,EAAU,CAAEo5F,QAAS+B,OAIvD,CAAE,KAAQ,oBAAqB,QAAW,CAAE94G,GAAMa,IAAI,WAAa,CAAEzG,KAAM,WAAcixG,QAAU,IAAK,2BAA4B,IAAMrrG,GAAMa,IAAI,OAAS,CAAEzG,KAAM,OAAUkxG,IAAM,IAAK,sBAAuB,YAAe,EAAE0N,EAAcH,EAAII,EAAOH,EAAII,EAAUC,EAAIC,MAAW,CAChRh/G,KAAMq8G,GAAS4C,kBACfC,UAAW3C,GAAcqC,GACzBC,MAAO9B,GAAmB8B,EAAO,CAAElC,QAAS8B,EAAI7B,SAAU8B,IAC1DS,MAAO5C,GAAcuC,GACrBE,MAAO,CAACtC,GAAYsC,EAAO,CAAErC,QAASoC,QAG9C,CAAE,KAAQ,yBAA0B,QAAW,CAAC,qBAAsB,YAAeroF,IACrF,CAAE,KAAQ,yBAA0B,QAAW,GAAI,YAAe,IAAM,MACxE,CAAE,KAAQ,yBAA0B,QAAW,IAC/C,CAAE,KAAQ,yBAA0B,QAAW,CAAC,yBAA0B,eAAgB,YAAgB5T,GAAMA,EAAE,GAAGxjB,OAAO,CAACwjB,EAAE,MAC/H,CAAE,KAAQ,kBAAmB,QAAW,CAAEld,GAAMa,IAAI,QAAU,CAAEzG,KAAM,QAAW4wG,KAAO,IAAK,yBAA0B,yBAA2BhrG,GAAMa,IAAI,OAAS,CAAEzG,KAAM,OAAU6wG,KAAO,YAAe,EAAEuO,EAAW36F,EAAG0H,EAAMixF,EAASiC,MAAc,CAClPr/G,KAAMq8G,GAASiD,gBACfC,OAAQ7C,GAAYH,GAAc6C,GAAY,CAAExC,SAAUn4F,IAC1D+6F,MAAOjD,GAAc8C,GACrBlzF,KAAMA,GAAQ,GACdixF,aAGR,CAAE,KAAQ,cAAe,QAAW,CAAEx3G,GAAMa,IAAI,QAAU,CAAEzG,KAAM,QAAW8wG,KAAO,IAAK,oBAAsBlrG,GAAMa,IAAI,QAAU,CAAEzG,KAAM,QAAWgxG,KAAO,IAAK,qBAAsB,YAAe,EAAEyO,EAAWhB,EAAIiB,EAAMC,EAAWjB,EAAIvyF,MAAU,CAC/OnsB,KAAMq8G,GAASuD,UACfC,OAAQnD,GAAYH,GAAckD,GAAY,CAAE7C,SAAU6B,IAC1DqB,OAAQpD,GAAYH,GAAcoD,GAAY,CAAE/C,SAAU8B,IAC1D7nG,UAAW6oG,EACXxgH,OAAQitB,KAGhB,CAAE,KAAQ,cAAe,QAAW,CAAEvmB,GAAMa,IAAI,QAAU,CAAEzG,KAAM,QAAW+wG,KAAO,IAAK,qBAAsB,YAAe,EAAEgP,EAAWt7F,EAAG0H,MAAU,CAChJnsB,KAAMq8G,GAAS2D,UACfC,OAAQvD,GAAYH,GAAcwD,GAAY,CAAEnD,SAAUn4F,IAC1DvlB,OAAQitB,KAGhB,CAAE,KAAQ,wBAAyB,QAAW,CAAEvmB,GAAMa,IAAI,SAAW,CAAEzG,KAAM,SAAY6zG,QACzF,CAAE,KAAQ,QAAS,QAAW,CAAC,yBAA0B,YAAe,GAAG9uG,OAAY,CAAG/E,KAAMq8G,GAASt3F,SACzG,CAAE,KAAQ,2BAA4B,QAAW,CAAEnf,GAAMa,IAAI,YAAc,CAAEzG,KAAM,YAAeo6G,WAClG,CAAE,KAAQ,WAAY,QAAW,CAAC,4BAA6B,YAAe,GAAGr1G,OAAY,CAAG/E,KAAMq8G,GAAS/zG,SAAUlD,KAAML,EAAMK,QACrI,CAAE,KAAQ,2BAA4B,QAAW,CAAEQ,GAAMa,IAAI,YAAc,CAAEzG,KAAM,YAAe65G,WAClG,CAAE,KAAQ,WAAY,QAAW,CAAC,4BAA6B,YAAe,GAAG90G,OAAY,CAAG/E,KAAMq8G,GAAS/zG,SAAUlD,KAAML,EAAMK,QACrI,CAAE,KAAQ,6BAA8B,QAAW,CAAEQ,GAAMa,IAAI,cAAgB,CAAEzG,KAAM,cAAiByzG,aACxG,CAAE,KAAQ,6BAA8B,QAAW,CAAE7tG,GAAMa,IAAI,qBAAuB,CAAEzG,KAAM,qBAAwB05G,oBACtH,CAAE,KAAQ,6BAA8B,QAAW,CAAE9zG,GAAMa,IAAI,YAAc,CAAEzG,KAAM,YAAe+5G,WACpG,CAAE,KAAQ,aAAc,QAAW,CAAC,8BAA+B,YAAe,GAAGh1G,OAAY,CAAG/E,KAAMq8G,GAAS3xG,WAAYmoG,OAAuB,eAAf9tG,EAAM/E,KAAuBoF,KAAML,EAAMK,QAChL,CAAE,KAAQ,4BAA6B,QAAW,CAAEQ,GAAMa,IAAI,mBAAqB,CAAEzG,KAAM,mBAAsBs6G,kBACjH,CAAE,KAAQ,4BAA6B,QAAW,CAAE10G,GAAMa,IAAI,oBAAsB,CAAEzG,KAAM,oBAAuBu6G,mBACnH,CAAE,KAAQ,4BAA6B,QAAW,CAAE30G,GAAMa,IAAI,sBAAwB,CAAEzG,KAAM,sBAAyB06G,qBACvH,CAAE,KAAQ,4BAA6B,QAAW,CAAE90G,GAAMa,IAAI,wBAA0B,CAAEzG,KAAM,wBAA2B26G,uBAC3H,CAAE,KAAQ,4BAA6B,QAAW,CAAE/0G,GAAMa,IAAI,oBAAsB,CAAEzG,KAAM,oBAAuB66G,mBACnH,CAAE,KAAQ,YAAa,QAAW,CAAC,6BAA8B,YAAe,GAAG91G,OAAY,CAAG/E,KAAMq8G,GAASnsF,UAAWh0B,IAAK6I,EAAM7I,IAAKkJ,KAAML,EAAMK,QACxJ,CAAE,KAAQ,0BAA2B,QAAW,CAAEQ,GAAMa,IAAI,UAAY,CAAEzG,KAAM,UAAa25G,SAC7F,CAAE,KAAQ,0BAA2B,QAAW,CAAE/zG,GAAMa,IAAI,UAAY,CAAEzG,KAAM,UAAai6G,SAC7F,CAAE,KAAQ,UAAW,QAAW,CAAC,2BAA4B,YAAe,GAAGl1G,OAAY,CAAG/E,KAAMq8G,GAAS50F,QAASriB,KAAML,EAAMK,QAClI,CAAE,KAAQ,0BAA2B,QAAW,CAAEQ,GAAMa,IAAI,oBAAsB,CAAEzG,KAAM,oBAAuB8vG,mBACjH,CAAE,KAAQ,0BAA2B,QAAW,CAAElqG,GAAMa,IAAI,2BAA6B,CAAEzG,KAAM,2BAA8BswG,0BAC/H,CAAE,KAAQ,0BAA2B,QAAW,CAAE1qG,GAAMa,IAAI,iBAAmB,CAAEzG,KAAM,iBAAoB0wG,gBAC3G,CAAE,KAAQ,UAAW,QAAW,CAAC,2BAA4B,YAAe,GAAG3rG,MAAYw3G,GAAcx3G,IAEzG,CAAE,KAAQ,4BAA6B,QAAW,CAAEa,GAAMa,IAAI,sBAAwB,CAAEzG,KAAM,sBAAyB4vG,qBACvH,CAAE,KAAQ,4BAA6B,QAAW,CAAEhqG,GAAMa,IAAI,6BAA+B,CAAEzG,KAAM,6BAAgCuwG,4BACrI,CAAE,KAAQ,YAAa,QAAW,CAAC,6BAA8B,YAAe,GAAGxrG,MAAYy3G,GAAez3G,IAE9G,CAAE,KAAQ,YAAa,QAAW,CAAEa,GAAMa,IAAI,oCAAsC,CAAEzG,KAAM,oCAAuC67G,iCAAmC,IAAK,eAAgB,YAAe,EAAE+B,EAAWn5F,EAAGgyF,MAAY,CAC9Nz2G,KAAMq8G,GAAS6D,wBACfv0F,SAAU+wF,GAAYF,GAAeoB,GAAY,CAAEhB,SAAUn4F,IAC7D+xF,YAAaC,KAGrB,CAAE,KAAQ,iCAAkC,QAAW,CAAE7wG,GAAMa,IAAI,OAAS,CAAEzG,KAAM,OAAUkxG,MAC9F,CAAE,KAAQ,iCAAkC,QAAW,CAAEtrG,GAAMa,IAAI,MAAQ,CAAEzG,KAAM,MAASmxG,KAC5F,CAAE,KAAQ,iCAAkC,QAAW,CAAEvrG,GAAMa,IAAI,OAAS,CAAEzG,KAAM,OAAUoxG,MAC9F,CAAE,KAAQ,iBAAkB,QAAW,CAAC,kCAAmC,YAAe,GAAGrsG,MAAYw3G,GAAcx3G,IAEvH,CAAE,KAAQ,gCAAiC,QAAW,CAAEa,GAAMa,IAAI,QAAU,CAAEzG,KAAM,QAAW8wG,OAC/F,CAAE,KAAQ,gCAAiC,QAAW,CAAElrG,GAAMa,IAAI,QAAU,CAAEzG,KAAM,QAAWgxG,OAC/F,CAAE,KAAQ,gCAAiC,QAAW,CAAEprG,GAAMa,IAAI,QAAU,CAAEzG,KAAM,QAAW+wG,OAC/F,CAAE,KAAQ,gCAAiC,QAAW,CAAEnrG,GAAMa,IAAI,OAAS,CAAEzG,KAAM,OAAU6wG,MAC7F,CAAE,KAAQ,gBAAiB,QAAW,CAAC,iCAAkC,YAAe,GAAG9rG,MAAYw3G,GAAcx3G,IAErH,CAAE,KAAQ,WAAY,QAAW,IACjC,CAAE,KAAQ,WAAY,QAAW,CAAC,WAAY,WAAY,YAAgB+d,GAAMA,EAAE,GAAGxjB,OAAO,CAACwjB,EAAE,MAC/F,CAAE,KAAQ,IAAK,QAAW,CAAC,YAAa,YAAe,EAAEiE,KAAcA,GACvE,CAAE,KAAQ,UAAW,QAAW,CAAEnhB,GAAMa,IAAI,gBAAkB,CAAEzG,KAAM,gBAAmBy5G,cAAgB,YAAe,EAAE10G,MAAW,CAC7H/E,KAAMq8G,GAAS8D,aACf/6G,KAAML,EAAMK,KACZ+yG,oBAAqBpzG,EAAMozG,uBAGnC,CAAE,KAAQ,UAAW,QAAW,CAAEvyG,GAAMa,IAAI,iBAAmB,CAAEzG,KAAM,iBAAoBw5G,eAAiB,YAAe,EAAEz0G,MAAW,CAChI/E,KAAMq8G,GAAS+D,cACfh7G,KAAML,EAAMK,KACZ+yG,oBAAqBpzG,EAAMozG,uBAGnC,CAAE,KAAQ,UAAW,QAAW,CAAEvyG,GAAMa,IAAI,mBAAqB,CAAEzG,KAAM,mBAAsBu5G,iBAAmB,YAAe,EAAEx0G,MAAW,CACtI/E,KAAMq8G,GAASgE,gBACfj7G,KAAML,EAAMK,KACZ+yG,oBAAqBpzG,EAAMozG,wBAIvC70E,YAAa,QAEjB,OCvWQ7nB,OAAQ6kG,GAAa,QAAE1qF,IAAYgc,GCHpC,IAAI2uE,IACX,SAAWA,GACPA,EAAGA,EAAU,MAAI,GAAK,QACtBA,EAAGA,EAAa,SAAI,GAAK,WACzBA,EAAGA,EAAe,WAAI,GAAK,aAC3BA,EAAGA,EAAY,QAAI,GAAK,UACxBA,EAAGA,EAAsB,kBAAI,GAAK,oBAClCA,EAAGA,EAAW,OAAI,GAAK,SACvBA,EAAGA,EAAkB,cAAI,GAAK,eACjC,CARD,CAQGA,GAAKA,KAAOA,GAAK,CAAC,IAQN,MAAMC,GACjB,WAAA3kH,CAAY4kH,GACR3kH,KAAK2kH,YAAcA,EACnB3kH,KAAK2yG,MAAQ,EACjB,CAIA,GAAAx2E,IAAOw2E,GACH,IAAK,MAAMlrG,KAAQkrG,EACf,OAAQlrG,GACJ,KAAKg9G,GAAGG,MACJ5kH,KAAK2yG,MAAM/uG,KAAK6gH,GAAGG,OACnB,MACJ,KAAKH,GAAGI,SACJ7kH,KAAK8kH,2BACL,MACJ,KAAKL,GAAGM,WACJ/kH,KAAKglH,iBACL,MACJ,KAAKP,GAAGQ,QACJjlH,KAAK8kH,2BACL9kH,KAAKklH,WAAWT,GAAGQ,SACnB,MACJ,KAAKR,GAAGU,kBACJnlH,KAAK8kH,2BACL9kH,KAAKklH,WAAWT,GAAGU,mBACnB,MACJ,KAAKV,GAAGW,OACJplH,KAAKqlH,iBACL,MACJ,KAAKZ,GAAGa,cACJtlH,KAAK2yG,MAAM/uG,KAAK6gH,GAAGa,eACnB,MACJ,QACItlH,KAAK2yG,MAAM/uG,KAAK6D,GAGhC,CACA,wBAAAq9G,GACI,KAAOS,GAAuBrqF,GAAKl7B,KAAK2yG,SACpC3yG,KAAK2yG,MAAMnuG,KAEnB,CACA,cAAAwgH,GACI,KAAOQ,GAAsBtqF,GAAKl7B,KAAK2yG,SACnC3yG,KAAK2yG,MAAMnuG,KAEnB,CACA,UAAA0gH,CAAWO,GACP,GAAIzlH,KAAK2yG,MAAMrzG,OAAS,EACpB,OAAQ47B,GAAKl7B,KAAK2yG,QACd,KAAK8R,GAAGQ,QACJjlH,KAAK2yG,MAAMnuG,MACXxE,KAAK2yG,MAAM/uG,KAAK6hH,GAChB,MACJ,KAAKhB,GAAGU,kBAEJ,MACJ,QACInlH,KAAK2yG,MAAM/uG,KAAK6hH,GAIhC,CACA,cAAAJ,GACI,IAAK,IAAIhiH,EAAI,EAAGA,EAAIrD,KAAK2kH,YAAYe,WAAYriH,IAC7CrD,KAAK2yG,MAAM/uG,KAAK6gH,GAAGa,cAE3B,CAIA,QAAAxkH,GACI,OAAOd,KAAK2yG,MAAMv0G,IAAIqJ,GAAQzH,KAAK2lH,aAAal+G,IAAOjJ,KAAK,GAChE,CAIA,cAAAonH,GACI,OAAO5lH,KAAK2yG,KAChB,CACA,YAAAgT,CAAal+G,GACT,OAAQA,GACJ,KAAKg9G,GAAGG,MACJ,MAAO,IACX,KAAKH,GAAGQ,QACR,KAAKR,GAAGU,kBACJ,MAAO,KACX,KAAKV,GAAGa,cACJ,OAAOtlH,KAAK2kH,YAAYkB,kBAC5B,QACI,OAAOp+G,EAEnB,EAEJ,MAAM89G,GAA0B99G,GAASA,IAASg9G,GAAGG,OAASn9G,IAASg9G,GAAGa,cACpEE,GAAyB/9G,GAASA,IAASg9G,GAAGG,OAASn9G,IAASg9G,GAAGa,eAAiB79G,IAASg9G,GAAGQ,QC/GvF,SAASa,GAAgBC,EAAW1G,GAC/C,GAAoB,aAAhBA,EACA,OAAO0G,EAEX,IAAIppF,EAAO,GAWX,OAVIopF,EAAUzmH,QAAU,IAAMymH,EAAU3uE,SAAS,QAE5C2uE,KAAcppF,GAAQopF,EAAUrnH,MAAM,OAGvCqnH,EADgB,gBAAhB1G,EACY0G,EAAUC,OAAO,EAAG,KAGpBD,EAAUE,SAAS,EAAG,MAEnB,CAAC,MAAOtpF,GAAMn+B,KAAK,IAC1C,CAIO,SAAS0nH,GAAehiH,GAC3B,M3EkE6B,CAACA,GAASA,IAASqvG,GAAU6B,KAAOlxG,IAASqvG,GAAU8B,IAAMnxG,IAASqvG,GAAU+B,I2ElErG6Q,CAAkBjiH,IACtBA,IAASqvG,GAAUW,iBACnBhwG,IAASqvG,GAAUmB,iBACnBxwG,IAASqvG,GAAUoB,wBACnBzwG,IAASqvG,GAAUqB,eACnB1wG,IAASqvG,GAAU7mD,KAC3B,CC/BA,MAAM05D,GAAwB,YAUf,MAAMC,GAIjB,WAAAtmH,CAAYumH,GACRtmH,KAAKsmH,OAASA,EACdtmH,KAAKumH,YAAc,EACvB,CAIA,eAAAV,GACI,OAAO7lH,KAAKsmH,MAChB,CAIA,QAAAZ,GACI,OAAO1lH,KAAKumH,YAAYjnH,MAC5B,CAIA,gBAAAknH,GACIxmH,KAAKumH,YAAY3iH,KAAKwiH,GAC1B,CAIA,kBAAAK,GACIzmH,KAAKumH,YAAY3iH,KAvCO,cAwC5B,CAKA,gBAAA8iH,GACQ1mH,KAAKumH,YAAYjnH,OAAS,GAAK47B,GAAKl7B,KAAKumH,eAAiBH,IAC1DpmH,KAAKumH,YAAY/hH,KAEzB,CAMA,kBAAAmiH,GACI,KAAO3mH,KAAKumH,YAAYjnH,OAAS,GAAG,CAEhC,GADaU,KAAKumH,YAAY/hH,QACjB4hH,GACT,KAER,CACJ,ECtDW,MAAMQ,WAAqBlC,GACtC,WAAA3kH,CAAY8mH,GACR55F,MAAM,IAAIo5F,GAAY,KACtBrmH,KAAK6mH,gBAAkBA,EACvB7mH,KAAKV,OAAS,EAIdU,KAAK8mH,eAAgB,CACzB,CACA,GAAA3qF,IAAOw2E,GAEH,GADAA,EAAMjvG,QAAQ+D,GAAQzH,KAAK+mH,YAAYt/G,IACnCzH,KAAKV,OAASU,KAAK6mH,gBAEnB,MAAM,IAAIG,GAEd/5F,MAAMkP,OAAOw2E,EACjB,CACA,WAAAoU,CAAYt/G,GACR,GAAoB,iBAATA,EACPzH,KAAKV,QAAUmI,EAAKnI,OACpBU,KAAK8mH,eAAgB,MAEpB,IAAIr/G,IAASg9G,GAAGU,mBAAqB19G,IAASg9G,GAAGQ,QAElD,MAAM,IAAI+B,GAELv/G,IAASg9G,GAAGW,QAAU39G,IAASg9G,GAAGa,eAAiB79G,IAASg9G,GAAGG,MAC/D5kH,KAAK8mH,gBACN9mH,KAAKV,SACLU,KAAK8mH,eAAgB,GAGpBr/G,IAASg9G,GAAGM,YAAct9G,IAASg9G,GAAGI,UACvC7kH,KAAK8mH,gBACL9mH,KAAK8mH,eAAgB,EACrB9mH,KAAKV,SAEb,CACJ,EAKG,MAAM0nH,WAA0B7kH,OC9CxB,MAAM8kH,GACjB,WAAAlnH,EAAY,IAAEk9G,EAAG,WAAEiK,EAAU,OAAErtG,EAAM,OAAEstG,EAAM,OAAEr7C,GAAS,IACpD9rE,KAAK8rE,QAAS,EACd9rE,KAAKkhH,MAAQ,GACblhH,KAAKiI,OAAS,EACdjI,KAAKi9G,IAAMA,EACXj9G,KAAKknH,WAAaA,EAClBlnH,KAAK8rE,OAASA,EACd9rE,KAAK6Z,OAASA,EACd7Z,KAAKmnH,OAASA,CAClB,CACA,MAAA16G,CAAOy0G,GAEH,IADAlhH,KAAKkhH,MAAQA,EACRlhH,KAAKiI,MAAQ,EAAGjI,KAAKiI,MAAQjI,KAAKkhH,MAAM5hH,OAAQU,KAAKiI,QACtDjI,KAAKonH,WAAWpnH,KAAKkhH,MAAMlhH,KAAKiI,QAEpC,OAAOjI,KAAKmnH,MAChB,CACA,UAAAC,CAAW77E,GACPvrC,KAAKqnH,eAAe97E,EAAKw1E,iBACzB/gH,KAAKsnH,0BAA0B/7E,GAC/BvrC,KAAKqnH,eAAe97E,EAAKy1E,iBAC7B,CACA,yBAAAsG,CAA0B/7E,GACtB,OAAQA,EAAKrnC,MACT,KAAKq8G,GAASgC,cACV,OAAOviH,KAAKunH,mBAAmBh8E,GACnC,KAAKg1E,GAAS6D,wBACV,OAAOpkH,KAAKwnH,4BAA4Bj8E,GAC5C,KAAKg1E,GAAS+B,gBACV,OAAOtiH,KAAKynH,qBAAqBl8E,GACrC,KAAKg1E,GAASsC,gBACV,OAAO7iH,KAAK0nH,qBAAqBn8E,GACrC,KAAKg1E,GAAS7F,YACV,OAAO16G,KAAK2nH,kBAAkBp8E,GAClC,KAAKg1E,GAAS4C,kBACV,OAAOnjH,KAAK4nH,uBAAuBr8E,GACvC,KAAKg1E,GAASiD,gBACV,OAAOxjH,KAAK6nH,qBAAqBt8E,GACrC,KAAKg1E,GAASuD,UACV,OAAO9jH,KAAK8nH,eAAev8E,GAC/B,KAAKg1E,GAAS2D,UACV,OAAOlkH,KAAK+nH,eAAex8E,GAC/B,KAAKg1E,GAASwB,OACV,OAAO/hH,KAAKgoH,aAAaz8E,GAC7B,KAAKg1E,GAAS2B,cACV,OAAOliH,KAAKioH,mBAAmB18E,GACnC,KAAKg1E,GAASoB,aACV,OAAO3hH,KAAKkoH,kBAAkB38E,GAClC,KAAKg1E,GAAS0B,qBACV,OAAOjiH,KAAKmoH,yBAAyB58E,GACzC,KAAKg1E,GAAS50F,QACV,OAAO3rB,KAAKooH,cAAc78E,GAC9B,KAAKg1E,GAAS3xG,WACV,OAAO5O,KAAKqoH,iBAAiB98E,GACjC,KAAKg1E,GAASnsF,UACV,OAAOp0B,KAAKsoH,gBAAgB/8E,GAChC,KAAKg1E,GAAS/zG,SACV,OAAOxM,KAAKuoH,eAAeh9E,GAC/B,KAAKg1E,GAASt3F,MACV,OAAOjpB,KAAKwoH,YAAYj9E,GAC5B,KAAKg1E,GAAS8D,aACV,OAAOrkH,KAAKyoH,kBAAkBl9E,GAClC,KAAKg1E,GAAS+D,cAEd,KAAK/D,GAASgE,gBACV,OAAOvkH,KAAK0oH,mBAAmBn9E,GACnC,KAAKg1E,GAASI,UACV,OAAO3gH,KAAK2oH,eAAep9E,GAC/B,KAAKg1E,GAAS74G,QACV,OAAO1H,KAAK4oH,kBAAkBr9E,GAE1C,CACA,kBAAAg8E,CAAmBh8E,GACfvrC,KAAK6oH,aAAat9E,EAAKy2E,OAAQ,KAC3BhiH,KAAKmnH,OAAOhrF,IAAIn8B,KAAK8oH,eAAev9E,EAAKy2E,WAE7ChiH,KAAKonH,WAAW77E,EAAKmvE,YACzB,CACA,2BAAA8M,CAA4Bj8E,GACxBvrC,KAAK6oH,aAAat9E,EAAK1b,SAAU,KAC7B7vB,KAAKmnH,OAAOhrF,IAAIn8B,KAAK+oH,aAAax9E,EAAK1b,aAE3C7vB,KAAKonH,WAAW77E,EAAKmvE,YACzB,CACA,oBAAA+M,CAAqBl8E,GACjB,IAAIy9E,EACJ,OAAQz9E,EAAKtnC,MAAMC,MACf,KAAKq8G,GAASI,UACVqI,EAAiBhpH,KAAK+oH,aAAax9E,EAAKtnC,OACxC,MACJ,KAAKs8G,GAAS74G,QACVshH,EAAiBhpH,KAAKipH,OAAO19E,EAAKtnC,OAClC,MACJ,QACI+kH,EAAiBhpH,KAAKkpH,eAAe39E,EAAKtnC,OAGlDjE,KAAK6oH,aAAat9E,EAAKtnC,MAAO,KAC1BjE,KAAKmnH,OAAOhrF,IAAI6sF,KAEpBhpH,KAAKonH,WAAW77E,EAAKmvE,YACzB,CACA,oBAAAgN,CAAqBn8E,GACjBvrC,KAAKonH,WAAW77E,EAAKroC,QACrBlD,KAAKmnH,OAAOhrF,IAAIsoF,GAAGI,SAAUt5E,EAAK/+B,UAClCxM,KAAKonH,WAAW77E,EAAK9jB,SACzB,CACA,iBAAAkgG,CAAkBp8E,GACd,MAAM49E,EAAenpH,KAAKopH,uBAAuB79E,EAAK+H,UAClD61E,GACAnpH,KAAKmnH,OAAOhrF,IAAIoP,EAAKk3E,WACrBziH,KAAKmnH,OAAOhrF,OAAOgtF,EAAavD,kBAChC5lH,KAAKmnH,OAAOhrF,IAAIsoF,GAAGI,SAAUt5E,EAAKm3E,WAAY+B,GAAGG,SAGjD5kH,KAAKmnH,OAAOhrF,IAAIoP,EAAKk3E,UAAWgC,GAAGQ,SAC/B7F,GAAep/G,KAAKi9G,MACpBj9G,KAAKmnH,OAAOhrF,IAAIsoF,GAAGW,QACnBplH,KAAKmnH,OAASnnH,KAAKqpH,oBAAoB99E,EAAK+H,YAG5CtzC,KAAKmnH,OAAOxC,YAAY8B,qBACxBzmH,KAAKmnH,OAAOhrF,IAAIsoF,GAAGW,QACnBplH,KAAKmnH,OAASnnH,KAAKqpH,oBAAoB99E,EAAK+H,UAC5CtzC,KAAKmnH,OAAOxC,YAAYgC,sBAE5B3mH,KAAKmnH,OAAOhrF,IAAIsoF,GAAGQ,QAASR,GAAGW,OAAQ75E,EAAKm3E,WAAY+B,GAAGG,OAEnE,CACA,sBAAAgD,CAAuBr8E,GACnBvrC,KAAKmnH,OAAOhrF,IAAIn8B,KAAKipH,OAAO19E,EAAK63E,WAAYqB,GAAGG,OAChD5kH,KAAKmnH,OAASnnH,KAAKqpH,oBAAoB99E,EAAKw3E,OAC5C/iH,KAAKmnH,OAAOhrF,IAAIsoF,GAAGI,SAAUJ,GAAGG,MAAO5kH,KAAKspH,iBAAiB/9E,EAAK83E,OAAQoB,GAAGG,OAC7E5kH,KAAKmnH,OAASnnH,KAAKqpH,oBAAoB99E,EAAK23E,OAC5CljH,KAAKmnH,OAAOhrF,IAAIsoF,GAAGG,MACvB,CACA,oBAAAiD,CAAqBt8E,GACjBvrC,KAAKonH,WAAW77E,EAAKk4E,QACrBzjH,KAAKmnH,OAAOxC,YAAY8B,qBACxBzmH,KAAKmnH,OAASnnH,KAAKqpH,oBAAoB99E,EAAKlb,MAC5CrwB,KAAKmnH,OAASnnH,KAAKqpH,oBAAoB99E,EAAK+1E,SAC5CthH,KAAKmnH,OAAOxC,YAAYgC,qBACxB3mH,KAAKmnH,OAAOhrF,IAAIsoF,GAAGQ,QAASR,GAAGW,QAC/BplH,KAAKonH,WAAW77E,EAAKm4E,MACzB,CACA,cAAAoE,CAAev8E,GACXvrC,KAAKmnH,OAAOhrF,IAAIsoF,GAAGQ,QAASR,GAAGW,QAC/BplH,KAAKonH,WAAW77E,EAAKw4E,QACrB/jH,KAAKmnH,OAASnnH,KAAKqpH,oBAAoB99E,EAAKxwB,WAC5C/a,KAAKonH,WAAW77E,EAAKy4E,QACrBhkH,KAAKmnH,OAASnnH,KAAKqpH,oBAAoB99E,EAAKnoC,OAChD,CACA,cAAA2kH,CAAex8E,GACXvrC,KAAKmnH,OAAOhrF,IAAIsoF,GAAGQ,QAASR,GAAGW,QAC/BplH,KAAKonH,WAAW77E,EAAK44E,QACrBnkH,KAAKmnH,OAASnnH,KAAKqpH,oBAAoB99E,EAAKnoC,OAChD,CACA,YAAA4kH,CAAaz8E,GACLvrC,KAAKupH,gBAAgBh+E,GACrBvrC,KAAKwpH,2BAA2Bj+E,GAE3B6zE,GAAep/G,KAAKi9G,KACzBj9G,KAAKypH,2BAA2Bl+E,GAGhCvrC,KAAK0pH,4BAA4Bn+E,EAEzC,CACA,eAAAg+E,CAAgBh+E,GACZ,OAAI6zE,GAAep/G,KAAKi9G,KACbj9G,KAAKknH,WAAWxR,sBAAsBnqE,EAAKy2E,OAAO14G,MAGlDtJ,KAAKknH,WAAWpP,eAAevsE,EAAKy2E,OAAO14G,KAE1D,CACA,2BAAAogH,CAA4Bn+E,GACxBvrC,KAAKmnH,OAAOhrF,IAAIsoF,GAAGQ,QAASR,GAAGW,OAAQplH,KAAKipH,OAAO19E,EAAKy2E,QAASyC,GAAGQ,SACpEjlH,KAAKmnH,OAAOxC,YAAY6B,mBACxBxmH,KAAKmnH,OAAOhrF,IAAIsoF,GAAGW,QACnBplH,KAAKmnH,OAASnnH,KAAKqpH,oBAAoB99E,EAAK+H,UAC5CtzC,KAAKmnH,OAAOxC,YAAY+B,kBAC5B,CACA,0BAAA8C,CAA2Bj+E,GACvBvrC,KAAKmnH,OAAOhrF,IAAIsoF,GAAGQ,QAASR,GAAGW,OAAQplH,KAAKipH,OAAO19E,EAAKy2E,QAASyC,GAAGG,OACpE5kH,KAAKmnH,OAASnnH,KAAKqpH,oBAAoB99E,EAAK+H,SAChD,CACA,0BAAAm2E,CAA2Bl+E,GACvBvrC,KAAKmnH,OAAOhrF,IAAIsoF,GAAGQ,QAASR,GAAGW,OAAQplH,KAAKipH,OAAO19E,EAAKy2E,QAASyC,GAAGG,OACpE5kH,KAAKmnH,OAAOxC,YAAY6B,mBACxBxmH,KAAKmnH,OAASnnH,KAAKqpH,oBAAoB99E,EAAK+H,UAC5CtzC,KAAKmnH,OAAOxC,YAAY+B,kBAC5B,CACA,kBAAAuB,CAAmB18E,GACfvrC,KAAKmnH,OAAOhrF,IAAIsoF,GAAGQ,QAASR,GAAGW,OAAQplH,KAAKipH,OAAO19E,EAAKy2E,QAASyC,GAAGQ,SACpEjlH,KAAKmnH,OAAOhrF,IAAIsoF,GAAGW,QACnBplH,KAAKmnH,OAASnnH,KAAKqpH,oBAAoB99E,EAAK+H,SAChD,CACA,iBAAA40E,CAAkB38E,GACdvrC,KAAK6oH,aAAat9E,EAAKq2E,QAAS,KAC5B5hH,KAAKmnH,OAAOhrF,IAAIsoF,GAAGQ,QAASR,GAAGW,OAAQplH,KAAKipH,OAAO19E,EAAKq2E,YAE5D5hH,KAAKmnH,OAAOxC,YAAY6B,mBACpBpH,GAAep/G,KAAKi9G,KACpBj9G,KAAKmnH,OAAOhrF,IAAIsoF,GAAGG,OAGnB5kH,KAAKmnH,OAAOhrF,IAAIsoF,GAAGQ,QAASR,GAAGW,QAE/B75E,EAAKhiC,QACLvJ,KAAKmnH,OAASnnH,KAAKqpH,oBAAoB99E,EAAKhiC,QAC5CvJ,KAAKmnH,OAAOhrF,IAAIsoF,GAAGI,SAAU,IAAKJ,GAAGG,OACrC5kH,KAAKmnH,OAASnnH,KAAKqpH,oBAAoB99E,EAAKs2E,QAG5C7hH,KAAKmnH,OAASnnH,KAAKqpH,oBAAoB99E,EAAKs2E,OAEhD7hH,KAAKmnH,OAAOxC,YAAY+B,kBAC5B,CACA,wBAAAyB,CAAyBwB,GACrB3pH,KAAKmnH,OAAOhrF,IAAI,IAAKsoF,GAAGG,MAC5B,CACA,aAAAwD,CAAc78E,GACVvrC,KAAKmnH,OAAOhrF,IAAIoP,EAAKjiC,KAAMm7G,GAAGG,MAClC,CACA,gBAAAyD,CAAiB98E,GACbvrC,KAAKmnH,OAAOhrF,IAAIn8B,KAAKkpH,eAAe39E,GAAOk5E,GAAGG,MAClD,CACA,eAAA0D,CAAgB/8E,GACZvrC,KAAKmnH,OAAOhrF,IAAIn8B,KAAK6Z,OAAO1Z,IAAIorC,GAAOk5E,GAAGG,MAC9C,CACA,cAAA2D,EAAe,KAAEj/G,IACTtJ,KAAKi9G,IAAI2M,gBAAkB5pH,KAAKknH,WAAWzO,qBAAqBrhE,SAAS9tC,GACzEtJ,KAAKmnH,OAAOhrF,IAAIsoF,GAAGI,SAAUv7G,GAEf,MAATA,EACLtJ,KAAKmnH,OAAOhrF,IAAIsoF,GAAGI,SAAUv7G,EAAMm7G,GAAGG,OAGtC5kH,KAAKmnH,OAAOhrF,IAAI7yB,EAAMm7G,GAAGG,MAEjC,CACA,WAAA4D,CAAYmB,GACH3pH,KAAK8rE,OAIN9rE,KAAKmnH,OAAOhrF,IAAIsoF,GAAGI,SAAU,IAAKJ,GAAGG,OAHrC5kH,KAAKmnH,OAAOhrF,IAAIsoF,GAAGI,SAAU,IAAKJ,GAAGQ,QAASR,GAAGW,OAKzD,CACA,YAAAyD,CAAat9E,EAAMs+E,GACf7pH,KAAKqnH,eAAe97E,EAAKw1E,iBACzB8I,IACA7pH,KAAKqnH,eAAe97E,EAAKy1E,iBAC7B,CACA,cAAAqG,CAAep8F,GACNA,GAGLA,EAASvnB,QAAQomH,IACTA,EAAI5lH,OAASq8G,GAAS8D,aACtBrkH,KAAKyoH,kBAAkBqB,GAGvB9pH,KAAK0oH,mBAAmBoB,IAGpC,CACA,iBAAArB,CAAkBl9E,GACV4uE,GAAY5uE,EAAK8wE,qBAAuB,IACxCr8G,KAAKmnH,OAAOhrF,IAAIsoF,GAAGQ,QAASR,GAAGW,OAAQ75E,EAAKjiC,KAAMm7G,GAAGU,kBAAmBV,GAAGW,QAEtEplH,KAAKmnH,OAAOvB,iBAAiBtmH,OAAS,EAC3CU,KAAKmnH,OAAOhrF,IAAIsoF,GAAGM,WAAYN,GAAGG,MAAOr5E,EAAKjiC,KAAMm7G,GAAGU,kBAAmBV,GAAGW,QAI7EplH,KAAKmnH,OAAOhrF,IAAIoP,EAAKjiC,KAAMm7G,GAAGU,kBAAmBV,GAAGW,OAE5D,CACA,kBAAAsD,CAAmBn9E,GACXA,EAAKrnC,OAASq8G,GAAS+D,eAAiBtkH,KAAK+pH,wBAAwBx+E,IACrEvrC,KAAKgqH,kBAAkBz+E,EAAKjiC,MAAM5F,QAAQwE,IACtClI,KAAKmnH,OAAOhrF,IAAIsoF,GAAGQ,QAASR,GAAGW,OAAQl9G,KAE3ClI,KAAKmnH,OAAOhrF,IAAIsoF,GAAGQ,QAASR,GAAGW,SAG/BplH,KAAKmnH,OAAOhrF,IAAIoP,EAAKjiC,KAAMm7G,GAAGG,MAEtC,CACA,uBAAAmF,CAAwBx+E,GACpB,OAAO4uE,GAAY5uE,EAAKjiC,OAAS6wG,GAAY5uE,EAAK8wE,qBAAuB,GAC7E,CACA,YAAA4N,CAAa3+F,GACT,MAAMtN,EAAQsN,EAAQ5sB,MAAM,MAC5B,MAEA,YAAYkH,KAAKoY,EAAM,KAEnBA,EAAM1Y,MAAM,EAAG0Y,EAAM1e,OAAS,GAAGquC,MAAMzlC,GAAQ,SAAStC,KAAKsC,KAE7D,YAAYtC,KAAKs1B,GAAKld,GAC9B,CA4BA,iBAAAgsG,CAAkB1+F,GACd,OAAItrB,KAAKiqH,aAAa3+F,GACXA,EAAQ5sB,MAAM,MAAMN,IAAI8J,GACvB,SAAStC,KAAKsC,GACP,IAAMA,EAAKxG,QAAQ,OAAQ,IAG3BwG,GAKRojB,EAAQ5sB,MAAM,MAAMN,IAAI8J,GAAQA,EAAKxG,QAAQ,OAAQ,IAEpE,CACA,mBAAA2nH,CAAoBnI,GAChB,OAAO,IAAI+F,GAAoB,CAC3BhK,IAAKj9G,KAAKi9G,IACViK,WAAYlnH,KAAKknH,WACjBrtG,OAAQ7Z,KAAK6Z,OACbstG,OAAQnnH,KAAKmnH,OACbr7C,OAAQ9rE,KAAK8rE,SACdr/D,OAAOy0G,EACd,CACA,sBAAAkI,CAAuBlI,GACnB,MAAMgJ,EAAgBlqH,KAAK6Z,OAAO0lG,8BAClC,IACI,OAAO,IAAI0H,GAAoB,CAC3BhK,IAAKj9G,KAAKi9G,IACViK,WAAYlnH,KAAKknH,WACjBrtG,OAAQ7Z,KAAK6Z,OACbstG,OAAQ,IAAIP,GAAa5mH,KAAKi9G,IAAI4J,iBAClC/6C,QAAQ,IACTr/D,OAAOy0G,EACd,CACA,MAAOv6F,GACH,GAAIA,aAAaqgG,GAMb,YADAhnH,KAAK6Z,OAAO2lG,4BAA4B0K,GAKxC,MAAMvjG,CAEd,CACJ,CACA,iBAAAiiG,CAAkBr9E,GACd,OAAQA,EAAK/jC,WACT,KAAK+rG,GAAUqB,cACX,OAAO50G,KAAKmqH,WAAW5+E,GAC3B,KAAKgoE,GAAU6B,IACf,KAAK7B,GAAU8B,GACf,KAAK9B,GAAU+B,IACX,OAAOt1G,KAAKoqH,sBAAsB7+E,GACtC,QACI,OAAOvrC,KAAKqqH,cAAc9+E,GAEtC,CACA,UAAA4+E,CAAW5+E,GACH6zE,GAAep/G,KAAKi9G,MAEpBj9G,KAAKmnH,OAAOxC,YAAY+B,mBACxB1mH,KAAKmnH,OAAOhrF,IAAIsoF,GAAGQ,QAASR,GAAGW,OAAQplH,KAAKipH,OAAO19E,GAAOk5E,GAAGG,OAC7D5kH,KAAKmnH,OAAOxC,YAAY6B,oBAGxBxmH,KAAKmnH,OAAOhrF,IAAIsoF,GAAGQ,QAASR,GAAGW,OAAQplH,KAAKipH,OAAO19E,GAAOk5E,GAAGG,MAErE,CACA,aAAAyF,CAAc9+E,GACVvrC,KAAKmnH,OAAOhrF,IAAIn8B,KAAKipH,OAAO19E,GAAOk5E,GAAGG,MAC1C,CACA,qBAAAwF,CAAsB7+E,GACsB,WAApCvrC,KAAKi9G,IAAIqN,uBACLlL,GAAep/G,KAAKi9G,MAEpBj9G,KAAKmnH,OAAOxC,YAAY+B,mBACxB1mH,KAAKmnH,OAAOhrF,IAAIsoF,GAAGQ,QAASR,GAAGW,OAAQplH,KAAKipH,OAAO19E,GAAOk5E,GAAGG,OAC7D5kH,KAAKmnH,OAAOxC,YAAY6B,oBAGxBxmH,KAAKmnH,OAAOhrF,IAAIsoF,GAAGQ,QAASR,GAAGW,OAAQplH,KAAKipH,OAAO19E,GAAOk5E,GAAGG,OAIjE5kH,KAAKmnH,OAAOhrF,IAAIn8B,KAAKipH,OAAO19E,GAAOk5E,GAAGQ,QAASR,GAAGW,OAE1D,CACA,cAAAuD,CAAep9E,GACXvrC,KAAKmnH,OAAOhrF,IAAIn8B,KAAK+oH,aAAax9E,GAAOk5E,GAAGG,MAChD,CACA,MAAAqE,CAAO19E,GACH,OAAI26E,GAAe36E,EAAK/jC,WACbs+G,GAAgB9lH,KAAKspH,iBAAiB/9E,GAAOvrC,KAAKi9G,IAAIoC,aAGtDr/G,KAAKspH,iBAAiB/9E,EAErC,CAEA,gBAAA+9E,CAAiB/9E,GACb,OAAQvrC,KAAKi9G,IAAIsN,aACb,IAAK,WACD,OAAOrQ,GAAmB3uE,EAAK7/B,KACnC,IAAK,QACD,OAAO6/B,EAAKjiC,KAChB,IAAK,QACD,OAAOiiC,EAAKjiC,KAAK+e,cAE7B,CACA,cAAAygG,CAAev9E,GACX,OAAI26E,GAAe36E,EAAK/jC,WACbs+G,GAAgB9lH,KAAKwqH,yBAAyBj/E,GAAOvrC,KAAKi9G,IAAIoC,aAG9Dr/G,KAAKwqH,yBAAyBj/E,EAE7C,CAEA,wBAAAi/E,CAAyBj/E,GACrB,OAAQvrC,KAAKi9G,IAAIwN,cACb,IAAK,WACD,OAAOvQ,GAAmB3uE,EAAK7/B,KACnC,IAAK,QACD,OAAO6/B,EAAKjiC,KAChB,IAAK,QACD,OAAOiiC,EAAKjiC,KAAK+e,cAE7B,CACA,cAAA6gG,CAAe39E,GACX,GAAIA,EAAKwrE,OACL,OAAOxrE,EAAKjiC,KAGZ,OAAQtJ,KAAKi9G,IAAIyN,gBACb,IAAK,WACD,OAAOn/E,EAAKjiC,KAChB,IAAK,QACD,OAAOiiC,EAAKjiC,KAAKgX,cACrB,IAAK,QACD,OAAOirB,EAAKjiC,KAAK+e,cAGjC,CACA,YAAA0gG,CAAax9E,GACT,OAAQvrC,KAAKi9G,IAAI0N,cACb,IAAK,WACD,OAAOzQ,GAAmB3uE,EAAK7/B,KACnC,IAAK,QACD,OAAO6/B,EAAKjiC,KAChB,IAAK,QACD,OAAOiiC,EAAKjiC,KAAK+e,cAE7B,EC1eW,MAAMuiG,GACjB,WAAA7qH,CAAY8qH,EAAS5N,GACjBj9G,KAAK6qH,QAAUA,EACf7qH,KAAKi9G,IAAMA,EACXj9G,KAAK6Z,OAAS,IAAIylG,GAAOt/G,KAAKi9G,IAAIpjG,OACtC,CAMA,MAAApN,CAAOgjB,GACH,MAAM5P,EAAM7f,KAAKrB,MAAM8wB,GAEvB,OADuBzvB,KAAK8qH,UAAUjrG,GAChBkrG,SAC1B,CACA,KAAApsH,CAAM8wB,GACF,ONfD,SAAsByvF,GACzB,IAAI5B,EAAsB,CAAC,EAC3B,MAAMxzG,EAAQ,IAAIu2G,GAAatsE,IAAS,WJMTvC,EILL0tE,EAAU9C,SAASroE,EAAOupE,GJM7C9rE,EACFpzC,IAAIqhH,IACJrhH,IAAIwhH,IACJxhH,IAAI0hH,IACJ1hH,IAAI4hH,IACJ5hH,IAAI+hH,KIVL3M,GAAez/D,EAAMz0C,SJItB,IAA4BkyC,IIFzBp6B,EAAS,IAAIotG,GAAc1qF,GAAQC,aAAa,IAAU,CAAEjwB,UAClE,MAAO,CACHnL,MAAO,CAACmhB,EAAK82F,KAET0G,EAAsB1G,EACtB,MAAM,QAAEviE,GAAYj9B,EAAOmjB,KAAKza,GAChC,GAAuB,IAAnBu0B,EAAQ/0C,OACR,OAAO+0C,EAAQ,GAEd,MAAuB,IAAnBA,EAAQ/0C,OAGP,IAAI6C,MAAM,4BAGV,IAAIA,MAAM,mCAAmCgC,KAAKC,UAAUiwC,OAASh0C,EAAW,OAItG,CMVe2qH,CAAahrH,KAAK6qH,QAAQ3L,WAAWvgH,MAAM8wB,EAAOzvB,KAAKi9G,IAAIrG,YAAc,CAAC,EACrF,CACA,SAAAkU,CAAU1J,GACN,OAAOA,EACFhjH,IAAI6sH,GAAQjrH,KAAKkrH,gBAAgBD,IACjCzsH,KAAK,KAAK2sH,OAAOnrH,KAAKi9G,IAAImO,oBAAsB,GACzD,CACA,eAAAF,CAAgB/9F,GACZ,MAAMg6F,EAAS,IAAIF,GAAoB,CACnChK,IAAKj9G,KAAKi9G,IACViK,WAAYlnH,KAAK6qH,QAAQ7/B,cACzBnxE,OAAQ7Z,KAAK6Z,OACbstG,OAAQ,IAAIzC,GAAO,IAAI2B,IZhCNpJ,EYgC+Bj9G,KAAKi9G,IZ/BrC,gBAApBA,EAAIoC,aAAqD,iBAApBpC,EAAIoC,YAClC,IAAI8L,OAAO,IAElBlO,EAAIoO,QACG,KAEJ,IAAIF,OAAOlO,EAAIqO,eY0Bf7+G,OAAO0gB,EAAUmmB,UZjCrB,IAAsB2pE,EY2CrB,OATK9vF,EAAUhV,eAGNnY,KAAKi9G,IAAIsO,uBACdpE,EAAOhrF,IAAIsoF,GAAGQ,QAAS,KAGvBkC,EAAOhrF,IAAIsoF,GAAGM,WAAY,MAEvBoC,EAAOrmH,UAClB,EChDG,MAAM0qH,WAAoBrpH,OAE1B,SAASspH,GAAexO,GAC3B,MAAMyO,EAAiB,CACnB,iBACA,yBACA,0BACA,UACA,gBACA,iBAEJ,IAAK,MAAMC,KAAcD,EACrB,GAAIC,KAAc1O,EACd,MAAM,IAAIuO,GAAY,GAAGG,kCAGjC,GAAI1O,EAAI4J,iBAAmB,EACvB,MAAM,IAAI2E,GAAY,4DAA4DvO,EAAI4J,4BAW9F,IAAwBhtG,EALpB,GAJIojG,EAAIpjG,WASYA,EATcojG,EAAIpjG,kBAUAvY,MAAQuY,EAASjZ,OAAO0uB,OAAOzV,IAClD8zB,MAAMhxB,GAAkB,iBAANA,IATjC46B,QAAQsD,KAAK,0DAEboiE,EAAIrG,aASZ,SAA4BA,GACxB,GAAIA,EAAW14D,QAAU58C,MAAMC,QAAQq1G,EAAW14D,QAC9C,OAAO04D,EAAW14D,OAAOvQ,MAAMhxB,GAAiB,KAAZA,EAAEs6F,OAE1C,OAAO,CACX,CAd2B2U,CAAmB3O,EAAIrG,YAC1C,MAAM,IAAI4U,GAAY,wGAE1B,OAAOvO,CACX,CC3BA,IAAI4O,GAAkC,SAAUpqH,EAAGklB,GAC/C,IAAInZ,EAAI,CAAC,EACT,IAAK,IAAImP,KAAKlb,EAAOb,OAAOC,UAAUF,eAAeS,KAAKK,EAAGkb,IAAMgK,EAAE1f,QAAQ0V,GAAK,IAC9EnP,EAAEmP,GAAKlb,EAAEkb,IACb,GAAS,MAALlb,GAAqD,mBAAjCb,OAAOkrH,sBACtB,KAAIzoH,EAAI,EAAb,IAAgBsZ,EAAI/b,OAAOkrH,sBAAsBrqH,GAAI4B,EAAIsZ,EAAErd,OAAQ+D,IAC3DsjB,EAAE1f,QAAQ0V,EAAEtZ,IAAM,GAAKzC,OAAOC,UAAUkrH,qBAAqB3qH,KAAKK,EAAGkb,EAAEtZ,MACvEmK,EAAEmP,EAAEtZ,IAAM5B,EAAEkb,EAAEtZ,IAF4B,CAItD,OAAOmK,CACX,EAKA,MAAMw+G,GAAiB,CACnBjW,SAAU,WACViC,IAAK,MACLG,KAAM,OACNE,OAAQ,SACRM,KAAM,OACNE,QAAS,UACTE,MAAO,QACPE,KAAM,OACNC,MAAO,QACPE,WAAY,aACZE,SAAU,WACVC,MAAO,QACPE,OAAQ,SACR35F,IAAK,MACLk5F,KAAM,OACNU,MAAO,QACPC,YAAa,cACbsS,KAAM,cACNpS,cAAe,gBACfC,UAAW,aAEFoS,GAAoBtrH,OAAOH,KAAKurH,IACvCre,GAAiB,CACnB2d,SAAU,EACVD,SAAS,EACTd,YAAa,WACbG,eAAgB,WAChBC,aAAc,WACdF,aAAc,WACdpL,YAAa,WACbiL,uBAAwB,SACxBzD,gBAAiB,GACjBuE,oBAAqB,EACrBxB,gBAAgB,EAChB2B,wBAAwB,GAwBfY,GAAgB,CAAC18F,EAAOzD,KACjC,IAAI,QAAE6+F,GAAY7+F,EAAIixF,EAAM4O,GAAO7/F,EAAI,CAAC,YACxC,GAAqB,iBAAVyD,EACP,MAAM,IAAIttB,MAAM,+DAAiEstB,GAErF,MAAMvxB,EAAUutH,GAAe7qH,OAAO2rB,OAAO3rB,OAAO2rB,OAAO,CAAC,EAAGohF,IAAiBsP,IAChF,OAAO,IAAI2N,GfzEc,CAAC1sH,IAC1B,IAAI2sH,EAAU1gF,GAAMhqC,IAAIjC,GAKxB,OAJK2sH,IACDA,EAAU7L,GAAmB9gH,GAC7BisC,GAAMhsC,IAAID,EAAS2sH,IAEhBA,GemEcuB,CAAcvB,GAAU3sH,GAASuO,OAAOgjB,I,0HCtC1D,SAAS48F,GAAU7zE,EAAgB8yE,EAAW,GAEnD,MACMgB,EAAiB,uBAQvB,MDMoB,EAAC78F,EAAOwtF,EAAM,CAAC,KACjC,GAA4B,iBAAjBA,EAAI/1E,WAA0BglF,GAAkB90E,SAAS6lE,EAAI/1E,UACpE,MAAM,IAAIskF,GAAY,4BAA4BvO,EAAI/1E,YAE1D,MAAMqlF,EAAuBP,GAAe/O,EAAI/1E,UAAY,OAC5D,OAAOilF,GAAc18F,EAAO7uB,OAAO2rB,OAAO3rB,OAAO2rB,OAAO,CAAC,EAAG0wF,GAAM,CAAE4N,QAAS,EAAY0B,OCjBtE9/G,CADI+rC,EAAOg0E,WAFZ,IAEoCF,GACV,CAC5CplF,SAAU,aACVokF,aAG6BkB,WAAWF,EARtB,IAUtB,CAEO,SAASG,GAAYC,EAAcpjC,EAAsBqjC,GAsC9D,OApCArjC,EAAOsjC,cAAc,CAAEC,sBAAsB,EAAMC,sBAAsB,IAUzEC,OAAOC,UAAUC,+BAA+B,MAAO,CACrDC,kBAAmB,CAAC,IAAK,IAAK,KAC9BC,uBAAwB,CAAOC,EAAczqH,KAAAA,O,EAAAA,YAC3C,MAAM4d,EAAO6sG,EAAMC,qBAAqB1qH,GAClC1E,EAAe,CACnBqvH,gBAAiB3qH,EAAS4qH,WAC1BC,cAAe7qH,EAAS4qH,WACxBE,YAAaltG,EAAKktG,YAClBC,UAAWntG,EAAKmtG,WAGlB,OAAOf,EAAiBS,EAAMO,WAAY1vH,EAAOmvH,EAAMQ,YAAYjrH,GACrE,E,0LAGFoqH,OAAOC,UAAUa,uCAAuC,MAAO,CAC7DC,+BAAAA,CAA+BV,EAAOlvH,IAC7B,CACL,CACED,MAAOmvH,EAAMW,oBACbzkH,KAAM+iH,GAAUe,EAAMO,WAAYzvH,EAAQ8vH,aAM3CjB,OAAOzjC,MAChB,CC7FC,mB,sGACM,gBAAKiqB,G,ivDAAAA,C,CAAL,C,IAsEA,MAAM1oG,GAAW,IAAIkxB,IAAI,CAC9B,SACA,OACA,QACA,QACA,KACA,SACA,QACA,QACA,SACA,OACA,QACA,QACA,OACA,QACA,OACA,QACA,KACA,QACA,KACA,OACA,QACA,MACA,WACA,OACA,OACA,OACA,OACA,MACA,MACA,KACA,MACA,KACA,SACA,UACA,OACA,KACA,OACA,MACA,SAMK,MAAMkyF,GAaX1tH,IAAAA,GACE,OAAOP,KAAKorB,IAAMprB,KAAKmf,KACzB,CAEA+uG,aAAAA,GACE,OAAqB,IAAdluH,KAAKkE,MAA+C,IAAdlE,KAAKkE,IACpD,CAEAiqH,YAAAA,CAAazmH,GACX,OACgB,IAAd1H,KAAKkE,MACL2G,GAASF,IAAIjD,EAAQ4Y,gBACrBtgB,KAAKsJ,KAAKgX,gBAAkB5Y,EAAQ4Y,aAExC,CAEA8tG,SAAAA,GACE,OAAqB,IAAdpuH,KAAKkE,MAA+B2G,GAASF,IAAI3K,KAAKsJ,KAAKgX,cACpE,CAEA+tG,OAAAA,GACE,OAAOruH,KAAKkE,KAAO,EACrB,CAEAoqH,KAAAA,GACE,OAAqB,KAAdtuH,KAAKkE,IACd,CAjCA,WAAAnE,CAAYmE,EAAiBib,EAAeiM,EAAa9hB,GALzDpF,GAAAA,KAAAA,YAAAA,GACAib,GAAAA,KAAAA,aAAAA,GACAiM,GAAAA,KAAAA,WAAAA,GACA9hB,GAAAA,KAAAA,YAAAA,GAGEtJ,KAAKkE,KAAOA,EACZlE,KAAKmf,MAAQA,EACbnf,KAAKorB,IAAMA,EACXprB,KAAKsJ,KAAOA,CACd,EC1HK,SAASilH,GAAkBjwH,GAChC,MAAa,MAANA,GAAmB,OAANA,GAAoB,OAANA,GAAoB,OAANA,GAAoB,OAANA,GAAoB,OAANA,CAC9E,CAKO,SAASkwH,GAAelwH,GAC7B,OAAOA,GAAK,KAAOA,GAAK,GAC1B,CAKO,SAASmwH,GAAgBnwH,GAC9B,OAAO,GAAM,KAAOA,GAAK,KAASA,GAAK,KAAOA,GAAK,KAASA,GAAK,KAAOA,GAAK,KAAc,MAANA,CACvF,CAKO,SAASowH,GAAWpwH,GACzB,OAAO,GAAM,KAAOA,GAAK,KAASA,GAAK,KAAOA,GAAK,KAASA,GAAK,KAAOA,GAAK,GAC/E,CAKO,SAASqwH,GAAkBC,EAAuBC,EAAcC,EAAaxlH,GAClF,OAAIslH,MAIAE,GAAOxlH,EAAKhK,UAIE,MAAdgK,EAAKwlH,OAILA,EAAM,GAAKxlH,EAAKhK,UAIhBuvH,EACKH,GAAWplH,EAAKwlH,EAAM,IAGxBN,GAAellH,EAAKwlH,EAAM,OACnC,CAyEO,SAASC,GAAoBzwH,GAElC,OAAyB,MAAV,IADFA,EAAEkH,WAAW,GAE5B,C,yHCtHO,MAAMS,GAsBX,YACE,MAAM41D,EAAM77D,KAAKgvH,gBACjB,OAAIhvH,KAAKivH,cAAgBpzD,EAAIzwC,IAAMprB,KAAKivH,aAC/B,IAAIhB,GACT1a,GAAU2b,0BACVrzD,EAAI18C,MACJ08C,EAAIzwC,IACJprB,KAAKsJ,KAAKtG,UAAU64D,EAAI18C,MAAO08C,EAAIzwC,OAGnCywC,EAAIqyD,kBACNluH,KAAKmvH,yBAA2BtzD,EAAI33D,MAE/B23D,EACT,CAKA,kBAA0By6C,EAAe8Y,EAAyBC,GAChE,MAAMC,EAAatvH,KAAK8uH,IAKxB,IAFA9uH,KAAK8uH,MAEE9uH,KAAK8uH,IAAM9uH,KAAKorB,KAAK,CAC1B,MAAMmkG,EAAevvH,KAAKsJ,KAAKrC,QAAQqvG,EAAOt2G,KAAK8uH,KAC7CU,EAAgBxvH,KAAKsJ,KAAKrC,QAAQ,KAAMjH,KAAK8uH,KAEnD,IAAsB,IAAlBS,EAGF,OADAvvH,KAAK8uH,IAAM9uH,KAAKorB,IACT,IAAI6iG,GAAMoB,EAAYC,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,MAG1F,IAAuB,IAAnBU,GAAwBA,EAAgBD,EAE1CvvH,KAAK8uH,IAAMU,EAAgB,MAF7B,CAUA,GAHAxvH,KAAK8uH,IAAMS,EAAe,IAGtBvvH,KAAK8uH,IAAM9uH,KAAKorB,KAAOprB,KAAKsJ,KAAKtJ,KAAK8uH,OAASxY,GAOnD,OAAO,IAAI2X,GAAMmB,EAAcE,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,MALxF9uH,KAAK8uH,KARP,CAcF,CAGA,OAAO,IAAIb,GAAMoB,EAAYC,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,KAC1F,CAKA,4BACE,MAAMQ,EAAatvH,KAAK8uH,IAClBW,EAA8C,MAAtCzvH,KAAKsJ,KAAKtJ,KAAK8uH,KAAKzmG,cAKlC,GAFAroB,KAAK8uH,KAAO,EAERW,EAEF,KAAOzvH,KAAK8uH,IAAM9uH,KAAKorB,KAAOsjG,GAAW1uH,KAAKsJ,KAAKtJ,KAAK8uH,OACtD9uH,KAAK8uH,WAIP9uH,KAAK8uH,IDtCJ,SAA6BxlH,EAAcwlH,EAAa1jG,KAAgB2mB,GAC7E,KAAO+8E,EAAM1jG,GAAK,CAChB,IAAK2mB,EAAQqF,SAAS9tC,EAAKwlH,IACzB,OAAOA,EAETA,GACF,CACA,OAAO1jG,CACT,CC8BiBskG,CAAoB1vH,KAAKsJ,KAAMtJ,KAAK8uH,IAAK9uH,KAAKorB,IAAK,IAAK,KAGrE,OAAIprB,KAAK8uH,KAAO9uH,KAAKorB,KAA+B,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,MACzC9uH,KAAK8uH,IAAM9uH,KAAKorB,IACT,IAAI6iG,GACT1a,GAAUoc,4BACVL,EACAtvH,KAAK8uH,IACL9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,QAIzC9uH,KAAK8uH,MACE,IAAIb,GAAM1a,GAAUqc,cAAeN,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,MACvG,CAKA,wBACE,MAAMQ,EAAatvH,KAAK8uH,IAClBe,EAAa7vH,KAAKsJ,KAAKrC,QAAQ,KAAMjH,KAAK8uH,KAQhD,OALE9uH,KAAK8uH,KADa,IAAhBe,EACS7vH,KAAKorB,IAELykG,EAGN,IAAI5B,GAAM1a,GAAUuc,QAASR,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,KACjG,CAKA,yBAAiCiB,EAAyBX,EAAyBC,GACjF,MAAMC,EAAatvH,KAAK8uH,IAAM,EAE9B,KAAO9uH,KAAK8uH,IAAM,EAAI9uH,KAAKorB,KAAK,CAC9B,MAAM4kG,EAAQhwH,KAAKsJ,KAAKrC,QAAQ,IAAUjH,KAAK8uH,KAC/C,IAAe,IAAXkB,GAAgBA,EAAQ,GAAKhwH,KAAKorB,IAEpC,OADAprB,KAAK8uH,IAAM9uH,KAAKorB,IACT,IAAI6iG,GAAMoB,EAAYC,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,MAK1F,GAFA9uH,KAAK8uH,IAAMkB,EAG0B,MAAnChwH,KAAKsJ,KAAK9D,WAAWxF,KAAK8uH,MACa,MAAvC9uH,KAAKsJ,KAAK9D,WAAWxF,KAAK8uH,IAAM,IAChC9uH,KAAKsJ,KAAK9D,WAAWxF,KAAK8uH,IAAM,KAAOiB,EAGvC,OADA/vH,KAAK8uH,KAAO,EACL,IAAIb,GAAMmB,EAAcE,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,MAG5F9uH,KAAK8uH,KACP,CAGA,OADA9uH,KAAK8uH,IAAM9uH,KAAKorB,IACT,IAAI6iG,GAAMoB,EAAYC,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,KAC1F,CAKA,gBACE,GAAI9uH,KAAK8uH,KAAO9uH,KAAKorB,IACnB,OAAO,IAAI6iG,GAAM1a,GAAU0c,YAAajwH,KAAKorB,IAAKprB,KAAKorB,IAAK,IAG9D,MAAMkkG,EAAatvH,KAAK8uH,IAClBoB,EAAclwH,KAAKsJ,KAAKtJ,KAAK8uH,KAGnC,GAAIP,GAAkB2B,GAAc,CAElC,IADAlwH,KAAK8uH,MACE9uH,KAAK8uH,IAAM9uH,KAAKorB,KAAOmjG,GAAkBvuH,KAAKsJ,KAAKtJ,KAAK8uH,OAC7D9uH,KAAK8uH,MAEP,OAAO,IAAIb,GAAM1a,GAAU4c,WAAYb,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,KACpG,CAGA,GAAIN,GAAe0B,GAAc,CAE/B,GAAIlwH,KAAKmvH,2BAA6B5b,GAAU6c,IAE9C,IADApwH,KAAK8uH,MAEH9uH,KAAK8uH,IAAM9uH,KAAKorB,MACfojG,GAAexuH,KAAKsJ,KAAKtJ,KAAK8uH,OAASH,IAAkB,GAAO,EAAO3uH,KAAK8uH,IAAK9uH,KAAKsJ,QAEvFtJ,KAAK8uH,UAEF,CACL,IAAIF,GAAe,EACfC,GAAM,EAGV,GACE7uH,KAAK8uH,IAAM,EAAI9uH,KAAKorB,KACJ,MAAhB8kG,IAC2C,MAA1ClwH,KAAKsJ,KAAKtJ,KAAK8uH,IAAM,GAAGzmG,eAAmE,MAA1CroB,KAAKsJ,KAAKtJ,KAAK8uH,IAAM,GAAGzmG,eAC1E,CACA,IAAIuyB,GAAU,EACgC,MAA1C56C,KAAKsJ,KAAKtJ,KAAK8uH,IAAM,GAAGzmG,cACtBroB,KAAK8uH,IAAM,EAAI9uH,KAAKorB,KAAOsjG,GAAW1uH,KAAKsJ,KAAKtJ,KAAK8uH,IAAM,MAC7DD,GAAM,EACNj0E,GAAU,GAEyB,MAA5B56C,KAAKsJ,KAAKtJ,KAAK8uH,IAAM,IAA0C,MAA5B9uH,KAAKsJ,KAAKtJ,KAAK8uH,IAAM,KACjEl0E,GAAU,GAGRA,GACF56C,KAAK8uH,KAAO,EACZF,GAAe,GAEf5uH,KAAK8uH,KAET,MACE9uH,KAAK8uH,MAIP,KACE9uH,KAAK8uH,IAAM9uH,KAAKorB,OACdyjG,EAAMH,GAAW1uH,KAAKsJ,KAAKtJ,KAAK8uH,MAAQN,GAAexuH,KAAKsJ,KAAKtJ,KAAK8uH,QACtEH,GAAkBC,EAAcC,EAAK7uH,KAAK8uH,IAAK9uH,KAAKsJ,QAEtDtJ,KAAK8uH,MACLF,GAAe,EAIjB,GAAI5uH,KAAK8uH,IAAM9uH,KAAKorB,KAA+B,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,KAKxC,IAJAF,GAAe,EACf5uH,KAAK8uH,MAIH9uH,KAAK8uH,IAAM9uH,KAAKorB,OACdyjG,EAAMH,GAAW1uH,KAAKsJ,KAAKtJ,KAAK8uH,MAAQN,GAAexuH,KAAKsJ,KAAKtJ,KAAK8uH,QACtEH,GAAkBC,EAAcC,EAAK7uH,KAAK8uH,IAAK9uH,KAAKsJ,QAEtDtJ,KAAK8uH,MACLF,GAAe,EAKnB,GACE5uH,KAAK8uH,IAAM,EAAI9uH,KAAKorB,MACnByjG,EAC2B,MAAxB7uH,KAAKsJ,KAAKtJ,KAAK8uH,MAAwC,MAAxB9uH,KAAKsJ,KAAKtJ,KAAK8uH,KACtB,MAAxB9uH,KAAKsJ,KAAKtJ,KAAK8uH,MAAwC,MAAxB9uH,KAAKsJ,KAAKtJ,KAAK8uH,MAWlD,IATAF,GAAe,EACf5uH,KAAK8uH,MAGD9uH,KAAK8uH,IAAM,EAAI9uH,KAAKorB,MAAgC,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,MAAwC,MAAxB9uH,KAAKsJ,KAAKtJ,KAAK8uH,OAC5E9uH,KAAK8uH,MAKL9uH,KAAK8uH,IAAM9uH,KAAKorB,MACfojG,GAAexuH,KAAKsJ,KAAKtJ,KAAK8uH,OAASH,GAAkBC,GAAc,EAAO5uH,KAAK8uH,IAAK9uH,KAAKsJ,QAE9FtJ,KAAK8uH,MACLF,GAAe,CAGrB,CAGA,GAAI5uH,KAAK8uH,IAAM9uH,KAAKorB,KAAOqjG,GAAgBzuH,KAAKsJ,KAAKtJ,KAAK8uH,MAAO,CAE/D,IADA9uH,KAAK8uH,MACE9uH,KAAK8uH,IAAM9uH,KAAKorB,KAAOqjG,GAAgBzuH,KAAKsJ,KAAKtJ,KAAK8uH,OAC3D9uH,KAAK8uH,MAIP,IAAK,IAAIzrH,EAAIisH,EAAYjsH,EAAIrD,KAAK8uH,IAAKzrH,IACrC,IAAKorH,GAAgBzuH,KAAKsJ,KAAKjG,KAAwB,MAAjBrD,KAAKsJ,KAAKjG,GAC9C,OAAO,IAAI4qH,GACT1a,GAAU8c,iBACVf,EACAtvH,KAAK8uH,IACL9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,MAK3C,OAAO,IAAIb,GAAM1a,GAAU+c,SAAUhB,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,KAClG,CAEA,OAAO,IAAIb,GAAM1a,GAAU3oE,OAAQ0kF,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,KAChG,CAGA,OAAQoB,GACN,IAAK,IACH,OAAOlwH,KAAKuwH,kBAAkB,IAAKhd,GAAUqc,cAAerc,GAAUoc,6BACxE,IAAK,IACH,OAAO3vH,KAAKuwH,kBAAkB,IAAKhd,GAAUid,iBAAkBjd,GAAUkd,6BAC3E,IAAK,IACH,OAAOzwH,KAAKuwH,kBAAkB,IAAKhd,GAAUid,iBAAkBjd,GAAUmd,2BAG3E,IAAK,IACH,OAAO,IAAIzC,GAAM1a,GAAUod,oBAAqBrB,IAActvH,KAAK8uH,IAAK,KAC1E,IAAK,IACH,OAAO,IAAIb,GAAM1a,GAAUqd,oBAAqBtB,IAActvH,KAAK8uH,IAAK,KAC1E,IAAK,IACH,OAAO,IAAIb,GAAM1a,GAAUsd,qBAAsBvB,IAActvH,KAAK8uH,IAAK,KAC3E,IAAK,IACH,OAAO,IAAIb,GAAM1a,GAAUud,qBAAsBxB,IAActvH,KAAK8uH,IAAK,KAC3E,IAAK,IACH,OAAO,IAAIb,GAAM1a,GAAUwd,kBAAmBzB,IAActvH,KAAK8uH,IAAK,KACxE,IAAK,IACH,OAAO,IAAIb,GAAM1a,GAAUyd,kBAAmB1B,IAActvH,KAAK8uH,IAAK,KAGxE,IAAK,IACH,OAAO,IAAIb,GAAM1a,GAAU0d,MAAO3B,IAActvH,KAAK8uH,IAAK,KAC5D,IAAK,IACH,OAAO,IAAIb,GAAM1a,GAAU2d,UAAW5B,IAActvH,KAAK8uH,IAAK,KAGhE,IAAK,IAAK,CAER,GACE9uH,KAAK8uH,IAAM,MACR9uH,KAAK8uH,IAAM,EAAI9uH,KAAKorB,KAAOojG,GAAexuH,KAAKsJ,KAAKtJ,KAAK8uH,IAAM,MAChE9uH,KAAKmvH,2BAA6B5b,GAAUqd,qBAC5C5wH,KAAKmvH,2BAA6B5b,GAAUud,sBAC5C9wH,KAAKmvH,2BAA6B5b,GAAU+c,UAC5CtwH,KAAKmvH,2BAA6B5b,GAAUid,kBAC5CxwH,KAAKmvH,2BAA6B5b,GAAU3oE,QAE9C,OAAO,IAAIqjF,GAAM1a,GAAU6c,IAAKd,IAActvH,KAAK8uH,IAAK,KAI1D,IAAIF,GAAe,EAGnB,IAFA5uH,KAAK8uH,MAGH9uH,KAAK8uH,IAAM9uH,KAAKorB,MACfojG,GAAexuH,KAAKsJ,KAAKtJ,KAAK8uH,OAASH,GAAkBC,GAAc,EAAO5uH,KAAK8uH,IAAK9uH,KAAKsJ,QAE9FtJ,KAAK8uH,MACLF,GAAe,EAIjB,GAAI5uH,KAAK8uH,IAAM,EAAI9uH,KAAKorB,MAAgC,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,MAAwC,MAAxB9uH,KAAKsJ,KAAKtJ,KAAK8uH,MAU5E,IATAF,GAAe,EACf5uH,KAAK8uH,MAGD9uH,KAAK8uH,IAAM,EAAI9uH,KAAKorB,MAAgC,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,MAAwC,MAAxB9uH,KAAKsJ,KAAKtJ,KAAK8uH,OAC5E9uH,KAAK8uH,MAKL9uH,KAAK8uH,IAAM9uH,KAAKorB,MACfojG,GAAexuH,KAAKsJ,KAAKtJ,KAAK8uH,OAASH,GAAkBC,GAAc,EAAO5uH,KAAK8uH,IAAK9uH,KAAKsJ,QAE9FtJ,KAAK8uH,MACLF,GAAe,EAInB,OAAO,IAAIX,GAAM1a,GAAU3oE,OAAQ0kF,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,KAChG,CAGA,IAAK,IACH,OAAO,IAAIb,GAAM1a,GAAU4d,KAAM7B,IAActvH,KAAK8uH,IAAK,KAE3D,IAAK,IAIH,OAHA9uH,KAAK8uH,MAGD9uH,KAAK8uH,IAAM9uH,KAAKorB,KAA+B,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,KACjC,IAAIb,GAAM1a,GAAU6d,MAAO9B,IAActvH,KAAK8uH,IAAK,MAIxD9uH,KAAK8uH,IAAM9uH,KAAKorB,KAA+B,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,MACxC9uH,KAAK8uH,MACE9uH,KAAKqxH,yBAGP,IAAIpD,GAAM1a,GAAU+d,MAAOhC,EAAYtvH,KAAK8uH,IAAK,KAG1D,IAAK,IACH,OAAO,IAAIb,GAAM1a,GAAUge,SAAUjC,IAActvH,KAAK8uH,IAAK,KAE/D,IAAK,IAIH,GAHA9uH,KAAK8uH,MAGD9uH,KAAK8uH,IAAM9uH,KAAKorB,IAAK,CACvB,GAA4B,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,KAEjB,OADA9uH,KAAK8uH,MACE9uH,KAAKqxH,wBAGd,GAA4B,MAAxBrxH,KAAKsJ,KAAKtJ,KAAK8uH,KAAc,CAC/B9uH,KAAK8uH,MACL,IAAI0C,EAAe,EAEnB,KAAOxxH,KAAK8uH,IAAM,EAAI9uH,KAAKorB,KACzB,GAA4B,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,MAA4C,MAA5B9uH,KAAKsJ,KAAKtJ,KAAK8uH,IAAM,GACtD9uH,KAAK8uH,KAAO,EACZ0C,SACK,GAA4B,MAAxBxxH,KAAKsJ,KAAKtJ,KAAK8uH,MAA4C,MAA5B9uH,KAAKsJ,KAAKtJ,KAAK8uH,IAAM,IAI7D,GAHA9uH,KAAK8uH,KAAO,EACZ0C,IAEqB,IAAjBA,EACF,OAAO,IAAIvD,GAAM1a,GAAUuc,QAASR,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,WAGjG9uH,KAAK8uH,MAKT,OADA9uH,KAAK8uH,IAAM9uH,KAAKorB,IACT,IAAI6iG,GACT1a,GAAUke,iCACVnC,EACAtvH,KAAK8uH,IACL9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,KAEzC,CACF,CAEA,OAAO,IAAIb,GAAM1a,GAAUme,MAAOpC,EAAYtvH,KAAK8uH,IAAK,KAG1D,IAAK,IAIH,OAHA9uH,KAAK8uH,MAGD9uH,KAAK8uH,IAAM9uH,KAAKorB,MAAgC,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,MAAwC,MAAxB9uH,KAAKsJ,KAAKtJ,KAAK8uH,MACjE9uH,KAAKqxH,wBAGP,IAAIpD,GAAM1a,GAAUpxG,MAAOmtH,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,MAG/F,IAAK,IACH,OAAO,IAAIb,GAAM1a,GAAUoe,QAASrC,IAActvH,KAAK8uH,IAAK,KAE9D,IAAK,IAQH,OAPA9uH,KAAK8uH,MAGD9uH,KAAK8uH,IAAM9uH,KAAKorB,KAA+B,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,MACxC9uH,KAAK8uH,MAGA,IAAIb,GAAM1a,GAAUl+C,OAAQi6D,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,MAGhG,IAAK,IAIH,OAHA9uH,KAAK8uH,MAGD9uH,KAAK8uH,IAAM9uH,KAAKorB,KAA+B,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,KACjC,IAAIb,GAAM1a,GAAUj+C,UAAWg6D,IAActvH,KAAK8uH,IAAK,MAGzD,IAAIb,GAAM1a,GAAUqe,2BAA4BtC,EAAYtvH,KAAK8uH,IAAK,KAG/E,IAAK,IAIH,OAHA9uH,KAAK8uH,MAGD9uH,KAAK8uH,IAAM,EAAI9uH,KAAKorB,KAA+B,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,MAA4C,MAA5B9uH,KAAKsJ,KAAKtJ,KAAK8uH,IAAM,IACjF9uH,KAAK8uH,KAAO,EACL,IAAIb,GAAM1a,GAAUse,UAAWvC,EAAYtvH,KAAK8uH,IAAK,QAG1D9uH,KAAK8uH,IAAM9uH,KAAKorB,KAA+B,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,KACjC,IAAIb,GAAM1a,GAAUue,aAAcxC,IAActvH,KAAK8uH,IAAK,MAG/D9uH,KAAK8uH,IAAM9uH,KAAKorB,KAA+B,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,KACjC,IAAIb,GAAM1a,GAAUj+C,UAAWg6D,IAActvH,KAAK8uH,IAAK,MAGzD,IAAIb,GAAM1a,GAAUwe,KAAMzC,EAAYtvH,KAAK8uH,IAAK,KAGzD,IAAK,IAIH,OAHA9uH,KAAK8uH,MAGD9uH,KAAK8uH,IAAM9uH,KAAKorB,KAA+B,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,KACjC,IAAIb,GAAM1a,GAAUye,gBAAiB1C,IAActvH,KAAK8uH,IAAK,MAG/D,IAAIb,GAAM1a,GAAU0e,QAAS3C,EAAYtvH,KAAK8uH,IAAK,KAG5D,IAAK,IACH,OAAO,IAAIb,GAAM1a,GAAU2e,aAAc5C,IAActvH,KAAK8uH,IAAK,KAEnE,IAAK,IACH,OAAO,IAAIb,GAAM1a,GAAU33B,MAAO0zC,IAActvH,KAAK8uH,IAAK,KAE5D,IAAK,IAIH,OAHA9uH,KAAK8uH,MAGD9uH,KAAK8uH,IAAM9uH,KAAKorB,KAA+B,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,KACjC,IAAIb,GAAM1a,GAAU4e,YAAa7C,IAActvH,KAAK8uH,IAAK,MAG3D,IAAIb,GAAM1a,GAAU6e,MAAO9C,EAAYtvH,KAAK8uH,IAAK,KAG1D,IAAK,IAIH,OAHA9uH,KAAK8uH,MAGD9uH,KAAK8uH,IAAM9uH,KAAKorB,KAA+B,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,KACjC,IAAIb,GAAM1a,GAAU8e,cAAe/C,IAActvH,KAAK8uH,IAAK,MAG7D,IAAIb,GAAM1a,GAAU+e,SAAUhD,EAAYtvH,KAAK8uH,IAAK,KAG7D,IAAK,IAIH,OAHA9uH,KAAK8uH,MAGD9uH,KAAK8uH,IAAM9uH,KAAKorB,KAA+B,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,KACjC,IAAIb,GAAM1a,GAAUgf,SAAUjD,IAActvH,KAAK8uH,IAAK,MAGxD,IAAIb,GAAM1a,GAAUif,GAAIlD,EAAYtvH,KAAK8uH,IAAK,KAGvD,IAAK,KAIH,OAHA9uH,KAAK8uH,MAGD9uH,KAAK8uH,IAAM9uH,KAAKorB,KAA+B,MAAxBprB,KAAKsJ,KAAKtJ,KAAK8uH,KACjC,IAAIb,GAAM1a,GAAUkf,kBAAmBnD,IAActvH,KAAK8uH,IAAK,OAGjE,IAAIb,GAAM1a,GAAUpxG,MAAOmtH,EAAYtvH,KAAK8uH,IAAK,MAI1D,IAAK,IAEH,GACE9uH,KAAK8uH,IAAM,EAAI9uH,KAAKorB,KACmB,MAAvCprB,KAAKsJ,KAAK9D,WAAWxF,KAAK8uH,IAAM,IACO,MAAvC9uH,KAAKsJ,KAAK9D,WAAWxF,KAAK8uH,IAAM,GAGhC,OADA9uH,KAAK8uH,KAAO,EACL,IAAIb,GAAM1a,GAAU+d,MAAOhC,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,MAI/F,GACE9uH,KAAK8uH,IAAM,EAAI9uH,KAAKorB,KACe,MAAnCprB,KAAKsJ,KAAK9D,WAAWxF,KAAK8uH,MACa,MAAvC9uH,KAAKsJ,KAAK9D,WAAWxF,KAAK8uH,IAAM,KACQ,MAAvC9uH,KAAKsJ,KAAK9D,WAAWxF,KAAK8uH,IAAM,IAAsD,MAAvC9uH,KAAKsJ,KAAK9D,WAAWxF,KAAK8uH,IAAM,IAChF,CACA,MAAMiB,EAAkB/vH,KAAKsJ,KAAK9D,WAAWxF,KAAK8uH,IAAM,GAAK,EACvDM,EACmC,MAAvCpvH,KAAKsJ,KAAK9D,WAAWxF,KAAK8uH,IAAM,GAAcvb,GAAUqc,cAAgBrc,GAAUid,iBAC9EnB,EACmC,MAAvCrvH,KAAKsJ,KAAK9D,WAAWxF,KAAK8uH,IAAM,GAC5Bvb,GAAUoc,4BACVpc,GAAUkd,4BAGhB,OADAzwH,KAAK8uH,KAAO,EACL9uH,KAAK0yH,yBAAyB3C,EAAiBX,EAAcC,EACtE,EAOJ,GAAoB,MAAhBa,EAAqB,CAEvB,MAAMyC,EAAc3yH,KAAKsJ,KAAKtG,UAAUhD,KAAK8uH,KACvC8D,EAAyBD,EAAY1rH,QAAQ,IAAK,GAExD,IAAgC,IAA5B2rH,EAA+B,CACjC,MAAMC,EAAcD,EAAyB,EACvCE,EAAUH,EAAY3vH,UAAU,EAAG6vH,GAEnCE,EAAqBJ,EAAY1rH,QAAQ6rH,EAASD,GACxD,IAA4B,IAAxBE,EAEF,OADA/yH,KAAK8uH,KAAOiE,EAAqBF,EAC1B,IAAI5E,GAAM1a,GAAUyf,QAAS1D,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,KAEnG,CAGA,GAAI,KAAMA,IAAM,EAAI9uH,KAAKorB,MAAQqjG,GAAgBzuH,KAAKsJ,KAAKtJ,KAAK8uH,IAAM,KAAQ9uH,KAAK8uH,IAAM,IAAM9uH,KAAKorB,IAClG,OAAO,IAAI6iG,GAAM1a,GAAU0f,WAAY3D,IAActvH,KAAK8uH,IAAK,IAEnE,CAGA,GACE9uH,KAAK8uH,IAAM,EAAI9uH,KAAKorB,KACQ,MAA5BprB,KAAKsJ,KAAKtJ,KAAK8uH,IAAM,KACU,MAA9BoB,EAAY7nG,eAAuD,MAA9B6nG,EAAY7nG,eAElD,OAAOroB,KAAKkzH,4BAId,GAAIzE,GAAgByB,IAAgC,MAAhBA,EAAqB,CAEvD,IADAlwH,KAAK8uH,MACE9uH,KAAK8uH,IAAM9uH,KAAKorB,MAAQqjG,GAAgBzuH,KAAKsJ,KAAKtJ,KAAK8uH,OAAiC,MAAxB9uH,KAAKsJ,KAAKtJ,KAAK8uH,OACpF9uH,KAAK8uH,MAEP,OAAO,IAAIb,GAAM1a,GAAU+c,SAAUhB,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,KAClG,CAGA,MAAMqE,EDvjBH,SAA6B7pH,EAAcwlH,EAAa1jG,GAG7D,KAAO0jG,EAAM1jG,GAAK,CAChB,MAAMgc,EAAO99B,EAAK9D,WAAWspH,GAG7B,GAAI1nF,GAAQ,KAAOmnF,GAAkBjkH,OAAO8oH,aAAahsF,IACvD0nF,QADF,CAaA,KACW,MAAT1nF,GACCA,GAAQ,MAAUA,GAAQ,MAClB,OAATA,GACS,OAATA,GACS,OAATA,GACS,OAATA,GACS,QAATA,GAMF,MAJE0nF,GAnBF,CAwBF,CAEA,OAAOA,CACT,CCkhBmBuE,CAAoBrzH,KAAKsJ,KAAMtJ,KAAK8uH,IAAK9uH,KAAKorB,KAC7D,GAAI+nG,EAASnzH,KAAK8uH,IAEhB,OADA9uH,KAAK8uH,IAAMqE,EACJ,IAAIlF,GAAM1a,GAAU4c,WAAYb,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,MAKpG,IADA9uH,KAAK8uH,MACE9uH,KAAK8uH,IAAM9uH,KAAKorB,KAAO2jG,GAAoB/uH,KAAKsJ,KAAKtJ,KAAK8uH,OAC/D9uH,KAAK8uH,MAGP,OAAO,IAAIb,GAAM1a,GAAUpxG,MAAOmtH,EAAYtvH,KAAK8uH,IAAK9uH,KAAKsJ,KAAKtG,UAAUssH,EAAYtvH,KAAK8uH,KAC/F,CAjoBA,YAAmBxlH,EAAc2lH,EAAe,GAXhD,QAAiB3lH,YAAjB,GACA,QAAQwlH,WAAR,GACA,QAAiB1jG,WAAjB,GACA,QAAiB6jG,oBAAjB,GACA,QAAQE,2BAAsC5b,GAAU4c,YAQtDnwH,KAAKsJ,KAAOA,EACZtJ,KAAK8uH,IAAM,EACX9uH,KAAKorB,IAAM9hB,EAAKhK,OAChBU,KAAKivH,aAAeA,CACtB,ECvBK,MAAMqE,GAA8B,CACzC,CACEjtH,KAAM,gBACNktH,YAAY,EACZC,cAAe,wDACfC,QAAS,iEAEX,CACEptH,KAAM,gBACNktH,YAAY,EACZC,cAAe,mEACfC,QAAS,qEAEX,CACEptH,KAAM,mBACNktH,YAAY,EACZC,cAAe,wEACfC,QAAS,uGAEX,CACEptH,KAAM,oBACNktH,YAAY,EACZC,cACE,uGACFC,QAAS,2DAEX,CACEptH,KAAM,cACNktH,YAAY,EACZr+D,WAAY,WACZs+D,cAAe,6EACfC,QAAS,0BAEX,CACEptH,KAAM,YACNktH,YAAY,EACZr+D,WAAY,WACZs+D,cAAe,2EACfC,QAAS,0BAEX,CACEptH,KAAM,iBACNktH,YAAY,EACZr+D,WAAY,gBACZs+D,cAAe,kFACfC,QAAS,2CAEX,CACEptH,KAAM,eACNktH,YAAY,EACZr+D,WAAY,gBACZs+D,cAAe,gFACfC,QAAS,2CAEX,CACEptH,KAAM,gBACNktH,YAAY,EACZr+D,WAAY,WACZs+D,cAAe,sCACfC,QAAS,MAEX,CACEptH,KAAM,kBACNktH,YAAY,EACZr+D,WAAY,WACZs+D,cACE,wGACFC,QAAS,6DAEX,CACEptH,KAAM,qBACNktH,YAAY,EACZr+D,WAAY,gBACZs+D,cACE,6GACFC,QAAS,uEAEX,CACEptH,KAAM,oBACNktH,YAAY,EACZr+D,WAAY,YACZs+D,cACE,iLACFC,QAAS,qB,yHC1FN,MAAMC,GASJC,OAAAA,GACL3zH,KAAKuJ,QACP,CAEOqqH,OAAAA,GACL,OAAO5zH,KAAKuJ,OAASvJ,KAAKwxC,OAAOlyC,MACnC,CAEOoB,IAAAA,GACL,MAAMuI,EAAQjJ,KAAKwxC,OAAOxxC,KAAKuJ,QAG/B,OAFAvJ,KAAK2zH,UAEE1qH,CACT,CAEO4qH,IAAAA,GACL,OAAO7zH,KAAKwxC,OAAOxxC,KAAKuJ,OAC1B,CAEOuqH,MAAAA,CAAO5vH,GAEZ,OADalE,KAAK6zH,OACT3vH,OAASA,IAChBlE,KAAK2zH,WACE,EAIX,CAEOI,MAAAA,CAAO7vH,GACZ,OAAOlE,KAAK6zH,OAAO3vH,OAASA,CAC9B,CApCA,WAAAnE,CAAYyxC,GAHZ,QAAQA,cAAR,GACA,QAAQjoC,cAAR,GAGEvJ,KAAKwxC,OAASA,EACdxxC,KAAKuJ,OAAS,CAChB,EAoCK,gBAAKyqH,G,6PAAAA,C,CAAL,C,IAcA,YAAKC,G,yGAAAA,C,CAAL,C,IA6BA,SAASC,GAAqB98G,GACnC,IAAKA,EAAOw8G,UACV,OAAO,KAGT,MAAMO,EAAa/8G,EAAOy8G,OACpBtoF,EAAwB,CAC5BrnC,KAAM,EACN69G,OAAQ,EACRzuE,SAAU,GACVrqC,MAAO,MAGT,GAAIkrH,EAAWhG,aAAa,QAC1B5iF,EAAK+H,SAAU1vC,KAAK,CAAEM,KAAM,EAAuB+E,MAAOkrH,EAAYpS,OAAQ,QACzE,KAAIoS,EAAWhG,aAAa,UAGjC,OAAO,KAFP5iF,EAAKtiC,MAAQkrH,CAGf,CACA/8G,EAAOu8G,UAEP,IAAIS,EAAa,EACbC,GAAY,EAChB,MAAQA,GAAaj9G,EAAOw8G,WAAW,CACrC,MAAM3qH,EAAQmO,EAAO1W,OAErB,GAAIuI,EAAMklH,aAAa,UACrB5iF,EAAKtiC,MAAQA,OACR,GAAIA,EAAMklH,aAAa,SAAWllH,EAAMklH,aAAa,QAAS,CACnE,MAAMmG,EAA0B,CAAEpwH,KAAM,EAAoB+E,QAAO84G,OAAQ,GAU3E,GATAx2E,EAAK+H,SAAU1vC,KAAK0wH,GACf/oF,EAAKpyB,OACRoyB,EAAKpyB,KAAOm7G,GAGVl9G,EAAOw8G,WAAax8G,EAAOy8G,OAAOxF,YACpCiG,EAAS50H,OAAS0X,EAAOy8G,OAAOvqH,MAIhC8N,EAAOw8G,YACLx8G,EAAOy8G,OAAO3vH,OAASqvG,GAAU+c,WAAal5G,EAAOy8G,OAAOzF,aAC5Dh3G,EAAOy8G,OAAO3vH,OAASqvG,GAAUid,kBACnC,CACA,MAAM+D,EAAkBn9G,EAAO1W,OAAO4I,KAClC8N,EAAOw8G,WAAax8G,EAAOy8G,OAAO3vH,OAASqvG,GAAU6c,KACvDh5G,EAAO1W,OACP4zH,EAAS57E,SAAW67E,EAEhBn9G,EAAOw8G,WAAax8G,EAAOy8G,OAAOxF,YACpCiG,EAAS50H,OAAS0X,EAAOy8G,OAAOvqH,MAIhC8N,EAAOw8G,YACLx8G,EAAOy8G,OAAO3vH,OAASqvG,GAAU+c,WAAal5G,EAAOy8G,OAAOzF,aAC5Dh3G,EAAOy8G,OAAO3vH,OAASqvG,GAAUid,oBAEnC8D,EAASj5G,MAAQjE,EAAO1W,OAAO4I,OAGjCgrH,EAASj5G,MAAQk5G,CAErB,CACF,MAAO,GAAItrH,EAAM/E,OAASqvG,GAAUod,oBAAqB,CACvD,MAAM6D,EAAaN,GAAqB98G,GACrB,OAAfo9G,EACFJ,IAEA7oF,EAAK+H,SAAU1vC,KAAK4wH,EAExB,MAAO,GAAIvrH,EAAM/E,OAASqvG,GAAUqd,oBACf,IAAfwD,EACFC,GAAY,EAEZD,SAEG,GAAInrH,EAAMklH,aAAa,QAC5B5iF,EAAK+H,SAAU1vC,KAAK,CAAEM,KAAM,EAAuB+E,QAAO84G,OAAQ,SAC7D,GAAI94G,EAAMklH,aAAa,UAAY/2G,EAAOw8G,WAAax8G,EAAOy8G,OAAO1F,aAAa,MACvF5iF,EAAK+H,SAAU1vC,KAAK,CAAEM,KAAM,EAAuB+E,MAAOmO,EAAO1W,OAAQqhH,OAAQ,SAC5E,GAAI94G,EAAMklH,aAAa,SAC5B5iF,EAAK+H,SAAU1vC,KAAK,CAAEM,KAAM,EAAuB+E,QAAO84G,OAAQ,SAC7D,GAAI94G,EAAMklH,aAAa,UAC5B5iF,EAAK+H,SAAU1vC,KAAK,CAAEM,KAAM,EAAuB+E,QAAO84G,OAAQ,SAC7D,GAAI94G,EAAMklH,aAAa,UAAY/2G,EAAOw8G,WAAax8G,EAAOy8G,OAAO1F,aAAa,MACvF5iF,EAAK+H,SAAU1vC,KAAK,CAAEM,KAAM,EAAuB+E,MAAOmO,EAAO1W,OAAQqhH,OAAQ,SAC5E,GAAI94G,EAAMklH,aAAa,SAC5B5iF,EAAK+H,SAAU1vC,KAAK,CAAEM,KAAM,EAAuB+E,QAAO84G,OAAQ,SAC7D,GAAI94G,EAAM/E,OAASqvG,GAAU+c,UAAarnH,EAAMmlH,YAgB5CnlH,EAAM/E,OAASqvG,GAAU0f,WAClC1nF,EAAK+H,SAAU1vC,KAAK,CAClBM,KAAM,EACN+E,QACAvJ,OAAQ,IACRqiH,OAAQ,KAGVx2E,EAAK+H,SAAU1vC,KAAK,CAAEM,KAAM,EAAuB+E,QAAO84G,OAAQ,QAxBA,CAClE,IAAI0S,EAAYxrH,EAAMK,KAClBorH,EAAazrH,EACjB,KACEmO,EAAOw8G,YACNx8G,EAAO28G,OAAOxgB,GAAU6c,MAASh5G,EAAO28G,OAAOxgB,GAAU+c,YAAcl5G,EAAOy8G,OAAOzF,cAEtFsG,EAAat9G,EAAO1W,OACpB+zH,GAAaC,EAAWprH,KAE1BiiC,EAAK+H,SAAU1vC,KAAK,CAClBM,KAAM,EACN+E,MAAOyrH,EACPh1H,OAAQ+0H,EACR1S,OAAQ,IAEZ,CAUF,CAEA,OAAOx2E,CACT,C,8TC1KA,SAASopF,GAA2B/iF,EAAuBgjF,GACzD,MAAMC,EAAyB,CAC7B9S,OAAQiS,GAAWc,KACnBvkF,YAAa,GACbpxB,MAAOyyB,EAAK3oC,MAAMkW,MAClBiM,IAAKwmB,EAAK3oC,MAAMmiB,KAYlB,GATIwpG,EAAiBhjF,EAAK3oC,MAAMmiB,MAC9BypG,EAAW9S,OAASiS,GAAWlpD,QAG7Bl5B,EAAKz4B,OACP07G,EAAWn8E,SAAW9G,EAAKz4B,KAAKu/B,SAChCm8E,EAAWx5G,MAAQu2B,EAAKz4B,KAAKkC,QAG1Bu2B,EAAK0B,SACR,OAAOuhF,EAGT,IAAK,MAAMtpF,KAAQqG,EAAK0B,SACtB,OAAQ/H,EAAKrnC,MACX,KAAK+vH,GAAcnpD,OACjB,MACMiqD,EAAmBJ,GADNppF,EAC6CqpF,GAEhE,GAAIA,GAAkBG,EAAiB51G,MAAQ,GAAKy1G,GAAkBG,EAAiB3pG,IAAM,EAC3F,OAAO2pG,EAGT,MACF,QAEE,GADAF,EAAWzpG,IAAMmgB,EAAKtiC,MAAMmiB,IACxBmgB,EAAKrnC,OAAS+vH,GAAce,KAAM,C,IAEtBV,EAEGA,EAHjB,MAAMA,EAAW/oF,EACX0pF,GAAyB,QAAjBX,EAAAA,EAAS57E,gBAAT47E,IAAAA,OAAAA,EAAAA,EAAmBh1H,SAAU,EAGrC41H,EAAmBD,GAFJA,EAAQ,EAAI,EAAI,KACN,QAAdX,EAAAA,EAASj5G,aAATi5G,IAAAA,OAAAA,EAAAA,EAAgBh1H,SAAU,GAE3Cu1H,EAAWzpG,IAAMkpG,EAASrrH,MAAMmiB,IAAM8pG,EAElC,EAAwBx1H,SAC1Bm1H,EAAWn1H,OAAS,EAAwBA,OAEhD,CAkBA,IAfE6rC,EAAKtiC,MAAM/E,OAASqvG,GAAUid,kBAC9BjlF,EAAKrnC,OAAS+vH,GAAckB,YAC3B5pF,EAAKtiC,MAAM/E,OAASqvG,GAAU+c,WAAa/kF,EAAKtiC,MAAMmlH,eAEnD7iF,EAAKrnC,OAAS+vH,GAAckB,WAC9BN,EAAWtkF,YAAY3sC,KAAK,EAA8BlE,QAAU6rC,EAAKtiC,MAAMK,MAE/EurH,EAAWtkF,YAAY3sC,KAAK2nC,EAAKtiC,MAAMK,OAIvCiiC,EAAKrnC,OAAS+vH,GAAckB,YAAcP,IAAmBrpF,EAAKtiC,MAAMmiB,MAC1EypG,EAAWn1H,OAAS,EAA8BA,QAGhDk1H,EAAiBrpF,EAAKtiC,MAAMkW,MAC9B,MACSy1G,EAAiBrpF,EAAKtiC,MAAMmiB,KAAOmgB,EAAKw2E,SAAWiS,GAAWc,OACvED,EAAW9S,OAASx2E,EAAKw2E,QAKjC,OAAO8S,CACT,CAEO,SAAeO,GACpB9rH,EACA+zB,EACAp/B,EACA22H,G,sBAEA,MAAM9qH,EAAQ,IAAI7D,GAAMqD,GAClBkoC,EAAS,GACf,OAAa,CACX,MAAMvoC,EAAQa,EAAM8uG,YACpB,GAAI3vG,EAAMqlH,QACR,MAGGrlH,EAAMilH,iBAIX18E,EAAO5tC,KAAKqF,EACd,CAEA,MACMosH,EAAanB,GADJ,IAAIR,GAAgBliF,IAInC,IAAK6jF,EACH,MAAO,GAGT,MAAMR,EAAaF,GAA2BU,EAAYT,GAG1D,aAGF,SACE7sH,EACAs1B,EACAp/B,G,sBAEA,IAAIo2C,EAAkD,GAElDtsC,EAAK2wC,WAAa3wC,EAAK2wC,SAAStB,SAAS,MAAQrvC,EAAK2wC,SAAStB,SAAS,QAC1ErvC,EAAK2wC,SAAW3wC,EAAK2wC,SAAS11C,UAAU,EAAG+E,EAAK2wC,SAASp5C,OAAS,IAEhEyI,EAAKsT,QAAUtT,EAAKsT,MAAM+7B,SAAS,MAAQrvC,EAAKsT,MAAM+7B,SAAS,QACjErvC,EAAKsT,MAAQtT,EAAKsT,MAAMrY,UAAU,EAAG+E,EAAKsT,MAAM/b,OAAS,IAG3D,MAAMg2H,EAAU,CACd,CAACtB,GAAWc,MAAO,UACnB,CAACd,GAAWuB,MAAO,SACnB,CAACvB,GAAWlpD,QAAS,SACrB,CAACkpD,GAAWgB,MAAO,oBACnB,CAAChB,GAAWwB,MAAO,oBACnB,CAACxB,GAAWyB,OAAQ,SACpB,CAACzB,GAAW0B,SAAU,SACtB,CAAC1B,GAAW2B,QAAS,SACrB,CAAC3B,GAAW4B,SAAU,SACtB,CAAC5B,GAAW6B,OAAQ,UACpB,CAAC7B,GAAWmB,YAAa,UAGvBptH,EAAK2wC,WAAa3wC,EAAKsT,OACzBi6G,EAAQtB,GAAWgB,MAAQ,QAC3BM,EAAQtB,GAAWwB,MAAQ,SAClBztH,EAAKsT,QAAUtT,EAAK2wC,UAC7B48E,EAAQtB,GAAWgB,MAAQ,oBAC3BM,EAAQtB,GAAWwB,MAAQ,qBAClBztH,EAAK2wC,UAAY3wC,EAAKsT,QAC/Bi6G,EAAQtB,GAAWgB,MAAQ,QAC3BM,EAAQtB,GAAWwB,MAAQ,SAG7B,MAAMM,EAAcR,EAAQvtH,EAAKg6G,QAG3BhpD,EAAKhxD,EAAK2wC,UAAYrb,EAAO44B,iBAAmB,UACtD,OAAQ6/D,GACN,IAAK,WACHzhF,QAAgB0hF,GAAyB14F,EAAQp/B,GACjD,MAEF,IAAK,oBAIHo2C,EAAU,UAHc0hF,GAAyB14F,EAAQp/B,EAAO8J,EAAKrI,iBACzCs2H,GAAsB34F,EAAQp/B,EAAO86D,EAAIhxD,EAAKrI,SAG1E,MAEF,IAAK,QACH20C,QAAgB2hF,GAAsB34F,EAAQp/B,EAAO86D,EAAIhxD,EAAKrI,QAC9D,MAEF,IAAK,SACH,MAAMu2H,QAyJL,SAA6Bh4H,EAAcyB,GAChD,OAAO4zH,GAAal1H,IAAK41D,IACvB,MAAMkiE,GAAax2H,GAAU,IAAI03C,SAAS,KACpC++E,EAAeniE,EAAM3tD,KAAKrD,UAAU,GAE1C,MAAO,CACLonD,MAAO4J,EAAM3tD,KACb+vH,OAAQ,kBAAkBpiE,EAAMkB,YAAc,KAC9CnlC,KAAMikC,EAAMu/D,WACRxG,OAAOC,UAAUqJ,mBAAmBC,SACpCvJ,OAAOC,UAAUqJ,mBAAmBE,SACxCC,SAAU,KAAKxiE,EAAM3tD,KAAKrD,UAAU,KACpCwwH,cAAex/D,EAAMw/D,eAAiBx/D,EAAMy/D,QAAU,qBAAuBz/D,EAAMy/D,QAAU,IAC7FgD,WAAYziE,EAAMu/D,WACd,GAAG2C,EAAYC,EAAeniE,EAAM3tD,KAAKmmH,WAAW,IAAK,gBACzD0J,EACEC,EACAniE,EAAM3tD,KACZqwH,gBAAiB1iE,EAAMu/D,WAAaxG,OAAOC,UAAU2J,6BAA6BC,qBAAkBv2H,EACpGpC,UAGN,CA/K2B44H,CAAoB54H,EAAO8J,EAAKrI,QACrD20C,EAAQzwC,QAAQqyH,GAChB,MAAMa,QAmIL,SAAgC74H,GACrC,MAAMu1D,GAAcC,EAAAA,EAAAA,kBACpB,IAAKD,EACH,MAAO,GAET,OAAOA,EAAYG,eAAev1D,IAAKknC,IACrC,MAAM8kB,EAAQ,MAAM9kB,EAASj/B,QACvBumB,EAAM4mC,EAAY9xD,QAAQ0oD,GAChC,MAAO,CACLA,QACAgsE,OAAQ,uBAAuBxpG,IAC/BmD,KAAMg9F,OAAOC,UAAUqJ,mBAAmBE,SAC1CC,SAAU,MAAMpsE,IAChBopE,cAAe,uBAAuB5mG,IACtC6pG,WAAY,MAAMnxF,EAASj/B,QAC3BpI,UAGN,CArJ8B84H,CAAuB94H,GAC/Co2C,EAAQzwC,QAAQkzH,GAYhBziF,EAAQzwC,KAAK,CACXwmD,MAAO,OACPqsE,WAAY,OACZD,SAAU,UACVzmG,KAAMg9F,OAAOC,UAAUqJ,mBAAmBW,QAC1CxD,cAAe,GACfv1H,UAGF,MAAMg5H,QAqFZ,SAAwC55F,EAAgBp/B,G,sBAEtD,aAD2Bo/B,EAAO65F,aACd94H,IAAKE,IAAO,CAC9B8rD,MAAO9rD,EAAE+H,KACT0pB,KAAMg9F,OAAOC,UAAUqJ,mBAAmBC,SAC1CE,SAAU,GAAGl4H,EAAE+H,OACf+vH,OAAQ93H,EAAE+7D,YAAe/7D,EAAEu7D,aAAe,aAAgB,GAC1D25D,cAAe,CACb,aAAal1H,EAAE+7D,YAAc,WAC7B,UAAU/7D,EAAEy7D,SAAW,WACvB,cAAcz7D,EAAEu7D,cAChB,qBAAqBv7D,EAAEw7D,kBACvB,WAAWx7D,EAAE07D,SACb,gBAAgB17D,EAAE27D,aAAe,WACjC,WAAW37D,EAAE47D,QAAU,WACvB,cAAc57D,EAAE2d,WAAa,WAC7B,mBAAmB3d,EAAE67D,eAAiB,YACtC37D,KAAK,MACPi4H,WAAY,GAAGn4H,EAAE+H,cACjBqwH,gBAAiB3J,OAAOC,UAAU2J,6BAA6BC,gBAC/D34H,UAEJ,E,GA3GiCk5H,CAAyB95F,EAAQp/B,GAG5D,GAFAo2C,EAAQzwC,QAAQqzH,GAEZlvH,EAAKsT,MAAO,CACd,MAAMq9B,EAAW3wC,EAAK2wC,UAAYrb,EAAO44B,iBAAmB,UACtDjmC,QAiEd,SAAqCqN,EAAgBp/B,EAAc86D,EAAY19C,EAAe3b,G,sBAE5F,aADsB29B,EAAOrN,QAAQ+oC,EAAI19C,IAEtCjd,IAAKE,IAAO,CACX8rD,MAAO9rD,EAAE8rD,MACTr6B,KAAMg9F,OAAOC,UAAUqJ,mBAAmBz2D,MAC1C42D,SAAU,OAAOl4H,EAAE8rD,QACnBgsE,OAAQ93H,EAAE4F,KACVsvH,cAAel1H,EAAE4F,KACjBuyH,WAAY/2H,GAAUA,EAAO03C,SAAS,KAAO94C,EAAE+H,KAAKrD,WAAUtD,aAAAA,EAAAA,EAAQJ,SAAU,GAAKhB,EAAE+H,KACvFpI,WAED42B,OAAQv2B,IAAOoB,GAAUpB,EAAE8rD,MAAMzvB,WAAWj7B,GACjD,E,GA9E8B03H,CAAsB/5F,EAAQp/B,EAAOy6C,EAAU3wC,EAAKsT,MAAOtT,EAAKrI,QACtF20C,EAAQzwC,QAAQosB,EAClB,CAEA,MACF,IAAK,UACHqkB,EAAU/yC,MAAM6X,KAAKtO,IAAUzM,IAAKsJ,IAAa,CAC/C0iD,MAAO1iD,EACP+uH,WAAY/uH,EACZqoB,KAAMg9F,OAAOC,UAAUqJ,mBAAmBW,QAC1CxD,cAAe,GACfv1H,WAKN,OAAOo2C,CACT,E,GA7GegjF,CAA6BxC,EAAYx3F,EAAQp/B,EAChE,E,GA8GA,SAAe83H,GAAyB14F,EAAgBp/B,EAAcyB,G,sBAEpE,aADwB29B,EAAOkzE,aACdnyG,IAAKwuB,IACpB,IAAI0qG,EAAY,GACZ53H,GAAUA,EAAOi7B,WAAW,KAC9B28F,EAAY,IACH53H,GAAUA,EAAOi7B,WAAW,OACrC28F,EAAY,KAEd,MAAMC,EAAc3qG,EAAIkuB,SAASw8E,GAEjC,MAAO,CACLltE,MAAOx9B,EACPmD,KAAMg9F,OAAOC,UAAUqJ,mBAAmBmB,OAC1CpB,OAAQ,WACR5C,cAAe,WACfiD,WAAYa,EAAY,GAAG1qG,IAAM2qG,EAAc,GAAKD,IAAc1qG,EAClE8pG,gBAAiB3J,OAAOC,UAAU2J,6BAA6BC,gBAC/D34H,UAGN,E,GAEA,SAAe+3H,GAAsB34F,EAAgBp/B,EAAcy6C,EAAkBh5C,G,sBAEnF,aADqB29B,EAAO8I,OAAOuS,IACrBt6C,IAAKwuB,IACjB,IAAI0qG,EAAY,GACZ53H,GAAUA,EAAOi7B,WAAW,KAC9B28F,EAAY,IACH53H,GAAUA,EAAOi7B,WAAW,OACrC28F,EAAY,KAEd,MAAMC,EAAc3qG,EAAIkuB,SAASw8E,GAEjC,MAAO,CACLltE,MAAOx9B,EACPmD,KAAMg9F,OAAOC,UAAUqJ,mBAAmBoB,MAC1CrB,OAAQ,QACR5C,cAAe,QACfiD,WAAYa,EAAY,GAAG1qG,IAAM2qG,EAAc,GAAKD,IAAc1qG,EAClE8pG,gBAAiB3J,OAAOC,UAAU2J,6BAA6BC,gBAC/D34H,UAGN,E,kBC5QA,MAAMy5H,GAAQ,CAAC,Y,8TCFR,SAASC,GAA6Bp7E,GAC3C,MAAMpS,GAAQomC,EAAAA,GAAAA,QAhBP,CACL2mD,UAAW,KACX3mB,UAAW,KACXpqE,OAAQ,IAAIjmC,IACZ8vB,QAAS,IAAI9vB,MA0Df,MAAO,CACLg3H,UA7CF,W,sBAKE,OAJgC,OAA5B/sF,EAAM6I,QAAQkkF,YAChB/sF,EAAM6I,QAAQkkF,gBAAkB36E,EAAWq7E,qBAGtCztF,EAAM6I,QAAQkkF,SACvB,E,IAwCE3mB,UAtCF,W,sBAKE,OAJgC,OAA5BpmE,EAAM6I,QAAQu9D,YAChBpmE,EAAM6I,QAAQu9D,gBAAkBh0D,EAAWqc,kBAGtCzuB,EAAM6I,QAAQu9D,SACvB,E,IAiCEpqE,OA/BF,SAA2B4yB,G,sBAKzB,QAJW14D,IAAP04D,IACFA,EAAK,KAGF5uB,EAAM6I,QAAQ7M,OAAOx7B,IAAIouD,GAAK,CACjC,MAAM5yB,QAAeoW,EAAWuc,YAAYC,GAG5C,OAFA5uB,EAAM6I,QAAQ7M,OAAOhoC,IAAI46D,EAAI5yB,GAEtBA,CACT,CAEA,OAAOgE,EAAM6I,QAAQ7M,OAAOhmC,IAAI44D,EAClC,E,IAmBE/oC,QAjBF,SAA4B+oC,EAAY19C,G,sBACtC,MAAMjb,EAAM,GAAG24D,GAAM,MAAM19C,GAAS,KAEpC,IAAK8uB,EAAM6I,QAAQhjB,QAAQrlB,IAAIvK,GAAM,CACnC,MAAM4vB,QAAgBusB,EAAW4e,sBAAsBpC,EAAI19C,GAG3D,OAFA8uB,EAAM6I,QAAQhjB,QAAQ7xB,IAAIiC,EAAK4vB,GAExBA,CACT,CAEA,OAAOma,EAAM6I,QAAQhjB,QAAQ7vB,IAAIC,EACnC,E,IAOE61D,gBAAiB1Z,EAAWuZ,qBAEhC,CCxEO,SAAS+hE,IAAa,UAAEC,EAAS,aAAEC,IACxC,MAAM3nE,GAAQC,EAAAA,EAAAA,aAERV,GAASkgB,EAAAA,GAAAA,SAAQ,KACd,CACLrlB,WAAW0E,EAAAA,GAAAA,KAAI,CACb6T,OAAQ,aAAa3S,EAAMtU,OAAOinB,OAAOi1D,SACzCl1D,UAAW,OACXwH,QAASla,EAAMuQ,QAAQ,GAAK,GAAK,GAAK,IACtCtrB,QAAS,OACT4iF,SAAU,EACV92D,eAAgB,gBAChB+2D,SAAU9nE,EAAMsQ,WAAWkB,UAAUs2D,WAEvC5zH,OAAO4qD,EAAAA,GAAAA,KAAI,CACTxQ,MAAO0R,EAAMtU,OAAOx3C,MAAMgF,KAC1B4uH,SAAU9nE,EAAMsQ,WAAWkB,UAAUs2D,SACrCC,WAAY/nE,EAAMsQ,WAAW03D,sBAE/B5nF,OAAO0e,EAAAA,GAAAA,KAAI,CACTxQ,MAAO0R,EAAMtU,OAAOu8E,QAAQ/uH,OAE9BtB,MAAMknD,EAAAA,GAAAA,KAAI,CACRxQ,MAAO0R,EAAMtU,OAAOxyC,KAAKgnD,YAE3B1K,MAAMsJ,EAAAA,GAAAA,KAAI,CACRxQ,MAAO0R,EAAMtU,OAAOxyC,KAAKw2D,SACzBu/B,WAAY,SACZi5B,OAAQ,WAGX,CAACloE,IAEJ,IAAIU,EAAQ,CAAC,EAMb,OAJKgnE,IACHhnE,EAAQ,CAAE0Z,OAAQ,EAAGF,QAAS,EAAGiuD,WAAY,WAI7C,mBAACzoE,MAAAA,CAAIC,UAAWJ,EAAOnF,UAAWsG,MAAOA,GACtCgnE,GACC,mBAAChoE,MAAAA,KACC,mBAACc,EAAAA,MAAKA,KACHmnE,GACC,mBAAC/1D,EAAAA,WAAUA,CACTtC,QAAS,KACPq4D,KAEF1xH,KAAK,iBACL9F,KAAK,KACLoqD,QAAQ,iBAGZ,mBAAC+wB,EAAAA,QAAOA,CAAC7Z,QAAQ,oCACf,mBAAC5R,EAAAA,KAAIA,CAACF,UAAWJ,EAAO/J,KAAMv/C,KAAK,gBAOjD,C,8/BCtCO,MAAMmyH,GAAalpE,IACxB,MAAM,MAAE7/B,EAAK,SAAEgwC,EAAQ,WAAEljB,GAAe+S,EAClCmpE,GAAYloD,EAAAA,GAAAA,QAAwD,MACpEmoD,EAAWjpG,EACXkpB,EAAY+/E,EAAS//E,WAAab,EAAUc,MAE5C+/E,EAAe/mG,IACnB6tC,EAAS,YACJi5D,GAAAA,CACHpgF,cAAaA,GACbC,WAAYH,EAAW8a,IACvBzmD,OAAQq9C,GAA4Bl4B,EAAQ+mB,WAAaA,KACtD/mB,KAIDyL,EAASs6F,GAA6Bp7E,GAEtCq8E,EAA2B,CAAOtvH,EAAcrL,EAAc22H,KAAAA,O,EAAAA,YAElE,MAAO,CAAEiE,kBADiBzD,GAAe9rH,EAAM+zB,EAAQp/B,EAAO22H,GAEhE,E,wLAEM/uD,EAAc,CAAC/lD,EAAastG,EAAY0L,KAC5C,MAAM1tH,EH1BH,SAAkB0U,GACvB,IAEE,OADA1I,GAAAA,MAAa0I,GACN,CAAE0wB,OAAO,EAClB,CAAE,MAAO7pB,GACP,MAAMqtB,EAAMrtB,EACNthB,EAAQ2uC,EAAIhqC,QAAQtL,MAAM,MAC1Bye,EAAM62B,EAAIv4B,KAAK0B,IACfa,EAAQ8B,EAAIphB,MAAM,MAClBwJ,EAAO8V,EAAMb,EAAIC,WAAa,GAC9B27G,EAAM7wH,EAAKlF,UAAUma,EAAIG,aAAcH,EAAII,aACjD,GAAIm6G,GAAMtgF,SAAS2hF,EAAIz4G,eACrB,MAAO,CAAEkwB,OAAO,GAGlB,GAAItoC,EAAKzJ,SAAWs6H,EAAK,CAEvB,MAAMC,EAAWh7G,EAAMb,EAAIC,YAC3B,GAAI47G,aAAAA,EAAAA,EAAUv6H,OAAOk8B,WAAW,KAC9B,MAAO,CAAE6V,OAAO,EAEpB,CAGA,OADmBtoC,EAAKlF,UAAUma,EAAII,YAAc,GACrC9e,OAAOk8B,WAAW,KACxB,CAAE6V,OAAO,GAGX,CACLA,OAAO,EACPlsC,MAAO,CACL20H,UAAW97G,EAAIC,WACf87G,QAAS/7G,EAAIE,UACb87G,SAAUh8G,EAAIG,aAAe,EAC7B87G,OAAQj8G,EAAII,YAAc,EAC1BvT,QAAS2c,EAAE3c,QACX8S,SAAUzX,EAAM,IAGtB,CACF,CGdcg0H,CAASv5G,GAEnB,GAAI1U,EAAEolC,MACJsoF,EAAGQ,gBAAgBlM,EAAO,aAAc,QACnC,CACL,MAAMp5E,EAAM5oC,EAAE9G,MACdw0H,EAAGQ,gBAAgBlM,EAAO,aAAc,CACtC,CACEE,gBAAiBt5E,EAAIilF,UACrBxL,YAAaz5E,EAAImlF,SACjB3L,cAAex5E,EAAIklF,QACnBxL,UAAW15E,EAAIolF,OACfpvH,QAASgqC,EAAIl3B,SACb6zC,SAZgB,IAetB,GAoCF,OACE,sCACE,mBAACb,MAAAA,CAAIC,UAAW,WAAaJ,GAAOrF,YAAY3R,WAC9C,mBAACmuB,GAAiBA,CAACnuB,UAAWA,EAAW8mB,SAAW9mB,GAAcggF,EAAY,CAAEhgF,cAAcm4D,WAAAA,KAEhG,mBAAChhD,MAAAA,CAAIC,UAAWJ,GAAOsb,OAAOE,SAC5B,mBAAC5gB,EAAAA,WAAUA,CACT0X,aAAW,aACX/6B,SAAS,MACT3oC,MAAOkxB,EAAM+oB,OACb+gF,OAASz5G,GAAQ64G,EAAY,CAAEngF,OAAQ14B,IACvC05G,aAAa,EACbC,iBAAiB,EACjB/pD,OAAS5vD,GAAQ64G,EAAY,CAAEngF,OAAQ14B,IACvC45G,iBA/CY,CAACpwC,EAAkDyjC,KACrE0L,EAAUzlF,QAAUs2C,EACpB,MAAMwvC,EAAKrM,GAAY,EAAOnjC,EAAQsvC,IA5D1C,SAAuBtvC,GACrB,MAAM9+B,EAAY8+B,EAAOqwC,aACnBC,EAAe,KACnB,GAAIpvE,EAAW,CACb,MAAMqvE,EAAgB1vH,KAAKlK,IAAI,IAAKkK,KAAKoB,IAAI,IAAM+9E,EAAOwwC,qBACpD/5D,EAAQzjC,SAASkuB,EAAUsG,MAAMiP,MAAO,IAC9CvV,EAAUsG,MAAMiP,MAAQ,GAAGA,MAC3BvV,EAAUsG,MAAM0Z,OAAS,GAAGqvD,MAC5BvwC,EAAO69B,OAAO,CAAEpnD,QAAOyK,OAAQqvD,GACjC,GAEFvwC,EAAOywC,uBAAuBH,GAC9BA,GACF,CAgDII,CAAc1wC,GACdA,EAAO2wC,QAAStzG,IACd,GAAI41B,EAAWwZ,SAASC,SAAS6P,YAAa,CAC5C,MAAM/lD,EAAMwpE,EAAOqkC,WACnB9nD,EAAY/lD,EAAKwpE,EAAO4wC,WAAYpB,EACtC,IAGFxvC,EAAO6wC,UAAU,CACfv/F,GAAI,YACJwvB,MAAO,YACPgwE,YAAa,CAACrN,EAAOsN,OAAOC,QAAUvN,EAAOwN,QAAQC,OACrDC,mBAAoB,aACpBC,iBAAkB,IAClBC,IAAMrxC,IACJqvC,EAAY,CAAEngF,OAAQ8wC,EAAOqkC,aAC7Br+D,EAAMsrE,iBA6BJC,oBAxBoB,KAC1BpC,EAAUzlF,QAAU,QAyBhB,mBAAC6kF,GAAYA,CAACC,WAAAA,EAAUC,aAvBR,KACM,OAAtBU,EAAUzlF,SACZylF,EAAUzlF,QAAQ8nF,QAAQ,SAAU,+BAAgC,U,o4BC/FnE,MAgBDC,GAAoBC,IAExB,GAAgC,YAA5BA,EAAsB,UAAiB,C,IAWrCA,EAVJ,MAAMC,EAA+B,SAChCD,GAAAA,CACH1iF,cAAaA,GACbC,WAAYH,EAAW4Z,QACvBvZ,eAAgByiF,GAA6BF,EAA2B,gBAAK,CAAC,GAC9ExiF,OAAQwiF,EAAWxiF,QAAU,GAC7Bia,MAAOuoE,EAAWvoE,OAAS,GAC3BhmD,OAAQuuH,EAAWvuH,SAarB,OAVIuuH,SAAgB,QAAhBA,EAAAA,EAAYliF,YAAZkiF,IAAAA,OAAAA,EAAAA,EAAkB3/D,YACpB4/D,EAAaniF,KAAO,CAClBuiB,SAAU2/D,EAAWliF,KAAKuiB,kBAKvB,EAAiC,iBACjC,EAAsC,eAEtC4/D,CACT,CAGA,MAAME,EAA0B,SAC3BH,GAAAA,CACH1iF,cAAaA,GACbC,WAAYH,EAAW8a,IACvB1a,OAAQwiF,EAAWxiF,QAAU,GAC7Bia,MAAOuoE,EAAWvoE,OAAS,GAC3BhmD,OAAQuuH,EAAWvuH,OACnBksC,UAAWoR,GAA4BixE,EAAWvuH,QAClDqsC,KAAM,CAAC,IAOT,GAJIkiF,EAAWxvD,SACb2vD,EAAY3vD,OAASwvD,EAAWxvD,QAG9BwvD,EAAWliF,KAAM,CACnB,MAAMA,EAAOkiF,EAAWliF,KACpBA,EAAKuiB,WACP8/D,EAAYriF,KAAMuiB,SAAWviB,EAAKuiB,UAGhCviB,EAAKL,iBAEP0iF,EAAYriF,KAAML,eAAiByiF,GAA6BpiF,EAAKL,gBAEzE,CAMA,cAHO,EAAqC,sBACrC,EAAqC,eAErC0iF,GAMHD,GAAgCxtB,IACpC,MAAM0tB,EAA8B,CAClC1iF,SAAUg1D,EAAah1D,UAAY,GACnCr9B,MAAOqyF,EAAaryF,OAAS,GAC7Bs9B,UAAW0iF,GAAe3tB,GAC1B19E,QAAS,IAOX,GAJI09E,EAAarmF,OACf+zG,EAAO/zG,KAAOqmF,EAAarmF,MAGzBqmF,EAAqB,QAAKpsG,MAAMC,QAAQmsG,EAAqB,QAAI,CACnE,MAAM4tB,EAAuB5tB,EAAqB,OAClD0tB,EAAOprG,QAAUsrG,EAAWl9H,IAAKiI,IAAkB,CAAEA,SACvD,CAEA,MAAM82C,EAAoBuwD,EAAwB,UAC5C6tB,EAAwB7tB,EAA4B,cAC1D,GAAIvwD,EAAW,CACb,MAAM6I,EAA6B,CACjC3/C,KAAM82C,EACNj5C,KAAMq3H,EACN31E,KAAM5N,EAAWwI,MAGnB46E,EAAOprG,QAASpsB,KAAKoiD,EACvB,CAEA,MAAMw1E,EAAwB9tB,EAA4B,cAC1D,GAAI8tB,EAAe,CACjB,MAAMvpE,EAAiC,CACrC5rD,KAAMm1H,EACN51E,KAAM5N,EAAW4D,UAGnBw/E,EAAOprG,QAASpsB,KAAKquD,EACvB,CAEA,GAAIy7C,EAAsB,SAAKpsG,MAAMC,QAAQmsG,EAAsB,SAAI,CACrE,MAAM+tB,EAAuB/tB,EAAsB,QACnD0tB,EAAOj1E,WAAas1E,EAAcr9H,IAAKgoD,IAAS,CAC9CC,cAAeD,EAAiB,YAChCxzB,OAAQwzB,EAAW,MACnB1sC,MAAO0sC,EAAW,QAEtB,CAEA,GAAIsnD,EAAa/yD,SAAWr5C,MAAMC,QAAQmsG,EAAa/yD,SAAU,CAC/D,MAAM+gF,EAAuBhuB,EAAa/yD,QAE1CygF,EAAOzgF,QAAU+gF,EAAWt9H,IAAKy2B,IAC/B,MAAMzxB,EAAiB,MAClByxB,GASL,OANIA,EAAOz0B,MAAQ+8C,EACjB/5C,EAAOwiD,KAAO5N,EAAWwI,KAChB3rB,EAAOz0B,MAAQo7H,IACxBp4H,EAAOwiD,KAAO5N,EAAW4D,UAGpBx4C,GAEX,CAcA,OAZIsqG,EAAap0F,SAAWhY,MAAMC,QAAQmsG,EAAap0F,YACrD8hH,EAAO9hH,QAAUo0F,EAAap0F,UAG5Bo0F,EAAar1F,SAAW/W,MAAMC,QAAQmsG,EAAar1F,YACrD+iH,EAAO/iH,QAAUq1F,EAAar1F,cAGLhY,IAAvBqtG,EAAap1F,OAAuBo1F,EAAap1F,OAAS,IAC5D8iH,EAAO9iH,MAAQo1F,EAAap1F,OAGvB8iH,GAMHO,GAAeX,IAEnB,MAAMY,GAAoBZ,EAA0B,gBAAMrxE,GAAgBqxE,EAAW1iF,cAAe,SAC9FujF,EAA2C,QAA5Bb,EAAsB,WAA2C,YAA5BA,EAAsB,UAChF,OAAOY,GAAoBC,GAMvBR,GAAkB3tB,GAClBA,EAAwB,UACnB51D,EAAU6K,WACR+qD,EAA4B,cAC9B51D,EAAU2K,KAGZ3K,EAAUc,M,o4BC3KZ,MAeDkjF,GAAkBxsE,IACtB,MAAM,MAAE7/B,EAAK,SAAEgwC,EAAQ,IAAEpD,GAAQ/M,GAC1B7W,EAAgBm1D,GlH0Ja,CACpCF,IAEA,MAAOpnG,EAAOy1H,IAAYC,EAAAA,GAAAA,YAAW7uB,GAASO,EAAcH,IAC5D,MAAO,CAACjnG,EAAOy1H,IkH9JkCE,CAAuB,EAA0BxjF,gBAO5FyjF,EAAWzsG,EAAMrvB,KAAO,GACxB+7H,GAAU5rD,EAAAA,GAAAA,QAAe2rD,GAC3BA,IAAaC,EAAQnpF,SAAWvjB,EAAM8oB,aAAeH,EAAW4Z,UAClE47C,EAAuBb,GAAc,EAA0Bt0D,gBAAkB,CAAC,IAClF0jF,EAAQnpF,QAAUkpF,GAMpB,MAAME,GAAiB7rD,EAAAA,GAAAA,aAA+BlwE,GAClDovB,EAAM8oB,aAAe6jF,EAAeppF,SAAWvjB,EAAM8oB,aAAeH,EAAW4Z,SACjF47C,EAAuBb,GAAc,EAA0Bt0D,gBAAkB,CAAC,IAEpF2jF,EAAeppF,QAAUvjB,EAAM8oB,WAG/B,MAAM8jF,GAAoB9rD,EAAAA,GAAAA,SAAgB,GAuB1C,OAtBI3mB,GAAyBnR,KAC3B4jF,EAAkBrpF,SAAU,IAG9Bm3B,EAAAA,GAAAA,WAAU,KACJkyD,EAAkBrpF,SAAWvjB,EAAM8oB,aAAeH,EAAW8a,KAIjEuM,EAAS,SACJhwC,GAAAA,CACH6oB,cAAaA,GACbC,WAAYH,EAAW4Z,QACvBxZ,OAAQ0J,EAAYzJ,GACpBA,iBACAhsC,OAAQo9C,GAAsCpR,OAK/C,CAACA,IAEAhpB,EAAM8oB,aAAeH,EAAW8a,IAEhC,mBAACpD,MAAAA,CAAIE,cAAY,4BACf,mBAACwoE,GAAclpE,IAMnB,mBAACnE,GAAYA,CACX5O,WAAY+S,EAAM/S,WAClB9D,eAAgBA,EAChBm1D,uBAAwBA,EACxBkE,aAAcriF,EAAM+oB,OACpB6jB,IAAKA,K,iLCtFX,MAAMigE,GAAer/F,EAAAA,OAAOs/F,eAA8C,8B/HEhBjtE,I,IAQdpxD,EAP1C,MAAM,QAAEA,EAAO,gBAAE6xE,GAAoBzgB,EAC/BK,GAAS8tC,EAAAA,EAAAA,YAAWC,IAE1B,OACE,mBAAC9sC,EAAAA,MAAKA,CAACuQ,eAAe,iBACpB,mBAACrR,MAAAA,CAAIC,UAAW,GAAGJ,EAAO2zC,qBAAqB3zC,EAAO8zC,cACpD,mBAAC5G,EAAAA,IAAGA,CAAC98B,MAAM,OAAO7gD,KAAK,YACrB,mBAACogF,GAAWA,CAACC,YAAah7C,QAAQrmD,SAAiB,QAAjBA,EAAAA,EAAS83D,gBAAT93D,IAAAA,OAAAA,EAAAA,EAAmBqhG,iBAGzD,mBAAC1C,EAAAA,IAAGA,CAAC98B,MAAM,MAAM7gD,KAAK,WAAW2+E,SAAU3B,IACzC,mBAACpsC,MAAAA,CAAIC,UAAWJ,EAAOk0C,gBACrB,mBAACnzC,EAAAA,MAAKA,CACJC,SAAS,OACTtF,MAAM,0EACN0E,UAAWJ,EAAOm0C,aAElB,sCACE,mBAAC/F,EAAAA,SAAQA,CACP/sC,KAAK,sGACLgtC,UAAAA,EACAt+B,QAASkR,IACV,uBAEW,IAAI,oCAIpB,mBAACuK,EAAAA,KAAIA,CAAClb,QAAQ,YAAYvhB,MAAM,aAAY,sCAI9C,mBAAC4+C,GAA0BA,CAACvtB,gBAAiBA,EAAiB7xE,QAASA,IACvE,mBAACgkG,GAA0BA,CAACnyB,gBAAiBA,EAAiB7xE,QAASA,IACvE,mBAACokG,GAAqBA,CAACvyB,gBAAiBA,EAAiB7xE,QAASA,IAClE,mBAAC4iG,GAAyBA,CAAC/wB,gBAAiBA,EAAiB7xE,QAASA,KAExE,mBAAC2+F,EAAAA,IAAGA,CAAC98B,MAAM,MAAM7gD,KAAK,cfnB8BowC,IACxD,MAAM,QAAEpxD,EAAO,gBAAE6xE,GAAoBzgB,GAC/B,SAAE0G,EAAQ,iBAAE4Z,GAAqB1xE,EACjC82D,EAASqU,GAAUpG,WAAWlW,OAAOmW,aACrCkN,EAAkBlyE,EAAQkyE,gBAAkB,CAAC,EAC7CmyB,EAAe3yB,GAAoBA,EAAiB7L,UACpDy+B,EAAmB5yB,GAAoBA,EAAiB5L,cACxDy+B,EAAkB7yB,GAAoBA,EAAiB3L,aACvDu4D,EAAkB,CACtB,CAAEpyE,MAAO,SAAU7rD,MAAO+hE,GAASqQ,QACnC,CAAEvmB,MAAO,OAAQ7rD,MAAO+hE,GAASi8B,OAGnClsB,GAAkBnyE,EAAS6xE,GAE3B,MASM0sD,EAAsB,CAC1Br8H,EACA7B,KAEAwxE,EAAgB,SACX7xE,GAAAA,CACH83D,SAAU,SACL93D,EAAQ83D,UAAQ,CACnB,CAAC51D,GAAM7B,QAIPw+F,EAAiB,CACrB38F,EAIA7B,KAEAwxE,EAAgB,SACX7xE,GAAAA,CACH83D,SAAU,SACL93D,EAAQ83D,UAAQ,CACnB,CAAC51D,GAAM7B,QAePmkG,EAA6B,CAACtiG,EAA6C7B,KAC/EwxE,EAAgB,SACX7xE,GAAAA,CACHkyE,eAAgB,SACXA,GAAAA,CACH,CAAChwE,GAAM7B,QAIPokG,EAAuBviG,IAC3B2vE,EAAgB,SACX7xE,GAAAA,CACH0xE,iBAAkB,SACbA,GAAAA,CACH,CAACxvE,IAAM,IAETgwE,eAAgB,SACXA,GAAAA,CACH,CAAChwE,GAAM,SAiBPmhG,EAA0BR,IAC9BhxB,EAAgB,SACX7xE,GAAAA,CACH83D,SAAU,SACL93D,EAAQ83D,UAAQ,CACnB+qC,eAAgBA,EAAelsE,OAAQpzB,KAAQA,EAAE+/F,WAAa//F,EAAElD,aAIhE4iG,EAAqB,CAAC/gG,EAAyB7B,KACnDwxE,EAAgB,SACX7xE,GAAAA,CACH83D,SAAU,SACL93D,EAAQ83D,UAAQ,CACnBK,KAAM,SACDn4D,EAAQ83D,SAASK,MAAI,CACxB,CAACj2D,GAAM7B,UAKT+iG,EAAuB,CAAClhG,EAA2B7B,K,IAOnCL,EANpB6xE,EAAgB,SACX7xE,GAAAA,CACH83D,SAAU,SACL93D,EAAQ83D,UAAQ,CACnBmB,OAAQ,SACHj5D,EAAQ83D,SAASmB,QAAM,CAC1BqB,cAAqC,QAAvBt6D,EAAAA,EAAQ83D,SAASmB,cAAjBj5D,IAAAA,OAAAA,EAAAA,EAAyBs6D,eAAgBvgB,EAAS2J,YAChE,CAACxhD,GAAM7B,WAmBRwiG,EAAgBC,IAAqBlgC,EAAAA,GAAAA,UAAS9K,EAAS+qC,gBAAkB,IAE1E27B,EAAwBn4E,QAC5B87C,OAAOte,SAAStmE,MACdvd,EAAQ83D,SAASC,iBACjB/3D,EAAQ83D,SAASG,cACjBj4D,EAAQ83D,SAASyP,aACjBvnE,EAAQ83D,SAAS4P,cACjB1nE,EAAQ83D,SAAS6P,aACjB3nE,EAAQ83D,SAAS+rC,wBACjB7jG,EAAQ83D,SAAS+qC,gBACjB7iG,EAAQ83D,SAASK,MACjBn4D,EAAQ83D,SAASmB,QAGfomC,EAAcvnC,EAASkO,OACzBlO,EAASyN,WAAanD,GAASqQ,OAC7B3b,EAAOoO,WAAWG,iBAClBvO,EAAOoO,WAAWI,eACpBxN,EAASyN,WAAanD,GAASqQ,OAC7B3b,EAAOoO,WAAWC,mBAClBrO,EAAOoO,WAAWE,iBAClBk6B,EAAkB,GAAGxoC,EAAOoO,WAAWzY,wBAAwBqL,EAASkO,OAAS,SAAW,MAAMlO,EAASyN,aAAa85B,KAExHo/B,GAAcz+H,EAAQ0+D,KAC1B,mBAAClM,EAAAA,MAAKA,CAACrF,MAAM,GAAGsF,SAAS,UAAUw+C,cAAc,SAC/C,mBAACv+C,EAAAA,MAAKA,KACJ,mBAACd,MAAAA,KACE,iCACD,mBAAC1oB,OAAAA,KAAK,OACL,qDACD,mBAAC1pC,IAAAA,CACCozD,MAAO,CAAEC,eAAgB,aACzBC,KAAK,oFACLrqB,OAAO,SACP+7B,IAAI,cACL,wBAGA,sGAMT,OACE,sCACGi6D,EACD,mBAACv6D,GAAqBA,CACpBC,eAAe,aACfC,SAAS,qEACTC,mBAAAA,IAEF,mBAACI,GAAOA,MACR,mBAACT,GAAaA,CAAC7W,MAAM,UACnB,mBAACuU,EAAAA,MAAKA,CACJS,UAAAA,EACAjW,MAAO4K,EAAOmO,cAAc/Y,MAC5B6P,YAAajF,EAAOmO,cAAcxY,QAClC68C,SAAUxxC,EAASya,KACnBnsE,MAAO0wD,EAAOmO,cAAc7+D,OAE5B,mBAACu7D,EAAAA,MAAKA,CACJx5D,KAAK,OACL05D,MAAO,GACPxhE,MAAOy3D,EAASya,MAAQ,GACxBhR,SAAW94C,IAAMy2E,EAAAA,EAAAA,kCAAiC9tC,EAAO,OAAxC8tC,CAAgDz2E,GACjEyjC,MAAO4K,EAAOmO,cAAc/Y,MAC5B6X,aAAYjN,EAAOmO,cAAc/Y,MACjCuV,YAAa3K,EAAOmO,cAAcxD,YAClC+P,OAAQktD,MAGZ,mBAACh9D,EAAAA,MAAKA,CACJS,UAAAA,EACAjW,MAAO4K,EAAOoO,WAAWhZ,MACzB6P,YAAaujC,EACbgK,SAAUxxC,EAAS6oC,KACnBv6F,MAAO0wD,EAAOoO,WAAW9+D,OAEzB,mBAACu7D,EAAAA,MAAKA,CACJx5D,KAAK,OACL05D,MAAO,GACP77D,KAAK,SACL3F,MAAOy3D,EAAS6oC,MAAQ,GACxBp/B,SAAW94C,IAAMm4E,OAvNLD,EAuNkBl4E,EAAEikD,cAAcrsE,WAtNtDwxE,EAAgB,SACX7xE,GAAAA,CACH83D,SAAU,SACL93D,EAAQ83D,UAAQ,CACnB6oC,MAAOA,OALQ,IAACA,GAwNZz0C,MAAO4K,EAAOoO,WAAWhZ,MACzB6X,aAAYjN,EAAOoO,WAAWhZ,MAC9BuV,YAAa49B,EACb7tB,OAAS/oD,GDpQ2B,CAAC2oC,KAC/CuhB,EAAAA,EAAAA,mBAAkB,kCAAmCvhB,ICmQ5BstE,CAA4C,CAAE/9B,KAAMl4E,EAAEikD,cAAcrsE,WAIvF,mBAACqhE,EAAAA,MAAKA,CAACxV,MAAO4K,EAAOyO,SAASrZ,MAAO6P,YAAajF,EAAOyO,SAAS9Y,SAChE,mBAAC8zC,EAAAA,iBAAgBA,CACfvgG,QAASs+H,EACTK,gBAAiB,GACjBt+H,MAAOy3D,EAASyN,UAAYnD,GAASqQ,OACrClR,SAAW94C,IA/LI,IAAC88C,ED1EkC,CAACnU,KAC7DuhB,EAAAA,EAAAA,mBAAkB,kDAAmDvhB,ICyQzDstE,CAA0D,CAAEj+B,iBAAkBh4E,IAhMhE88C,EAiMG98C,EAhM3BopD,EAAgB,SACX7xE,GAAAA,CACH83D,SAAU,SACL93D,EAAQ83D,UAAQ,CACnByN,SAAUA,WAgMV,mBAAC7D,EAAAA,MAAKA,CAACxV,MAAO4K,EAAOkP,OAAO9Z,MAAO6P,YAAajF,EAAOkP,OAAOvZ,SAC5D,mBAACif,EAAAA,OAAMA,CACLhvC,GAAG,SACHm1B,UAAU,UACVxxD,MAAOy3D,EAASkO,SAAU,EAC1BzE,SAAW94C,IDhR6C,CAAC2oC,KACnEuhB,EAAAA,EAAAA,mBAAkB,wDAAyDvhB,ICgR/DstE,CAAgE,CAC9D19B,iBAAkBv4E,EAAEikD,cAAcC,UAEpCkyB,EAAe,SAAUp2E,EAAEikD,cAAcC,aAK9C7U,EAASyN,WAAanD,GAASi8B,MAC9B,mBAAC38B,EAAAA,MAAKA,CAACxV,MAAO4K,EAAO9sB,KAAKkiB,MAAO6P,YAAajF,EAAO9sB,KAAKyiB,SACxD,mBAACkV,EAAAA,MAAKA,CACJthE,MAAOy3D,EAAS9tB,MAAQ,GACxB7hC,KAAK,OACL05D,MAAO,GACPN,UAAU29B,EAAAA,EAAAA,kCAAiC9tC,EAAO,QAClDlF,MAAO4K,EAAO9sB,KAAKkiB,MACnB6X,aAAYjN,EAAO9sB,KAAKkiB,MACxBuV,YAAa3K,EAAO9sB,KAAKy3B,gBAMhC3J,EAASyN,WAAanD,GAASi8B,MAC9B,mBAACj4B,GAAiBA,CAChB8J,QAASlwE,EAAQ83D,SAASga,YAC1BnL,sBAAuB3mE,EAAQ83D,SAAS6O,sBACxCmJ,aAAc9vE,EAAQ0xE,iBACtB3B,oBAAsBG,GAAYH,GAAoBG,EAASlwE,EAAS6xE,GACxEf,8BAAgCnK,GAC9Bk4B,EAAe,wBAAyBl4B,KAK9C,mBAAClC,GAAOA,MACR,mBAACT,GAAaA,CAAC7W,MAAM,sBACnB,mBAACuU,EAAAA,MAAKA,CAACxV,MAAO4K,EAAO4O,cAAcxZ,MAAO6P,YAAajF,EAAO4O,cAAcjZ,SAC1E,mBAACif,EAAAA,OAAMA,CACL7Z,UAAU,UACVxxD,MAAOy3D,EAAS4N,gBAAiB,EACjCnE,SAAW94C,IDrT0C,CAAC2oC,KAChEuhB,EAAAA,EAAAA,mBAAkB,sDAAuDvhB,ICqT7DstE,CAA6D,CAC3D75B,oBAAqBp8E,EAAEikD,cAAcC,UAEvC4xD,EAAoB,gBAAiB91G,EAAEikD,cAAcC,aAI3D,mBAACjL,EAAAA,MAAKA,CAACxV,MAAO4K,EAAO6O,cAAczZ,MAAO6P,YAAajF,EAAO6O,cAAclZ,SAC1E,mBAACif,EAAAA,OAAMA,CACL7Z,UAAU,UACVxxD,MAAOy3D,EAAS4sC,UAAW,EAC3BnjC,SAAW94C,ID7T0C,CAAC2oC,KAChEuhB,EAAAA,EAAAA,mBAAkB,sDAAuDvhB,IC6T7DstE,CAA6D,CAC3D35B,iBAAkBt8E,EAAEikD,cAAcC,UAEpC4xD,EAAoB,UAAW91G,EAAEikD,cAAcC,aAIrD,mBAACjL,EAAAA,MAAKA,CAACxV,MAAO4K,EAAO8O,kBAAkB1Z,MAAO6P,YAAajF,EAAO8O,kBAAkBnZ,SAClF,mBAACif,EAAAA,OAAMA,CACL7Z,UAAU,UACVxxD,MAAOy3D,EAAS8N,oBAAqB,EACrCrE,SAAW94C,IDrUuC,CAAC2oC,KAC7DuhB,EAAAA,EAAAA,mBAAkB,mDAAoDvhB,ICqU1DstE,CAA0D,CAAEx5B,aAAcz8E,EAAEikD,cAAcC,UAC1F4xD,EAAoB,oBAAqB91G,EAAEikD,cAAcC,aAI9D7U,EAAS8N,mBACR,mBAACvE,GAAgBA,CACfC,UAAW+iC,EACX9iC,SAAW94C,GAAM+7E,EAA2B,YAAa/7E,EAAEikD,cAAcrsE,OACzEohE,YAAa3K,EAAO+O,UAAUpE,YAC9BvV,MAAO4K,EAAO+O,UAAU3Z,MACxBsV,QAAS,IAAMijC,EAAoB,eAGtC3sC,EAAS4sC,SACR,sCACE,mBAACrjC,GAAgBA,CACfC,UAAWgjC,EACX/iC,SAAW94C,GAAM+7E,EAA2B,gBAAiB/7E,EAAEikD,cAAcrsE,OAC7EohE,YAAa3K,EAAOgP,cAAcrE,YAClCvV,MAAO4K,EAAOgP,cAAc5Z,MAC5BsV,QAAS,IAAMijC,EAAoB,mBAErC,mBAACpjC,GAAgBA,CACfC,UAAWijC,EACX9iC,YAAa3K,EAAOiP,aAAatE,YACjCvV,MAAO4K,EAAOiP,aAAa7Z,MAC3BqV,SAAW94C,GAAM+7E,EAA2B,eAAgB/7E,EAAEikD,cAAcrsE,OAC5EmhE,QAAS,IAAMijC,EAAoB,oBAM3C,mBAAChgC,GAAOA,MACR,mBAACT,GAAaA,CAAC7W,MAAM,eACnB,mBAACuU,EAAAA,MAAKA,CAACxV,MAAO4K,EAAO0O,SAAStZ,MAAO6P,YAAajF,EAAO0O,SAAS/Y,SAChE,mBAACkV,EAAAA,MAAKA,CACJx5D,KAAK,OACL05D,MAAO,GACPxhE,MAAOy3D,EAAS0N,UAAY,GAC5BjE,UAAU29B,EAAAA,EAAAA,kCAAiC9tC,EAAO,YAClDlF,MAAO4K,EAAO0O,SAAStZ,MACvB6X,aAAYjN,EAAO0O,SAAStZ,MAC5BuV,YAAa3K,EAAO0O,SAAS/D,eAGjC,mBAACC,EAAAA,MAAKA,CAACxV,MAAO4K,EAAO2O,SAASvZ,MAAO6P,YAAajF,EAAO2O,SAAShZ,SAChE,mBAAC4kB,EAAAA,YAAWA,CACVlpE,KAAK,MACL05D,MAAO,GACP3V,MAAO4K,EAAO2O,SAASvZ,MACvB6X,aAAYjN,EAAO2O,SAASvZ,MAC5BuV,YAAa3K,EAAO2O,SAAShE,YAC7BphE,MAAO6xE,EAAezM,UAAY,GAClC6L,aAAeI,GAAoBA,EAAiBjM,SACpD8L,QArSc,KACtBM,EAAgB,SACX7xE,GAAAA,CACH0xE,iBAAkB,SACb1xE,EAAQ0xE,kBAAgB,CAC3BjM,UAAU,IAEZyM,eAAgB,SACXlyE,EAAQkyE,gBAAc,CACzBzM,SAAU,SA6RNlE,UAAU2iC,EAAAA,EAAAA,wCAAuC9yC,EAAO,gBAK9D,mBAACqT,GAAOA,MACR,mBAACT,GAAaA,CACZ7W,MAAM,sBACN4O,YAAY,wNACZuG,eAAAA,EACAC,gBAAiBi8D,GAEjB,mBAAC/5D,GAAOA,MACR,mBAAC2C,GAA0BA,CACzBrP,gBAAiBD,EAASC,gBAC1BE,aAAcH,EAASG,aACvBgT,wBAA0BxiD,KDzYlCkqD,EAAAA,EAAAA,mBAAkB,0CC2YRusB,EAAAA,EAAAA,kCAAiC9tC,EAAO,kBAAxC8tC,CAA2Dz2E,IAE7DyiD,qBAAuBziD,KDzY/BkqD,EAAAA,EAAAA,mBAAkB,6CC2YRusB,EAAAA,EAAAA,kCAAiC9tC,EAAO,eAAxC8tC,CAAwDz2E,MAI5D,mBAACg8C,GAAOA,MACR,mBAAC4C,GAAmBA,CAClBC,gBAAiBxP,EAASwP,gBAC1BC,YAAazP,EAASyP,YACtBC,aAAc1P,EAAS0P,aACvBC,aAAc3P,EAAS2P,aACvBC,aAAc5P,EAAS4P,aACvBC,YAAa7P,EAAS6P,YACtB4D,oBAAsB9iD,IACpBi2G,GAAgD,CAAEn3D,YAAa76B,OAAOjkB,EAAEikD,cAAcrsE,UACtF6+F,EAAAA,EAAAA,kCAAiC9tC,EAAO,cAAxC8tC,CAAuDz2E,IAEzD+iD,qBAAuB/iD,IACrBi2G,GAAgD,CAAEh3D,aAAch7B,OAAOjkB,EAAEikD,cAAcrsE,UACvF6+F,EAAAA,EAAAA,kCAAiC9tC,EAAO,eAAxC8tC,CAAwDz2E,IAE1D4iD,wBAA0B5iD,IACxBi2G,GAAgD,CAAEp3D,gBAAiB56B,OAAOjkB,EAAEikD,cAAcrsE,UAC1F6+F,EAAAA,EAAAA,kCAAiC9tC,EAAO,kBAAxC8tC,CAA2Dz2E,IAE7D2iD,yBAA2B3iD,IACzBi2G,GAAgD,CAAEl3D,aAAc96B,OAAOjkB,EAAEikD,cAAcrsE,UACvF6+F,EAAAA,EAAAA,kCAAiC9tC,EAAO,eAAxC8tC,CAAwDz2E,IAE1D6iD,yBAA2B7iD,IACzBi2G,GAAgD,CAAEj3D,aAAc/6B,OAAOjkB,EAAEikD,cAAcrsE,UACvF6+F,EAAAA,EAAAA,kCAAiC9tC,EAAO,eAAxC8tC,CAAwDz2E,IAE1DgjD,oBAAsBhjD,IACpBi2G,GAAgD,CAAE/2D,YAAal/C,EAAEikD,cAAcC,UAC/EkyB,EAAe,cAAep2E,EAAEikD,cAAcC,YAIlD,mBAAClI,GAAOA,MACR,mBAACiE,GAAUA,CACTpQ,WAAYR,EAASK,KACrB8S,wBAA0BpQ,IACxB6jE,GAA6C,CAAE3mE,gBAAiB8C,IAChEooC,EAAmB,kBAAmBpoC,IAExCqQ,qBAAuB/tD,IACrBuhH,GAA6C,CAAEzmE,aAAc96C,IAC7D8lF,EAAmB,eAAgB9lF,IAErC2wD,oBAAsB5gE,IACpBwxH,GAA6C,CAAEx3E,YAAah6C,IAC5D+1F,EAAmB,cAAe/1F,IAEpC6gE,oBAAsB7gE,IACpBwxH,GAA6C,CAAEvxH,QAASD,IACxD+1F,EAAmB,cAAe/1F,IAEpC8gE,mBAAqB5tE,IACnBs+H,GAA6C,CAAE52E,WAAY1nD,IAC3D6iG,EAAmB,aAAc7iG,IAEnC6tE,oBAAsB7tE,IACpBs+H,GAA6C,CAAElmE,YAAap4D,IAC5D6iG,EAAmB,cAAe7iG,IAEpC8tE,sBAAwB9tE,IACtBs+H,GAA6C,CAAEjmE,cAAer4D,IAC9D6iG,EAAmB,gBAAiB7iG,IAEtC+tE,6BAA+B/tE,IAC7Bs+H,GAA6C,CAAE/lE,qBAAsBv4D,IACrE6iG,EAAmB,uBAAwB7iG,IAE7CguE,uBAAyBhuE,IACvBs+H,GAA6C,CAAE7lE,eAAgBz4D,IAC/D6iG,EAAmB,iBAAkB7iG,MAIzC,mBAACqkE,GAAOA,MACR,mBAACmD,GAAYA,CACXiI,aAAc/X,EAASmB,OACvBgS,wBAA0BpQ,IACxB6jE,GAA+C,CAAE3mE,gBAAiB8C,IAClEuoC,EAAqB,kBAAmBvoC,IAE1CqQ,qBAAuB/tD,IACrBuhH,GAA+C,CAAEzmE,aAAc96C,IAC/DimF,EAAqB,eAAgBjmF,IAEvC2wD,oBAAsB5gE,IACpBwxH,GAA+C,CAAEx3E,YAAah6C,IAC9Dk2F,EAAqB,cAAel2F,IAEtC6gE,oBAAsB7gE,IACpBwxH,GAA+C,CAAEvxH,QAASD,IAC1Dk2F,EAAqB,cAAel2F,IAEtCwhE,sBAAwBtuE,IACtBs+H,GAA+C,CAAErlE,cAAej5D,IAChEgjG,EAAqB,gBAAiBhjG,IAExCuuE,qBAAuBvuE,IACrBs+H,GAA+C,CAAEplE,aAAcl5D,IAC/DgjG,EAAqB,eAAgBhjG,IAEvCwuE,4BAA8BxuE,IAC5Bs+H,GAA+C,CAAEnlE,oBAAqBn5D,IACtEgjG,EAAqB,sBAAuBhjG,IAE9CyuE,2BAA6BzuE,IAC3Bs+H,GAA+C,CAAEllE,mBAAoBp5D,IACrEgjG,EAAqB,qBAAsBhjG,IAE7C0uE,0BAA4B1uE,IAC1Bs+H,GAA+C,CAAEjlE,kBAAmBr5D,IACpEgjG,EAAqB,oBAAqBhjG,IAE5C2uE,uBAAyB3uE,IACvBs+H,GAA+C,CAAEhlE,eAAgBt5D,IACjEgjG,EAAqB,iBAAkBhjG,IAEzC4uE,qBAAuB5uE,IACrBs+H,GAA+C,CAAEpkE,aAAcl6D,IAC/DgjG,EAAqB,eAAgBhjG,IAEvC6uE,wBAA0B7uE,IACxBs+H,GAA+C,CAAE/kE,gBAAiBv5D,IAClEgjG,EAAqB,kBAAmBhjG,IAE1C8uE,mBAAqB9uE,IACnBs+H,GAA+C,CAAE9kE,WAAYx5D,IAC7DgjG,EAAqB,aAAchjG,IAErC+uE,0BAA4B/uE,IAC1Bs+H,GAA+C,CAAE7kE,kBAAmBz5D,IACpEgjG,EAAqB,oBAAqBhjG,IAE5CgvE,mBAAqBhvE,IACnBs+H,GAA+C,CAAE5kE,WAAY15D,IAC7DgjG,EAAqB,aAAchjG,IAErCivE,yBAA2BjvE,IACzBs+H,GAA+C,CAAE3kE,iBAAkB35D,IACnEgjG,EAAqB,mBAAoBhjG,IAE3CkvE,4BAA8BlvE,IAC5Bs+H,GAA+C,CAAE1kE,oBAAqB55D,IACtEgjG,EAAqB,sBAAuBhjG,IAE9CmvE,oBAAsBnvE,IACpBs+H,GAA+C,CAAEvkE,YAAa/5D,IAC9DgjG,EAAqB,cAAehjG,IAEtCovE,yCAA2CpvE,IACzCs+H,GAA+C,CAAEzkE,iCAAkC75D,IACnFgjG,EAAqB,mCAAoChjG,IAE3DqvE,4CAA8CrvE,IAC5Cs+H,GAA+C,CAAExkE,oCAAqC95D,IACtFgjG,EAAqB,sCAAuChjG,IAE9DsvE,sBAAwBtvE,IACtBs+H,GAA+C,CAAEl7E,cAAepjD,IAChEgjG,EAAqB,gBAAiBhjG,IAExCuvE,2BAA6BvvE,IAC3Bs+H,GAA+C,CAAE/6E,wBAAyBvjD,IAC1EgjG,EAAqB,0BAA2BhjG,IAElDwvE,0BAA4BxvE,IAC1Bs+H,GAA+C,CAAE96E,uBAAwBxjD,IACzEgjG,EAAqB,yBAA0BhjG,MAInD,mBAACqkE,GAAOA,MACR,mBAACnV,GAAgBA,CAACmN,YAAa3E,EAAS2E,YAAauW,oBA9bzBvW,IAE5BA,EAAYr7D,OAAS,GAAKq7D,EAAY,GAAGF,aAAeE,EAAY,GAAGI,aDnE7E8V,EAAAA,EAAAA,mBAAkB,iDCsEhBd,EAAgB,SACX7xE,GAAAA,CACH83D,SAAU,SACL93D,EAAQ83D,UAAQ,CACnB2E,sBAsbA,mBAACgI,GAAOA,MACR,mBAAC/C,EAAAA,MAAKA,CAACxV,MAAO4K,EAAOoP,eAAeha,MAAO6P,YAAajF,EAAOoP,eAAezZ,SAC5E,mBAACif,EAAAA,OAAMA,CACL7Z,UAAU,UACVxxD,MAAOy3D,EAASoO,iBAAkB,EAClCpU,cAAagF,EAAOoP,eAAeC,OACnC5E,SAAW94C,IDlgBoC,CAAC2oC,KAC1DuhB,EAAAA,EAAAA,mBAAkB,+CAAgDvhB,ICkgBtDstE,CAAuD,CAAEh7B,gBAAiBj7E,EAAEikD,cAAcC,UAC1FkyB,EAAe,iBAAkBp2E,EAAEikD,cAAcC,aAItD5tC,EAAAA,OAAO4kE,4BAA6BC,EAAAA,GAAAA,KAAW7kE,EAAAA,OAAO2lC,UAAUv3D,QAAS,WACxE,mBAACu0D,EAAAA,MAAKA,CAACxV,MAAO4K,EAAOmP,iBAAiB/Z,MAAO6P,YAAajF,EAAOmP,iBAAiBxZ,SAChF,mBAACif,EAAAA,OAAMA,CACL7Z,UAAU,UACVxxD,MAAOy3D,EAAS+rC,yBAA0B,EAC1CtiC,SAAW94C,GAAMo2E,EAAe,yBAA0Bp2E,EAAEikD,cAAcC,YAIhF,mBAAC1I,GAAgBA,CAAC9W,MAAM,mBACrB01C,EAAe3iG,IAAI,EAAGojG,UAASjjG,SAAS8E,IAErC,mBAACutD,EAAAA,MAAKA,CAACxwD,IAAKiD,EAAGwtD,UAAU,OACvB,mBAAC+O,EAAAA,MAAKA,CAACxV,MAAO,UAAW6X,aAAY,WACnC,mBAACpC,EAAAA,MAAKA,CACJthE,MAAOijG,EACP7hC,YAAa,UACbF,SAAWuiC,IACT,IAAIC,EAAclB,EAAev9F,SACjCy+F,EAAY5+F,GAAK,CAAEm+F,QAASQ,EAAYr7D,OAAOpoC,MAAOA,SACtDyiG,EAAkBiB,IAEpBvyB,OAAQ,MDxhB1BmB,EAAAA,EAAAA,mBAAkB,6CC0hBE0wB,EAAuBR,OAI7B,mBAACnhC,EAAAA,MAAKA,CAACxV,MAAO,QAAS6X,aAAY,SACjC,mBAACpC,EAAAA,MAAKA,CACJthE,MAAOA,EACPohE,YAAa,QACbF,SAAWuiC,IACT,IAAIC,EAAclB,EAAev9F,SACjCy+F,EAAY5+F,GAAK,CAAEm+F,UAASjjG,MAAOyjG,EAAYr7D,OAAOpoC,OACtDyiG,EAAkBiB,IAEpBvyB,OAAQ,KACN6xB,EAAuBR,SAOnC,mBAAC/gC,EAAAA,OAAMA,CACLC,QAAQ,YACR8O,KAAK,OACL7qE,KAAK,SACLw7D,QAAS,KACPshC,EAAkB,IAAID,EAAgB,CAAES,QAAS,GAAIjjG,MAAO,QAE/D,0B8InpBEu+H,GAAS,IAAIC,EAAAA,iBAAgD7rE,IACvE8rE,gBAAgBV,IAChBW,eDE2B3tE,IAC5B,MAAM,WAAE/S,EAAY9sB,MAAOurG,EAAU,WAAEJ,GAAetrE,EAChD7/B,EDZsB,CAACurG,QACuB36H,IAAtB26H,EAAWxiF,OAEhCwiF,EAGLW,GAAYX,GACPD,GAAiBC,GAGnBA,ECEOkC,CAAelC,GAE7B,OACE,sCACE,mBAAClrE,MAAAA,CAAIC,UAAW,WAAaJ,GAAOrF,YAAY3R,WAC9C,mBAACkuB,GAAkBA,GAAAA,GAAAA,CAAAA,EAAKvX,GAAAA,CAAO7/B,MAAOA,EAAO8sB,WAAYA,KACzD,mBAACyjB,EAAAA,OAAMA,CAACN,QAAS,IAAMk7D,KAAc,cAEvC,mBAACkB,GAAAA,GAAAA,GAAAA,CAAAA,EAAmBxsE,GAAAA,CAAO7/B,MAAOA,SCTxC0tG,EAAAA,EAAAA,gBAAelgF,UACbmgF,EAAAA,qBACA,EAAGxwB,SAAWywB,cAAaC,QAAOhrD,iBAAgBirD,e,IACtBA,EAA1B,MAAMC,EAA0C,QAAtBD,EAAAA,EAAQE,GAAAA,WAARF,IAAAA,OAAAA,EAAAA,EAAwB1oG,OAAQ6oG,IAAOA,EAAE/hE,MCrBzB,IAACrM,GDsBtCkuE,aAAAA,EAAAA,EAAmBl+H,UCtBmBgwD,E,mUD0BZ,EAC7BquE,0BAA2BC,GAC3BC,gBAAiBvrD,EACjBwrD,aAAcT,EACdU,OAAQT,GCIgB,CAACC,IAC7B,MAAMj/H,EAAwB,CAC5B0/H,YAAa,EACbC,qBAAsB,EACtBC,oBAAqB,EACrBC,0BAA2B,EAC3BC,sBAAuB,EAEvBC,gBAAiB,EACjBC,yBAA0B,EAC1BC,gCAAiC,EACjCC,mCAAoC,EACpCC,wBAAyB,EACzBC,8BAA+B,EAC/BC,qCAAsC,EACtCC,wCAAyC,EACzCC,0BAA2B,EAC3BC,iCAAkC,EAClCC,6BAA8B,EAC9BC,0BAA2B,EAC3BC,qBAAsB,GA6DxB,OA1DA1B,EAAQ75H,QAASg6H,IACf,GAAIA,EAAEnlF,aAAeH,EAAW8a,IAC9B50D,EAAE0/H,cAEEN,EAAE/kF,YAAcb,EAAUc,MAC5Bt6C,EAAE2/H,uBACOP,EAAE/kF,YAAcb,EAAU2K,KACnCnkD,EAAE4/H,sBACOR,EAAE/kF,YAAcb,EAAU6K,WACnCrkD,EAAE6/H,4BACOT,EAAE/kF,YAAcb,EAAUwK,QACnChkD,EAAE8/H,6BAEC,GAAIV,EAAEnlF,aAAeH,EAAW4Z,QAAS,C,IAmC1C0rE,EAIAA,EApCJ,GAFAp/H,EAAE+/H,mBAEGX,EAAEjlF,eACL,OAGF,GAAIilF,EAAEjlF,eAAeE,YAAcb,EAAUc,MAC3Ct6C,EAAEggI,2BAEEZ,EAAEjlF,eAAepxB,OAASwwB,EAAY6O,UACxCpoD,EAAEkgI,qCAEFlgI,EAAEigI,uCAEC,GAAIb,EAAEjlF,eAAeE,YAAcb,EAAU2K,KAClDnkD,EAAEmgI,+BACG,GAAIf,EAAEjlF,eAAeE,YAAcb,EAAU6K,WAClDrkD,EAAEogI,gCAEEhB,EAAEjlF,eAAepxB,OAASwwB,EAAY+K,MACxCtkD,EAAEsgI,0CAEFtgI,EAAEqgI,4CAEC,GAAIjB,EAAEjlF,eAAeE,YAAcb,EAAUwK,OAAQ,C,IAGtDo7E,EAFJp/H,EAAEugI,6BAEuB,QAArBnB,EAAAA,EAAEjlF,eAAeK,YAAjB4kF,IAAAA,OAAAA,EAAAA,EAAuBt7E,eACzB9jD,EAAEygI,+BAEFzgI,EAAEwgI,kCAEN,EAEyB,QAArBpB,EAAAA,EAAEjlF,eAAeK,YAAjB4kF,IAAAA,OAAAA,EAAAA,EAAuBxhE,YACzB59D,EAAE0gI,6BAGqB,QAArBtB,EAAAA,EAAEjlF,eAAeK,YAAjB4kF,IAAAA,OAAAA,EAAAA,EAAuBt4E,cACzB9mD,EAAE2gI,sBAEN,IAGK3gI,GDpFA4gI,CAAe1B,KC9BtB3sD,EAAAA,EAAAA,mBAAkB,yCAA0CvhB,K","sources":["webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/gt.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/lt.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/sort.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/to-comparators.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/diff.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/intersects.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/internal/lrucache.js","webpack://grafana-clickhouse-datasource/../node_modules/moo/moo.js","webpack://grafana-clickhouse-datasource/external amd \"rxjs\"","webpack://grafana-clickhouse-datasource/external amd \"module\"","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/simplify.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/patch.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/satisfies.js","webpack://grafana-clickhouse-datasource/external amd \"@grafana/ui\"","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/gte.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/compare-build.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/rcompare.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/major.js","webpack://grafana-clickhouse-datasource/external amd \"lodash\"","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/min-version.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/cmp.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/internal/identifiers.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/ltr.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/coerce.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/compare.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/outside.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/parse.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/inc.js","webpack://grafana-clickhouse-datasource/external amd \"react\"","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/minor.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/rsort.js","webpack://grafana-clickhouse-datasource/external amd \"@emotion/css\"","webpack://grafana-clickhouse-datasource/../node_modules/js-sql-parser/dist/parser/sqlParser.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/internal/re.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/eq.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/compare-loose.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/lte.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/internal/parse-options.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/valid.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/valid.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/neq.js","webpack://grafana-clickhouse-datasource/external amd \"@grafana/data\"","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/max-satisfying.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/gtr.js","webpack://grafana-clickhouse-datasource/../node_modules/pgsql-ast-parser/index.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/min-satisfying.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/classes/semver.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/clean.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/classes/range.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/index.js","webpack://grafana-clickhouse-datasource/external amd \"@grafana/runtime\"","webpack://grafana-clickhouse-datasource/../node_modules/nearley/lib/nearley.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/subset.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/classes/comparator.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/prerelease.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/internal/constants.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/internal/debug.js","webpack://grafana-clickhouse-datasource/webpack/bootstrap","webpack://grafana-clickhouse-datasource/webpack/runtime/compat get default export","webpack://grafana-clickhouse-datasource/webpack/runtime/define property getters","webpack://grafana-clickhouse-datasource/webpack/runtime/hasOwnProperty shorthand","webpack://grafana-clickhouse-datasource/webpack/runtime/make namespace object","webpack://grafana-clickhouse-datasource/webpack/runtime/publicPath","webpack://grafana-clickhouse-datasource/./node_modules/grafana-public-path.js","webpack://grafana-clickhouse-datasource/./types/queryBuilder.ts","webpack://grafana-clickhouse-datasource/./types/sql.ts","webpack://grafana-clickhouse-datasource/./data/ast.ts","webpack://grafana-clickhouse-datasource/./data/adHocFilter.ts","webpack://grafana-clickhouse-datasource/../node_modules/@grafana/schema/dist/esm/common/common.gen.mjs","webpack://grafana-clickhouse-datasource/./data/logs.ts","webpack://grafana-clickhouse-datasource/./otel.ts","webpack://grafana-clickhouse-datasource/./data/sqlGenerator.ts","webpack://grafana-clickhouse-datasource/./utils/version.ts","webpack://grafana-clickhouse-datasource/./data/utils.ts","webpack://grafana-clickhouse-datasource/./selectors.ts","webpack://grafana-clickhouse-datasource/./components/LogsContextPanel.tsx","webpack://grafana-clickhouse-datasource/./data/CHDatasource.ts","webpack://grafana-clickhouse-datasource/./components/ui/CertificationKey.tsx","webpack://grafana-clickhouse-datasource/./types/config.ts","webpack://grafana-clickhouse-datasource/./components/experimental/ConfigSection/GenericConfigSection.tsx","webpack://grafana-clickhouse-datasource/./components/experimental/ConfigSection/ConfigSection.tsx","webpack://grafana-clickhouse-datasource/./components/experimental/ConfigSection/ConfigSubSection.tsx","webpack://grafana-clickhouse-datasource/./components/experimental/ConfigSection/DataSourceDescription.tsx","webpack://grafana-clickhouse-datasource/./components/Divider.tsx","webpack://grafana-clickhouse-datasource/./labels.ts","webpack://grafana-clickhouse-datasource/./components/configEditor/DefaultDatabaseTableConfig.tsx","webpack://grafana-clickhouse-datasource/./components/configEditor/QuerySettingsConfig.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/OtelVersionSelect.tsx","webpack://grafana-clickhouse-datasource/./components/configEditor/LabeledInput.tsx","webpack://grafana-clickhouse-datasource/./styles.ts","webpack://grafana-clickhouse-datasource/./components/queryBuilder/Switch.tsx","webpack://grafana-clickhouse-datasource/./components/configEditor/LogsConfig.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/DurationUnitSelect.tsx","webpack://grafana-clickhouse-datasource/./components/configEditor/TracesConfig.tsx","webpack://grafana-clickhouse-datasource/./components/configEditor/HttpHeadersConfig.tsx","webpack://grafana-clickhouse-datasource/./views/CHConfigEditorHooks.ts","webpack://grafana-clickhouse-datasource/./views/config-v2/tracking.ts","webpack://grafana-clickhouse-datasource/./components/configEditor/AliasTableConfig.tsx","webpack://grafana-clickhouse-datasource/./views/trackingV1.ts","webpack://grafana-clickhouse-datasource/./views/CHConfigEditor.tsx","webpack://grafana-clickhouse-datasource/./views/config-v2/labelsV2.ts","webpack://grafana-clickhouse-datasource/../node_modules/@grafana/e2e-selectors/dist/esm/resolver.mjs","webpack://grafana-clickhouse-datasource/../node_modules/@grafana/e2e-selectors/dist/esm/selectors/constants.mjs","webpack://grafana-clickhouse-datasource/../node_modules/@grafana/e2e-selectors/dist/esm/selectors/components.mjs","webpack://grafana-clickhouse-datasource/../node_modules/@grafana/e2e-selectors/dist/esm/selectors/index.mjs","webpack://grafana-clickhouse-datasource/../node_modules/@grafana/e2e-selectors/dist/esm/selectors/pages.mjs","webpack://grafana-clickhouse-datasource/./views/config-v2/constants.ts","webpack://grafana-clickhouse-datasource/./views/config-v2/HttpHeadersConfigV2.tsx","webpack://grafana-clickhouse-datasource/./views/config-v2/HttpProtocolSettingsSection.tsx","webpack://grafana-clickhouse-datasource/./views/config-v2/ServerAndEncryptionSection.tsx","webpack://grafana-clickhouse-datasource/./views/config-v2/LeftSidebar.tsx","webpack://grafana-clickhouse-datasource/./views/config-v2/AdditionalSettingsSection.tsx","webpack://grafana-clickhouse-datasource/./views/config-v2/DatabaseCredentialsSection.tsx","webpack://grafana-clickhouse-datasource/./views/config-v2/TLSSSLSettingsSection.tsx","webpack://grafana-clickhouse-datasource/./views/config-v2/CHConfigEditor.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/utils.ts","webpack://grafana-clickhouse-datasource/./components/queryBuilder/EditorTypeSwitcher.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/ColumnsEditor.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/ColumnSelect.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/OrderByEditor.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/LimitEditor.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/FilterEditor.tsx","webpack://grafana-clickhouse-datasource/./hooks/useUniqueMapKeys.ts","webpack://grafana-clickhouse-datasource/./data/columnFilters.ts","webpack://grafana-clickhouse-datasource/./hooks/useBuilderOptionChanges.ts","webpack://grafana-clickhouse-datasource/./hooks/useColumns.ts","webpack://grafana-clickhouse-datasource/./hooks/useBuilderOptionsState.ts","webpack://grafana-clickhouse-datasource/./hooks/useIsNewQuery.ts","webpack://grafana-clickhouse-datasource/./components/queryBuilder/views/LogsQueryBuilder.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/views/logsQueryBuilderHooks.ts","webpack://grafana-clickhouse-datasource/./components/queryBuilder/ModeSwitch.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/AggregateEditor.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/GroupByEditor.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/views/TimeSeriesQueryBuilder.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/views/timeSeriesQueryBuilderHooks.ts","webpack://grafana-clickhouse-datasource/./components/queryBuilder/views/TableQueryBuilder.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/SqlPreview.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/DatabaseTableSelect.tsx","webpack://grafana-clickhouse-datasource/./hooks/useDatabases.ts","webpack://grafana-clickhouse-datasource/./hooks/useTables.ts","webpack://grafana-clickhouse-datasource/./components/queryBuilder/QueryTypeSwitcher.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/TraceIdInput.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/views/TraceQueryBuilder.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/views/traceQueryBuilderHooks.ts","webpack://grafana-clickhouse-datasource/./components/queryBuilder/QueryBuilder.tsx","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/expandPhrases.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/lexer/token.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/bigquery/bigquery.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/bigquery/bigquery.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/bigquery/bigquery.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/db2/db2.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/db2/db2.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/db2/db2.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/db2i/db2i.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/db2i/db2i.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/db2i/db2i.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/duckdb/duckdb.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/duckdb/duckdb.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/duckdb/duckdb.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/hive/hive.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/hive/hive.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/hive/hive.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/mariadb/likeMariaDb.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/mariadb/mariadb.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/mariadb/mariadb.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/mariadb/mariadb.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/mysql/mysql.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/mysql/mysql.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/mysql/mysql.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/tidb/tidb.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/tidb/tidb.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/tidb/tidb.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/n1ql/n1ql.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/n1ql/n1ql.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/n1ql/n1ql.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/plsql/plsql.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/plsql/plsql.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/plsql/plsql.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/postgresql/postgresql.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/postgresql/postgresql.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/postgresql/postgresql.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/redshift/redshift.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/redshift/redshift.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/redshift/redshift.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/spark/spark.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/spark/spark.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/spark/spark.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/sqlite/sqlite.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/sqlite/sqlite.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/sqlite/sqlite.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/sql/sql.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/sql/sql.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/sql/sql.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/trino/trino.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/trino/trino.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/trino/trino.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/transactsql/transactsql.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/transactsql/transactsql.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/transactsql/transactsql.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/singlestoredb/singlestoredb.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/singlestoredb/singlestoredb.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/singlestoredb/singlestoredb.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/snowflake/snowflake.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/snowflake/snowflake.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/snowflake/snowflake.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/utils.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/lexer/regexUtil.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/lexer/regexFactory.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/lexer/lineColFromIndex.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/lexer/TokenizerEngine.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/lexer/NestedComment.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/lexer/Tokenizer.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/dialect.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/formatter/config.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/formatter/Params.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/lexer/disambiguateTokens.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/parser/LexerAdapter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/parser/ast.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/parser/grammar.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/parser/createParser.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/formatter/Layout.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/formatter/tabularStyle.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/formatter/Indentation.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/formatter/InlineLayout.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/formatter/ExpressionFormatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/formatter/Formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/validateConfig.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/sqlFormatter.js","webpack://grafana-clickhouse-datasource/./components/sqlProvider.ts","webpack://grafana-clickhouse-datasource/./ch-parser/types.ts","webpack://grafana-clickhouse-datasource/./ch-parser/helpers.ts","webpack://grafana-clickhouse-datasource/./ch-parser/lexer.ts","webpack://grafana-clickhouse-datasource/./ch-parser/pluginMacros.ts","webpack://grafana-clickhouse-datasource/./ch-parser/parser.ts","webpack://grafana-clickhouse-datasource/./components/suggestions.ts","webpack://grafana-clickhouse-datasource/./data/validate.ts","webpack://grafana-clickhouse-datasource/./hooks/useSchemaSuggestionsProvider.ts","webpack://grafana-clickhouse-datasource/./components/QueryToolbox.tsx","webpack://grafana-clickhouse-datasource/./components/SqlEditor.tsx","webpack://grafana-clickhouse-datasource/./data/migration.ts","webpack://grafana-clickhouse-datasource/./views/CHQueryEditor.tsx","webpack://grafana-clickhouse-datasource/./module.ts","webpack://grafana-clickhouse-datasource/./tracking.ts"],"sourcesContent":["'use strict'\n\nconst compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","'use strict'\n\nconst compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","'use strict'\n\nconst compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","'use strict'\n\nconst Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","'use strict'\n\nconst parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // If the main part has no difference\n    if (lowVersion.compareMain(highVersion) === 0) {\n      if (lowVersion.minor && !lowVersion.patch) {\n        return 'minor'\n      }\n      return 'patch'\n    }\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","'use strict'\n\nconst Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","'use strict'\n\nclass LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory) /* global define */\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory()\n  } else {\n    root.moo = factory()\n  }\n}(this, function() {\n  'use strict';\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty\n  var toString = Object.prototype.toString\n  var hasSticky = typeof new RegExp().sticky === 'boolean'\n\n  /***************************************************************************/\n\n  function isRegExp(o) { return o && toString.call(o) === '[object RegExp]' }\n  function isObject(o) { return o && typeof o === 'object' && !isRegExp(o) && !Array.isArray(o) }\n\n  function reEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n  }\n  function reGroups(s) {\n    var re = new RegExp('|' + s)\n    return re.exec('').length - 1\n  }\n  function reCapture(s) {\n    return '(' + s + ')'\n  }\n  function reUnion(regexps) {\n    if (!regexps.length) return '(?!)'\n    var source =  regexps.map(function(s) {\n      return \"(?:\" + s + \")\"\n    }).join('|')\n    return \"(?:\" + source + \")\"\n  }\n\n  function regexpOrLiteral(obj) {\n    if (typeof obj === 'string') {\n      return '(?:' + reEscape(obj) + ')'\n\n    } else if (isRegExp(obj)) {\n      // TODO: consider /u support\n      if (obj.ignoreCase) throw new Error('RegExp /i flag not allowed')\n      if (obj.global) throw new Error('RegExp /g flag is implied')\n      if (obj.sticky) throw new Error('RegExp /y flag is implied')\n      if (obj.multiline) throw new Error('RegExp /m flag is implied')\n      return obj.source\n\n    } else {\n      throw new Error('Not a pattern: ' + obj)\n    }\n  }\n\n  function pad(s, length) {\n    if (s.length > length) {\n      return s\n    }\n    return Array(length - s.length + 1).join(\" \") + s\n  }\n\n  function lastNLines(string, numLines) {\n    var position = string.length\n    var lineBreaks = 0;\n    while (true) {\n      var idx = string.lastIndexOf(\"\\n\", position - 1)\n      if (idx === -1) {\n        break;\n      } else {\n        lineBreaks++\n      }\n      position = idx\n      if (lineBreaks === numLines) {\n        break;\n      }\n      if (position === 0) {\n        break;\n      }\n    }\n    var startPosition = \n      lineBreaks < numLines ?\n      0 : \n      position + 1\n    return string.substring(startPosition).split(\"\\n\")\n  }\n\n  function objectToRules(object) {\n    var keys = Object.getOwnPropertyNames(object)\n    var result = []\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      var thing = object[key]\n      var rules = [].concat(thing)\n      if (key === 'include') {\n        for (var j = 0; j < rules.length; j++) {\n          result.push({include: rules[j]})\n        }\n        continue\n      }\n      var match = []\n      rules.forEach(function(rule) {\n        if (isObject(rule)) {\n          if (match.length) result.push(ruleOptions(key, match))\n          result.push(ruleOptions(key, rule))\n          match = []\n        } else {\n          match.push(rule)\n        }\n      })\n      if (match.length) result.push(ruleOptions(key, match))\n    }\n    return result\n  }\n\n  function arrayToRules(array) {\n    var result = []\n    for (var i = 0; i < array.length; i++) {\n      var obj = array[i]\n      if (obj.include) {\n        var include = [].concat(obj.include)\n        for (var j = 0; j < include.length; j++) {\n          result.push({include: include[j]})\n        }\n        continue\n      }\n      if (!obj.type) {\n        throw new Error('Rule has no type: ' + JSON.stringify(obj))\n      }\n      result.push(ruleOptions(obj.type, obj))\n    }\n    return result\n  }\n\n  function ruleOptions(type, obj) {\n    if (!isObject(obj)) {\n      obj = { match: obj }\n    }\n    if (obj.include) {\n      throw new Error('Matching rules cannot also include states')\n    }\n\n    // nb. error and fallback imply lineBreaks\n    var options = {\n      defaultType: type,\n      lineBreaks: !!obj.error || !!obj.fallback,\n      pop: false,\n      next: null,\n      push: null,\n      error: false,\n      fallback: false,\n      value: null,\n      type: null,\n      shouldThrow: false,\n    }\n\n    // Avoid Object.assign(), so we support IE9+\n    for (var key in obj) {\n      if (hasOwnProperty.call(obj, key)) {\n        options[key] = obj[key]\n      }\n    }\n\n    // type transform cannot be a string\n    if (typeof options.type === 'string' && type !== options.type) {\n      throw new Error(\"Type transform cannot be a string (type '\" + options.type + \"' for token '\" + type + \"')\")\n    }\n\n    // convert to array\n    var match = options.match\n    options.match = Array.isArray(match) ? match : match ? [match] : []\n    options.match.sort(function(a, b) {\n      return isRegExp(a) && isRegExp(b) ? 0\n           : isRegExp(b) ? -1 : isRegExp(a) ? +1 : b.length - a.length\n    })\n    return options\n  }\n\n  function toRules(spec) {\n    return Array.isArray(spec) ? arrayToRules(spec) : objectToRules(spec)\n  }\n\n  var defaultErrorRule = ruleOptions('error', {lineBreaks: true, shouldThrow: true})\n  function compileRules(rules, hasStates) {\n    var errorRule = null\n    var fast = Object.create(null)\n    var fastAllowed = true\n    var unicodeFlag = null\n    var groups = []\n    var parts = []\n\n    // If there is a fallback rule, then disable fast matching\n    for (var i = 0; i < rules.length; i++) {\n      if (rules[i].fallback) {\n        fastAllowed = false\n      }\n    }\n\n    for (var i = 0; i < rules.length; i++) {\n      var options = rules[i]\n\n      if (options.include) {\n        // all valid inclusions are removed by states() preprocessor\n        throw new Error('Inheritance is not allowed in stateless lexers')\n      }\n\n      if (options.error || options.fallback) {\n        // errorRule can only be set once\n        if (errorRule) {\n          if (!options.fallback === !errorRule.fallback) {\n            throw new Error(\"Multiple \" + (options.fallback ? \"fallback\" : \"error\") + \" rules not allowed (for token '\" + options.defaultType + \"')\")\n          } else {\n            throw new Error(\"fallback and error are mutually exclusive (for token '\" + options.defaultType + \"')\")\n          }\n        }\n        errorRule = options\n      }\n\n      var match = options.match.slice()\n      if (fastAllowed) {\n        while (match.length && typeof match[0] === 'string' && match[0].length === 1) {\n          var word = match.shift()\n          fast[word.charCodeAt(0)] = options\n        }\n      }\n\n      // Warn about inappropriate state-switching options\n      if (options.pop || options.push || options.next) {\n        if (!hasStates) {\n          throw new Error(\"State-switching options are not allowed in stateless lexers (for token '\" + options.defaultType + \"')\")\n        }\n        if (options.fallback) {\n          throw new Error(\"State-switching options are not allowed on fallback tokens (for token '\" + options.defaultType + \"')\")\n        }\n      }\n\n      // Only rules with a .match are included in the RegExp\n      if (match.length === 0) {\n        continue\n      }\n      fastAllowed = false\n\n      groups.push(options)\n\n      // Check unicode flag is used everywhere or nowhere\n      for (var j = 0; j < match.length; j++) {\n        var obj = match[j]\n        if (!isRegExp(obj)) {\n          continue\n        }\n\n        if (unicodeFlag === null) {\n          unicodeFlag = obj.unicode\n        } else if (unicodeFlag !== obj.unicode && options.fallback === false) {\n          throw new Error('If one rule is /u then all must be')\n        }\n      }\n\n      // convert to RegExp\n      var pat = reUnion(match.map(regexpOrLiteral))\n\n      // validate\n      var regexp = new RegExp(pat)\n      if (regexp.test(\"\")) {\n        throw new Error(\"RegExp matches empty string: \" + regexp)\n      }\n      var groupCount = reGroups(pat)\n      if (groupCount > 0) {\n        throw new Error(\"RegExp has capture groups: \" + regexp + \"\\nUse (?: … ) instead\")\n      }\n\n      // try and detect rules matching newlines\n      if (!options.lineBreaks && regexp.test('\\n')) {\n        throw new Error('Rule should declare lineBreaks: ' + regexp)\n      }\n\n      // store regex\n      parts.push(reCapture(pat))\n    }\n\n\n    // If there's no fallback rule, use the sticky flag so we only look for\n    // matches at the current index.\n    //\n    // If we don't support the sticky flag, then fake it using an irrefutable\n    // match (i.e. an empty pattern).\n    var fallbackRule = errorRule && errorRule.fallback\n    var flags = hasSticky && !fallbackRule ? 'ym' : 'gm'\n    var suffix = hasSticky || fallbackRule ? '' : '|'\n\n    if (unicodeFlag === true) flags += \"u\"\n    var combined = new RegExp(reUnion(parts) + suffix, flags)\n    return {regexp: combined, groups: groups, fast: fast, error: errorRule || defaultErrorRule}\n  }\n\n  function compile(rules) {\n    var result = compileRules(toRules(rules))\n    return new Lexer({start: result}, 'start')\n  }\n\n  function checkStateGroup(g, name, map) {\n    var state = g && (g.push || g.next)\n    if (state && !map[state]) {\n      throw new Error(\"Missing state '\" + state + \"' (in token '\" + g.defaultType + \"' of state '\" + name + \"')\")\n    }\n    if (g && g.pop && +g.pop !== 1) {\n      throw new Error(\"pop must be 1 (in token '\" + g.defaultType + \"' of state '\" + name + \"')\")\n    }\n  }\n  function compileStates(states, start) {\n    var all = states.$all ? toRules(states.$all) : []\n    delete states.$all\n\n    var keys = Object.getOwnPropertyNames(states)\n    if (!start) start = keys[0]\n\n    var ruleMap = Object.create(null)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      ruleMap[key] = toRules(states[key]).concat(all)\n    }\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      var rules = ruleMap[key]\n      var included = Object.create(null)\n      for (var j = 0; j < rules.length; j++) {\n        var rule = rules[j]\n        if (!rule.include) continue\n        var splice = [j, 1]\n        if (rule.include !== key && !included[rule.include]) {\n          included[rule.include] = true\n          var newRules = ruleMap[rule.include]\n          if (!newRules) {\n            throw new Error(\"Cannot include nonexistent state '\" + rule.include + \"' (in state '\" + key + \"')\")\n          }\n          for (var k = 0; k < newRules.length; k++) {\n            var newRule = newRules[k]\n            if (rules.indexOf(newRule) !== -1) continue\n            splice.push(newRule)\n          }\n        }\n        rules.splice.apply(rules, splice)\n        j--\n      }\n    }\n\n    var map = Object.create(null)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      map[key] = compileRules(ruleMap[key], true)\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      var name = keys[i]\n      var state = map[name]\n      var groups = state.groups\n      for (var j = 0; j < groups.length; j++) {\n        checkStateGroup(groups[j], name, map)\n      }\n      var fastKeys = Object.getOwnPropertyNames(state.fast)\n      for (var j = 0; j < fastKeys.length; j++) {\n        checkStateGroup(state.fast[fastKeys[j]], name, map)\n      }\n    }\n\n    return new Lexer(map, start)\n  }\n\n  function keywordTransform(map) {\n\n    // Use a JavaScript Map to map keywords to their corresponding token type\n    // unless Map is unsupported, then fall back to using an Object:\n    var isMap = typeof Map !== 'undefined'\n    var reverseMap = isMap ? new Map : Object.create(null)\n\n    var types = Object.getOwnPropertyNames(map)\n    for (var i = 0; i < types.length; i++) {\n      var tokenType = types[i]\n      var item = map[tokenType]\n      var keywordList = Array.isArray(item) ? item : [item]\n      keywordList.forEach(function(keyword) {\n        if (typeof keyword !== 'string') {\n          throw new Error(\"keyword must be string (in keyword '\" + tokenType + \"')\")\n        }\n        if (isMap) {\n          reverseMap.set(keyword, tokenType)\n        } else {\n          reverseMap[keyword] = tokenType\n        }\n      })\n    }\n    return function(k) {\n      return isMap ? reverseMap.get(k) : reverseMap[k]\n    }\n  }\n\n  /***************************************************************************/\n\n  var Lexer = function(states, state) {\n    this.startState = state\n    this.states = states\n    this.buffer = ''\n    this.stack = []\n    this.reset()\n  }\n\n  Lexer.prototype.reset = function(data, info) {\n    this.buffer = data || ''\n    this.index = 0\n    this.line = info ? info.line : 1\n    this.col = info ? info.col : 1\n    this.queuedToken = info ? info.queuedToken : null\n    this.queuedText = info ? info.queuedText: \"\";\n    this.queuedThrow = info ? info.queuedThrow : null\n    this.setState(info ? info.state : this.startState)\n    this.stack = info && info.stack ? info.stack.slice() : []\n    return this\n  }\n\n  Lexer.prototype.save = function() {\n    return {\n      line: this.line,\n      col: this.col,\n      state: this.state,\n      stack: this.stack.slice(),\n      queuedToken: this.queuedToken,\n      queuedText: this.queuedText,\n      queuedThrow: this.queuedThrow,\n    }\n  }\n\n  Lexer.prototype.setState = function(state) {\n    if (!state || this.state === state) return\n    this.state = state\n    var info = this.states[state]\n    this.groups = info.groups\n    this.error = info.error\n    this.re = info.regexp\n    this.fast = info.fast\n  }\n\n  Lexer.prototype.popState = function() {\n    this.setState(this.stack.pop())\n  }\n\n  Lexer.prototype.pushState = function(state) {\n    this.stack.push(this.state)\n    this.setState(state)\n  }\n\n  var eat = hasSticky ? function(re, buffer) { // assume re is /y\n    return re.exec(buffer)\n  } : function(re, buffer) { // assume re is /g\n    var match = re.exec(buffer)\n    // will always match, since we used the |(?:) trick\n    if (match[0].length === 0) {\n      return null\n    }\n    return match\n  }\n\n  Lexer.prototype._getGroup = function(match) {\n    var groupCount = this.groups.length\n    for (var i = 0; i < groupCount; i++) {\n      if (match[i + 1] !== undefined) {\n        return this.groups[i]\n      }\n    }\n    throw new Error('Cannot find token type for matched text')\n  }\n\n  function tokenToString() {\n    return this.value\n  }\n\n  Lexer.prototype.next = function() {\n    var index = this.index\n\n    // If a fallback token matched, we don't need to re-run the RegExp\n    if (this.queuedGroup) {\n      var token = this._token(this.queuedGroup, this.queuedText, index)\n      this.queuedGroup = null\n      this.queuedText = \"\"\n      return token\n    }\n\n    var buffer = this.buffer\n    if (index === buffer.length) {\n      return // EOF\n    }\n\n    // Fast matching for single characters\n    var group = this.fast[buffer.charCodeAt(index)]\n    if (group) {\n      return this._token(group, buffer.charAt(index), index)\n    }\n\n    // Execute RegExp\n    var re = this.re\n    re.lastIndex = index\n    var match = eat(re, buffer)\n\n    // Error tokens match the remaining buffer\n    var error = this.error\n    if (match == null) {\n      return this._token(error, buffer.slice(index, buffer.length), index)\n    }\n\n    var group = this._getGroup(match)\n    var text = match[0]\n\n    if (error.fallback && match.index !== index) {\n      this.queuedGroup = group\n      this.queuedText = text\n\n      // Fallback tokens contain the unmatched portion of the buffer\n      return this._token(error, buffer.slice(index, match.index), index)\n    }\n\n    return this._token(group, text, index)\n  }\n\n  Lexer.prototype._token = function(group, text, offset) {\n    // count line breaks\n    var lineBreaks = 0\n    if (group.lineBreaks) {\n      var matchNL = /\\n/g\n      var nl = 1\n      if (text === '\\n') {\n        lineBreaks = 1\n      } else {\n        while (matchNL.exec(text)) { lineBreaks++; nl = matchNL.lastIndex }\n      }\n    }\n\n    var token = {\n      type: (typeof group.type === 'function' && group.type(text)) || group.defaultType,\n      value: typeof group.value === 'function' ? group.value(text) : text,\n      text: text,\n      toString: tokenToString,\n      offset: offset,\n      lineBreaks: lineBreaks,\n      line: this.line,\n      col: this.col,\n    }\n    // nb. adding more props to token object will make V8 sad!\n\n    var size = text.length\n    this.index += size\n    this.line += lineBreaks\n    if (lineBreaks !== 0) {\n      this.col = size - nl + 1\n    } else {\n      this.col += size\n    }\n\n    // throw, if no rule with {error: true}\n    if (group.shouldThrow) {\n      var err = new Error(this.formatError(token, \"invalid syntax\"))\n      throw err;\n    }\n\n    if (group.pop) this.popState()\n    else if (group.push) this.pushState(group.push)\n    else if (group.next) this.setState(group.next)\n\n    return token\n  }\n\n  if (typeof Symbol !== 'undefined' && Symbol.iterator) {\n    var LexerIterator = function(lexer) {\n      this.lexer = lexer\n    }\n\n    LexerIterator.prototype.next = function() {\n      var token = this.lexer.next()\n      return {value: token, done: !token}\n    }\n\n    LexerIterator.prototype[Symbol.iterator] = function() {\n      return this\n    }\n\n    Lexer.prototype[Symbol.iterator] = function() {\n      return new LexerIterator(this)\n    }\n  }\n\n  Lexer.prototype.formatError = function(token, message) {\n    if (token == null) {\n      // An undefined token indicates EOF\n      var text = this.buffer.slice(this.index)\n      var token = {\n        text: text,\n        offset: this.index,\n        lineBreaks: text.indexOf('\\n') === -1 ? 0 : 1,\n        line: this.line,\n        col: this.col,\n      }\n    }\n    \n    var numLinesAround = 2\n    var firstDisplayedLine = Math.max(token.line - numLinesAround, 1)\n    var lastDisplayedLine = token.line + numLinesAround\n    var lastLineDigits = String(lastDisplayedLine).length\n    var displayedLines = lastNLines(\n        this.buffer, \n        (this.line - token.line) + numLinesAround + 1\n      )\n      .slice(0, 5)\n    var errorLines = []\n    errorLines.push(message + \" at line \" + token.line + \" col \" + token.col + \":\")\n    errorLines.push(\"\")\n    for (var i = 0; i < displayedLines.length; i++) {\n      var line = displayedLines[i]\n      var lineNo = firstDisplayedLine + i\n      errorLines.push(pad(String(lineNo), lastLineDigits) + \"  \" + line);\n      if (lineNo === token.line) {\n        errorLines.push(pad(\"\", lastLineDigits + token.col + 1) + \"^\")\n      }\n    }\n    return errorLines.join(\"\\n\")\n  }\n\n  Lexer.prototype.clone = function() {\n    return new Lexer(this.states, this.state)\n  }\n\n  Lexer.prototype.has = function(tokenType) {\n    return true\n  }\n\n\n  return {\n    compile: compile,\n    states: compileStates,\n    error: Object.freeze({error: true}),\n    fallback: Object.freeze({fallback: true}),\n    keywords: keywordTransform,\n  }\n\n}));\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1269__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1308__;","'use strict'\n\n// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","'use strict'\n\nconst Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2007__;","'use strict'\n\nconst compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","'use strict'\n\nconst compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","module.exports = __WEBPACK_EXTERNAL_MODULE__3241__;","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","'use strict'\n\nconst eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","'use strict'\n\nconst numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a === b ? 0 : a < b ? -1 : 1\n  }\n\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","'use strict'\n\nconst outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","'use strict'\n\nconst SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","module.exports = __WEBPACK_EXTERNAL_MODULE__5959__;","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","'use strict'\n\nconst compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6089__;","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar sqlParser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,8],$V1=[1,4],$V2=[2,4],$V3=[1,11],$V4=[1,10],$V5=[2,16],$V6=[1,14],$V7=[1,15],$V8=[1,16],$V9=[6,8],$Va=[2,146],$Vb=[1,19],$Vc=[1,20],$Vd=[16,33,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Ve=[16,18,32,33,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vf=[2,160],$Vg=[1,29],$Vh=[6,8,14,17,146,150,152,154],$Vi=[1,42],$Vj=[1,60],$Vk=[1,52],$Vl=[1,59],$Vm=[1,61],$Vn=[1,62],$Vo=[1,63],$Vp=[1,64],$Vq=[1,65],$Vr=[1,58],$Vs=[1,53],$Vt=[1,54],$Vu=[1,55],$Vv=[1,56],$Vw=[1,57],$Vx=[1,43],$Vy=[1,44],$Vz=[1,45],$VA=[1,34],$VB=[1,66],$VC=[16,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$VD=[6,8,14,17,150,152,154],$VE=[2,143],$VF=[1,75],$VG=[1,76],$VH=[6,8,14,17,43,133,138,144,146,150,152,154],$VI=[1,81],$VJ=[1,78],$VK=[1,79],$VL=[1,80],$VM=[1,82],$VN=[6,8,14,17,36,43,49,50,51,71,72,74,77,89,107,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$VO=[6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,107,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$VP=[1,103],$VQ=[1,101],$VR=[1,102],$VS=[1,97],$VT=[1,98],$VU=[1,99],$VV=[1,100],$VW=[1,104],$VX=[1,105],$VY=[1,106],$VZ=[1,107],$V_=[1,108],$V$=[1,109],$V01=[2,103],$V11=[6,8,14,17,34,36,43,45,49,50,51,71,72,74,77,79,81,89,91,92,93,94,95,96,97,98,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$V21=[6,8,14,17,34,36,43,45,49,50,51,71,72,74,77,79,81,89,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$V31=[1,110],$V41=[1,117],$V51=[2,64],$V61=[1,118],$V71=[16,35,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$V81=[16,29,35,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,119,195],$V91=[1,164],$Va1=[17,43],$Vb1=[2,59],$Vc1=[1,173],$Vd1=[1,171],$Ve1=[1,172],$Vf1=[6,8,138,146],$Vg1=[16,35,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vh1=[6,8,14,17,138,144,146,150,152,154],$Vi1=[6,8,14,17,36,43,49,50,51,71,72,74,77,89,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$Vj1=[6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,92,93,94,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$Vk1=[6,8,14,17,34,36,43,49,50,51,71,72,74,77,79,81,89,91,92,93,94,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$Vl1=[16,35,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vm1=[16,35,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vn1=[16,35,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vo1=[71,74,77],$Vp1=[16,35,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vq1=[1,233],$Vr1=[1,234],$Vs1=[6,8,14,17],$Vt1=[6,8,14,17,43,157],$Vu1=[1,251],$Vv1=[1,247],$Vw1=[2,197],$Vx1=[1,256],$Vy1=[1,257],$Vz1=[6,8,14,17,43,129,135,138,144,146,150,152,154,182],$VA1=[1,259],$VB1=[1,262],$VC1=[1,263],$VD1=[1,264],$VE1=[1,265],$VF1=[2,174],$VG1=[1,261],$VH1=[6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182],$VI1=[6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194],$VJ1=[2,199],$VK1=[1,271],$VL1=[6,8,14,17,135,138,144,146,150,152,154],$VM1=[1,280],$VN1=[2,179],$VO1=[170,173],$VP1=[2,210],$VQ1=[1,290],$VR1=[1,291],$VS1=[1,292],$VT1=[1,302],$VU1=[1,311],$VV1=[1,312],$VW1=[6,8,14,17,138,146,150,152,154],$VX1=[1,322],$VY1=[2,204],$VZ1=[1,328],$V_1=[16,152],$V$1=[6,8,14,17,152,154],$V02=[1,354];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"main\":3,\"selectClause\":4,\"semicolonOpt\":5,\"EOF\":6,\"unionClause\":7,\";\":8,\"unionClauseNotParenthesized\":9,\"unionClauseParenthesized\":10,\"order_by_opt\":11,\"limit_opt\":12,\"selectClauseParenthesized\":13,\"UNION\":14,\"distinctOpt\":15,\"(\":16,\")\":17,\"SELECT\":18,\"highPriorityOpt\":19,\"maxStateMentTimeOpt\":20,\"straightJoinOpt\":21,\"sqlSmallResultOpt\":22,\"sqlBigResultOpt\":23,\"sqlBufferResultOpt\":24,\"sqlCacheOpt\":25,\"sqlCalcFoundRowsOpt\":26,\"selectExprList\":27,\"selectDataSetOpt\":28,\"ALL\":29,\"DISTINCT\":30,\"DISTINCTROW\":31,\"HIGH_PRIORITY\":32,\"MAX_STATEMENT_TIME\":33,\"=\":34,\"NUMERIC\":35,\"STRAIGHT_JOIN\":36,\"SQL_SMALL_RESULT\":37,\"SQL_BIG_RESULT\":38,\"SQL_BUFFER_RESULT\":39,\"SQL_CACHE\":40,\"SQL_NO_CACHE\":41,\"SQL_CALC_FOUND_ROWS\":42,\",\":43,\"selectExpr\":44,\"*\":45,\"SELECT_EXPR_STAR\":46,\"expr\":47,\"selectExprAliasOpt\":48,\"AS\":49,\"IDENTIFIER\":50,\"STRING\":51,\"string\":52,\"number\":53,\"EXPONENT_NUMERIC\":54,\"HEX_NUMERIC\":55,\"boolean\":56,\"TRUE\":57,\"FALSE\":58,\"null\":59,\"NULL\":60,\"literal\":61,\"place_holder\":62,\"function_call\":63,\"function_call_param_list\":64,\"function_call_param\":65,\"identifier\":66,\"DOT\":67,\"identifier_list\":68,\"case_expr_opt\":69,\"when_then_list\":70,\"WHEN\":71,\"THEN\":72,\"case_when_else\":73,\"ELSE\":74,\"case_when\":75,\"CASE\":76,\"END\":77,\"simple_expr_prefix\":78,\"+\":79,\"simple_expr\":80,\"-\":81,\"~\":82,\"!\":83,\"BINARY\":84,\"expr_list\":85,\"ROW\":86,\"EXISTS\":87,\"{\":88,\"}\":89,\"bit_expr\":90,\"|\":91,\"&\":92,\"<<\":93,\">>\":94,\"/\":95,\"DIV\":96,\"MOD\":97,\"%\":98,\"^\":99,\"not_opt\":100,\"NOT\":101,\"escape_opt\":102,\"ESCAPE\":103,\"predicate\":104,\"IN\":105,\"BETWEEN\":106,\"AND\":107,\"SOUNDS\":108,\"LIKE\":109,\"REGEXP\":110,\"comparison_operator\":111,\">=\":112,\">\":113,\"<=\":114,\"<\":115,\"<>\":116,\"!=\":117,\"sub_query_data_set_opt\":118,\"ANY\":119,\"boolean_primary\":120,\"IS\":121,\"boolean_extra\":122,\"UNKNOWN\":123,\"&&\":124,\"||\":125,\"OR\":126,\"XOR\":127,\"where_opt\":128,\"WHERE\":129,\"group_by_opt\":130,\"group_by\":131,\"roll_up_opt\":132,\"WITH\":133,\"ROLLUP\":134,\"GROUP_BY\":135,\"group_by_order_by_item_list\":136,\"order_by\":137,\"ORDER_BY\":138,\"group_by_order_by_item\":139,\"sort_opt\":140,\"ASC\":141,\"DESC\":142,\"having_opt\":143,\"HAVING\":144,\"limit\":145,\"LIMIT\":146,\"OFFSET\":147,\"procedure_opt\":148,\"procedure\":149,\"PROCEDURE\":150,\"for_update_lock_in_share_mode_opt\":151,\"FOR\":152,\"UPDATE\":153,\"LOCK\":154,\"SHARE\":155,\"MODE\":156,\"FROM\":157,\"table_references\":158,\"partitionOpt\":159,\"escaped_table_reference\":160,\"table_reference\":161,\"OJ\":162,\"join_inner_cross\":163,\"INNER\":164,\"CROSS\":165,\"left_right\":166,\"LEFT\":167,\"RIGHT\":168,\"out_opt\":169,\"OUTER\":170,\"left_right_out_opt\":171,\"join_table\":172,\"JOIN\":173,\"table_factor\":174,\"join_condition\":175,\"on_join_condition\":176,\"NATURAL\":177,\"join_condition_opt\":178,\"ON\":179,\"USING\":180,\"partition_names\":181,\"PARTITION\":182,\"aliasOpt\":183,\"index_or_key\":184,\"INDEX\":185,\"KEY\":186,\"for_opt\":187,\"identifier_list_opt\":188,\"index_hint_list_opt\":189,\"index_hint_list\":190,\"index_hint\":191,\"USE\":192,\"IGNORE\":193,\"FORCE\":194,\"PLACE_HOLDER\":195,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",6:\"EOF\",8:\";\",14:\"UNION\",16:\"(\",17:\")\",18:\"SELECT\",29:\"ALL\",30:\"DISTINCT\",31:\"DISTINCTROW\",32:\"HIGH_PRIORITY\",33:\"MAX_STATEMENT_TIME\",34:\"=\",35:\"NUMERIC\",36:\"STRAIGHT_JOIN\",37:\"SQL_SMALL_RESULT\",38:\"SQL_BIG_RESULT\",39:\"SQL_BUFFER_RESULT\",40:\"SQL_CACHE\",41:\"SQL_NO_CACHE\",42:\"SQL_CALC_FOUND_ROWS\",43:\",\",45:\"*\",46:\"SELECT_EXPR_STAR\",49:\"AS\",50:\"IDENTIFIER\",51:\"STRING\",54:\"EXPONENT_NUMERIC\",55:\"HEX_NUMERIC\",57:\"TRUE\",58:\"FALSE\",60:\"NULL\",67:\"DOT\",71:\"WHEN\",72:\"THEN\",74:\"ELSE\",76:\"CASE\",77:\"END\",79:\"+\",81:\"-\",82:\"~\",83:\"!\",84:\"BINARY\",86:\"ROW\",87:\"EXISTS\",88:\"{\",89:\"}\",91:\"|\",92:\"&\",93:\"<<\",94:\">>\",95:\"/\",96:\"DIV\",97:\"MOD\",98:\"%\",99:\"^\",101:\"NOT\",103:\"ESCAPE\",105:\"IN\",106:\"BETWEEN\",107:\"AND\",108:\"SOUNDS\",109:\"LIKE\",110:\"REGEXP\",112:\">=\",113:\">\",114:\"<=\",115:\"<\",116:\"<>\",117:\"!=\",119:\"ANY\",121:\"IS\",123:\"UNKNOWN\",124:\"&&\",125:\"||\",126:\"OR\",127:\"XOR\",129:\"WHERE\",133:\"WITH\",134:\"ROLLUP\",135:\"GROUP_BY\",138:\"ORDER_BY\",141:\"ASC\",142:\"DESC\",144:\"HAVING\",146:\"LIMIT\",147:\"OFFSET\",150:\"PROCEDURE\",152:\"FOR\",153:\"UPDATE\",154:\"LOCK\",155:\"SHARE\",156:\"MODE\",157:\"FROM\",162:\"OJ\",164:\"INNER\",165:\"CROSS\",167:\"LEFT\",168:\"RIGHT\",170:\"OUTER\",173:\"JOIN\",177:\"NATURAL\",179:\"ON\",180:\"USING\",182:\"PARTITION\",185:\"INDEX\",186:\"KEY\",192:\"USE\",193:\"IGNORE\",194:\"FORCE\",195:\"PLACE_HOLDER\"},\nproductions_: [0,[3,3],[3,3],[5,1],[5,0],[7,1],[7,3],[10,4],[10,4],[13,3],[9,4],[9,4],[4,12],[15,1],[15,1],[15,1],[15,0],[19,1],[19,0],[20,3],[20,0],[21,1],[21,0],[22,1],[22,0],[23,1],[23,0],[24,1],[24,0],[25,0],[25,1],[25,1],[26,1],[26,0],[27,3],[27,1],[44,1],[44,1],[44,2],[48,0],[48,2],[48,1],[48,2],[48,1],[52,1],[53,1],[53,1],[53,1],[56,1],[56,1],[59,1],[61,1],[61,1],[61,1],[61,1],[61,1],[63,4],[64,3],[64,1],[65,0],[65,1],[65,1],[65,2],[65,1],[66,1],[66,3],[68,1],[68,3],[69,0],[69,1],[70,4],[70,5],[73,0],[73,2],[75,5],[78,2],[78,2],[78,2],[78,2],[78,2],[80,1],[80,1],[80,1],[80,1],[80,3],[80,4],[80,3],[80,4],[80,4],[80,1],[90,1],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[100,0],[100,1],[102,0],[102,2],[104,1],[104,6],[104,6],[104,6],[104,4],[104,5],[104,4],[111,1],[111,1],[111,1],[111,1],[111,1],[111,1],[111,1],[118,1],[118,1],[120,1],[120,4],[120,3],[120,6],[122,1],[122,1],[47,1],[47,4],[47,2],[47,3],[47,3],[47,3],[47,3],[47,3],[85,1],[85,3],[128,0],[128,2],[130,0],[130,1],[132,0],[132,2],[131,3],[11,0],[11,1],[137,3],[136,1],[136,3],[139,2],[140,0],[140,1],[140,1],[143,0],[143,2],[145,2],[145,4],[145,4],[12,0],[12,1],[148,0],[148,1],[149,2],[151,0],[151,2],[151,4],[28,0],[28,10],[158,1],[158,3],[160,1],[160,4],[163,0],[163,1],[163,1],[166,1],[166,1],[169,0],[169,1],[171,0],[171,2],[172,4],[172,5],[172,4],[172,6],[172,5],[178,0],[178,1],[176,2],[175,1],[175,4],[161,1],[161,1],[181,1],[181,3],[159,0],[159,4],[183,0],[183,2],[183,1],[184,1],[184,1],[187,0],[187,2],[187,2],[187,2],[188,0],[188,1],[189,0],[189,1],[190,1],[190,3],[191,6],[191,6],[191,6],[174,4],[174,4],[174,3],[174,3],[62,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: case 2:\n return {nodeType: 'Main', value: $$[$0-2], hasSemicolon: $$[$0-1]}; \nbreak;\ncase 3: case 144:\n this.$ = true \nbreak;\ncase 4:\n this.$ = false \nbreak;\ncase 5: case 13: case 14: case 15: case 17: case 19: case 21: case 23: case 25: case 27: case 30: case 31: case 32: case 51: case 52: case 53: case 54: case 55: case 60: case 61: case 63: case 69: case 73: case 80: case 81: case 82: case 83: case 89: case 90: case 104: case 106: case 107: case 114: case 115: case 116: case 117: case 118: case 119: case 120: case 121: case 122: case 123: case 127: case 129: case 140: case 142: case 147: case 153: case 154: case 156: case 161: case 163: case 164: case 175: case 176: case 177: case 178: case 180: case 189: case 191: case 193: case 194: case 202: case 203: case 209: case 211:\n this.$ = $$[$0] \nbreak;\ncase 6:\n this.$ = $$[$0-2], this.$.orderBy = $$[$0-1], this.$.limit = $$[$0]; \nbreak;\ncase 7: case 8:\n this.$ = { type: 'Union', left: $$[$0-3], distinctOpt: $$[$0-1], right: $$[$0] }; \nbreak;\ncase 9:\n this.$ = { type: 'SelectParenthesized', value: $$[$0-1] }; \nbreak;\ncase 10: case 11:\n this.$ = { type: 'Union', left: $$[$0-3], distinctOpt: $$[$0-1], right: $$[$0] } \nbreak;\ncase 12:\n\n        this.$ = {\n          type: 'Select',\n          distinctOpt: $$[$0-10],\n          highPriorityOpt: $$[$0-9],\n          maxStateMentTimeOpt: $$[$0-8],\n          straightJoinOpt: $$[$0-7],\n          sqlSmallResultOpt: $$[$0-6],\n          sqlBigResultOpt: $$[$0-5],\n          sqlBufferResultOpt: $$[$0-4],\n          sqlCacheOpt: $$[$0-3],\n          sqlCalcFoundRowsOpt: $$[$0-2],\n          selectItems: $$[$0-1],\n          from: $$[$0].from,\n          partition: $$[$0].partition,\n          where: $$[$0].where,\n          groupBy: $$[$0].groupBy,\n          having: $$[$0].having,\n          orderBy: $$[$0].orderBy,\n          limit: $$[$0].limit,\n          procedure: $$[$0].procedure,\n          updateLockMode: $$[$0].updateLockMode\n        }\n      \nbreak;\ncase 16: case 18: case 20: case 22: case 24: case 26: case 28: case 29: case 33: case 59: case 68: case 72: case 103: case 105: case 139: case 141: case 143: case 146: case 152: case 155: case 160: case 162: case 165: case 174: case 179: case 188: case 197: case 204: case 208: case 210:\n this.$ = null \nbreak;\ncase 34:\n $$[$0-2].value.push($$[$0]); \nbreak;\ncase 35:\n this.$ = { type: 'SelectExpr', value: [ $$[$0] ] } \nbreak;\ncase 36: case 37: case 64:\n this.$ = { type: 'Identifier', value: $$[$0] } \nbreak;\ncase 38:\n this.$ = $$[$0-1]; this.$.alias = $$[$0].alias; this.$.hasAs = $$[$0].hasAs; \nbreak;\ncase 39: case 199:\n this.$ = {alias: null, hasAs: null} \nbreak;\ncase 40: case 42:\n this.$ = {alias: $$[$0], hasAs: true} \nbreak;\ncase 41:\n this.$ = {alias: $$[$0], hasAs: false} \nbreak;\ncase 43:\n this.$ = {alias: $$[$01], hasAs: false} \nbreak;\ncase 44:\n this.$ = { type: 'String', value: $$[$0] } \nbreak;\ncase 45: case 46: case 47:\n this.$ = { type: 'Number', value: $$[$0] } \nbreak;\ncase 48:\n this.$ = { type: 'Boolean', value: 'TRUE' } \nbreak;\ncase 49:\n this.$ = { type: 'Boolean', value: 'FALSE' } \nbreak;\ncase 50:\n this.$ = { type: 'Null', value: 'null' } \nbreak;\ncase 56:\n this.$ = {type: 'FunctionCall', name: $$[$0-3], params: $$[$0-1]} \nbreak;\ncase 57:\n $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; \nbreak;\ncase 58:\n this.$ = [$$[$0]]; \nbreak;\ncase 62:\n this.$ = { type: 'FunctionCallParam', distinctOpt: $$[$0-1], value: $$[$0] } \nbreak;\ncase 65:\n this.$ = $$[$0-2]; $$[$0-2].value += '.' + $$[$0] \nbreak;\ncase 66:\n this.$ = { type: 'IdentifierList', value: [ $$[$0] ] } \nbreak;\ncase 67: case 171:\n this.$ = $$[$0-2]; $$[$0-2].value.push($$[$0]); \nbreak;\ncase 70:\n this.$ = { type: 'WhenThenList', value: [ { when: $$[$0-2], then: $$[$0] } ] }; \nbreak;\ncase 71:\n this.$ = $$[$0-4]; this.$.value.push({ when: $$[$0-2], then: $$[$0] }); \nbreak;\ncase 74:\n this.$ = { type: 'CaseWhen', caseExprOpt: $$[$0-3], whenThenList: $$[$0-2], else: $$[$0-1] } \nbreak;\ncase 75: case 76: case 77: case 78: case 79:\n this.$ = { type: 'Prefix', prefix: $$[$0-1], value: $$[$0] } \nbreak;\ncase 84:\n this.$ = { type: 'SimpleExprParentheses', value: $$[$0-1] } \nbreak;\ncase 85:\n this.$ = { type: 'SimpleExprParentheses', value: $$[$0-2], hasRow: true } \nbreak;\ncase 86:\n this.$ = { type: 'SubQuery', value: $$[$0-1] } \nbreak;\ncase 87:\n this.$ = { type: 'SubQuery', value: $$[$0-1], hasExists: true } \nbreak;\ncase 88:\n this.$ = { type: 'IdentifierExpr', identifier: $$[$0-2], value: $$[$0-1] } \nbreak;\ncase 91:\n this.$ = { type: 'BitExpression', operator: '|', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 92:\n this.$ = { type: 'BitExpression', operator: '&', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 93:\n this.$ = { type: 'BitExpression', operator: '<<', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 94:\n this.$ = { type: 'BitExpression', operator: '>>', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 95:\n this.$ = { type: 'BitExpression', operator: '+', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 96:\n this.$ = { type: 'BitExpression', operator: '-', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 97:\n this.$ = { type: 'BitExpression', operator: '*', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 98:\n this.$ = { type: 'BitExpression', operator: '/', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 99:\n this.$ = { type: 'BitExpression', operator: 'DIV', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 100:\n this.$ = { type: 'BitExpression', operator: 'MOD', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 101:\n this.$ = { type: 'BitExpression', operator: '%', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 102:\n this.$ = { type: 'BitExpression', operator: '^', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 108:\n this.$ = { type: 'InSubQueryPredicate', hasNot: $$[$0-4], left: $$[$0-5] ,right: $$[$0-1] } \nbreak;\ncase 109:\n this.$ = { type: 'InExpressionListPredicate', hasNot: $$[$0-4], left: $$[$0-5], right: $$[$0-1] } \nbreak;\ncase 110:\n this.$ = { type: 'BetweenPredicate', hasNot: $$[$0-4], left: $$[$0-5], right: { left: $$[$0-2], right: $$[$0] } } \nbreak;\ncase 111:\n this.$ = { type: 'SoundsLikePredicate', hasNot: false, left: $$[$0-3], right: $$[$0] } \nbreak;\ncase 112:\n this.$ = { type: 'LikePredicate', hasNot: $$[$0-3], left: $$[$0-4], right: $$[$0-1], escape: $$[$0] } \nbreak;\ncase 113:\n this.$ = { type: 'RegexpPredicate', hasNot: $$[$0-2], left: $$[$0-3], right: $$[$0] } \nbreak;\ncase 124:\n this.$ = { type: 'IsNullBooleanPrimary', hasNot: $$[$0-1] , value: $$[$0-3] } \nbreak;\ncase 125:\n this.$ = { type: 'ComparisonBooleanPrimary', left: $$[$0-2], operator: $$[$0-1], right: $$[$0] } \nbreak;\ncase 126:\n this.$ = { type: 'ComparisonSubQueryBooleanPrimary', operator: $$[$0-4], subQueryOpt: $$[$0-3], left: $$[$0-5], right: $$[$0-1] } \nbreak;\ncase 128:\n this.$ = { type: 'BooleanExtra', value: $$[$0] } \nbreak;\ncase 130:\n this.$ = { type: 'IsExpression', hasNot: $$[$0-1], left: $$[$0-3], right: $$[$0] } \nbreak;\ncase 131:\n this.$ = { type: 'NotExpression', value: $$[$0] } \nbreak;\ncase 132: case 135:\n this.$ = { type: 'AndExpression', operator: $$[$0-1], left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 133: case 134:\n this.$ = { type: 'OrExpression', operator: $$[$0-1], left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 136:\n this.$ = { type: 'XORExpression', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 137:\n this.$ = { type: 'ExpressionList', value: [ $$[$0] ] } \nbreak;\ncase 138: case 213:\n this.$ = $$[$0-2]; this.$.value.push($$[$0]); \nbreak;\ncase 145:\n this.$ = { type: 'GroupBy', value: $$[$0-1], rollUp: $$[$0] } \nbreak;\ncase 148:\n this.$ = { type: 'OrderBy', value: $$[$0-1], rollUp: $$[$0] } \nbreak;\ncase 149: case 195:\n this.$ = [ $$[$0] ] \nbreak;\ncase 150:\n this.$ = $$[$0-2]; $$[$0-2].push($$[$0]); \nbreak;\ncase 151:\n this.$ = { type: 'GroupByOrderByItem', value: $$[$0-1], sortOpt: $$[$0] } \nbreak;\ncase 157:\n this.$ = { type: 'Limit', value: [ $$[$0] ] } \nbreak;\ncase 158:\n this.$ = { type: 'Limit', value: [ $$[$0-2], $$[$0] ] } \nbreak;\ncase 159:\n this.$ = { type: 'Limit', value: [ $$[$0], $$[$0-2] ], offsetMode: true } \nbreak;\ncase 166:\n this.$ = $$[$0-1] + ' ' + $$[$0] \nbreak;\ncase 167:\n this.$ = $$[$0-3] + ' ' + $$[$0-2] + ' ' + $$[$0-1] + ' ' + $$[$0] \nbreak;\ncase 168:\n this.$ = {} \nbreak;\ncase 169:\n this.$ = { from: $$[$0-8], partition: $$[$0-7], where: $$[$0-6], groupBy: $$[$0-5], having: $$[$0-4], orderBy: $$[$0-3], limit: $$[$0-2], procedure: $$[$0-1], updateLockMode: $$[$0] } \nbreak;\ncase 170:\n this.$ = { type: 'TableReferences', value: [ $$[$0] ] } \nbreak;\ncase 172:\n this.$ = { type: 'TableReference', value: $$[$0] } \nbreak;\ncase 173:\n this.$ = { type: 'TableReference', hasOj: true, value: $$[$0-1] } \nbreak;\ncase 181:\n this.$ = { leftRight: null, outOpt: null } \nbreak;\ncase 182:\n this.$ = { leftRight: $$[$0-1], outOpt: $$[$0] } \nbreak;\ncase 183:\n this.$ = { type: 'InnerCrossJoinTable', innerCrossOpt: $$[$0-2], left: $$[$0-3], right: $$[$0], condition: null } \nbreak;\ncase 184:\n this.$ = { type: 'InnerCrossJoinTable', innerCrossOpt: $$[$0-3], left: $$[$0-4], right: $$[$0-1], condition: $$[$0] } \nbreak;\ncase 185:\n this.$ = { type: 'StraightJoinTable', left: $$[$0-3], right: $$[$0-1], condition: $$[$0] } \nbreak;\ncase 186:\n this.$ = { type: 'LeftRightJoinTable', leftRight: $$[$0-4], outOpt: $$[$0-3], left: $$[$0-5], right: $$[$0-1], condition: $$[$0] } \nbreak;\ncase 187:\n this.$ = { type: 'NaturalJoinTable', leftRight: $$[$0-2].leftRight, outOpt: $$[$0-2].outOpt, left: $$[$0-4], right: $$[$0] } \nbreak;\ncase 190:\n this.$ = { type: 'OnJoinCondition', value: $$[$0] } \nbreak;\ncase 192:\n this.$ = { type: 'UsingJoinCondition', value: $$[$0-1] } \nbreak;\ncase 196:\n this.$ = $$[$0-2]; $$[$0-2].push($$[$0]) \nbreak;\ncase 198:\n this.$ = { type: 'Partitions', value: $$[$0-1] } \nbreak;\ncase 200:\n this.$ = { hasAs: true, alias: $$[$0] } \nbreak;\ncase 201:\n this.$ = { hasAs: false, alias: $$[$0] } \nbreak;\ncase 205: case 206: case 207:\n this.$ = { type: 'ForOptIndexHint', value: $$[$0] } \nbreak;\ncase 212:\n this.$ = { type: 'IndexHintList', value: [ $$[$0] ] } \nbreak;\ncase 214:\n this.$ = { type: 'UseIndexHint', value: $$[$0-1], forOpt: $$[$0-3], indexOrKey: $$[$0-4] } \nbreak;\ncase 215:\n this.$ = { type: 'IgnoreIndexHint', value: $$[$0-1], forOpt: $$[$0-3], indexOrKey: $$[$0-4] } \nbreak;\ncase 216:\n this.$ = { type: 'ForceIndexHint', value: $$[$0-1], forOpt: $$[$0-3], indexOrKey: $$[$0-4] } \nbreak;\ncase 217:\n this.$ = { type: 'TableFactor', value: $$[$0-3], partition: $$[$0-2], alias: $$[$0-1].alias, hasAs: $$[$0-1].hasAs, indexHintOpt: $$[$0] } \nbreak;\ncase 218:\n this.$ = { type: 'TableFactor', value: { type: 'SubQuery', value: $$[$0-2] }, alias: $$[$0].alias, hasAs: $$[$0].hasAs} \nbreak;\ncase 219:\n this.$ = $$[$0-1]; this.$.hasParentheses = true \nbreak;\ncase 220:\n this.$ = { type: 'TableFactor', value: $$[$0-2], alias: $$[$0-1].alias, hasAs: $$[$0-1].hasAs, indexHintOpt: $$[$0] } \nbreak;\ncase 221:\n this.$ = { type: 'PlaceHolder', value: $$[$0], param: $$[$0].slice(2, -1)} \nbreak;\n}\n},\ntable: [{3:1,4:2,7:3,9:5,10:6,13:7,16:$V0,18:$V1},{1:[3]},{5:9,6:$V2,8:$V3,14:$V4},{5:12,6:$V2,8:$V3},o([16,32,33,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$V5,{15:13,29:$V6,30:$V7,31:$V8}),o($V9,[2,5]),o([6,8,146],$Va,{11:17,137:18,138:$Vb}),{14:$Vc},{4:21,18:$V1},{6:[1,22]},{15:23,18:$V5,29:$V6,30:$V7,31:$V8},{6:[2,3]},{6:[1,24]},o($Vd,[2,18],{19:25,32:[1,26]}),o($Ve,[2,13]),o($Ve,[2,14]),o($Ve,[2,15]),o($V9,$Vf,{12:27,145:28,146:$Vg}),o($Vh,[2,147]),{16:$Vi,35:$Vj,47:32,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,136:30,139:31,195:$VB},{15:67,16:$V5,29:$V6,30:$V7,31:$V8},{17:[1,68]},{1:[2,1]},{4:69,9:70,18:$V1},{1:[2,2]},o($VC,[2,20],{20:71,33:[1,72]}),o($Vd,[2,17]),o($V9,[2,6]),o($VD,[2,161]),{35:[1,73]},o($Vh,$VE,{132:74,43:$VF,133:$VG}),o($VH,[2,149]),o($VH,[2,152],{140:77,107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM,141:[1,83],142:[1,84]}),o($VN,[2,129],{111:86,34:[1,87],112:[1,88],113:[1,89],114:[1,90],115:[1,91],116:[1,92],117:[1,93],121:[1,85]}),{16:$Vi,35:$Vj,47:94,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($VO,[2,123]),o($VO,[2,107],{100:95,45:$VP,79:$VQ,81:$VR,91:$VS,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_,101:$V$,105:$V01,106:$V01,109:$V01,110:$V01,108:[1,96]}),o($V11,[2,90]),o($V21,[2,80]),o($V21,[2,81],{67:$V31}),o($V21,[2,82]),o($V21,[2,83]),{4:112,16:$Vi,18:$V1,35:$Vj,47:113,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,85:111,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:[1,114]},{16:[1,115]},{50:$V41,66:116},o($V21,[2,89]),o($V21,[2,51]),o($V21,[2,52]),o($V21,[2,53]),o($V21,[2,54]),o($V21,[2,55]),o([6,8,14,17,34,36,43,45,49,50,51,67,71,72,74,77,79,81,89,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182,192,193,194],$V51,{16:$V61}),{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:119,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:120,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:121,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:122,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:123,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,47:125,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,69:124,71:[2,68],75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($V21,[2,44]),o($V21,[2,45]),o($V21,[2,46]),o($V21,[2,47]),o($V21,[2,48]),o($V21,[2,49]),o($V21,[2,50]),o($V21,[2,221]),{10:127,13:126,16:$V0},o([6,8,14,138,146],[2,9]),o($V9,[2,10],{14:$V4}),o($V9,[2,11]),o($V71,[2,22],{21:128,36:[1,129]}),{34:[1,130]},o($VD,[2,157],{43:[1,131],147:[1,132]}),o($Vh,[2,148]),{16:$Vi,35:$Vj,47:32,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,139:133,195:$VB},{134:[1,134]},o($VH,[2,151]),{16:$Vi,35:$Vj,47:135,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:136,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:137,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:138,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:139,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($VH,[2,153]),o($VH,[2,154]),o([57,58,60,123],$V01,{100:140,101:$V$}),{16:$Vi,29:[1,143],35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,104:141,118:142,119:[1,144],195:$VB},o($V81,[2,114]),o($V81,[2,115]),o($V81,[2,116]),o($V81,[2,117]),o($V81,[2,118]),o($V81,[2,119]),o($V81,[2,120]),o($VN,[2,131]),{105:[1,145],106:[1,146],109:[1,147],110:[1,148]},{109:[1,149]},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:150,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:151,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:152,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:153,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:154,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:155,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:156,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:157,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:158,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:159,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:160,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:161,195:$VB},o([57,58,60,105,106,109,110,123],[2,104]),{50:[1,162]},{17:[1,163],43:$V91},{17:[1,165]},o($Va1,[2,137],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{16:$Vi,35:$Vj,47:113,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,85:166,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{4:167,18:$V1},{16:$Vi,35:$Vj,47:168,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,67:$V31,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o([6,8,14,16,17,35,36,43,50,51,54,55,57,58,60,67,76,79,81,82,83,84,86,87,88,89,101,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194,195],$V51),o($Va1,$Vb1,{120:33,104:35,90:36,80:37,61:38,66:39,63:40,78:41,75:46,52:47,53:48,56:49,59:50,62:51,64:169,65:170,47:174,16:$Vi,30:$Vc1,35:$Vj,45:$Vd1,46:$Ve1,50:$Vk,51:$Vl,54:$Vm,55:$Vn,57:$Vo,58:$Vp,60:$Vq,76:$Vr,79:$Vs,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,101:$VA,195:$VB}),o($V21,[2,75]),o($V21,[2,76]),o($V21,[2,77]),o($V21,[2,78]),o($V21,[2,79]),{70:175,71:[1,176]},{71:[2,69],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},o($Vf1,[2,7],{14:$Vc}),o($Vf1,[2,8]),o($Vg1,[2,24],{22:177,37:[1,178]}),o($V71,[2,21]),{35:[1,179]},{35:[1,180]},{35:[1,181]},o($VH,[2,150]),o($Vh1,[2,144]),o($VN,[2,132]),o($Vi1,[2,133],{107:$VI,124:$VJ}),o($Vi1,[2,134],{107:$VI,124:$VJ}),o($VN,[2,135]),o($Vi1,[2,136],{107:$VI,124:$VJ}),{56:184,57:$Vo,58:$Vp,60:[1,183],122:182,123:[1,185]},o($VO,[2,125]),{16:[1,186]},{16:[2,121]},{16:[2,122]},{16:[1,187]},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:188,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:189,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:190,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:191,195:$VB},o([6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,91],{45:$VP,79:$VQ,81:$VR,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_}),o([6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,92,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,92],{45:$VP,79:$VQ,81:$VR,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ}),o($Vj1,[2,93],{45:$VP,79:$VQ,81:$VR,95:$VW,96:$VX,97:$VY,98:$VZ}),o($Vj1,[2,94],{45:$VP,79:$VQ,81:$VR,95:$VW,96:$VX,97:$VY,98:$VZ}),o($Vk1,[2,95],{45:$VP,95:$VW,96:$VX,97:$VY,98:$VZ}),o($Vk1,[2,96],{45:$VP,95:$VW,96:$VX,97:$VY,98:$VZ}),o($V11,[2,97]),o($V11,[2,98]),o($V11,[2,99]),o($V11,[2,100]),o($V11,[2,101]),o([6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,102],{45:$VP,79:$VQ,81:$VR,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ}),o([6,8,14,16,17,34,35,36,43,45,49,50,51,54,55,57,58,60,67,71,72,74,76,77,79,81,82,83,84,86,87,88,89,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182,192,193,194,195],[2,65]),o($V21,[2,84]),{16:$Vi,35:$Vj,47:192,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($V21,[2,86]),{17:[1,193],43:$V91},{17:[1,194]},{89:[1,195],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},{17:[1,196],43:[1,197]},o($Va1,[2,58]),o($Va1,[2,60]),o($Va1,[2,61]),{16:$Vi,35:$Vj,47:198,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Va1,[2,63],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{71:[1,200],73:199,74:[1,201],77:[2,72]},{16:$Vi,35:$Vj,47:202,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vl1,[2,26],{23:203,38:[1,204]}),o($Vg1,[2,23]),o($VC,[2,19]),o($VD,[2,158]),o($VD,[2,159]),o($VN,[2,130]),o($VO,[2,124]),o($VN,[2,127]),o($VN,[2,128]),{4:205,18:$V1},{4:206,16:$Vi,18:$V1,35:$Vj,47:113,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,85:207,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{45:$VP,79:$VQ,81:$VR,91:$VS,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_,107:[1,208]},o($VO,[2,105],{102:209,103:[1,210]}),o($VO,[2,113],{45:$VP,79:$VQ,81:$VR,91:$VS,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_}),o($VO,[2,111],{45:$VP,79:$VQ,81:$VR,91:$VS,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_}),o($Va1,[2,138],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),o($V21,[2,85]),o($V21,[2,87]),o($V21,[2,88]),o([6,8,14,17,34,36,43,45,49,50,51,71,72,74,77,79,81,89,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182,192,193,194],[2,56]),o($Va1,$Vb1,{120:33,104:35,90:36,80:37,61:38,66:39,63:40,78:41,75:46,52:47,53:48,56:49,59:50,62:51,47:174,65:211,16:$Vi,30:$Vc1,35:$Vj,45:$Vd1,46:$Ve1,50:$Vk,51:$Vl,54:$Vm,55:$Vn,57:$Vo,58:$Vp,60:$Vq,76:$Vr,79:$Vs,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,101:$VA,195:$VB}),o($Va1,[2,62],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{77:[1,212]},{16:$Vi,35:$Vj,47:213,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:214,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{72:[1,215],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},o($Vm1,[2,28],{24:216,39:[1,217]}),o($Vl1,[2,25]),{17:[1,218]},{17:[1,219]},{17:[1,220],43:$V91},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,104:221,195:$VB},o($VO,[2,112]),{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:222,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},o($Va1,[2,57]),o($V21,[2,74]),{72:[1,223],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},{77:[2,73],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},{16:$Vi,35:$Vj,47:224,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vn1,[2,29],{25:225,40:[1,226],41:[1,227]}),o($Vm1,[2,27]),o($VO,[2,126]),o($VO,[2,108]),o($VO,[2,109]),o($VO,[2,110]),o($VO,[2,106]),{16:$Vi,35:$Vj,47:228,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vo1,[2,70],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),o($Vp1,[2,33],{26:229,42:[1,230]}),o($Vn1,[2,30]),o($Vn1,[2,31]),o($Vo1,[2,71],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{16:$Vi,27:231,35:$Vj,44:232,45:$Vq1,46:$Vr1,47:235,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vp1,[2,32]),o($Vs1,[2,168],{28:236,43:[1,237],157:[1,238]}),o($Vt1,[2,35]),o($Vt1,[2,36]),o($Vt1,[2,37]),o($Vt1,[2,39],{48:239,49:[1,240],50:[1,241],51:[1,242],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),o($Vs1,[2,12]),{16:$Vi,35:$Vj,44:243,45:$Vq1,46:$Vr1,47:235,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vu1,50:$Vk,63:252,66:250,88:$Vv1,158:244,160:245,161:246,172:249,174:248},o($Vt1,[2,38]),{50:[1,253],51:[1,254]},o($Vt1,[2,41]),o($Vt1,[2,43]),o($Vt1,[2,34]),o([6,8,14,17,129,135,138,144,146,150,152,154],$Vw1,{159:255,43:$Vx1,182:$Vy1}),o($Vz1,[2,170]),o($Vz1,[2,172],{163:258,166:260,36:$VA1,164:$VB1,165:$VC1,167:$VD1,168:$VE1,173:$VF1,177:$VG1}),{162:[1,266]},o($VH1,[2,193]),o($VH1,[2,194]),o([6,8,14,17,36,43,49,50,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,192,193,194],$Vw1,{159:267,67:$V31,182:$Vy1}),{4:268,16:$Vu1,18:$V1,50:$Vk,63:252,66:250,88:$Vv1,158:269,160:245,161:246,172:249,174:248},o($VI1,$VJ1,{183:270,66:272,49:$VK1,50:$V41}),o($Vt1,[2,40]),o($Vt1,[2,42]),o($VL1,[2,139],{128:273,129:[1,274]}),{16:$Vu1,50:$Vk,63:252,66:250,88:$Vv1,160:275,161:246,172:249,174:248},{16:[1,276]},{173:[1,277]},{16:$Vu1,50:$Vk,63:252,66:250,174:278},{169:279,170:$VM1,173:$VN1},{166:282,167:$VD1,168:$VE1,171:281,173:[2,181]},{173:[2,175]},{173:[2,176]},o($VO1,[2,177]),o($VO1,[2,178]),{16:$Vu1,50:$Vk,63:252,66:250,161:283,172:249,174:248},o($VI1,$VJ1,{66:272,183:284,49:$VK1,50:$V41}),{17:[1,285]},{17:[1,286],43:$Vx1},o($VH1,$VP1,{189:287,190:288,191:289,192:$VQ1,193:$VR1,194:$VS1}),{50:$V41,66:293},o($VI1,[2,201],{67:$V31}),o($Vh1,[2,141],{130:294,131:295,135:[1,296]}),{16:$Vi,35:$Vj,47:297,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vz1,[2,171]),{50:$V41,66:299,181:298},{16:$Vu1,50:$Vk,63:252,66:250,174:300},{176:301,179:$VT1},{173:[1,303]},{173:[2,180]},{173:[1,304]},{169:305,170:$VM1,173:$VN1},{36:$VA1,89:[1,306],163:258,164:$VB1,165:$VC1,166:260,167:$VD1,168:$VE1,173:$VF1,177:$VG1},o($VH1,$VP1,{190:288,191:289,189:307,192:$VQ1,193:$VR1,194:$VS1}),o($VH1,$VJ1,{66:272,183:308,49:$VK1,50:$V41}),o($VH1,[2,219]),o($VH1,[2,220]),o($VH1,[2,211]),o($VH1,[2,212]),{184:310,185:$VU1,186:$VV1},{184:313,185:$VU1,186:$VV1},{184:314,185:$VU1,186:$VV1},o($VI1,[2,200],{67:$V31}),o($VW1,[2,155],{143:315,144:[1,316]}),o($Vh1,[2,142]),{16:$Vi,35:$Vj,47:32,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,136:317,139:31,195:$VB},o($VL1,[2,140],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{17:[1,318],43:[1,319]},o($Va1,[2,195],{67:$V31}),o([6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,182],[2,183],{175:320,176:321,179:$VT1,180:$VX1}),o($VH1,[2,185]),{16:$Vi,35:$Vj,47:323,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vu1,50:$Vk,63:252,66:250,161:324,172:249,174:248},{16:$Vu1,50:$Vk,63:252,66:250,174:325},{173:[2,182]},o($Vz1,[2,173]),o($VH1,[2,217]),o($VH1,[2,218]),{191:326,192:$VQ1,193:$VR1,194:$VS1},{16:$VY1,152:$VZ1,187:327},o($V_1,[2,202]),o($V_1,[2,203]),{16:$VY1,152:$VZ1,187:329},{16:$VY1,152:$VZ1,187:330},o($Vh,$Va,{137:18,11:331,138:$Vb}),{16:$Vi,35:$Vj,47:332,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vh1,$VE,{132:333,43:$VF,133:$VG}),o([6,8,14,17,36,43,49,50,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194],[2,198]),{50:$V41,66:334},o($VH1,[2,184]),o($VH1,[2,191]),{16:[1,335]},o($VH1,[2,190],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{36:$VA1,163:258,164:$VB1,165:$VC1,166:260,167:$VD1,168:$VE1,173:$VF1,175:336,176:321,177:$VG1,179:$VT1,180:$VX1},o($VH1,[2,187]),o($VH1,[2,213]),{16:[1,337]},{135:[1,340],138:[1,339],173:[1,338]},{16:[1,341]},{16:[1,342]},o($VD,$Vf,{145:28,12:343,146:$Vg}),o($VW1,[2,156],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),o($Vh1,[2,145]),o($Va1,[2,196],{67:$V31}),{50:$V41,66:345,68:344},o($VH1,[2,186]),{17:[2,208],50:$V41,66:345,68:347,188:346},{16:[2,205]},{16:[2,206]},{16:[2,207]},{50:$V41,66:345,68:348},{50:$V41,66:345,68:349},o($V$1,[2,162],{148:350,149:351,150:[1,352]}),{17:[1,353],43:$V02},o($Va1,[2,66],{67:$V31}),{17:[1,355]},{17:[2,209],43:$V02},{17:[1,356],43:$V02},{17:[1,357],43:$V02},o($Vs1,[2,165],{151:358,152:[1,359],154:[1,360]}),o($V$1,[2,163]),{50:[1,362],63:361},o($VH1,[2,192]),{50:$V41,66:363},o($VH1,[2,214]),o($VH1,[2,215]),o($VH1,[2,216]),o($Vs1,[2,169]),{153:[1,364]},{105:[1,365]},o($V$1,[2,164]),{16:$V61},o($Va1,[2,67],{67:$V31}),o($Vs1,[2,166]),{155:[1,366]},{156:[1,367]},o($Vs1,[2,167])],\ndefaultActions: {11:[2,3],22:[2,1],24:[2,2],143:[2,121],144:[2,122],262:[2,175],263:[2,176],280:[2,180],305:[2,182],338:[2,205],339:[2,206],340:[2,207]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip comments */\nbreak;\ncase 1:/* skip sql comments */\nbreak;\ncase 2:/* skip sql comments */\nbreak;\ncase 3:/* skip whitespace */\nbreak;\ncase 4:return 195\nbreak;\ncase 5:return 50\nbreak;\ncase 6:return 50\nbreak;\ncase 7:return 50\nbreak;\ncase 8:return 18\nbreak;\ncase 9:return 29\nbreak;\ncase 10:return 119\nbreak;\ncase 11:return 30\nbreak;\ncase 12:return 31\nbreak;\ncase 13:return 32\nbreak;\ncase 14:return 33\nbreak;\ncase 15:return 36\nbreak;\ncase 16:return 37\nbreak;\ncase 17:return 38\nbreak;\ncase 18:return 39\nbreak;\ncase 19:return 40\nbreak;\ncase 20:return 41\nbreak;\ncase 21:return 42\nbreak;\ncase 22:return 46\nbreak;\ncase 23:return 49\nbreak;\ncase 24:return 57\nbreak;\ncase 25:return 58\nbreak;\ncase 26:return 60\nbreak;\ncase 27:return 'COLLATE'\nbreak;\ncase 28:return 84\nbreak;\ncase 29:return 86\nbreak;\ncase 30:return 87\nbreak;\ncase 31:return 76\nbreak;\ncase 32:return 71\nbreak;\ncase 33:return 72\nbreak;\ncase 34:return 74\nbreak;\ncase 35:return 77\nbreak;\ncase 36:return 96\nbreak;\ncase 37:return 97\nbreak;\ncase 38:return 101\nbreak;\ncase 39:return 106\nbreak;\ncase 40:return 105\nbreak;\ncase 41:return 108\nbreak;\ncase 42:return 109\nbreak;\ncase 43:return 103\nbreak;\ncase 44:return 110\nbreak;\ncase 45:return 121\nbreak;\ncase 46:return 123\nbreak;\ncase 47:return 107\nbreak;\ncase 48:return 126\nbreak;\ncase 49:return 127\nbreak;\ncase 50:return 157\nbreak;\ncase 51:return 182\nbreak;\ncase 52:return 192\nbreak;\ncase 53:return 185\nbreak;\ncase 54:return 186\nbreak;\ncase 55:return 152\nbreak;\ncase 56:return 173\nbreak;\ncase 57:return 138\nbreak;\ncase 58:return 135\nbreak;\ncase 59:return 193\nbreak;\ncase 60:return 194\nbreak;\ncase 61:return 164\nbreak;\ncase 62:return 165\nbreak;\ncase 63:return 179\nbreak;\ncase 64:return 180\nbreak;\ncase 65:return 167\nbreak;\ncase 66:return 168\nbreak;\ncase 67:return 170\nbreak;\ncase 68:return 177\nbreak;\ncase 69:return 129\nbreak;\ncase 70:return 141\nbreak;\ncase 71:return 142\nbreak;\ncase 72:return 133\nbreak;\ncase 73:return 134\nbreak;\ncase 74:return 144\nbreak;\ncase 75:return 147\nbreak;\ncase 76:return 150\nbreak;\ncase 77:return 153\nbreak;\ncase 78:return 154\nbreak;\ncase 79:return 155\nbreak;\ncase 80:return 156\nbreak;\ncase 81:return 162\nbreak;\ncase 82:return 146\nbreak;\ncase 83:return 14\nbreak;\ncase 84:return 43\nbreak;\ncase 85:return 34\nbreak;\ncase 86:return 16\nbreak;\ncase 87:return 17\nbreak;\ncase 88:return 82\nbreak;\ncase 89:return 117\nbreak;\ncase 90:return 83\nbreak;\ncase 91:return 91\nbreak;\ncase 92:return 92\nbreak;\ncase 93:return 79\nbreak;\ncase 94:return 81\nbreak;\ncase 95:return 45\nbreak;\ncase 96:return 95\nbreak;\ncase 97:return 98\nbreak;\ncase 98:return 99\nbreak;\ncase 99:return 94\nbreak;\ncase 100:return 112\nbreak;\ncase 101:return 113\nbreak;\ncase 102:return 93\nbreak;\ncase 103:return '<=>'\nbreak;\ncase 104:return 114\nbreak;\ncase 105:return 116\nbreak;\ncase 106:return 115\nbreak;\ncase 107:return 88\nbreak;\ncase 108:return 89\nbreak;\ncase 109:return 8\nbreak;\ncase 110:return 51\nbreak;\ncase 111:return 51\nbreak;\ncase 112:return 55\nbreak;\ncase 113:return 35\nbreak;\ncase 114:return 54\nbreak;\ncase 115:return 50\nbreak;\ncase 116:return 67\nbreak;\ncase 117:return 51\nbreak;\ncase 118:return 51\nbreak;\ncase 119:return 50\nbreak;\ncase 120:return 6\nbreak;\ncase 121:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:[/][*](.|\\n)*?[*][/])/i,/^(?:[-][-]\\s.*\\n)/i,/^(?:[#]\\s.*\\n)/i,/^(?:\\s+)/i,/^(?:[$][{](.+?)[}])/i,/^(?:[`][a-zA-Z0-9_\\u0080-\\uFFFF]*[`])/i,/^(?:[\\w]+[\\u0080-\\uFFFF]+[0-9a-zA-Z_\\u0080-\\uFFFF]*)/i,/^(?:[\\u0080-\\uFFFF][0-9a-zA-Z_\\u0080-\\uFFFF]*)/i,/^(?:SELECT\\b)/i,/^(?:ALL\\b)/i,/^(?:ANY\\b)/i,/^(?:DISTINCT\\b)/i,/^(?:DISTINCTROW\\b)/i,/^(?:HIGH_PRIORITY\\b)/i,/^(?:MAX_STATEMENT_TIME\\b)/i,/^(?:STRAIGHT_JOIN\\b)/i,/^(?:SQL_SMALL_RESULT\\b)/i,/^(?:SQL_BIG_RESULT\\b)/i,/^(?:SQL_BUFFER_RESULT\\b)/i,/^(?:SQL_CACHE\\b)/i,/^(?:SQL_NO_CACHE\\b)/i,/^(?:SQL_CALC_FOUND_ROWS\\b)/i,/^(?:([a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*\\.){1,2}\\*)/i,/^(?:AS\\b)/i,/^(?:TRUE\\b)/i,/^(?:FALSE\\b)/i,/^(?:NULL\\b)/i,/^(?:COLLATE\\b)/i,/^(?:BINARY\\b)/i,/^(?:ROW\\b)/i,/^(?:EXISTS\\b)/i,/^(?:CASE\\b)/i,/^(?:WHEN\\b)/i,/^(?:THEN\\b)/i,/^(?:ELSE\\b)/i,/^(?:END\\b)/i,/^(?:DIV\\b)/i,/^(?:MOD\\b)/i,/^(?:NOT\\b)/i,/^(?:BETWEEN\\b)/i,/^(?:IN\\b)/i,/^(?:SOUNDS\\b)/i,/^(?:LIKE\\b)/i,/^(?:ESCAPE\\b)/i,/^(?:REGEXP\\b)/i,/^(?:IS\\b)/i,/^(?:UNKNOWN\\b)/i,/^(?:AND\\b)/i,/^(?:OR\\b)/i,/^(?:XOR\\b)/i,/^(?:FROM\\b)/i,/^(?:PARTITION\\b)/i,/^(?:USE\\b)/i,/^(?:INDEX\\b)/i,/^(?:KEY\\b)/i,/^(?:FOR\\b)/i,/^(?:JOIN\\b)/i,/^(?:ORDER\\s+BY\\b)/i,/^(?:GROUP\\s+BY\\b)/i,/^(?:IGNORE\\b)/i,/^(?:FORCE\\b)/i,/^(?:INNER\\b)/i,/^(?:CROSS\\b)/i,/^(?:ON\\b)/i,/^(?:USING\\b)/i,/^(?:LEFT\\b)/i,/^(?:RIGHT\\b)/i,/^(?:OUTER\\b)/i,/^(?:NATURAL\\b)/i,/^(?:WHERE\\b)/i,/^(?:ASC\\b)/i,/^(?:DESC\\b)/i,/^(?:WITH\\b)/i,/^(?:ROLLUP\\b)/i,/^(?:HAVING\\b)/i,/^(?:OFFSET\\b)/i,/^(?:PROCEDURE\\b)/i,/^(?:UPDATE\\b)/i,/^(?:LOCK\\b)/i,/^(?:SHARE\\b)/i,/^(?:MODE\\b)/i,/^(?:OJ\\b)/i,/^(?:LIMIT\\b)/i,/^(?:UNION\\b)/i,/^(?:,)/i,/^(?:=)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:~)/i,/^(?:!=)/i,/^(?:!)/i,/^(?:\\|)/i,/^(?:&)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:\\/)/i,/^(?:%)/i,/^(?:\\^)/i,/^(?:>>)/i,/^(?:>=)/i,/^(?:>)/i,/^(?:<<)/i,/^(?:<=>)/i,/^(?:<=)/i,/^(?:<>)/i,/^(?:<)/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?:;)/i,/^(?:['](\\\\.|[^'])*['])/i,/^(?:[\"](\\\\.|[^\"])*[\"])/i,/^(?:[0][x][0-9a-fA-F]+)/i,/^(?:[-]?[0-9]+(\\.[0-9]+)?)/i,/^(?:[-]?[0-9]+(\\.[0-9]+)?[eE][-][0-9]+(\\.[0-9]+)?)/i,/^(?:[a-zA-Z_\\u0080-\\uFFFF][a-zA-Z0-9_\\u0080-\\uFFFF]*)/i,/^(?:\\.)/i,/^(?:[\"][a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*[\"])/i,/^(?:['][a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*['])/i,/^(?:([`])(?:(?=(\\\\?))\\2.)*?\\1)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();if (!sqlParser) {\n  sqlParser = {};\n}\n\nfunction Sql() {\n  this.buffer = '';\n}\n\nsqlParser.stringify = function(ast) {\n  var sql = new Sql();\n  sql.travelMain(ast);\n  return sql.buffer;\n};\n\nSql.prototype.travel = function(ast) {\n  if (!ast) return;\n\n  if (typeof ast === 'string') {\n    return this.append(ast);\n  }\n\n  var processor = this['travel' + ast.type];\n  processor.call(this, ast);\n};\n\nvar noSuffixFlag = false;\nSql.prototype.appendKeyword = function(keyword, noPrefix, noSuffix) {\n  if (noSuffixFlag) {\n    noPrefix = true;\n    noSuffixFlag = false;\n  }\n  if (noPrefix) {\n    this.buffer += keyword.toUpperCase();\n  } else {\n    this.buffer += ' ' + keyword.toUpperCase();\n  }\n\n  if (noSuffix) {\n    noSuffixFlag = true;\n  }\n};\nSql.prototype.append = function(word, noPrefix, noSuffix) {\n  if (noSuffixFlag) {\n    noPrefix = true;\n    noSuffixFlag = false;\n  }\n  if (noPrefix) {\n    this.buffer += word;\n  } else {\n    this.buffer += ' ' + word;\n  }\n\n  if (noSuffix) {\n    noSuffixFlag = true;\n  }\n};\nSql.prototype.travelMain = function(ast) {\n  this.travel(ast.value);\n  if (ast.hasSemicolon) {\n    this.append(';', true);\n  }\n};\nSql.prototype.travelSelect = function(ast) {\n  this.appendKeyword('select');\n  if (ast.distinctOpt) {\n    this.appendKeyword(ast.distinctOpt);\n  }\n  if (ast.highPriorityOpt) {\n    this.appendKeyword(ast.highPriorityOpt);\n  }\n  if (ast.maxStateMentTimeOpt) {\n    this.append('MAX_STATEMENT_TIME = ' + ast.maxStateMentTimeOpt);\n  }\n  if (ast.straightJoinOpt) {\n    this.appendKeyword(ast.straightJoinOpt);\n  }\n  if (ast.sqlSmallResultOpt) {\n    this.appendKeyword(ast.sqlSmallResultOpt);\n  }\n  if (ast.sqlBigResultOpt) {\n    this.appendKeyword(ast.sqlBigResultOpt);\n  }\n  if (ast.sqlBufferResultOpt) {\n    this.appendKeyword(ast.sqlBufferResultOpt);\n  }\n  if (ast.sqlCacheOpt) {\n    this.appendKeyword(ast.sqlCacheOpt);\n  }\n  if (ast.sqlCalcFoundRowsOpt) {\n    this.appendKeyword(ast.sqlCalcFoundRowsOpt);\n  }\n  if (ast.selectItems) {\n    this.travelSelectExpr(ast.selectItems);\n  }\n  if (ast.from) {\n    this.appendKeyword('from');\n    this.travel(ast.from);\n  }\n  if (ast.partition) {\n    this.travel(ast.partition);\n  }\n  if (ast.where) {\n    this.appendKeyword('where');\n    this.travel(ast.where);\n  }\n  if (ast.groupBy) {\n    this.travel(ast.groupBy);\n  }\n  if (ast.having) {\n    this.appendKeyword('having');\n    this.travel(ast.having);\n  }\n  if (ast.orderBy) {\n    this.travel(ast.orderBy);\n  }\n  if (ast.limit) {\n    this.travel(ast.limit);\n  }\n  if (ast.procedure) {\n    this.appendKeyword('procedure');\n    this.travel(ast.procedure);\n  }\n  if (ast.updateLockMode) {\n    this.appendKeyword(ast.updateLockMode);\n  }\n};\nSql.prototype.travelSelectExpr = function(ast) {\n  var exprList = ast.value;\n  for (var i = 0; i < exprList.length; i++) {\n    if (typeof ast === 'string') {\n      this.append(exprList[i]);\n    } else {\n      this.travel(exprList[i]);\n      if (exprList[i].alias) {\n        if (exprList[i].hasAs) {\n          this.appendKeyword('as');\n        }\n        this.travel(exprList[i].alias);\n      }\n    }\n    if (i !== exprList.length - 1) {\n      this.append(',', true);\n    }\n  }\n};\nSql.prototype.travelIsExpression = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword('in');\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.append(ast.right);\n};\nSql.prototype.travelNotExpression = function(ast) {\n  this.appendKeyword('not');\n  this.travel(ast.value);\n};\nSql.prototype.travelOrExpression = Sql.prototype.travelAndExpression = Sql.prototype.travelXORExpression = function(\n  ast\n) {\n  this.travel(ast.left);\n  this.appendKeyword(ast.operator);\n  this.travel(ast.right);\n};\nSql.prototype.travelNull = Sql.prototype.travelBoolean = Sql.prototype.travelBooleanExtra = function(\n  ast\n) {\n  this.appendKeyword(ast.value);\n};\nSql.prototype.travelNumber = function(ast) {\n  this.append(ast.value);\n};\nSql.prototype.travelString = function(ast) {\n  this.append(ast.value);\n};\nSql.prototype.travelFunctionCall = function(ast) {\n  this.append(ast.name);\n  this.append('(', true, true);\n  var params = ast.params;\n  for (var i = 0; i < params.length; i++) {\n    var param = params[i];\n    this.travel(param);\n    if (i !== params.length - 1) {\n      this.append(',', true);\n    }\n  }\n  this.append(')', true);\n};\nSql.prototype.travelFunctionCallParam = function(ast) {\n  if (ast.distinctOpt) {\n    this.appendKeyword(ast.distinctOpt);\n  }\n  this.travel(ast.value);\n};\nSql.prototype.travelIdentifier = function(ast) {\n  this.append(ast.value);\n};\nSql.prototype.travelIdentifierList = function(ast) {\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n};\nSql.prototype.travelWhenThenList = function(ast) {\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.appendKeyword('when');\n    this.travel(list[i].when);\n    this.appendKeyword('then');\n    this.travel(list[i].then);\n  }\n};\nSql.prototype.travelCaseWhen = function(ast) {\n  this.appendKeyword('case');\n  if (ast.caseExprOpt) {\n    this.travel(ast.caseExprOpt);\n  }\n  this.travel(ast.whenThenList);\n  if (ast.else) {\n    this.appendKeyword('else');\n    this.travel(ast.else);\n  }\n  this.appendKeyword('end');\n};\nSql.prototype.travelPrefix = function(ast) {\n  this.appendKeyword(ast.prefix);\n  this.travel(ast.value);\n};\nSql.prototype.travelSimpleExprParentheses = function(ast) {\n  if (ast.hasRow) {\n    this.appendKeyword('row');\n  }\n  this.append('(', false, true);\n  this.travel(ast.value);\n  this.append(')', true);\n};\nSql.prototype.travelSubQuery = function(ast) {\n  if (ast.hasExists) {\n    this.appendKeyword('exists');\n  }\n  this.append('(', false, true);\n  this.travel(ast.value);\n  this.append(')', true);\n};\nSql.prototype.travelIdentifierExpr = function(ast) {\n  this.append('{');\n  this.travel(ast.identifier);\n  this.travel(ast.value);\n  this.append('}');\n};\nSql.prototype.travelBitExpression = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword(ast.operator);\n  this.travel(ast.right);\n};\nSql.prototype.travelInSubQueryPredicate = function(ast) {\n  this.travel(ast.left);\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.appendKeyword('in');\n  this.append('(', false, true);\n  this.travel(ast.right);\n  this.append(')');\n};\nSql.prototype.travelInExpressionListPredicate = function(ast) {\n  this.travel(ast.left);\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.appendKeyword('in');\n  this.append('(', false, true);\n  this.travel(ast.right);\n  this.append(')');\n};\nSql.prototype.travelBetweenPredicate = function(ast) {\n  this.travel(ast.left);\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.appendKeyword('between');\n  this.travel(ast.right.left);\n  this.appendKeyword('and');\n  this.travel(ast.right.right);\n};\nSql.prototype.travelSoundsLikePredicate = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword('sounds');\n  this.appendKeyword('like');\n  this.travel(ast.right);\n};\nSql.prototype.travelLikePredicate = function(ast) {\n  this.travel(ast.left);\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.appendKeyword('like');\n  this.travel(ast.right);\n  if (ast.escape) {\n    this.appendKeyword('escape');\n    this.travel(ast.escape);\n  }\n};\nSql.prototype.travelRegexpPredicate = function(ast) {\n  this.travel(ast.left);\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.appendKeyword('regexp');\n  this.travel(ast.right);\n};\nSql.prototype.travelIsNullBooleanPrimary = function(ast) {\n  this.travel(ast.value);\n  this.appendKeyword('is');\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.appendKeyword('null');\n};\nSql.prototype.travelComparisonBooleanPrimary = function(ast) {\n  this.travel(ast.left);\n  this.append(ast.operator);\n  this.travel(ast.right);\n};\nSql.prototype.travelComparisonSubQueryBooleanPrimary = function(ast) {\n  this.travel(ast.left);\n  this.append(ast.operator);\n  this.appendKeyword(ast.subQueryOpt);\n  this.append('(', false, true);\n  this.travel(ast.right);\n  this.append(')');\n};\nSql.prototype.travelExpressionList = function(ast) {\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n};\nSql.prototype.travelGroupBy = function(ast) {\n  this.appendKeyword('group by');\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n};\nSql.prototype.travelOrderBy = function(ast) {\n  this.appendKeyword('order by');\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n  if (ast.rollUp) {\n    this.appendKeyword('with rollup');\n  }\n};\nSql.prototype.travelGroupByOrderByItem = function(ast) {\n  this.travel(ast.value);\n  if (ast.sortOpt) {\n    this.appendKeyword(ast.sortOpt);\n  }\n};\nSql.prototype.travelLimit = function(ast) {\n  this.appendKeyword('limit');\n  var list = ast.value;\n  if (list.length === 1) {\n    this.append(list[0]);\n  } else if (list.length === 2) {\n    if (ast.offsetMode) {\n      this.append(list[1]);\n      this.append('offset');\n      this.append(list[0]);\n    } else {\n      this.append(list[0]);\n      this.append(',', true);\n      this.append(list[1]);\n    }\n  }\n};\nSql.prototype.travelTableReferences = function(ast) {\n  var list = ast.value;\n  if (ast.TableReferences) {\n    this.append('(', false, true);\n  }\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n  if (ast.TableReferences) {\n    this.append(')');\n  }\n};\nSql.prototype.travelTableReference = function(ast) {\n  if (ast.hasOj) {\n    this.append('{');\n    this.appendKeyword('oj');\n    this.travel(ast.value);\n    this.append('}');\n  } else {\n    this.travel(ast.value);\n  }\n};\nSql.prototype.travelInnerCrossJoinTable = function(ast) {\n  this.travel(ast.left);\n  if (ast.innerCrossOpt) {\n    this.appendKeyword(ast.innerCrossOpt);\n  }\n  this.appendKeyword('join');\n  this.travel(ast.right);\n  if (ast.condition) {\n    this.travel(ast.condition);\n  }\n};\nSql.prototype.travelStraightJoinTable = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword('straight_join');\n  this.travel(ast.right);\n  this.travel(ast.condition);\n};\nSql.prototype.travelLeftRightJoinTable = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword(ast.leftRight);\n  if (ast.outOpt) {\n    this.appendKeyword(ast.outOpt);\n  }\n  this.appendKeyword('join');\n  this.travel(ast.right);\n  this.travel(ast.condition);\n};\nSql.prototype.travelNaturalJoinTable = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword('natural');\n  if (ast.leftRight) {\n    this.appendKeyword(ast.leftRight);\n  }\n  if (ast.outOpt) {\n    this.appendKeyword(ast.outOpt);\n  }\n  this.appendKeyword('join');\n  this.travel(ast.right);\n};\nSql.prototype.travelOnJoinCondition = function(ast) {\n  this.appendKeyword('on');\n  this.travel(ast.value);\n};\nSql.prototype.travelUsingJoinCondition = function(ast) {\n  this.appendKeyword('using');\n  this.appendKeyword('(', false, true);\n  this.travel(ast.value);\n  this.appendKeyword(')');\n};\nSql.prototype.travelPartitions = function(ast) {\n  this.appendKeyword('partition');\n  this.appendKeyword('(', false, true);\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n  this.appendKeyword(')');\n};\nSql.prototype.travelForOptIndexHint = function(ast) {\n  this.appendKeyword('for');\n  this.appendKeyword(ast.value);\n};\nSql.prototype.travelIndexList = function(ast) {\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n};\nSql.prototype.travelUseIndexHint = function(ast) {\n  this.appendKeyword('use');\n  this.appendKeyword(ast.indexOrKey);\n  if (ast.forOpt) {\n    this.travel(ast.forOpt);\n  }\n  this.appendKeyword('(', false, true);\n  if (ast.value) {\n    this.travel(ast.value);\n  }\n  this.appendKeyword(')');\n};\nSql.prototype.travelIgnoreIndexHint = function(ast) {\n  this.appendKeyword('ignore');\n  this.appendKeyword(ast.indexOrKey);\n  if (ast.forOpt) {\n    this.travel(ast.forOpt);\n  }\n  this.appendKeyword('(', false, true);\n  if (ast.value) {\n    this.travel(ast.value);\n  }\n  this.appendKeyword(')');\n};\nSql.prototype.travelForceIndexHint = function(ast) {\n  this.appendKeyword('force');\n  this.appendKeyword(ast.indexOrKey);\n  if (ast.forOpt) {\n    this.travel(ast.forOpt);\n  }\n  this.appendKeyword('(', false, true);\n  if (ast.value) {\n    this.travel(ast.value);\n  }\n  this.appendKeyword(')');\n};\nSql.prototype.travelTableFactor = function(ast) {\n  this.travel(ast.value);\n  if (ast.partition) {\n    this.travel(ast.partition);\n  }\n  if (ast.alias) {\n    if (ast.hasAs) {\n      this.appendKeyword('as');\n    }\n    this.travel(ast.alias);\n  }\n  if (ast.indexHintOpt) {\n    this.travel(ast.indexHintOpt);\n  }\n};\nSql.prototype.travelUnion = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword('UNION');\n  if (ast.distinctOpt) {\n    this.appendKeyword(ast.distinctOpt);\n  }\n  this.travel(ast.right);\n};\nSql.prototype.travelSelectParenthesized = function(ast) {\n  this.appendKeyword('(');\n  this.travel(ast.value);\n  this.appendKeyword(')');\n};\nSql.prototype.travelPlaceHolder = function (ast) {\n  if (ast.value) {\n    this.travel(ast.value);\n  }\n};var root = this\n// AMD / RequireJS\nif (typeof define !== 'undefined' && define.amd) {\n    define([], function () {\n        return sqlParser;\n    });\n}\n// Node.js\nelse if (typeof module !== 'undefined' && module.exports) {\n    module.exports = sqlParser;\n}\n// included directly via <script> tag\nelse {\n    root.sqlParser = sqlParser;\n}\n\n","'use strict'\n\nconst {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst safeSrc = exports.safeSrc = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  safeSrc[index] = safe\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n// Non-numberic identifiers include numberic identifiers but can be longer.\n// Therefore non-numberic identifiers must go first.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","'use strict'\n\nconst compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","'use strict'\n\nconst compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","'use strict'\n\nconst compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","'use strict'\n\n// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","'use strict'\n\nconst Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","'use strict'\n\nconst parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","'use strict'\n\nconst compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","module.exports = __WEBPACK_EXTERNAL_MODULE__7781__;","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","'use strict'\n\n// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"moo\");\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unbox = exports.doubleQuoted = exports.box = exports.track = exports.tracking = exports.trackingComments = exports.lexerAny = exports.lexer = void 0;\nconst moo_1 = __webpack_require__(0);\nconst keywords_1 = __webpack_require__(3);\n// build keywords\nconst keywordsMap = {};\nfor (const k of keywords_1.sqlKeywords) {\n    keywordsMap['kw_' + k.toLowerCase()] = k;\n}\nconst caseInsensitiveKeywords = (map) => {\n    const transform = (0, moo_1.keywords)(map);\n    return (text) => transform(text.toUpperCase());\n};\n// build lexer\nexports.lexer = (0, moo_1.compile)({\n    word: {\n        match: /[eE](?!')[A-Za-z0-9_]*|[a-df-zA-DF-Z_][A-Za-z0-9_]*/,\n        type: caseInsensitiveKeywords(keywordsMap),\n        value: x => x.toLowerCase(),\n    },\n    wordQuoted: {\n        match: /\"(?:[^\"\\*]|\"\")+\"/,\n        type: () => 'quoted_word',\n        value: x => x.substring(1, x.length - 1),\n    },\n    string: {\n        match: /'(?:[^']|\\'\\')*'/,\n        value: x => {\n            return x.substring(1, x.length - 1)\n                .replace(/''/g, '\\'');\n        },\n    },\n    eString: {\n        match: /\\b(?:e|E)'(?:[^'\\\\]|[\\r\\n\\s]|(?:\\\\\\s)|(?:\\\\\\n)|(?:\\\\.)|(?:\\'\\'))+'/,\n        value: x => {\n            return x.substring(2, x.length - 1)\n                .replace(/''/g, '\\'')\n                .replace(/\\\\([\\s\\n])/g, (_, x) => x)\n                .replace(/\\\\./g, m => JSON.parse('\"' + m + '\"'));\n        },\n    },\n    qparam: {\n        match: /\\$\\d+/,\n    },\n    commentLine: /\\-\\-.*?$[\\s\\r\\n]*/,\n    commentFullOpen: /\\/\\*/,\n    commentFullClose: /\\*\\/[\\s\\r\\n]*/,\n    star: '*',\n    comma: ',',\n    space: { match: /[\\s\\t\\n\\v\\f\\r]+/, lineBreaks: true, },\n    int: /\\-?\\d+(?![\\.\\d])/,\n    float: /\\-?(?:(?:\\d*\\.\\d+)|(?:\\d+\\.\\d*))/,\n    // word: /[a-zA-Z][A-Za-z0-9_\\-]*/,\n    lparen: '(',\n    rparen: ')',\n    lbracket: '[',\n    rbracket: ']',\n    semicolon: ';',\n    dot: /\\.(?!\\d)/,\n    op_cast: '::',\n    op_colon: ':',\n    op_plus: '+',\n    op_eq: '=',\n    op_neq: {\n        match: /(?:!=)|(?:\\<\\>)/,\n        value: () => '!=',\n    },\n    op_membertext: '->>',\n    op_member: '->',\n    op_minus: '-',\n    op_div: /\\//,\n    op_not_ilike: /\\!~~\\*/,\n    op_not_like: /\\!~~/,\n    op_ilike: /~~\\*/,\n    op_like: /~~/,\n    op_mod: '%',\n    op_exp: '^',\n    op_additive: {\n        // group other additive operators\n        match: ['||', '-', '#-', '&&'],\n    },\n    op_compare: {\n        // group other comparison operators\n        // ... to add: \"IN\" and \"NOT IN\" that are matched by keywords\n        match: ['>', '>=', '<', '<=', '@>', '<@', '?', '?|', '?&', '#>>', '>>', '<<', '~', '~*', '!~', '!~*', '@@'],\n    },\n    ops_others: {\n        // referenced as (any other operator) in https://www.postgresql.org/docs/12/sql-syntax-lexical.html#SQL-PRECEDENCE\n        // see also https://www.postgresql.org/docs/9.0/functions-math.html\n        match: ['|', '&', '^', '#'],\n    },\n    codeblock: {\n        match: /\\$\\$(?:.|[\\s\\t\\n\\v\\f\\r])*?\\$\\$/s,\n        lineBreaks: true,\n        value: (x) => x.substring(2, x.length - 2),\n    },\n});\nexports.lexer.next = (next => () => {\n    let tok;\n    let commentFull = null;\n    while (tok = next.call(exports.lexer)) {\n        // js regex can't be recursive, so we'll keep track of nested opens (/*) and closes (*/).\n        if (tok.type === 'commentFullOpen') {\n            if (commentFull === null) { // initial open - start collecting content\n                commentFull = {\n                    nested: 0,\n                    offset: tok.offset,\n                    text: tok.text\n                };\n                continue;\n            }\n            commentFull.nested++;\n        }\n        if (commentFull != null) {\n            // collect comment content\n            commentFull.text += tok.text;\n            if (tok.type === 'commentFullClose') {\n                if (commentFull.nested === 0) { // finish comment, if not nested\n                    comments === null || comments === void 0 ? void 0 : comments.push(makeComment(commentFull));\n                    commentFull = null;\n                    continue;\n                }\n                commentFull.nested--;\n            }\n            continue;\n        }\n        if (tok.type === 'space') {\n            continue;\n        }\n        if (tok.type === 'commentLine') {\n            comments === null || comments === void 0 ? void 0 : comments.push(makeComment(tok));\n            continue;\n        }\n        break;\n    }\n    if (trackingLoc && tok) {\n        const start = tok.offset;\n        const loc = {\n            start,\n            end: start + tok.text.length,\n        };\n        tok._location = loc;\n    }\n    return tok;\n})(exports.lexer.next);\nexports.lexerAny = exports.lexer;\nlet comments = null;\nconst makeComment = ({ offset, text }) => ({\n    _location: { start: offset, end: offset + text.length },\n    comment: text,\n});\nfunction trackingComments(act) {\n    if (comments) {\n        throw new Error('WAT ? Recursive comments tracking 🤔🤨 ?');\n    }\n    try {\n        comments = [];\n        const ast = act();\n        return { comments, ast };\n    }\n    finally {\n        comments = null;\n    }\n}\nexports.trackingComments = trackingComments;\nlet trackingLoc = false;\nfunction tracking(act) {\n    if (trackingLoc) {\n        return act();\n    }\n    try {\n        trackingLoc = true;\n        return act();\n    }\n    finally {\n        trackingLoc = false;\n    }\n}\nexports.tracking = tracking;\nfunction track(xs, ret) {\n    if (!trackingLoc || !ret || typeof ret !== 'object') {\n        return ret;\n    }\n    const start = seek(xs, true);\n    const end = seek(xs, false);\n    if (!start || !end) {\n        return ret;\n    }\n    if (start === end) {\n        ret._location = start;\n    }\n    else {\n        const loc = {\n            start: start.start,\n            end: end.end,\n        };\n        ret._location = loc;\n    }\n    return ret;\n}\nexports.track = track;\nconst literal = Symbol('_literal');\nconst doubleQuotedSym = Symbol('_doublequoted');\nfunction box(xs, value, doubleQuoted) {\n    if (!trackingLoc && !doubleQuoted) {\n        return value;\n    }\n    return track(xs, { [literal]: value, [doubleQuotedSym]: doubleQuoted });\n}\nexports.box = box;\nfunction unwrapNoBox(e) {\n    if (Array.isArray(e) && e.length === 1) {\n        e = unwrapNoBox(e[0]);\n    }\n    if (Array.isArray(e) && !e.length) {\n        return null;\n    }\n    return e;\n}\nfunction doubleQuoted(value) {\n    const uw = unwrapNoBox(value);\n    if (typeof value === 'object' && (uw === null || uw === void 0 ? void 0 : uw[doubleQuotedSym])) {\n        return { doubleQuoted: true };\n    }\n    return undefined;\n}\nexports.doubleQuoted = doubleQuoted;\nfunction unbox(value) {\n    var _a;\n    if (typeof value === 'object') {\n        return (_a = value === null || value === void 0 ? void 0 : value[literal]) !== null && _a !== void 0 ? _a : value;\n    }\n    return value;\n}\nexports.unbox = unbox;\nfunction seek(xs, start) {\n    if (!xs) {\n        return null;\n    }\n    if (Array.isArray(xs)) {\n        const diff = start ? 1 : -1;\n        for (let i = start ? 0 : xs.length - 1; i >= 0 && i < xs.length; i += diff) {\n            const v = seek(xs[i], start);\n            if (v) {\n                return v;\n            }\n        }\n        return null;\n    }\n    if (typeof xs !== 'object') {\n        return null;\n    }\n    return xs._location;\n}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AstDefaultMapper = exports.arrayNilMap = exports.assignChanged = exports.astMapper = void 0;\nconst utils_1 = __webpack_require__(6);\n/**\n * Builds an AST modifier based on the default implementation, merged with the one you provide.\n *\n * Example of a modifier that renames all reference to columns 'foo' to 'bar'\n * ```ts\n *  const mapper = astMapper(b => ({\n *       ref: a => assignChanged(a, {\n *           name: a.name === 'foo'\n *               ? 'bar'\n *               : a.name\n *       })\n *   }));\n *\n * const modified = mapper.statement(myStatementToModify);\n * ```\n */\nfunction astMapper(modifierBuilder) {\n    const instance = new AstDefaultMapper();\n    instance.wrapped = modifierBuilder(instance);\n    return instance;\n}\nexports.astMapper = astMapper;\n/**\n * An helper function that returns a copy of an object with modified properties\n * (similar to Object.assign()), but ONLY if thos properties have changed.\n * Will return the original object if not.\n */\nfunction assignChanged(orig, assign) {\n    if (!orig) {\n        return orig;\n    }\n    let changed = false;\n    for (const k of Object.keys(assign)) {\n        if (orig[k] !== assign[k]) {\n            changed = true;\n            break;\n        }\n    }\n    if (!changed) {\n        return orig;\n    }\n    return (0, utils_1.trimNullish)({\n        ...orig,\n        ...assign,\n    }, 0);\n}\nexports.assignChanged = assignChanged;\n/**\n * An helper function that returns a map of an array, but:\n * - It will return the original array if it is null-ish\n * - It will remove all null-ish entries\n * - It will return the original array if nothing has changed\n */\nfunction arrayNilMap(collection, mapper) {\n    if (!(collection === null || collection === void 0 ? void 0 : collection.length)) {\n        return collection;\n    }\n    let changed = false;\n    let ret = collection;\n    for (let i = 0; i < collection.length; i++) {\n        const orig = collection[i];\n        const val = mapper(orig);\n        if (!changed && (!val || val !== orig)) {\n            changed = true;\n            ret = collection.slice(0, i);\n        }\n        if (!val) {\n            continue;\n        }\n        if (changed) {\n            ret.push(val);\n        }\n    }\n    return ret;\n}\nexports.arrayNilMap = arrayNilMap;\nfunction withAccepts(val) {\n    switch (val === null || val === void 0 ? void 0 : val.type) {\n        case 'select':\n        case 'delete':\n        case 'insert':\n        case 'update':\n        case 'union':\n        case 'union all':\n        case 'with':\n            return true;\n        default:\n            return false;\n    }\n}\n/**\n * Can be used to modify an AST.\n *\n * You will have to override functions that you're interested in to use this class.\n *\n * Example: Will remove all references in\n */\nclass AstDefaultMapper {\n    super() {\n        return new SkipModifier(this);\n    }\n    statement(val) {\n        switch (val.type) {\n            case 'alter table':\n                return this.alterTable(val);\n            case 'alter index':\n                return this.alterIndex(val);\n            case 'commit':\n            case 'start transaction':\n            case 'rollback':\n                return this.transaction(val);\n            case 'create index':\n                return this.createIndex(val);\n            case 'create table':\n                return this.createTable(val);\n            case 'truncate table':\n                return this.truncateTable(val);\n            case 'delete':\n                return this.delete(val);\n            case 'insert':\n                return this.insert(val);\n            case 'with':\n                return this.with(val);\n            case 'with recursive':\n                return this.withRecursive(val);\n            case 'select':\n                return this.selection(val);\n            case 'update':\n                return this.update(val);\n            case 'create extension':\n                return this.createExtension(val);\n            case 'tablespace':\n                return this.tablespace(val);\n            case 'set':\n                return this.setGlobal(val);\n            case 'set timezone':\n                return this.setTimezone(val);\n            case 'set names':\n                return this.setNames(val);\n            case 'create sequence':\n                return this.createSequence(val);\n            case 'alter sequence':\n                return this.alterSequence(val);\n            case 'begin':\n                return this.begin(val);\n            case 'drop table':\n            case 'drop index':\n            case 'drop sequence':\n            case 'drop type':\n            case 'drop trigger':\n                return this.drop(val);\n            case 'create enum':\n                return this.createEnum(val);\n            case 'alter enum':\n                return this.alterEnum(val);\n            case 'create composite type':\n                return this.createCompositeType(val);\n            case 'union':\n            case 'union all':\n                return this.union(val);\n            case 'show':\n                return this.show(val);\n            case 'prepare':\n                return this.prepare(val);\n            case 'deallocate':\n                return this.deallocate(val);\n            case 'create view':\n                return this.createView(val);\n            case 'create materialized view':\n                return this.createMaterializedView(val);\n            case 'refresh materialized view':\n                return this.refreshMaterializedView(val);\n            case 'create schema':\n                return this.createSchema(val);\n            case 'raise':\n                return this.raise(val);\n            case 'comment':\n                return this.comment(val);\n            case 'do':\n                return this.do(val);\n            case 'create function':\n                return this.createFunction(val);\n            case 'drop function':\n                return this.dropFunction(val);\n            case 'values':\n                return this.values(val);\n            default:\n                throw utils_1.NotSupported.never(val);\n        }\n    }\n    comment(val) {\n        // not really supported :/\n        return val;\n    }\n    createView(val) {\n        const query = this.select(val.query);\n        if (!query) {\n            return null;\n        }\n        const ref = this.tableRef(val.name);\n        if (!ref) {\n            return null;\n        }\n        return assignChanged(val, {\n            query,\n            name: ref,\n        });\n    }\n    createMaterializedView(val) {\n        const query = this.select(val.query);\n        if (!query) {\n            return null;\n        }\n        const ref = this.tableRef(val.name);\n        if (!ref) {\n            return null;\n        }\n        return assignChanged(val, {\n            query,\n            name: ref,\n        });\n    }\n    refreshMaterializedView(val) {\n        return val;\n    }\n    do(val) {\n        return val;\n    }\n    createFunction(val) {\n        // process arguments\n        const args = arrayNilMap(val.arguments, a => {\n            const type = this.dataType(a.type);\n            return assignChanged(a, { type });\n        });\n        // process return type\n        let returns;\n        if (val.returns) {\n            switch (val.returns.kind) {\n                case 'table':\n                    returns = assignChanged(val.returns, {\n                        columns: arrayNilMap(val.returns.columns, v => {\n                            const type = this.dataType(v.type);\n                            return type && assignChanged(v, { type });\n                        })\n                    });\n                    break;\n                case undefined:\n                case null:\n                case 'array':\n                    returns = this.dataType(val.returns);\n                    break;\n                default:\n                    throw utils_1.NotSupported.never(val.returns);\n            }\n        }\n        return assignChanged(val, {\n            returns,\n            arguments: args,\n        });\n    }\n    dropFunction(val) {\n        const args = arrayNilMap(val.arguments, a => {\n            const type = this.dataType(a.type);\n            return assignChanged(a, { type });\n        });\n        return assignChanged(val, {\n            arguments: args,\n        });\n    }\n    show(val) {\n        return val;\n    }\n    createEnum(val) {\n        return val;\n    }\n    alterEnum(val) {\n        return val;\n    }\n    createCompositeType(val) {\n        const attributes = arrayNilMap(val.attributes, a => assignChanged(a, {\n            dataType: this.dataType(a.dataType),\n        }));\n        return assignChanged(val, { attributes });\n    }\n    drop(val) {\n        return val;\n    }\n    alterSequence(seq) {\n        if (seq.change.type === 'set options') {\n            if (seq.change.as) {\n                this.dataType(seq.change.as);\n            }\n        }\n        return seq;\n    }\n    begin(begin) {\n        return begin;\n    }\n    createSequence(seq) {\n        if (seq.options.as) {\n            this.dataType(seq.options.as);\n        }\n        return seq;\n    }\n    tablespace(val) {\n        return val;\n    }\n    setGlobal(val) {\n        return val;\n    }\n    setTimezone(val) {\n        return val;\n    }\n    setNames(val) {\n        return val;\n    }\n    update(val) {\n        if (!val) {\n            return val;\n        }\n        const table = this.tableRef(val.table);\n        if (!table) {\n            return null; // nothing to update\n        }\n        const from = val.from && this.from(val.from);\n        const where = val.where && this.expr(val.where);\n        const sets = arrayNilMap(val.sets, x => this.set(x));\n        if (!(sets === null || sets === void 0 ? void 0 : sets.length)) {\n            return null; // nothing to update\n        }\n        const returning = arrayNilMap(val.returning, c => this.selectionColumn(c));\n        return assignChanged(val, {\n            table,\n            where,\n            sets,\n            from,\n            returning,\n        });\n    }\n    insert(val) {\n        var _a, _b;\n        const into = this.tableRef(val.into);\n        if (!into) {\n            return null; // nowhere to insert into\n        }\n        const select = val.insert && this.select(val.insert);\n        if (!select) {\n            // nothing to insert\n            return null;\n        }\n        const returning = arrayNilMap(val.returning, c => this.selectionColumn(c));\n        let on = (_a = val.onConflict) === null || _a === void 0 ? void 0 : _a.on;\n        switch (on === null || on === void 0 ? void 0 : on.type) {\n            case 'on constraint':\n                // nothing to do\n                break;\n            case 'on expr':\n                on = assignChanged(on, {\n                    exprs: arrayNilMap(on.exprs, e => this.expr(e)),\n                });\n                break;\n            case null:\n            case undefined:\n                break;\n            default:\n                throw utils_1.NotSupported.never(on);\n        }\n        let ocdo = (_b = val.onConflict) === null || _b === void 0 ? void 0 : _b.do;\n        if (ocdo && ocdo !== 'do nothing') {\n            const sets = arrayNilMap(ocdo.sets, x => this.set(x));\n            if (!(sets === null || sets === void 0 ? void 0 : sets.length)) {\n                ocdo = 'do nothing';\n            }\n            else if (ocdo.sets !== sets) {\n                ocdo = { sets };\n            }\n        }\n        return assignChanged(val, {\n            into,\n            insert: select,\n            returning,\n            onConflict: !ocdo ? val.onConflict : assignChanged(val.onConflict, {\n                do: ocdo,\n                on,\n            }),\n        });\n    }\n    raise(val) {\n        return assignChanged(val, {\n            formatExprs: val.formatExprs && arrayNilMap(val.formatExprs, x => this.expr(x)),\n            using: val.using && arrayNilMap(val.using, u => {\n                return assignChanged(u, {\n                    value: this.expr(u.value),\n                });\n            }),\n        });\n    }\n    delete(val) {\n        const from = this.tableRef(val.from);\n        if (!from) {\n            return null; // nothing to delete\n        }\n        const where = val.where && this.expr(val.where);\n        const returning = arrayNilMap(val.returning, c => this.selectionColumn(c));\n        return assignChanged(val, {\n            where,\n            returning,\n            from,\n        });\n    }\n    createSchema(val) {\n        return val;\n    }\n    createTable(val) {\n        const columns = arrayNilMap(val.columns, col => {\n            switch (col.kind) {\n                case 'column':\n                    return this.createColumn(col);\n                case 'like table':\n                    return this.likeTable(col);\n                default:\n                    throw utils_1.NotSupported.never(col);\n            }\n        });\n        if (!(columns === null || columns === void 0 ? void 0 : columns.length)) {\n            return null; // no column to create\n        }\n        return assignChanged(val, {\n            columns,\n        });\n    }\n    likeTable(col) {\n        const like = this.tableRef(col.like);\n        if (!like) {\n            return null;\n        }\n        return assignChanged(col, { like });\n    }\n    truncateTable(val) {\n        return val;\n    }\n    constraint(c) {\n        switch (c.type) {\n            case 'not null':\n            case 'null':\n            case 'primary key':\n            case 'unique':\n            case 'add generated':\n                return c;\n            case 'default': {\n                const def = this.expr(c.default);\n                if (!def) {\n                    return null;\n                }\n                return assignChanged(c, {\n                    default: def,\n                });\n            }\n            case 'check': {\n                const def = this.expr(c.expr);\n                if (!def) {\n                    return null;\n                }\n                return assignChanged(c, {\n                    expr: def,\n                });\n            }\n            case 'reference': {\n                const foreignTable = this.tableRef(c.foreignTable);\n                if (!foreignTable) {\n                    return null;\n                }\n                return assignChanged(c, {\n                    foreignTable,\n                });\n            }\n            default:\n                throw utils_1.NotSupported.never(c);\n        }\n    }\n    set(st) {\n        const value = this.expr(st.value);\n        if (!value) {\n            return null;\n        }\n        return assignChanged(st, {\n            value,\n        });\n    }\n    // =========================================\n    // ================ STUFF ==================\n    // =========================================\n    /** Called when a data type definition is encountered */\n    dataType(dataType) {\n        return dataType;\n    }\n    /** Called when an alias of a table is created */\n    tableRef(st) {\n        return st;\n    }\n    transaction(val) {\n        return val;\n    }\n    createExtension(val) {\n        return val;\n    }\n    createIndex(val) {\n        const expressions = arrayNilMap(val.expressions, e => {\n            const expression = this.expr(e.expression);\n            if (expression === e.expression) {\n                return e;\n            }\n            if (!expression) {\n                return null; // no more index expression\n            }\n            return {\n                ...e,\n                expression,\n            };\n        });\n        if (!(expressions === null || expressions === void 0 ? void 0 : expressions.length)) {\n            return null; // no columns to create index on\n        }\n        return assignChanged(val, {\n            expressions,\n        });\n    }\n    prepare(st) {\n        const statement = this.statement(st.statement);\n        if (!statement) {\n            return null;\n        }\n        return assignChanged(st, {\n            args: arrayNilMap(st.args, a => this.dataType(a)),\n            statement,\n        });\n    }\n    deallocate(st) {\n        return st;\n    }\n    // =========================================\n    // ============== ALTER INDEX ==============\n    // =========================================\n    alterIndex(st) {\n        // not much as of today...might improve this in the future\n        return st;\n    }\n    // =========================================\n    // ============== ALTER TABLE ==============\n    // =========================================\n    alterTable(st) {\n        var _a;\n        const table = this.tableRef(st.table);\n        if (!table) {\n            return null; // no table\n        }\n        let changes = [];\n        let hasChanged = false;\n        for (let i = 0; i < (((_a = st.changes) === null || _a === void 0 ? void 0 : _a.length) || 0); i++) {\n            const currentChange = st.changes[i];\n            const change = this.tableAlteration(currentChange, st.table);\n            hasChanged = hasChanged || (change != currentChange);\n            if (!!change) {\n                changes.push(change);\n            }\n        }\n        if (!changes.length) {\n            return null; // no change left\n        }\n        if (!hasChanged) {\n            return st;\n        }\n        return assignChanged(st, {\n            table,\n            changes,\n        });\n    }\n    tableAlteration(change, table) {\n        switch (change.type) {\n            case 'add column':\n                return this.addColumn(change, table);\n            case 'add constraint':\n                return this.addConstraint(change, table);\n            case 'alter column':\n                return this.alterColumn(change, table);\n            case 'rename':\n                return this.renameTable(change, table);\n            case 'rename column':\n                return this.renameColumn(change, table);\n            case 'rename constraint':\n                return this.renameConstraint(change, table);\n            case 'drop column':\n                return this.dropColumn(change, table);\n            case 'drop constraint':\n                return this.dropConstraint(change, table);\n            case 'owner':\n                return this.setTableOwner(change, table);\n            default:\n                throw utils_1.NotSupported.never(change);\n        }\n    }\n    dropColumn(change, table) {\n        return change;\n    }\n    dropConstraint(change, table) {\n        return change;\n    }\n    setTableOwner(change, table) {\n        return change;\n    }\n    renameConstraint(change, table) {\n        return change;\n    }\n    renameColumn(change, table) {\n        return change;\n    }\n    renameTable(change, table) {\n        return change;\n    }\n    alterColumn(change, inTable) {\n        let alter;\n        switch (change.alter.type) {\n            case 'set default':\n                alter = this.setColumnDefault(change.alter, inTable, change.column);\n                break;\n            case 'set type':\n                alter = this.setColumnType(change.alter, inTable, change.column);\n                break;\n            case 'drop default':\n            case 'set not null':\n            case 'drop not null':\n                alter = this.alterColumnSimple(change.alter, inTable, change.column);\n                break;\n            case 'add generated':\n                alter = this.alterColumnAddGenerated(change.alter, inTable, change.column);\n                break;\n            default:\n                throw utils_1.NotSupported.never(change.alter);\n        }\n        if (!alter) {\n            return null; // no more alter\n        }\n        return assignChanged(change, {\n            alter,\n        });\n    }\n    setColumnType(alter, inTable, inColumn) {\n        const dataType = this.dataType(alter.dataType);\n        return assignChanged(alter, {\n            dataType,\n        });\n    }\n    alterColumnAddGenerated(alter, inTable, inColumn) {\n        return alter;\n    }\n    alterColumnSimple(alter, inTable, inColumn) {\n        return alter;\n    }\n    setColumnDefault(alter, inTable, inColumn) {\n        const def = this.expr(alter.default);\n        if (!def) {\n            return null; // no more default to set\n        }\n        return assignChanged(alter, {\n            default: def,\n        });\n    }\n    addConstraint(change, inTable) {\n        return change;\n    }\n    addColumn(change, inTable) {\n        const column = this.createColumn(change.column);\n        if (!column) {\n            return null; // no more column to add\n        }\n        return assignChanged(change, {\n            column,\n        });\n    }\n    createColumn(col) {\n        var _a;\n        // to be overriden\n        const dataType = this.dataType(col.dataType);\n        if (!dataType) {\n            return null; // no data type => remove column\n        }\n        const constraints = (_a = arrayNilMap(col.constraints, m => this.constraint(m))) !== null && _a !== void 0 ? _a : undefined;\n        return assignChanged(col, {\n            dataType,\n            constraints,\n        });\n    }\n    // =========================================\n    // ============== SELECTIONS ==============\n    // =========================================\n    select(val) {\n        switch (val.type) {\n            case 'select':\n                return this.selection(val);\n            case 'union':\n            case 'union all':\n                return this.union(val);\n            case 'with':\n                return this.with(val);\n            case 'values':\n                return this.values(val);\n            case 'with recursive':\n                return this.withRecursive(val);\n            default:\n                throw utils_1.NotSupported.never(val);\n        }\n    }\n    selection(val) {\n        var _a, _b;\n        const from = arrayNilMap(val.from, c => this.from(c));\n        const columns = arrayNilMap(val.columns, c => this.selectionColumn(c));\n        const where = val.where && this.expr(val.where);\n        const groupBy = arrayNilMap(val.groupBy, c => this.expr(c));\n        const having = val.having && this.expr(val.having);\n        const orderBy = this.orderBy(val.orderBy);\n        const limit = assignChanged(val.limit, {\n            limit: this.expr((_a = val.limit) === null || _a === void 0 ? void 0 : _a.limit),\n            offset: this.expr((_b = val.limit) === null || _b === void 0 ? void 0 : _b.offset),\n        });\n        return assignChanged(val, {\n            from,\n            columns,\n            where,\n            groupBy,\n            having,\n            orderBy,\n            limit,\n        });\n    }\n    orderBy(orderBy) {\n        return arrayNilMap(orderBy, c => {\n            const by = this.expr(c.by);\n            if (!by) {\n                return null;\n            }\n            if (by === c.by) {\n                return c;\n            }\n            return {\n                ...c,\n                by,\n            };\n        });\n    }\n    union(val) {\n        const left = this.select(val.left);\n        const right = this.select(val.right);\n        if (!left || !right) {\n            return left !== null && left !== void 0 ? left : right;\n        }\n        return assignChanged(val, {\n            left,\n            right\n        });\n    }\n    with(val) {\n        const bind = arrayNilMap(val.bind, s => {\n            const statement = this.statement(s.statement);\n            return withAccepts(statement)\n                ? assignChanged(s, { statement })\n                : null;\n        });\n        // no bindngs\n        if (!bind) {\n            return null;\n        }\n        const _in = this.statement(val.in);\n        if (!withAccepts(_in)) {\n            return null;\n        }\n        return assignChanged(val, {\n            bind,\n            in: _in,\n        });\n    }\n    withRecursive(val) {\n        const statement = this.union(val.bind);\n        if (!statement) {\n            return null;\n        }\n        // 'with recursive' only accepts unions\n        if (statement.type !== 'union' && statement.type !== 'union all') {\n            return null;\n        }\n        const _in = this.statement(val.in);\n        if (!withAccepts(_in)) {\n            return null;\n        }\n        return assignChanged(val, {\n            bind: statement,\n            in: _in,\n        });\n    }\n    from(from) {\n        switch (from.type) {\n            case 'table':\n                return this.fromTable(from);\n            case 'statement':\n                return this.fromStatement(from);\n            case 'call':\n                return this.fromCall(from);\n            default:\n                throw utils_1.NotSupported.never(from);\n        }\n    }\n    fromCall(from) {\n        const call = this.call(from);\n        if (!call || call.type !== 'call') {\n            return null;\n        }\n        return assignChanged(from, call);\n    }\n    fromStatement(from) {\n        const statement = this.select(from.statement);\n        if (!statement) {\n            return null; // nothing to select from\n        }\n        const join = from.join && this.join(from.join);\n        return assignChanged(from, {\n            statement,\n            join,\n        });\n    }\n    values(from) {\n        const values = arrayNilMap(from.values, x => arrayNilMap(x, y => this.expr(y)));\n        if (!(values === null || values === void 0 ? void 0 : values.length)) {\n            return null; // nothing to select from\n        }\n        return assignChanged(from, {\n            values,\n        });\n    }\n    join(join) {\n        const on = join.on && this.expr(join.on);\n        if (!on && !join.using) {\n            return join;\n        }\n        return assignChanged(join, {\n            on,\n        });\n    }\n    fromTable(from) {\n        const nfrom = this.tableRef(from.name);\n        if (!nfrom) {\n            return null; // nothing to select from\n        }\n        const join = from.join && this.join(from.join);\n        return assignChanged(from, {\n            name: nfrom,\n            join,\n        });\n    }\n    selectionColumn(val) {\n        const expr = this.expr(val.expr);\n        if (!expr) {\n            return null; // not selected anymore\n        }\n        return assignChanged(val, {\n            expr,\n        });\n    }\n    // =========================================\n    // ============== EXPRESSIONS ==============\n    // =========================================\n    expr(val) {\n        if (!val) {\n            return val;\n        }\n        switch (val.type) {\n            case 'binary':\n                return this.binary(val);\n            case 'unary':\n                return this.unary(val);\n            case 'ref':\n                return this.ref(val);\n            case 'string':\n            case 'numeric':\n            case 'integer':\n            case 'boolean':\n            case 'constant':\n            case 'null':\n                return this.constant(val);\n            case 'list':\n            case 'array':\n                return this.array(val);\n            case 'array select':\n                return this.arraySelect(val);\n            case 'call':\n                return this.call(val);\n            case 'cast':\n                return this.cast(val);\n            case 'case':\n                return this.case(val);\n            case 'member':\n                return this.member(val);\n            case 'arrayIndex':\n                return this.arrayIndex(val);\n            case 'ternary':\n                return this.ternary(val);\n            case 'select':\n            case 'union':\n            case 'union all':\n            case 'with':\n            case 'with recursive':\n                return this.select(val);\n            case 'keyword':\n                return this.valueKeyword(val);\n            case 'parameter':\n                return this.parameter(val);\n            case 'extract':\n                return this.extract(val);\n            case 'overlay':\n                return this.callOverlay(val);\n            case 'substring':\n                return this.callSubstring(val);\n            case 'values':\n                return this.values(val);\n            case 'default':\n                return this.default(val);\n            default:\n                throw utils_1.NotSupported.never(val);\n        }\n    }\n    arraySelect(val) {\n        const select = this.select(val.select);\n        if (!select) {\n            return null;\n        }\n        return assignChanged(val, { select });\n    }\n    extract(st) {\n        const from = this.expr(st.from);\n        if (!from) {\n            return null;\n        }\n        return assignChanged(st, { from });\n    }\n    valueKeyword(val) {\n        return val;\n    }\n    ternary(val) {\n        const value = this.expr(val.value);\n        const lo = this.expr(val.lo);\n        const hi = this.expr(val.hi);\n        if (!value || !lo || !hi) {\n            return null; // missing a branch\n        }\n        return assignChanged(val, {\n            value,\n            lo,\n            hi,\n        });\n    }\n    parameter(st) {\n        return st;\n    }\n    arrayIndex(val) {\n        const array = this.expr(val.array);\n        const index = this.expr(val.index);\n        if (!array || !index) {\n            return null;\n        }\n        return assignChanged(val, {\n            array,\n            index,\n        });\n    }\n    member(val) {\n        const operand = this.expr(val.operand);\n        if (!operand) {\n            return null;\n        }\n        return assignChanged(val, {\n            operand,\n        });\n    }\n    case(val) {\n        const value = val.value && this.expr(val.value);\n        const whens = arrayNilMap(val.whens, w => {\n            const when = this.expr(w.when);\n            const value = this.expr(w.value);\n            if (!when || !value) {\n                return null;\n            }\n            return assignChanged(w, {\n                value,\n                when,\n            });\n        });\n        if (!(whens === null || whens === void 0 ? void 0 : whens.length)) {\n            return null; // no case\n        }\n        const els = val.else && this.expr(val.else);\n        return assignChanged(val, {\n            value,\n            whens,\n            else: els,\n        });\n    }\n    cast(val) {\n        const operand = this.expr(val.operand);\n        if (!operand) {\n            return null;\n        }\n        return assignChanged(val, {\n            operand,\n        });\n    }\n    call(val) {\n        var _a;\n        const args = arrayNilMap(val.args, a => this.expr(a));\n        if (!args) {\n            return null;\n        }\n        const orderBy = this.orderBy(val.orderBy);\n        const filter = this.expr(val.filter);\n        const withinGroupList = val.withinGroup ? [val.withinGroup] : undefined;\n        const withinGroup = (_a = this.orderBy(withinGroupList)) === null || _a === void 0 ? void 0 : _a[0];\n        return assignChanged(val, {\n            args,\n            orderBy,\n            filter,\n            withinGroup,\n        });\n    }\n    callSubstring(val) {\n        return assignChanged(val, {\n            value: this.expr(val.value),\n            from: this.expr(val.from),\n            for: this.expr(val.for),\n        });\n    }\n    callOverlay(val) {\n        return assignChanged(val, {\n            value: this.expr(val.value),\n            placing: this.expr(val.placing),\n            from: this.expr(val.from),\n            for: this.expr(val.for),\n        });\n    }\n    array(val) {\n        const expressions = arrayNilMap(val.expressions, a => this.expr(a));\n        if (!expressions) {\n            return null;\n        }\n        return assignChanged(val, {\n            expressions,\n        });\n    }\n    constant(value) {\n        return value;\n    }\n    default(value) {\n        return value;\n    }\n    /** Called when a reference is used */\n    ref(val) {\n        return val;\n    }\n    unary(val) {\n        const operand = this.expr(val.operand);\n        if (!operand) {\n            return null;\n        }\n        return assignChanged(val, {\n            operand,\n        });\n    }\n    binary(val) {\n        const left = this.expr(val.left);\n        const right = this.expr(val.right);\n        if (!left || !right) {\n            return null;\n        }\n        return assignChanged(val, {\n            left,\n            right,\n        });\n    }\n}\nexports.AstDefaultMapper = AstDefaultMapper;\n// ====== auto implement the replace mechanism\nconst proto = AstDefaultMapper.prototype;\nfor (const k of Object.getOwnPropertyNames(proto)) {\n    const orig = proto[k];\n    if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {\n        continue;\n    }\n    Object.defineProperty(proto, k, {\n        configurable: false,\n        get() {\n            return function (...args) {\n                var _a;\n                if (this.skipNext) {\n                    this.skipNext = false;\n                    return orig.apply(this, args);\n                }\n                const impl = (_a = this.wrapped) === null || _a === void 0 ? void 0 : _a[k];\n                if (!impl) {\n                    return orig.apply(this, args);\n                }\n                return impl.apply(this.wrapped, args);\n            };\n        }\n    });\n}\n// ====== auto implement the skip mechanism\nclass SkipModifier extends AstDefaultMapper {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n    }\n}\nfor (const k of Object.getOwnPropertyNames(proto)) {\n    const orig = proto[k];\n    if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {\n        continue;\n    }\n    Object.defineProperty(SkipModifier.prototype, k, {\n        configurable: false,\n        get() {\n            return function (...args) {\n                this.parent.skipNext = true;\n                return orig.apply(this.parent, args);\n            };\n        }\n    });\n}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sqlKeywords = void 0;\n// https://www.postgresql.org/docs/current/sql-keywords-appendix.html\n// $('table.table').children('tbody').children().toArray().filter(x => { const txt = $($(x).children()[1]).text(); return txt.includes('reserved') && !txt.includes('non-reserved')}).map(x => $($(x).children()[0]).text())\nexports.sqlKeywords = [\n    \"ALL\", \"ANALYSE\", \"ANALYZE\", \"AND\", \"ANY\", \"ARRAY\", \"AS\", \"ASC\", \"ASYMMETRIC\", \"AUTHORIZATION\", \"BINARY\", \"BOTH\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLLATION\", \"CONCURRENTLY\", \"CONSTRAINT\", \"CREATE\", \"CROSS\", \"CURRENT_CATALOG\", \"CURRENT_DATE\", \"CURRENT_ROLE\", \"CURRENT_SCHEMA\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"CURRENT_USER\", \"DEFAULT\", \"DEFERRABLE\", \"DESC\", \"DISTINCT\", \"DO\", \"ELSE\", \"END\", \"EXCEPT\", \"FALSE\", \"FETCH\", \"FOR\", \"FOREIGN\", \"FREEZE\", \"FROM\", \"FULL\", \"GRANT\", \"GROUP\", \"HAVING\", \"ILIKE\", \"IN\", \"INITIALLY\", \"INNER\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"LATERAL\", \"LEADING\", \"LEFT\", \"LIKE\", \"LIMIT\", \"LOCALTIME\", \"LOCALTIMESTAMP\", \"NATURAL\", \"NOT\", \"NOTNULL\", \"NULL\", \"OFFSET\", \"ON\", \"ONLY\", \"OR\", \"ORDER\", \"OUTER\", \"OVERLAPS\", \"PLACING\", \"PRIMARY\", \"REFERENCES\", \"RETURNING\", \"RIGHT\", \"SELECT\", \"SESSION_USER\", \"SIMILAR\", \"SOME\", \"SYMMETRIC\", \"TABLE\", \"TABLESAMPLE\", \"THEN\", \"TO\", \"TRAILING\", \"TRUE\", \"UNION\", \"UNIQUE\", \"USER\", \"USING\", \"VARIADIC\", \"VERBOSE\", \"WHEN\", \"WHERE\", \"WINDOW\", \"WITH\"\n    // added manually\n    ,\n    \"PRECISION\"\n];\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.intervalToString = exports.normalizeInterval = exports.buildInterval = void 0;\nconst types = [\n    ['years', 12],\n    ['months', 30],\n    ['days', 24],\n    ['hours', 60],\n    ['minutes', 60],\n    ['seconds', 1000],\n    ['milliseconds', 0],\n];\nfunction* unwrap(k) {\n    if (typeof k[1] === 'number') {\n        yield k;\n    }\n    else {\n        for (const v of k) {\n            yield* unwrap(v);\n        }\n    }\n}\nfunction buildInterval(orig, vals) {\n    var _a;\n    const ret = {};\n    if (vals === 'invalid') {\n        throw new Error(`invalid input syntax for type interval: \"${orig}\"`);\n    }\n    for (const [k, v] of unwrap(vals)) {\n        ret[k] = ((_a = ret[k]) !== null && _a !== void 0 ? _a : 0) + v;\n    }\n    return ret;\n}\nexports.buildInterval = buildInterval;\n/** Returns a normalized copy of the given interval */\nfunction normalizeInterval(value) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    const ret = { ...value };\n    // trim non-integers\n    for (let i = 0; i < types.length; i++) {\n        const [k, mul] = types[i];\n        const v = (_a = ret[k]) !== null && _a !== void 0 ? _a : 0;\n        const int = v >= 0\n            ? Math.floor(v)\n            : Math.ceil(v);\n        if (!v || int === v) {\n            continue;\n        }\n        const nk = (_b = types[i + 1]) === null || _b === void 0 ? void 0 : _b[0];\n        if (nk) {\n            ret[nk] = ((_c = ret[nk]) !== null && _c !== void 0 ? _c : 0) + mul * (v - int);\n        }\n        ret[k] = int;\n    }\n    if (ret.months || ret.years) {\n        const m = ((_d = ret.months) !== null && _d !== void 0 ? _d : 0) + ((_e = ret.years) !== null && _e !== void 0 ? _e : 0) * 12;\n        ret.months = m % 12;\n        ret.years = (m - ret.months) / 12;\n    }\n    // normalize time\n    let t = ((_f = ret.hours) !== null && _f !== void 0 ? _f : 0) * 3600\n        + ((_g = ret.minutes) !== null && _g !== void 0 ? _g : 0) * 60\n        + ((_h = ret.seconds) !== null && _h !== void 0 ? _h : 0)\n        + ((_j = ret.milliseconds) !== null && _j !== void 0 ? _j : 0) / 1000;\n    let sign = 1;\n    if (t < 0) {\n        sign = -1;\n        t = -t;\n    }\n    if (t >= 3600) {\n        ret.hours = sign * Math.floor(t / 3600);\n        t -= sign * ret.hours * 3600;\n    }\n    else {\n        delete ret.hours;\n    }\n    if (t >= 60) {\n        ret.minutes = sign * Math.floor(t / 60);\n        t -= sign * ret.minutes * 60;\n    }\n    else {\n        delete ret.minutes;\n    }\n    if (t > 0) {\n        ret.seconds = sign * Math.floor(t);\n        t -= sign * ret.seconds;\n    }\n    else {\n        delete ret.seconds;\n    }\n    if (t > 0) {\n        ret.milliseconds = sign * Math.round(t * 1000);\n    }\n    else {\n        delete ret.milliseconds;\n    }\n    // trim zeros.\n    for (const [k] of types) {\n        if (!ret[k]) {\n            delete ret[k];\n        }\n    }\n    return ret;\n}\nexports.normalizeInterval = normalizeInterval;\n/** Interval value to postgres string representation  */\nfunction intervalToString(value) {\n    var _a, _b, _c;\n    value = normalizeInterval(value);\n    const ret = [];\n    if (value.years) {\n        ret.push(value.years === 1 ? '1 year' : value.years + ' years');\n    }\n    if (value.months) {\n        ret.push(value.months === 1 ? '1 month' : value.months + ' months');\n    }\n    if (value.days) {\n        ret.push(value.days === 1 ? '1 day' : value.days + ' days');\n    }\n    if (value.hours || value.minutes || value.seconds || value.milliseconds) {\n        let time = `${num((_a = value.hours) !== null && _a !== void 0 ? _a : 0)}:${num((_b = value.minutes) !== null && _b !== void 0 ? _b : 0)}:${num((_c = value.seconds) !== null && _c !== void 0 ? _c : 0)}`;\n        if (value.milliseconds) {\n            time = time + (value.milliseconds / 1000).toString().substr(1);\n        }\n        if (neg(value.hours) || neg(value.minutes) || neg(value.seconds) || neg(value.milliseconds)) {\n            time = '-' + time;\n        }\n        ret.push(time);\n    }\n    return ret.join(' ');\n}\nexports.intervalToString = intervalToString;\nfunction num(v) {\n    v = Math.abs(v);\n    return v < 10 ? '0' + v : v.toString();\n}\nfunction neg(v) {\n    return v && v < 0;\n}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.astVisitor = void 0;\nconst ast_mapper_1 = __webpack_require__(2);\nclass Visitor {\n    super() {\n        return new SkipVisitor(this);\n    }\n}\n// =============== auto implement the mapper\nconst mapperProto = ast_mapper_1.AstDefaultMapper.prototype;\nfor (const k of Object.getOwnPropertyNames(mapperProto)) {\n    const orig = mapperProto[k];\n    if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {\n        continue;\n    }\n    Object.defineProperty(Visitor.prototype, k, {\n        configurable: false,\n        get() {\n            return function (...args) {\n                const impl = this.visitor[k];\n                if (!impl) {\n                    // just ignore & forward call to mapper\n                    return orig.apply(this, args);\n                }\n                // return first argument\n                // ...which means \"I dont wana change anything\"\n                //    in the ast-modifier language.\n                impl.apply(this.visitor, args);\n                return args[0];\n            };\n        }\n    });\n}\n// ====== auto implement the skip mechanism\nclass SkipVisitor {\n    constructor(parent) {\n        this.parent = parent;\n    }\n}\nfor (const k of Object.getOwnPropertyNames(mapperProto)) {\n    const orig = mapperProto[k];\n    if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {\n        continue;\n    }\n    Object.defineProperty(SkipVisitor.prototype, k, {\n        configurable: false,\n        get() {\n            return function (...args) {\n                return orig.apply(this.parent, args);\n            };\n        }\n    });\n}\n/**\n * Builds an AST visitor based on the default implementation, merged with the one you provide.\n *\n * Example of visitor which counts references to a column 'foo':\n *\n * ```ts\n * let cnt = 0;\n * const visitor = astVisitor(v => ({\n *      ref: r => {\n *          if (r.name === 'foo') {\n *              cnt++;\n *          }\n *          v.super().ref(r);\n *      }\n *  }));\n *\n * visitor.statement(myStatementToCount);\n * console.log(`${cnt} references to foo !`);\n * ```\n */\nfunction astVisitor(visitorBuilder) {\n    return (0, ast_mapper_1.astMapper)(m => {\n        const ret = new Visitor();\n        ret.mapper = m;\n        ret.visitor = visitorBuilder(ret);\n        return ret;\n    });\n}\nexports.astVisitor = astVisitor;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.trimNullish = exports.NotSupported = void 0;\nclass NotSupported extends Error {\n    constructor(what) {\n        super('Not supported' + (what ? ': ' + what : ''));\n    }\n    static never(value, msg) {\n        return new NotSupported(`${msg !== null && msg !== void 0 ? msg : ''} ${JSON.stringify(value)}`);\n    }\n}\nexports.NotSupported = NotSupported;\nfunction trimNullish(value, depth = 5) {\n    if (depth < 0)\n        return value;\n    if (value instanceof Array) {\n        value.forEach(x => trimNullish(x, depth - 1));\n    }\n    if (typeof value !== 'object' || value instanceof Date)\n        return value;\n    if (!value) {\n        return value;\n    }\n    for (const k of Object.keys(value)) {\n        const val = value[k];\n        if (val === undefined || val === null)\n            delete value[k];\n        else\n            trimNullish(val, depth - 1);\n    }\n    return value;\n}\nexports.trimNullish = trimNullish;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeInterval = exports.intervalToString = exports.toSql = exports.astMapper = exports.assignChanged = exports.arrayNilMap = exports.astVisitor = exports.parseWithComments = exports.parseIntervalLiteral = exports.parseGeometricLiteral = exports.parseArrayLiteral = exports.parseFirst = exports.parse = void 0;\nvar parser_1 = __webpack_require__(8);\nObject.defineProperty(exports, \"parse\", { enumerable: true, get: function () { return parser_1.parse; } });\nObject.defineProperty(exports, \"parseFirst\", { enumerable: true, get: function () { return parser_1.parseFirst; } });\nObject.defineProperty(exports, \"parseArrayLiteral\", { enumerable: true, get: function () { return parser_1.parseArrayLiteral; } });\nObject.defineProperty(exports, \"parseGeometricLiteral\", { enumerable: true, get: function () { return parser_1.parseGeometricLiteral; } });\nObject.defineProperty(exports, \"parseIntervalLiteral\", { enumerable: true, get: function () { return parser_1.parseIntervalLiteral; } });\nObject.defineProperty(exports, \"parseWithComments\", { enumerable: true, get: function () { return parser_1.parseWithComments; } });\nvar ast_visitor_1 = __webpack_require__(5);\nObject.defineProperty(exports, \"astVisitor\", { enumerable: true, get: function () { return ast_visitor_1.astVisitor; } });\nvar ast_mapper_1 = __webpack_require__(2);\nObject.defineProperty(exports, \"arrayNilMap\", { enumerable: true, get: function () { return ast_mapper_1.arrayNilMap; } });\nObject.defineProperty(exports, \"assignChanged\", { enumerable: true, get: function () { return ast_mapper_1.assignChanged; } });\nObject.defineProperty(exports, \"astMapper\", { enumerable: true, get: function () { return ast_mapper_1.astMapper; } });\nvar to_sql_1 = __webpack_require__(19);\nObject.defineProperty(exports, \"toSql\", { enumerable: true, get: function () { return to_sql_1.toSql; } });\n__exportStar(__webpack_require__(21), exports);\nvar interval_builder_1 = __webpack_require__(4);\nObject.defineProperty(exports, \"intervalToString\", { enumerable: true, get: function () { return interval_builder_1.intervalToString; } });\nObject.defineProperty(exports, \"normalizeInterval\", { enumerable: true, get: function () { return interval_builder_1.normalizeInterval; } });\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseGeometricLiteral = exports.parseIntervalLiteral = exports.parseArrayLiteral = exports.parse = exports.parseWithComments = exports.parseFirst = void 0;\nconst nearley_1 = __webpack_require__(9);\nconst main_ne_1 = __importDefault(__webpack_require__(10));\nconst array_ne_1 = __importDefault(__webpack_require__(11));\nconst geometric_ne_1 = __importDefault(__webpack_require__(13));\nconst interval_ne_1 = __importDefault(__webpack_require__(15));\nconst interval_iso_ne_1 = __importDefault(__webpack_require__(17));\nconst interval_builder_1 = __webpack_require__(4);\nconst lexer_1 = __webpack_require__(1);\nlet sqlCompiled;\nlet arrayCompiled;\nlet geometricCompiled;\nlet intervalTextCompiled;\nlet intervalIsoCompiled;\n/** Parse the first SQL statement in the given text (discards the rest), and return its AST */\nfunction parseFirst(sql) {\n    const first = parse(sql);\n    return first[0];\n}\nexports.parseFirst = parseFirst;\n/** Parse an AST from SQL, and get the comments */\nfunction parseWithComments(sql, options) {\n    return (0, lexer_1.trackingComments)(() => parse(sql, options));\n}\nexports.parseWithComments = parseWithComments;\nfunction parse(sql, optEntry) {\n    if (!sqlCompiled) {\n        sqlCompiled = nearley_1.Grammar.fromCompiled(main_ne_1.default);\n    }\n    const entry = typeof optEntry === 'string'\n        ? optEntry\n        : optEntry === null || optEntry === void 0 ? void 0 : optEntry.entry;\n    const opts = typeof optEntry === 'string' ? null : optEntry;\n    // parse sql\n    const doParse = () => _parse(sql, sqlCompiled, entry);\n    let parsed = (opts === null || opts === void 0 ? void 0 : opts.locationTracking)\n        ? (0, lexer_1.tracking)(doParse)\n        : doParse();\n    // always return an array of statements.\n    if (typeof optEntry !== 'string' && !Array.isArray(parsed)) {\n        parsed = [parsed];\n    }\n    return parsed;\n}\nexports.parse = parse;\nfunction parseArrayLiteral(sql) {\n    if (!arrayCompiled) {\n        arrayCompiled = nearley_1.Grammar.fromCompiled(array_ne_1.default);\n    }\n    return _parse(sql, arrayCompiled);\n}\nexports.parseArrayLiteral = parseArrayLiteral;\nfunction parseIntervalLiteral(literal) {\n    if (literal.startsWith('P')) {\n        if (!intervalIsoCompiled) {\n            intervalIsoCompiled = nearley_1.Grammar.fromCompiled(interval_iso_ne_1.default);\n        }\n        return (0, interval_builder_1.buildInterval)(literal, _parse(literal, intervalIsoCompiled));\n    }\n    else {\n        if (!intervalTextCompiled) {\n            intervalTextCompiled = nearley_1.Grammar.fromCompiled(interval_ne_1.default);\n        }\n        const low = literal.toLowerCase(); // full text syntax is case insensitive\n        return (0, interval_builder_1.buildInterval)(literal, _parse(low, intervalTextCompiled));\n    }\n}\nexports.parseIntervalLiteral = parseIntervalLiteral;\nfunction parseGeometricLiteral(sql, type) {\n    if (!geometricCompiled) {\n        geometricCompiled = nearley_1.Grammar.fromCompiled(geometric_ne_1.default);\n    }\n    return _parse(sql, geometricCompiled, type);\n}\nexports.parseGeometricLiteral = parseGeometricLiteral;\nfunction _parse(sql, grammar, entry) {\n    try {\n        grammar.start = entry !== null && entry !== void 0 ? entry : 'main';\n        const parser = new nearley_1.Parser(grammar);\n        parser.feed(sql);\n        const asts = parser.finish();\n        if (!asts.length) {\n            throw new Error('Unexpected end of input');\n        }\n        else if (asts.length !== 1) {\n            throw new Error(`💀 Ambiguous SQL syntax: Please file an issue stating the request that has failed at https://github.com/oguimbal/pgsql-ast-parser:\n\n        ${sql}\n\n        `);\n        }\n        return asts[0];\n    }\n    catch (e) {\n        if (typeof (e === null || e === void 0 ? void 0 : e.message) !== 'string') {\n            throw e;\n        }\n        let msg = e.message;\n        // remove all the stack crap of nearley parser\n        let begin = null;\n        const parts = [];\n        const reg = /A (.+) token based on:/g;\n        let m;\n        while (m = reg.exec(msg)) {\n            begin = begin !== null && begin !== void 0 ? begin : msg.substr(0, m.index);\n            parts.push(`    - A \"${m[1]}\" token`);\n        }\n        if (begin) {\n            msg = begin + parts.join('\\n') + '\\n\\n';\n        }\n        e.message = msg;\n        throw e;\n    }\n}\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"nearley\");\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Generated automatically by nearley, version unknown\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nfunction id(d) { return d[0]; }\nconst lexer_1 = __webpack_require__(1);\nconst lexer_2 = __webpack_require__(1);\n// usage ex:  replace track(whatever) with debug(track)(whatever)\nfunction debug(fn) {\n    fn = fn || ((x) => x);\n    return ((x, ...args) => {\n        debugger;\n        return fn(x, ...args);\n    });\n}\nfunction asName(val) {\n    return asNameWithColumns(val, undefined);\n}\nfunction asNameWithColumns(val, columns) {\n    const name = toStr(val);\n    if (!columns || columns.length === 0) {\n        return (0, lexer_2.track)(val, { name });\n    }\n    return (0, lexer_2.track)(val, {\n        name,\n        columns: columns.map(c => ({ name: toStr(c) })),\n    });\n}\nfunction asLit(val) {\n    const value = toStr(val);\n    return (0, lexer_2.track)(val, { value });\n}\nfunction unwrap(e) {\n    if (Array.isArray(e) && e.length === 1) {\n        e = unwrap(e[0]);\n    }\n    if (Array.isArray(e) && !e.length) {\n        return null;\n    }\n    return (0, lexer_2.unbox)(e);\n}\nconst get = (i) => (x) => (0, lexer_2.track)(x, x[i]);\nconst last = (x) => Array.isArray(x) ? (0, lexer_2.track)(x[x.length - 1], x[x.length - 1]) : x;\nconst trim = (x) => x && x.trim();\nconst value = (x) => x && x.value;\nfunction flatten(e) {\n    if (Array.isArray(e)) {\n        const ret = [];\n        for (const i of e) {\n            ret.push(...flatten(i));\n        }\n        return ret;\n    }\n    if (!e) {\n        return [];\n    }\n    return [e];\n}\nfunction asStr(value) {\n    var _a;\n    value = (0, lexer_2.unbox)(value);\n    return (_a = value === null || value === void 0 ? void 0 : value.value) !== null && _a !== void 0 ? _a : value;\n}\nfunction flattenStr(e) {\n    const fl = flatten((0, lexer_2.unbox)(e));\n    return fl.filter(x => !!x)\n        .map(x => asStr(x))\n        .filter(x => typeof x === 'string')\n        .map(x => x.trim())\n        .filter(x => !!x);\n}\nfunction toStr(e, join) {\n    return flattenStr(e).join(join || '');\n}\nfunction fromEntries(vals) {\n    const ret = {};\n    for (const [k, v] of vals) {\n        ret[k] = v;\n    }\n    return ret;\n}\nconst kwSensitivity = { sensitivity: 'accent' };\nconst eqInsensitive = (a, b) => a.localeCompare(b, undefined, kwSensitivity) === 0;\nconst notReservedKw = (kw) => (x, _, rej) => {\n    const val = asStr(x[0]);\n    if (eqInsensitive(val, kw)) {\n        return (0, lexer_2.box)(x, kw);\n    }\n    return rej;\n};\nconst kw = notReservedKw;\nconst anyKw = (...kw) => {\n    const kwSet = new Set(kw);\n    return (x, _, rej) => {\n        const val = typeof x[0] === 'string' ? x[0] : x[0].value;\n        return kwSet.has(val) ? val : rej;\n    };\n};\nfunction setSeqOpts(ret, opts) {\n    const defs = new Set();\n    const unboxed = opts.map(lexer_2.unbox);\n    for (const [k, v] of unboxed) {\n        if (defs.has(k)) {\n            throw new Error('conflicting or redundant options');\n        }\n        defs.add(k);\n        ret[k] = (0, lexer_2.unbox)(v);\n    }\n}\n;\n;\n;\n;\nconst grammar = {\n    Lexer: lexer_1.lexerAny,\n    ParserRules: [\n        { \"name\": \"lparen\", \"symbols\": [(lexer_1.lexerAny.has(\"lparen\") ? { type: \"lparen\" } : lparen)] },\n        { \"name\": \"rparen\", \"symbols\": [(lexer_1.lexerAny.has(\"rparen\") ? { type: \"rparen\" } : rparen)] },\n        { \"name\": \"number$subexpression$1\", \"symbols\": [\"float\"] },\n        { \"name\": \"number$subexpression$1\", \"symbols\": [\"int\"] },\n        { \"name\": \"number\", \"symbols\": [\"number$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"dot\", \"symbols\": [(lexer_1.lexerAny.has(\"dot\") ? { type: \"dot\" } : dot)], \"postprocess\": id },\n        { \"name\": \"float\", \"symbols\": [(lexer_1.lexerAny.has(\"float\") ? { type: \"float\" } : float)], \"postprocess\": x => (0, lexer_2.box)(x, parseFloat(unwrap(x))) },\n        { \"name\": \"int\", \"symbols\": [(lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)], \"postprocess\": x => (0, lexer_2.box)(x, parseInt(unwrap(x), 10)) },\n        { \"name\": \"comma\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma)], \"postprocess\": id },\n        { \"name\": \"star\", \"symbols\": [(lexer_1.lexerAny.has(\"star\") ? { type: \"star\" } : star)], \"postprocess\": x => (0, lexer_2.box)(x, x[0].value) },\n        { \"name\": \"string$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"string\") ? { type: \"string\" } : string)] },\n        { \"name\": \"string$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"eString\") ? { type: \"eString\" } : eString)] },\n        { \"name\": \"string\", \"symbols\": [\"string$subexpression$1\"], \"postprocess\": x => (0, lexer_2.box)(x, unwrap(x[0]).value) },\n        { \"name\": \"ident\", \"symbols\": [\"word\"], \"postprocess\": get(0) },\n        { \"name\": \"word\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_primary\") ? { type: \"kw_primary\" } : kw_primary)], \"postprocess\": x => (0, lexer_2.box)(x, 'primary') },\n        { \"name\": \"word\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_unique\") ? { type: \"kw_unique\" } : kw_unique)], \"postprocess\": x => (0, lexer_2.box)(x, 'unique') },\n        { \"name\": \"word\", \"symbols\": [(lexer_1.lexerAny.has(\"quoted_word\") ? { type: \"quoted_word\" } : quoted_word)], \"postprocess\": x => (0, lexer_2.box)(x, x[0].value, true) },\n        { \"name\": \"word\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": x => (0, lexer_2.box)(x, x[0].value) },\n        { \"name\": \"collist_paren\", \"symbols\": [\"lparen\", \"collist\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"collist$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"collist$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"collist$ebnf$1\", \"symbols\": [\"collist$ebnf$1\", \"collist$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"collist\", \"symbols\": [\"ident\", \"collist$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"kw_between\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('between') },\n        { \"name\": \"kw_conflict\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('conflict') },\n        { \"name\": \"kw_nothing\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('nothing') },\n        { \"name\": \"kw_begin\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('begin') },\n        { \"name\": \"kw_if\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('if') },\n        { \"name\": \"kw_exists\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('exists') },\n        { \"name\": \"kw_key\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('key') },\n        { \"name\": \"kw_index\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('index') },\n        { \"name\": \"kw_extension\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('extension') },\n        { \"name\": \"kw_schema\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('schema') },\n        { \"name\": \"kw_nulls\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('nulls') },\n        { \"name\": \"kw_first\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('first') },\n        { \"name\": \"kw_last\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('last') },\n        { \"name\": \"kw_start\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('start') },\n        { \"name\": \"kw_restart\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('restart') },\n        { \"name\": \"kw_filter\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('filter') },\n        { \"name\": \"kw_commit\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('commit') },\n        { \"name\": \"kw_tablespace\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('tablespace') },\n        { \"name\": \"kw_transaction\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('transaction') },\n        { \"name\": \"kw_work\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('work') },\n        { \"name\": \"kw_read\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('read') },\n        { \"name\": \"kw_write\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('write') },\n        { \"name\": \"kw_isolation\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('isolation') },\n        { \"name\": \"kw_level\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('level') },\n        { \"name\": \"kw_serializable\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('serializable') },\n        { \"name\": \"kw_rollback\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('rollback') },\n        { \"name\": \"kw_insert\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('insert') },\n        { \"name\": \"kw_value\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('value') },\n        { \"name\": \"kw_values\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('values') },\n        { \"name\": \"kw_update\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('update') },\n        { \"name\": \"kw_column\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('column') },\n        { \"name\": \"kw_set\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('set') },\n        { \"name\": \"kw_version\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('version') },\n        { \"name\": \"kw_alter\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('alter') },\n        { \"name\": \"kw_rename\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('rename') },\n        { \"name\": \"kw_sequence\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('sequence') },\n        { \"name\": \"kw_temp\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('temp') },\n        { \"name\": \"kw_temporary\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('temporary') },\n        { \"name\": \"kw_add\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('add') },\n        { \"name\": \"kw_owner\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('owner') },\n        { \"name\": \"kw_owned\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('owned') },\n        { \"name\": \"kw_including\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('including') },\n        { \"name\": \"kw_excluding\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('excluding') },\n        { \"name\": \"kw_none\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('none') },\n        { \"name\": \"kw_drop\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('drop') },\n        { \"name\": \"kw_operator\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('operator') },\n        { \"name\": \"kw_minvalue\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('minvalue') },\n        { \"name\": \"kw_maxvalue\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('maxvalue') },\n        { \"name\": \"kw_data\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('data') },\n        { \"name\": \"kw_type\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('type') },\n        { \"name\": \"kw_trigger\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('trigger') },\n        { \"name\": \"kw_delete\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('delete') },\n        { \"name\": \"kw_cache\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('cache') },\n        { \"name\": \"kw_cascade\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('cascade') },\n        { \"name\": \"kw_no\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('no') },\n        { \"name\": \"kw_timestamp\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('timestamp') },\n        { \"name\": \"kw_cycle\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('cycle') },\n        { \"name\": \"kw_function\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('function') },\n        { \"name\": \"kw_returns\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('returns') },\n        { \"name\": \"kw_language\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('language') },\n        { \"name\": \"kw_out\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('out') },\n        { \"name\": \"kw_inout\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('inout') },\n        { \"name\": \"kw_variadic\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('variadic') },\n        { \"name\": \"kw_action\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('action') },\n        { \"name\": \"kw_restrict\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('restrict') },\n        { \"name\": \"kw_truncate\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('truncate') },\n        { \"name\": \"kw_increment\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('increment') },\n        { \"name\": \"kw_by\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('by') },\n        { \"name\": \"kw_row\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('row') },\n        { \"name\": \"kw_rows\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('rows') },\n        { \"name\": \"kw_next\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('next') },\n        { \"name\": \"kw_match\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('match') },\n        { \"name\": \"kw_replace\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('replace') },\n        { \"name\": \"kw_recursive\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('recursive') },\n        { \"name\": \"kw_view\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('view') },\n        { \"name\": \"kw_cascaded\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('cascaded') },\n        { \"name\": \"kw_unlogged\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('unlogged') },\n        { \"name\": \"kw_global\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('global') },\n        { \"name\": \"kw_option\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('option') },\n        { \"name\": \"kw_materialized\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('materialized') },\n        { \"name\": \"kw_partial\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('partial') },\n        { \"name\": \"kw_partition\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('partition') },\n        { \"name\": \"kw_simple\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('simple') },\n        { \"name\": \"kw_generated\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('generated') },\n        { \"name\": \"kw_always\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('always') },\n        { \"name\": \"kw_identity\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('identity') },\n        { \"name\": \"kw_name\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('name') },\n        { \"name\": \"kw_enum\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('enum') },\n        { \"name\": \"kw_show\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('show') },\n        { \"name\": \"kw_ordinality\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('ordinality') },\n        { \"name\": \"kw_overriding\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('overriding') },\n        { \"name\": \"kw_over\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('over') },\n        { \"name\": \"kw_system\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('system') },\n        { \"name\": \"kw_comment\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('comment') },\n        { \"name\": \"kw_time\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('time') },\n        { \"name\": \"kw_names\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('names') },\n        { \"name\": \"kw_at\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('at') },\n        { \"name\": \"kw_zone\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('zone') },\n        { \"name\": \"kw_interval\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('interval') },\n        { \"name\": \"kw_hour\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('hour') },\n        { \"name\": \"kw_minute\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('minute') },\n        { \"name\": \"kw_local\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('local') },\n        { \"name\": \"kw_session\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('session') },\n        { \"name\": \"kw_prepare\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('prepare') },\n        { \"name\": \"kw_deallocate\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('deallocate') },\n        { \"name\": \"kw_raise\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('raise') },\n        { \"name\": \"kw_continue\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('continue') },\n        { \"name\": \"kw_share\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('share') },\n        { \"name\": \"kw_refresh\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('refresh') },\n        { \"name\": \"kw_nowait\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('nowait') },\n        { \"name\": \"kw_skip\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('skip') },\n        { \"name\": \"kw_locked\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('locked') },\n        { \"name\": \"kw_within\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('within') },\n        { \"name\": \"kw_ifnotexists\", \"symbols\": [\"kw_if\", (lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not), \"kw_exists\"] },\n        { \"name\": \"kw_ifexists\", \"symbols\": [\"kw_if\", \"kw_exists\"] },\n        { \"name\": \"kw_withordinality\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"kw_ordinality\"] },\n        { \"name\": \"kw_not_null\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not), (lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null)] },\n        { \"name\": \"kw_primary_key\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_primary\") ? { type: \"kw_primary\" } : kw_primary), \"kw_key\"] },\n        { \"name\": \"data_type$ebnf$1$subexpression$1$macrocall$2\", \"symbols\": [\"int\"] },\n        { \"name\": \"data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"data_type$ebnf$1$subexpression$1$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1\", \"symbols\": [\"data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1\", \"data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"data_type$ebnf$1$subexpression$1$macrocall$1\", \"symbols\": [\"data_type$ebnf$1$subexpression$1$macrocall$2\", \"data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"data_type$ebnf$1$subexpression$1\", \"symbols\": [\"lparen\", \"data_type$ebnf$1$subexpression$1$macrocall$1\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"data_type$ebnf$1\", \"symbols\": [\"data_type$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"data_type$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"data_type$ebnf$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_array\") ? { type: \"kw_array\" } : kw_array)] },\n        { \"name\": \"data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"lbracket\") ? { type: \"lbracket\" } : lbracket), (lexer_1.lexerAny.has(\"rbracket\") ? { type: \"rbracket\" } : rbracket)] },\n        { \"name\": \"data_type$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$1\"] },\n        { \"name\": \"data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"lbracket\") ? { type: \"lbracket\" } : lbracket), (lexer_1.lexerAny.has(\"rbracket\") ? { type: \"rbracket\" } : rbracket)] },\n        { \"name\": \"data_type$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"data_type$ebnf$2$subexpression$1$ebnf$1\", \"data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$2\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"data_type$ebnf$2$subexpression$1\", \"symbols\": [\"data_type$ebnf$2$subexpression$1$ebnf$1\"] },\n        { \"name\": \"data_type$ebnf$2\", \"symbols\": [\"data_type$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"data_type$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"data_type\", \"symbols\": [\"data_type_simple\", \"data_type$ebnf$1\", \"data_type$ebnf$2\"], \"postprocess\": x => {\n                let asArray = x[2];\n                const name = unwrap(x[0]);\n                let ret;\n                ret = {\n                    ...name,\n                    ...Array.isArray(x[1]) && x[1].length ? { config: x[1].map(unwrap) } : {},\n                };\n                if (asArray) {\n                    if (asArray[0].type === 'kw_array') {\n                        asArray = [['array']];\n                    }\n                    for (const _ of asArray[0]) {\n                        ret = {\n                            kind: 'array',\n                            arrayOf: ret,\n                        };\n                    }\n                }\n                return (0, lexer_2.track)(x, ret);\n            } },\n        { \"name\": \"data_type_list$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"data_type_list$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"data_type\"], \"postprocess\": last },\n        { \"name\": \"data_type_list$ebnf$1\", \"symbols\": [\"data_type_list$ebnf$1\", \"data_type_list$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"data_type_list\", \"symbols\": [\"data_type\", \"data_type_list$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"data_type_simple\", \"symbols\": [\"data_type_text\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: toStr(x, ' ') }) },\n        { \"name\": \"data_type_simple\", \"symbols\": [\"data_type_numeric\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: toStr(x, ' ') }) },\n        { \"name\": \"data_type_simple\", \"symbols\": [\"data_type_date\"] },\n        { \"name\": \"data_type_simple\", \"symbols\": [\"qualified_name_mark_quotes\"] },\n        { \"name\": \"data_type_numeric$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('double') },\n        { \"name\": \"data_type_numeric\", \"symbols\": [\"data_type_numeric$subexpression$1\", (lexer_1.lexerAny.has(\"kw_precision\") ? { type: \"kw_precision\" } : kw_precision)] },\n        { \"name\": \"data_type_text$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": anyKw('character', 'bit') },\n        { \"name\": \"data_type_text$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('varying') },\n        { \"name\": \"data_type_text\", \"symbols\": [\"data_type_text$subexpression$1\", \"data_type_text$subexpression$2\"] },\n        { \"name\": \"data_type_date$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": anyKw('timestamp', 'time') },\n        { \"name\": \"data_type_date$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with)] },\n        { \"name\": \"data_type_date$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('without') },\n        { \"name\": \"data_type_date$subexpression$3\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('time') },\n        { \"name\": \"data_type_date$subexpression$4\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('zone') },\n        { \"name\": \"data_type_date\", \"symbols\": [\"data_type_date$subexpression$1\", \"data_type_date$subexpression$2\", \"data_type_date$subexpression$3\", \"data_type_date$subexpression$4\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: toStr(x, ' ') }) },\n        { \"name\": \"data_type_date$subexpression$5\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": anyKw('timestamp', 'time') },\n        { \"name\": \"data_type_date$subexpression$6\", \"symbols\": [\"lparen\", \"int\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"data_type_date$subexpression$7\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with)] },\n        { \"name\": \"data_type_date$subexpression$7\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('without') },\n        { \"name\": \"data_type_date$subexpression$8\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('time') },\n        { \"name\": \"data_type_date$subexpression$9\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('zone') },\n        { \"name\": \"data_type_date\", \"symbols\": [\"data_type_date$subexpression$5\", \"data_type_date$subexpression$6\", \"data_type_date$subexpression$7\", \"data_type_date$subexpression$8\", \"data_type_date$subexpression$9\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: `timestamp ${toStr(x[2])} time zone`, config: [(0, lexer_2.unbox)(x[1])] }) },\n        { \"name\": \"ident_aliased$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"ident\"], \"postprocess\": last },\n        { \"name\": \"ident_aliased\", \"symbols\": [\"ident_aliased$subexpression$1\"] },\n        { \"name\": \"ident_aliased\", \"symbols\": [\"ident\"], \"postprocess\": unwrap },\n        { \"name\": \"table_ref\", \"symbols\": [\"qualified_name\"], \"postprocess\": unwrap },\n        { \"name\": \"qcolumn$ebnf$1$subexpression$1\", \"symbols\": [\"dot\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"qcolumn$ebnf$1\", \"symbols\": [\"qcolumn$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"qcolumn$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"qcolumn\", \"symbols\": [\"ident\", \"dot\", \"ident\", \"qcolumn$ebnf$1\"], \"postprocess\": x => {\n                if (!x[3]) {\n                    return (0, lexer_2.track)(x, {\n                        table: (0, lexer_2.unbox)(x[0]),\n                        column: (0, lexer_2.unbox)(x[2]),\n                    });\n                }\n                return (0, lexer_2.track)(x, {\n                    schema: (0, lexer_2.unbox)(x[0]),\n                    table: (0, lexer_2.unbox)(x[2]),\n                    column: (0, lexer_2.unbox)(x[3]),\n                });\n            } },\n        { \"name\": \"table_ref_aliased$ebnf$1\", \"symbols\": [\"ident_aliased\"], \"postprocess\": id },\n        { \"name\": \"table_ref_aliased$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"table_ref_aliased\", \"symbols\": [\"table_ref\", \"table_ref_aliased$ebnf$1\"], \"postprocess\": x => {\n                const alias = unwrap(x[1]);\n                return (0, lexer_2.track)(x, {\n                    ...unwrap(x[0]),\n                    ...alias ? { alias } : {},\n                });\n            } },\n        { \"name\": \"qualified_name\", \"symbols\": [\"qname_ident\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: toStr(x) }) },\n        { \"name\": \"qualified_name\", \"symbols\": [\"ident\", \"dot\", \"ident_extended\"], \"postprocess\": x => {\n                const schema = toStr(x[0]);\n                const name = toStr(x[2]);\n                return (0, lexer_2.track)(x, { schema, name });\n            } },\n        { \"name\": \"qualified_name\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_schema\") ? { type: \"kw_current_schema\" } : kw_current_schema)], \"postprocess\": x => (0, lexer_2.track)(x, { name: 'current_schema' }) },\n        { \"name\": \"qualified_name_mark_quotes\", \"symbols\": [\"qname_ident\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: toStr(x), ...(0, lexer_2.doubleQuoted)(x) }) },\n        { \"name\": \"qualified_name_mark_quotes\", \"symbols\": [\"ident\", \"dot\", \"ident_extended\"], \"postprocess\": x => {\n                const schema = toStr(x[0]);\n                const name = toStr(x[2]);\n                return (0, lexer_2.track)(x, { schema, name, ...(0, lexer_2.doubleQuoted)(x[2]) });\n            } },\n        { \"name\": \"qualified_name_mark_quotes\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_schema\") ? { type: \"kw_current_schema\" } : kw_current_schema)], \"postprocess\": x => (0, lexer_2.track)(x, { name: 'current_schema' }) },\n        { \"name\": \"qname_ident\", \"symbols\": [\"ident\"] },\n        { \"name\": \"qname_ident\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_precision\") ? { type: \"kw_precision\" } : kw_precision)] },\n        { \"name\": \"qname\", \"symbols\": [\"qualified_name\"], \"postprocess\": unwrap },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_analyse\") ? { type: \"kw_analyse\" } : kw_analyse)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_analyze\") ? { type: \"kw_analyze\" } : kw_analyze)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_and\") ? { type: \"kw_and\" } : kw_and)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_any\") ? { type: \"kw_any\" } : kw_any)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_array\") ? { type: \"kw_array\" } : kw_array)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_asc\") ? { type: \"kw_asc\" } : kw_asc)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_asymmetric\") ? { type: \"kw_asymmetric\" } : kw_asymmetric)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_authorization\") ? { type: \"kw_authorization\" } : kw_authorization)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_binary\") ? { type: \"kw_binary\" } : kw_binary)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_both\") ? { type: \"kw_both\" } : kw_both)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_case\") ? { type: \"kw_case\" } : kw_case)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_cast\") ? { type: \"kw_cast\" } : kw_cast)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_check\") ? { type: \"kw_check\" } : kw_check)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_collate\") ? { type: \"kw_collate\" } : kw_collate)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_collation\") ? { type: \"kw_collation\" } : kw_collation)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_concurrently\") ? { type: \"kw_concurrently\" } : kw_concurrently)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_constraint\") ? { type: \"kw_constraint\" } : kw_constraint)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_cross\") ? { type: \"kw_cross\" } : kw_cross)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_catalog\") ? { type: \"kw_current_catalog\" } : kw_current_catalog)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_date\") ? { type: \"kw_current_date\" } : kw_current_date)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_role\") ? { type: \"kw_current_role\" } : kw_current_role)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_schema\") ? { type: \"kw_current_schema\" } : kw_current_schema)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_time\") ? { type: \"kw_current_time\" } : kw_current_time)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_timestamp\") ? { type: \"kw_current_timestamp\" } : kw_current_timestamp)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_user\") ? { type: \"kw_current_user\" } : kw_current_user)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_deferrable\") ? { type: \"kw_deferrable\" } : kw_deferrable)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_desc\") ? { type: \"kw_desc\" } : kw_desc)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_distinct\") ? { type: \"kw_distinct\" } : kw_distinct)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_do\") ? { type: \"kw_do\" } : kw_do)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_else\") ? { type: \"kw_else\" } : kw_else)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_end\") ? { type: \"kw_end\" } : kw_end)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_except\") ? { type: \"kw_except\" } : kw_except)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_false\") ? { type: \"kw_false\" } : kw_false)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_fetch\") ? { type: \"kw_fetch\" } : kw_fetch)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_for\") ? { type: \"kw_for\" } : kw_for)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_foreign\") ? { type: \"kw_foreign\" } : kw_foreign)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_freeze\") ? { type: \"kw_freeze\" } : kw_freeze)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_full\") ? { type: \"kw_full\" } : kw_full)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_grant\") ? { type: \"kw_grant\" } : kw_grant)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_group\") ? { type: \"kw_group\" } : kw_group)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_having\") ? { type: \"kw_having\" } : kw_having)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_ilike\") ? { type: \"kw_ilike\" } : kw_ilike)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_in\") ? { type: \"kw_in\" } : kw_in)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_initially\") ? { type: \"kw_initially\" } : kw_initially)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_inner\") ? { type: \"kw_inner\" } : kw_inner)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_intersect\") ? { type: \"kw_intersect\" } : kw_intersect)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_into\") ? { type: \"kw_into\" } : kw_into)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_is\") ? { type: \"kw_is\" } : kw_is)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_isnull\") ? { type: \"kw_isnull\" } : kw_isnull)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_join\") ? { type: \"kw_join\" } : kw_join)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_lateral\") ? { type: \"kw_lateral\" } : kw_lateral)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_leading\") ? { type: \"kw_leading\" } : kw_leading)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_left\") ? { type: \"kw_left\" } : kw_left)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_like\") ? { type: \"kw_like\" } : kw_like)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_limit\") ? { type: \"kw_limit\" } : kw_limit)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_localtime\") ? { type: \"kw_localtime\" } : kw_localtime)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_localtimestamp\") ? { type: \"kw_localtimestamp\" } : kw_localtimestamp)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_natural\") ? { type: \"kw_natural\" } : kw_natural)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_notnull\") ? { type: \"kw_notnull\" } : kw_notnull)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_offset\") ? { type: \"kw_offset\" } : kw_offset)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_only\") ? { type: \"kw_only\" } : kw_only)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_or\") ? { type: \"kw_or\" } : kw_or)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_order\") ? { type: \"kw_order\" } : kw_order)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_outer\") ? { type: \"kw_outer\" } : kw_outer)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_overlaps\") ? { type: \"kw_overlaps\" } : kw_overlaps)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_placing\") ? { type: \"kw_placing\" } : kw_placing)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_primary\") ? { type: \"kw_primary\" } : kw_primary)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_references\") ? { type: \"kw_references\" } : kw_references)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_returning\") ? { type: \"kw_returning\" } : kw_returning)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_right\") ? { type: \"kw_right\" } : kw_right)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_select\") ? { type: \"kw_select\" } : kw_select)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_session_user\") ? { type: \"kw_session_user\" } : kw_session_user)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_similar\") ? { type: \"kw_similar\" } : kw_similar)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_some\") ? { type: \"kw_some\" } : kw_some)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_symmetric\") ? { type: \"kw_symmetric\" } : kw_symmetric)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_tablesample\") ? { type: \"kw_tablesample\" } : kw_tablesample)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_then\") ? { type: \"kw_then\" } : kw_then)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_trailing\") ? { type: \"kw_trailing\" } : kw_trailing)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_true\") ? { type: \"kw_true\" } : kw_true)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_union\") ? { type: \"kw_union\" } : kw_union)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_unique\") ? { type: \"kw_unique\" } : kw_unique)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_user\") ? { type: \"kw_user\" } : kw_user)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_using\") ? { type: \"kw_using\" } : kw_using)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_variadic\") ? { type: \"kw_variadic\" } : kw_variadic)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_verbose\") ? { type: \"kw_verbose\" } : kw_verbose)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_when\") ? { type: \"kw_when\" } : kw_when)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_where\") ? { type: \"kw_where\" } : kw_where)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_window\") ? { type: \"kw_window\" } : kw_window)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with)] },\n        { \"name\": \"ident_extended\", \"symbols\": [\"ident\"] },\n        { \"name\": \"ident_extended\", \"symbols\": [\"any_keyword\"] },\n        { \"name\": \"select_statement$ebnf$1\", \"symbols\": [\"select_from\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$2\", \"symbols\": [\"select_where\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$3$subexpression$1$ebnf$1\", \"symbols\": [\"select_having\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$3$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$3$subexpression$1\", \"symbols\": [\"select_groupby\", \"select_statement$ebnf$3$subexpression$1$ebnf$1\"] },\n        { \"name\": \"select_statement$ebnf$3\", \"symbols\": [\"select_statement$ebnf$3$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$4\", \"symbols\": [\"select_order_by\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$5\", \"symbols\": [\"select_limit_offset\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$6$subexpression$1$ebnf$1\", \"symbols\": [\"select_skip\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$6$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$6$subexpression$1\", \"symbols\": [\"select_for\", \"select_statement$ebnf$6$subexpression$1$ebnf$1\"] },\n        { \"name\": \"select_statement$ebnf$6\", \"symbols\": [\"select_statement$ebnf$6$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$6\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement\", \"symbols\": [\"select_what\", \"select_statement$ebnf$1\", \"select_statement$ebnf$2\", \"select_statement$ebnf$3\", \"select_statement$ebnf$4\", \"select_statement$ebnf$5\", \"select_statement$ebnf$6\"], \"postprocess\": x => {\n                let [what, from, where, _groupBy, orderBy, limit, _selectFor] = x;\n                from = unwrap(from);\n                let groupBy = _groupBy && _groupBy[0];\n                let having = _groupBy && _groupBy[1];\n                groupBy = groupBy && (groupBy.length === 1 && groupBy[0].type === 'list' ? groupBy[0].expressions : groupBy);\n                having = having && unwrap(having);\n                let selectFor = _selectFor && _selectFor[0];\n                let skip = _selectFor && _selectFor[1];\n                skip = unwrap(skip);\n                return (0, lexer_2.track)(x, {\n                    ...what,\n                    ...from ? { from: Array.isArray(from) ? from : [from] } : {},\n                    ...groupBy ? { groupBy } : {},\n                    ...having ? { having } : {},\n                    ...limit ? { limit: unwrap(limit) } : {},\n                    ...orderBy ? { orderBy } : {},\n                    ...where ? { where } : {},\n                    ...selectFor ? { for: selectFor[1] } : {},\n                    ...skip ? { skip } : {},\n                    type: 'select',\n                });\n            } },\n        { \"name\": \"select_from\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from), \"select_from_items\"], \"postprocess\": last },\n        { \"name\": \"select_from_items$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"select_from_items$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"select_from_item\"], \"postprocess\": last },\n        { \"name\": \"select_from_items$ebnf$1\", \"symbols\": [\"select_from_items$ebnf$1\", \"select_from_items$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"select_from_items\", \"symbols\": [\"select_from_item\", \"select_from_items$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [...head, ...(flatten(tail) || [])];\n            } },\n        { \"name\": \"select_from_item\", \"symbols\": [\"select_from_subject\"] },\n        { \"name\": \"select_from_item\", \"symbols\": [\"select_from_item_joins\"], \"postprocess\": get(0) },\n        { \"name\": \"select_from_item_joins$subexpression$1\", \"symbols\": [\"select_from_item\"], \"postprocess\": get(0) },\n        { \"name\": \"select_from_item_joins\", \"symbols\": [\"select_from_item_joins$subexpression$1\", \"select_table_join\"], \"postprocess\": flatten },\n        { \"name\": \"select_from_item_joins\", \"symbols\": [\"lparen\", \"select_from_item_joins\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"select_from_subject\", \"symbols\": [\"stb_table\"], \"postprocess\": unwrap },\n        { \"name\": \"select_from_subject\", \"symbols\": [\"stb_statement\"], \"postprocess\": unwrap },\n        { \"name\": \"select_from_subject\", \"symbols\": [\"stb_call\"], \"postprocess\": unwrap },\n        { \"name\": \"stb_opts$ebnf$1\", \"symbols\": [\"collist_paren\"], \"postprocess\": id },\n        { \"name\": \"stb_opts$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_opts\", \"symbols\": [\"ident_aliased\", \"stb_opts$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                alias: toStr(x[0]),\n                ...x[1] && { columnNames: (0, lexer_2.unbox)(x[1]).map(asName) },\n            }) },\n        { \"name\": \"stb_table$ebnf$1\", \"symbols\": [\"stb_opts\"], \"postprocess\": id },\n        { \"name\": \"stb_table$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_table\", \"symbols\": [\"table_ref\", \"stb_table$ebnf$1\"], \"postprocess\": x => {\n                return (0, lexer_2.track)(x, {\n                    type: 'table',\n                    name: (0, lexer_2.track)(x, {\n                        ...x[0],\n                        ...x[1],\n                    }),\n                });\n            } },\n        { \"name\": \"stb_statement$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_lateral\") ? { type: \"kw_lateral\" } : kw_lateral)], \"postprocess\": id },\n        { \"name\": \"stb_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_statement\", \"symbols\": [\"stb_statement$ebnf$1\", \"selection_paren\", \"stb_opts\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'statement',\n                statement: unwrap(x[1]),\n                ...x[0] && { lateral: true },\n                ...x[2],\n            }) },\n        { \"name\": \"select_values\", \"symbols\": [\"kw_values\", \"insert_values\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'values',\n                values: x[1],\n            }) },\n        { \"name\": \"stb_call$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_lateral\") ? { type: \"kw_lateral\" } : kw_lateral)], \"postprocess\": id },\n        { \"name\": \"stb_call$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_call$ebnf$2\", \"symbols\": [\"kw_withordinality\"], \"postprocess\": id },\n        { \"name\": \"stb_call$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_call$ebnf$3\", \"symbols\": [\"stb_call_alias\"], \"postprocess\": id },\n        { \"name\": \"stb_call$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_call\", \"symbols\": [\"stb_call$ebnf$1\", \"expr_function_call\", \"stb_call$ebnf$2\", \"stb_call$ebnf$3\"], \"postprocess\": x => {\n                const lateral = x[0];\n                const withOrdinality = x[2];\n                const alias = x[3];\n                if (!withOrdinality && !alias) {\n                    return x[1];\n                }\n                return (0, lexer_2.track)(x, {\n                    ...x[1],\n                    ...lateral && { lateral: true },\n                    ...withOrdinality && { withOrdinality: true },\n                    alias: alias ? asNameWithColumns(alias[0], alias[1]) : undefined,\n                });\n            } },\n        { \"name\": \"stb_call_alias$subexpression$1$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as)], \"postprocess\": id },\n        { \"name\": \"stb_call_alias$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_call_alias$subexpression$1\", \"symbols\": [\"stb_call_alias$subexpression$1$ebnf$1\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"stb_call_alias$ebnf$1\", \"symbols\": [\"stb_call_alias_list\"], \"postprocess\": id },\n        { \"name\": \"stb_call_alias$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_call_alias\", \"symbols\": [\"stb_call_alias$subexpression$1\", \"stb_call_alias$ebnf$1\"] },\n        { \"name\": \"stb_call_alias_list\", \"symbols\": [\"lparen\", \"stb_call_alias_list_raw\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"stb_call_alias_list_raw$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"stb_call_alias_list_raw$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"stb_call_alias_list_raw$ebnf$1\", \"symbols\": [\"stb_call_alias_list_raw$ebnf$1\", \"stb_call_alias_list_raw$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"stb_call_alias_list_raw\", \"symbols\": [\"ident\", \"stb_call_alias_list_raw$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"select_table_join$ebnf$1\", \"symbols\": [\"select_table_join_clause\"], \"postprocess\": id },\n        { \"name\": \"select_table_join$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_table_join\", \"symbols\": [\"select_join_op\", (lexer_1.lexerAny.has(\"kw_join\") ? { type: \"kw_join\" } : kw_join), \"select_from_subject\", \"select_table_join$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                ...unwrap(x[2]),\n                join: {\n                    type: toStr(x[0], ' '),\n                    ...x[3] && unwrap(x[3]),\n                }\n            }) },\n        { \"name\": \"select_table_join_clause\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"expr\"], \"postprocess\": x => (0, lexer_2.track)(x, { on: last(x) }) },\n        { \"name\": \"select_table_join_clause$macrocall$2\", \"symbols\": [\"ident\"] },\n        { \"name\": \"select_table_join_clause$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"select_table_join_clause$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"select_table_join_clause$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"select_table_join_clause$macrocall$1$ebnf$1\", \"symbols\": [\"select_table_join_clause$macrocall$1$ebnf$1\", \"select_table_join_clause$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"select_table_join_clause$macrocall$1\", \"symbols\": [\"select_table_join_clause$macrocall$2\", \"select_table_join_clause$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"select_table_join_clause\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_using\") ? { type: \"kw_using\" } : kw_using), \"lparen\", \"select_table_join_clause$macrocall$1\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, { using: x[2].map(asName) }) },\n        { \"name\": \"select_join_op$subexpression$1$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_inner\") ? { type: \"kw_inner\" } : kw_inner)], \"postprocess\": id },\n        { \"name\": \"select_join_op$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_join_op$subexpression$1\", \"symbols\": [\"select_join_op$subexpression$1$ebnf$1\"], \"postprocess\": x => (0, lexer_2.box)(x, 'INNER JOIN') },\n        { \"name\": \"select_join_op\", \"symbols\": [\"select_join_op$subexpression$1\"] },\n        { \"name\": \"select_join_op$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_cross\") ? { type: \"kw_cross\" } : kw_cross)], \"postprocess\": x => (0, lexer_2.box)(x, 'CROSS JOIN') },\n        { \"name\": \"select_join_op\", \"symbols\": [\"select_join_op$subexpression$2\"] },\n        { \"name\": \"select_join_op$subexpression$3$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_outer\") ? { type: \"kw_outer\" } : kw_outer)], \"postprocess\": id },\n        { \"name\": \"select_join_op$subexpression$3$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_join_op$subexpression$3\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_left\") ? { type: \"kw_left\" } : kw_left), \"select_join_op$subexpression$3$ebnf$1\"], \"postprocess\": x => (0, lexer_2.box)(x, 'LEFT JOIN') },\n        { \"name\": \"select_join_op\", \"symbols\": [\"select_join_op$subexpression$3\"] },\n        { \"name\": \"select_join_op$subexpression$4$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_outer\") ? { type: \"kw_outer\" } : kw_outer)], \"postprocess\": id },\n        { \"name\": \"select_join_op$subexpression$4$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_join_op$subexpression$4\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_right\") ? { type: \"kw_right\" } : kw_right), \"select_join_op$subexpression$4$ebnf$1\"], \"postprocess\": x => (0, lexer_2.box)(x, 'RIGHT JOIN') },\n        { \"name\": \"select_join_op\", \"symbols\": [\"select_join_op$subexpression$4\"] },\n        { \"name\": \"select_join_op$subexpression$5$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_outer\") ? { type: \"kw_outer\" } : kw_outer)], \"postprocess\": id },\n        { \"name\": \"select_join_op$subexpression$5$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_join_op$subexpression$5\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_full\") ? { type: \"kw_full\" } : kw_full), \"select_join_op$subexpression$5$ebnf$1\"], \"postprocess\": x => (0, lexer_2.box)(x, 'FULL JOIN') },\n        { \"name\": \"select_join_op\", \"symbols\": [\"select_join_op$subexpression$5\"] },\n        { \"name\": \"select_what$ebnf$1\", \"symbols\": [\"select_distinct\"], \"postprocess\": id },\n        { \"name\": \"select_what$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_what$ebnf$2\", \"symbols\": [\"select_expr_list_aliased\"], \"postprocess\": id },\n        { \"name\": \"select_what$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_what\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_select\") ? { type: \"kw_select\" } : kw_select), \"select_what$ebnf$1\", \"select_what$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                columns: x[2],\n                ...x[1] && { distinct: (0, lexer_2.unbox)(x[1]) },\n            }) },\n        { \"name\": \"select_expr_list_aliased$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"select_expr_list_aliased$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"select_expr_list_item\"], \"postprocess\": last },\n        { \"name\": \"select_expr_list_aliased$ebnf$1\", \"symbols\": [\"select_expr_list_aliased$ebnf$1\", \"select_expr_list_aliased$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"select_expr_list_aliased\", \"symbols\": [\"select_expr_list_item\", \"select_expr_list_aliased$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"select_expr_list_item$ebnf$1\", \"symbols\": [\"ident_aliased\"], \"postprocess\": id },\n        { \"name\": \"select_expr_list_item$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_expr_list_item\", \"symbols\": [\"expr\", \"select_expr_list_item$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                expr: x[0],\n                ...x[1] ? { alias: asName(x[1]) } : {},\n            }) },\n        { \"name\": \"select_distinct\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)], \"postprocess\": x => (0, lexer_2.box)(x, 'all') },\n        { \"name\": \"select_distinct$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"lparen\", \"expr_list_raw\", \"rparen\"], \"postprocess\": get(2) },\n        { \"name\": \"select_distinct$ebnf$1\", \"symbols\": [\"select_distinct$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_distinct$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_distinct\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_distinct\") ? { type: \"kw_distinct\" } : kw_distinct), \"select_distinct$ebnf$1\"], \"postprocess\": x => (0, lexer_2.box)(x, x[1] || 'distinct') },\n        { \"name\": \"select_where\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_where\") ? { type: \"kw_where\" } : kw_where), \"expr\"], \"postprocess\": last },\n        { \"name\": \"select_groupby\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_group\") ? { type: \"kw_group\" } : kw_group), \"kw_by\", \"expr_list_raw\"], \"postprocess\": last },\n        { \"name\": \"select_having\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_having\") ? { type: \"kw_having\" } : kw_having), \"expr\"], \"postprocess\": last },\n        { \"name\": \"select_limit_offset$ebnf$1$subexpression$1\", \"symbols\": [\"select_offset\"] },\n        { \"name\": \"select_limit_offset$ebnf$1$subexpression$1\", \"symbols\": [\"select_limit\"] },\n        { \"name\": \"select_limit_offset$ebnf$1\", \"symbols\": [\"select_limit_offset$ebnf$1$subexpression$1\"] },\n        { \"name\": \"select_limit_offset$ebnf$1$subexpression$2\", \"symbols\": [\"select_offset\"] },\n        { \"name\": \"select_limit_offset$ebnf$1$subexpression$2\", \"symbols\": [\"select_limit\"] },\n        { \"name\": \"select_limit_offset$ebnf$1\", \"symbols\": [\"select_limit_offset$ebnf$1\", \"select_limit_offset$ebnf$1$subexpression$2\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"select_limit_offset\", \"symbols\": [\"select_limit_offset$ebnf$1\"], \"postprocess\": (x, rej) => {\n                const value = unwrap(x);\n                if (!Array.isArray(value)) {\n                    return (0, lexer_2.track)(x, value);\n                }\n                if (value.length != 2) {\n                    return rej;\n                }\n                const a = unwrap(value[0]);\n                const b = unwrap(value[1]);\n                if (a.offset && b.offset || a.limit && b.limit) {\n                    return rej;\n                }\n                return (0, lexer_2.track)(x, {\n                    ...a,\n                    ...b,\n                });\n            } },\n        { \"name\": \"select_offset$ebnf$1$subexpression$1\", \"symbols\": [\"kw_row\"] },\n        { \"name\": \"select_offset$ebnf$1$subexpression$1\", \"symbols\": [\"kw_rows\"] },\n        { \"name\": \"select_offset$ebnf$1\", \"symbols\": [\"select_offset$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_offset$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_offset\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_offset\") ? { type: \"kw_offset\" } : kw_offset), \"expr_nostar\", \"select_offset$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { offset: unwrap(x[1]) }) },\n        { \"name\": \"select_limit$subexpression$1\", \"symbols\": [\"select_limit_1\"] },\n        { \"name\": \"select_limit$subexpression$1\", \"symbols\": [\"select_limit_2\"] },\n        { \"name\": \"select_limit\", \"symbols\": [\"select_limit$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { limit: unwrap(x) }) },\n        { \"name\": \"select_limit_1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_limit\") ? { type: \"kw_limit\" } : kw_limit), \"expr_nostar\"], \"postprocess\": last },\n        { \"name\": \"select_limit_2$ebnf$1$subexpression$1\", \"symbols\": [\"kw_first\"] },\n        { \"name\": \"select_limit_2$ebnf$1$subexpression$1\", \"symbols\": [\"kw_next\"] },\n        { \"name\": \"select_limit_2$ebnf$1\", \"symbols\": [\"select_limit_2$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_limit_2$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_limit_2$subexpression$1\", \"symbols\": [\"kw_row\"] },\n        { \"name\": \"select_limit_2$subexpression$1\", \"symbols\": [\"kw_rows\"] },\n        { \"name\": \"select_limit_2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_fetch\") ? { type: \"kw_fetch\" } : kw_fetch), \"select_limit_2$ebnf$1\", \"expr_nostar\", \"select_limit_2$subexpression$1\", (lexer_1.lexerAny.has(\"kw_only\") ? { type: \"kw_only\" } : kw_only)], \"postprocess\": get(2) },\n        { \"name\": \"select_for$subexpression$1\", \"symbols\": [\"kw_update\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'update' }) },\n        { \"name\": \"select_for$subexpression$1\", \"symbols\": [\"kw_no\", \"kw_key\", \"kw_update\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'no key update' }) },\n        { \"name\": \"select_for$subexpression$1\", \"symbols\": [\"kw_share\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'share' }) },\n        { \"name\": \"select_for$subexpression$1\", \"symbols\": [\"kw_key\", \"kw_share\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'key share' }) },\n        { \"name\": \"select_for\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_for\") ? { type: \"kw_for\" } : kw_for), \"select_for$subexpression$1\"] },\n        { \"name\": \"select_skip$subexpression$1\", \"symbols\": [\"kw_nowait\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'nowait' }) },\n        { \"name\": \"select_skip$subexpression$1\", \"symbols\": [\"kw_skip\", \"kw_locked\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'skip locked' }) },\n        { \"name\": \"select_skip\", \"symbols\": [\"select_skip$subexpression$1\"] },\n        { \"name\": \"select_order_by$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_order\") ? { type: \"kw_order\" } : kw_order), \"kw_by\"] },\n        { \"name\": \"select_order_by$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"select_order_by$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"select_order_by_expr\"], \"postprocess\": last },\n        { \"name\": \"select_order_by$ebnf$1\", \"symbols\": [\"select_order_by$ebnf$1\", \"select_order_by$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"select_order_by\", \"symbols\": [\"select_order_by$subexpression$1\", \"select_order_by_expr\", \"select_order_by$ebnf$1\"], \"postprocess\": ([_, head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"select_order_by_expr$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_asc\") ? { type: \"kw_asc\" } : kw_asc)] },\n        { \"name\": \"select_order_by_expr$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_desc\") ? { type: \"kw_desc\" } : kw_desc)] },\n        { \"name\": \"select_order_by_expr$ebnf$1\", \"symbols\": [\"select_order_by_expr$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_order_by_expr$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_order_by_expr$ebnf$2$subexpression$1$subexpression$1\", \"symbols\": [\"kw_first\"] },\n        { \"name\": \"select_order_by_expr$ebnf$2$subexpression$1$subexpression$1\", \"symbols\": [\"kw_last\"] },\n        { \"name\": \"select_order_by_expr$ebnf$2$subexpression$1\", \"symbols\": [\"kw_nulls\", \"select_order_by_expr$ebnf$2$subexpression$1$subexpression$1\"], \"postprocess\": last },\n        { \"name\": \"select_order_by_expr$ebnf$2\", \"symbols\": [\"select_order_by_expr$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_order_by_expr$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_order_by_expr\", \"symbols\": [\"expr\", \"select_order_by_expr$ebnf$1\", \"select_order_by_expr$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                by: x[0],\n                ...x[1] && { order: toStr(x[1]).toUpperCase() },\n                ...x[2] && { nulls: toStr(x[2]).toUpperCase() },\n            }) },\n        { \"name\": \"expr\", \"symbols\": [\"expr_nostar\"], \"postprocess\": unwrap },\n        { \"name\": \"expr\", \"symbols\": [\"expr_star\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_nostar\", \"symbols\": [\"expr_paren\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_nostar\", \"symbols\": [\"expr_or\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_paren$subexpression$1\", \"symbols\": [\"expr_or_select\"] },\n        { \"name\": \"expr_paren$subexpression$1\", \"symbols\": [\"expr_list_many\"] },\n        { \"name\": \"expr_paren\", \"symbols\": [\"lparen\", \"expr_paren$subexpression$1\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"expr_or$macrocall$2$macrocall$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_or\") ? { type: \"kw_or\" } : kw_or)] },\n        { \"name\": \"expr_or$macrocall$2$macrocall$1\", \"symbols\": [\"expr_or$macrocall$2$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_or$macrocall$2\", \"symbols\": [\"expr_or$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_or$macrocall$3\", \"symbols\": [\"expr_or\"] },\n        { \"name\": \"expr_or$macrocall$4\", \"symbols\": [\"expr_and\"] },\n        { \"name\": \"expr_or$macrocall$1$subexpression$1\", \"symbols\": [\"expr_or$macrocall$3\"] },\n        { \"name\": \"expr_or$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_or$macrocall$1$subexpression$2\", \"symbols\": [\"expr_or$macrocall$4\"] },\n        { \"name\": \"expr_or$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_or$macrocall$1\", \"symbols\": [\"expr_or$macrocall$1$subexpression$1\", \"expr_or$macrocall$2\", \"expr_or$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_or$macrocall$1\", \"symbols\": [\"expr_or$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_or\", \"symbols\": [\"expr_or$macrocall$1\"] },\n        { \"name\": \"expr_and$macrocall$2$macrocall$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_and\") ? { type: \"kw_and\" } : kw_and)] },\n        { \"name\": \"expr_and$macrocall$2$macrocall$1\", \"symbols\": [\"expr_and$macrocall$2$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_and$macrocall$2\", \"symbols\": [\"expr_and$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_and$macrocall$3\", \"symbols\": [\"expr_and\"] },\n        { \"name\": \"expr_and$macrocall$4\", \"symbols\": [\"expr_not\"] },\n        { \"name\": \"expr_and$macrocall$1$subexpression$1\", \"symbols\": [\"expr_and$macrocall$3\"] },\n        { \"name\": \"expr_and$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_and$macrocall$1$subexpression$2\", \"symbols\": [\"expr_and$macrocall$4\"] },\n        { \"name\": \"expr_and$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_and$macrocall$1\", \"symbols\": [\"expr_and$macrocall$1$subexpression$1\", \"expr_and$macrocall$2\", \"expr_and$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_and$macrocall$1\", \"symbols\": [\"expr_and$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_and\", \"symbols\": [\"expr_and$macrocall$1\"] },\n        { \"name\": \"expr_not$macrocall$2$macrocall$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)] },\n        { \"name\": \"expr_not$macrocall$2$macrocall$1\", \"symbols\": [\"expr_not$macrocall$2$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_not$macrocall$2\", \"symbols\": [\"expr_not$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_not$macrocall$3\", \"symbols\": [\"expr_not\"] },\n        { \"name\": \"expr_not$macrocall$4\", \"symbols\": [\"expr_eq\"] },\n        { \"name\": \"expr_not$macrocall$1$subexpression$1\", \"symbols\": [\"expr_not$macrocall$3\"] },\n        { \"name\": \"expr_not$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_not$macrocall$1\", \"symbols\": [\"expr_not$macrocall$2\", \"expr_not$macrocall$1$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'unary',\n                ...unwrap(x[0]),\n                operand: unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_not$macrocall$1\", \"symbols\": [\"expr_not$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_not\", \"symbols\": [\"expr_not$macrocall$1\"] },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq)] },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_neq\") ? { type: \"op_neq\" } : op_neq)] },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$2\", \"symbols\": [\"expr_eq$macrocall$2$macrocall$2$subexpression$1\"] },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_eq$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_eq$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$1\", \"symbols\": [\"expr_eq$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_eq$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_eq$macrocall$2\", \"symbols\": [\"expr_eq$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_eq$macrocall$3\", \"symbols\": [\"expr_eq\"] },\n        { \"name\": \"expr_eq$macrocall$4\", \"symbols\": [\"expr_is\"] },\n        { \"name\": \"expr_eq$macrocall$1$subexpression$1\", \"symbols\": [\"expr_eq$macrocall$3\"] },\n        { \"name\": \"expr_eq$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_eq$macrocall$1$subexpression$2\", \"symbols\": [\"expr_eq$macrocall$4\"] },\n        { \"name\": \"expr_eq$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_eq$macrocall$1\", \"symbols\": [\"expr_eq$macrocall$1$subexpression$1\", \"expr_eq$macrocall$2\", \"expr_eq$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_eq$macrocall$1\", \"symbols\": [\"expr_eq$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_eq\", \"symbols\": [\"expr_eq$macrocall$1\"] },\n        { \"name\": \"expr_star\", \"symbols\": [\"star\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'ref', name: '*' }) },\n        { \"name\": \"expr_is$subexpression$1\", \"symbols\": [\"expr_is\"] },\n        { \"name\": \"expr_is$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_is$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_isnull\") ? { type: \"kw_isnull\" } : kw_isnull)] },\n        { \"name\": \"expr_is$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_is\") ? { type: \"kw_is\" } : kw_is), (lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null)] },\n        { \"name\": \"expr_is\", \"symbols\": [\"expr_is$subexpression$1\", \"expr_is$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'unary', op: 'IS NULL', operand: unwrap(x[0]) }) },\n        { \"name\": \"expr_is$subexpression$3\", \"symbols\": [\"expr_is\"] },\n        { \"name\": \"expr_is$subexpression$3\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_is$subexpression$4\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_notnull\") ? { type: \"kw_notnull\" } : kw_notnull)] },\n        { \"name\": \"expr_is$subexpression$4\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_is\") ? { type: \"kw_is\" } : kw_is), \"kw_not_null\"] },\n        { \"name\": \"expr_is\", \"symbols\": [\"expr_is$subexpression$3\", \"expr_is$subexpression$4\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'unary', op: 'IS NOT NULL', operand: unwrap(x[0]) }) },\n        { \"name\": \"expr_is$subexpression$5\", \"symbols\": [\"expr_is\"] },\n        { \"name\": \"expr_is$subexpression$5\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_is$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)], \"postprocess\": id },\n        { \"name\": \"expr_is$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_is$subexpression$6\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_true\") ? { type: \"kw_true\" } : kw_true)] },\n        { \"name\": \"expr_is$subexpression$6\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_false\") ? { type: \"kw_false\" } : kw_false)] },\n        { \"name\": \"expr_is\", \"symbols\": [\"expr_is$subexpression$5\", (lexer_1.lexerAny.has(\"kw_is\") ? { type: \"kw_is\" } : kw_is), \"expr_is$ebnf$1\", \"expr_is$subexpression$6\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'unary',\n                op: 'IS ' + flattenStr([x[2], x[3]])\n                    .join(' ')\n                    .toUpperCase(),\n                operand: unwrap(x[0]),\n            }) },\n        { \"name\": \"expr_is\", \"symbols\": [\"expr_compare\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_compare$macrocall$2$macrocall$2\", \"symbols\": [(lexer_1.lexerAny.has(\"op_compare\") ? { type: \"op_compare\" } : op_compare)] },\n        { \"name\": \"expr_compare$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_compare$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_compare$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_compare$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_compare$macrocall$2$macrocall$1\", \"symbols\": [\"expr_compare$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_compare$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_compare$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_compare$macrocall$2\", \"symbols\": [\"expr_compare$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_compare$macrocall$3\", \"symbols\": [\"expr_compare\"] },\n        { \"name\": \"expr_compare$macrocall$4\", \"symbols\": [\"expr_range\"] },\n        { \"name\": \"expr_compare$macrocall$1$subexpression$1\", \"symbols\": [\"expr_compare$macrocall$3\"] },\n        { \"name\": \"expr_compare$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_compare$macrocall$1$subexpression$2\", \"symbols\": [\"expr_compare$macrocall$4\"] },\n        { \"name\": \"expr_compare$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_compare$macrocall$1\", \"symbols\": [\"expr_compare$macrocall$1$subexpression$1\", \"expr_compare$macrocall$2\", \"expr_compare$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_compare$macrocall$1\", \"symbols\": [\"expr_compare$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_compare\", \"symbols\": [\"expr_compare$macrocall$1\"] },\n        { \"name\": \"expr_range$macrocall$2\", \"symbols\": [\"ops_between\"] },\n        { \"name\": \"expr_range$macrocall$3\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_and\") ? { type: \"kw_and\" } : kw_and)] },\n        { \"name\": \"expr_range$macrocall$4\", \"symbols\": [\"expr_range\"] },\n        { \"name\": \"expr_range$macrocall$5\", \"symbols\": [\"expr_others\"] },\n        { \"name\": \"expr_range$macrocall$1$subexpression$1\", \"symbols\": [\"expr_range$macrocall$4\"] },\n        { \"name\": \"expr_range$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_range$macrocall$1$subexpression$2\", \"symbols\": [\"expr_range$macrocall$4\"] },\n        { \"name\": \"expr_range$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_range$macrocall$1$subexpression$3\", \"symbols\": [\"expr_range$macrocall$5\"] },\n        { \"name\": \"expr_range$macrocall$1$subexpression$3\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_range$macrocall$1\", \"symbols\": [\"expr_range$macrocall$1$subexpression$1\", \"expr_range$macrocall$2\", \"expr_range$macrocall$1$subexpression$2\", \"expr_range$macrocall$3\", \"expr_range$macrocall$1$subexpression$3\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'ternary',\n                value: unwrap(x[0]),\n                lo: unwrap(x[2]),\n                hi: unwrap(x[4]),\n                op: (flattenStr(x[1]).join(' ') || '<error>').toUpperCase(),\n            }) },\n        { \"name\": \"expr_range$macrocall$1\", \"symbols\": [\"expr_range$macrocall$5\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_range\", \"symbols\": [\"expr_range$macrocall$1\"] },\n        { \"name\": \"expr_others$macrocall$2$macrocall$2\", \"symbols\": [(lexer_1.lexerAny.has(\"ops_others\") ? { type: \"ops_others\" } : ops_others)] },\n        { \"name\": \"expr_others$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_others$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_others$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_others$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_others$macrocall$2$macrocall$1\", \"symbols\": [\"expr_others$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_others$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_others$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_others$macrocall$2\", \"symbols\": [\"expr_others$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_others$macrocall$3\", \"symbols\": [\"expr_others\"] },\n        { \"name\": \"expr_others$macrocall$4\", \"symbols\": [\"expr_like\"] },\n        { \"name\": \"expr_others$macrocall$1$subexpression$1\", \"symbols\": [\"expr_others$macrocall$3\"] },\n        { \"name\": \"expr_others$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_others$macrocall$1$subexpression$2\", \"symbols\": [\"expr_others$macrocall$4\"] },\n        { \"name\": \"expr_others$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_others$macrocall$1\", \"symbols\": [\"expr_others$macrocall$1$subexpression$1\", \"expr_others$macrocall$2\", \"expr_others$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_others$macrocall$1\", \"symbols\": [\"expr_others$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_others\", \"symbols\": [\"expr_others$macrocall$1\"] },\n        { \"name\": \"expr_like$macrocall$2$macrocall$2\", \"symbols\": [\"ops_like\"] },\n        { \"name\": \"expr_like$macrocall$2$macrocall$1\", \"symbols\": [\"expr_like$macrocall$2$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_like$macrocall$2\", \"symbols\": [\"expr_like$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_like$macrocall$3\", \"symbols\": [\"expr_like\"] },\n        { \"name\": \"expr_like$macrocall$4\", \"symbols\": [\"expr_in\"] },\n        { \"name\": \"expr_like$macrocall$1$subexpression$1\", \"symbols\": [\"expr_like$macrocall$3\"] },\n        { \"name\": \"expr_like$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_like$macrocall$1$subexpression$2\", \"symbols\": [\"expr_like$macrocall$4\"] },\n        { \"name\": \"expr_like$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_like$macrocall$1\", \"symbols\": [\"expr_like$macrocall$1$subexpression$1\", \"expr_like$macrocall$2\", \"expr_like$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_like$macrocall$1\", \"symbols\": [\"expr_like$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_like\", \"symbols\": [\"expr_like$macrocall$1\"] },\n        { \"name\": \"expr_in$macrocall$2$macrocall$2\", \"symbols\": [\"ops_in\"] },\n        { \"name\": \"expr_in$macrocall$2$macrocall$1\", \"symbols\": [\"expr_in$macrocall$2$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_in$macrocall$2\", \"symbols\": [\"expr_in$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_in$macrocall$3\", \"symbols\": [\"expr_in\"] },\n        { \"name\": \"expr_in$macrocall$4\", \"symbols\": [\"expr_add\"] },\n        { \"name\": \"expr_in$macrocall$1$subexpression$1\", \"symbols\": [\"expr_in$macrocall$3\"] },\n        { \"name\": \"expr_in$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_in$macrocall$1$subexpression$2\", \"symbols\": [\"expr_in$macrocall$4\"] },\n        { \"name\": \"expr_in$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_in$macrocall$1\", \"symbols\": [\"expr_in$macrocall$1$subexpression$1\", \"expr_in$macrocall$2\", \"expr_in$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_in$macrocall$1\", \"symbols\": [\"expr_in$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_in\", \"symbols\": [\"expr_in$macrocall$1\"] },\n        { \"name\": \"expr_add$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_plus\") ? { type: \"op_plus\" } : op_plus)] },\n        { \"name\": \"expr_add$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_minus\") ? { type: \"op_minus\" } : op_minus)] },\n        { \"name\": \"expr_add$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_additive\") ? { type: \"op_additive\" } : op_additive)] },\n        { \"name\": \"expr_add$macrocall$2$macrocall$2\", \"symbols\": [\"expr_add$macrocall$2$macrocall$2$subexpression$1\"] },\n        { \"name\": \"expr_add$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_add$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_add$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_add$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_add$macrocall$2$macrocall$1\", \"symbols\": [\"expr_add$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_add$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_add$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_add$macrocall$2\", \"symbols\": [\"expr_add$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_add$macrocall$3\", \"symbols\": [\"expr_add\"] },\n        { \"name\": \"expr_add$macrocall$4\", \"symbols\": [\"expr_mult\"] },\n        { \"name\": \"expr_add$macrocall$1$subexpression$1\", \"symbols\": [\"expr_add$macrocall$3\"] },\n        { \"name\": \"expr_add$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_add$macrocall$1$subexpression$2\", \"symbols\": [\"expr_add$macrocall$4\"] },\n        { \"name\": \"expr_add$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_add$macrocall$1\", \"symbols\": [\"expr_add$macrocall$1$subexpression$1\", \"expr_add$macrocall$2\", \"expr_add$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_add$macrocall$1\", \"symbols\": [\"expr_add$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_add\", \"symbols\": [\"expr_add$macrocall$1\"] },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"star\") ? { type: \"star\" } : star)] },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_div\") ? { type: \"op_div\" } : op_div)] },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_mod\") ? { type: \"op_mod\" } : op_mod)] },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$2\", \"symbols\": [\"expr_mult$macrocall$2$macrocall$2$subexpression$1\"] },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_mult$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_mult$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$1\", \"symbols\": [\"expr_mult$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_mult$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_mult$macrocall$2\", \"symbols\": [\"expr_mult$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_mult$macrocall$3\", \"symbols\": [\"expr_mult\"] },\n        { \"name\": \"expr_mult$macrocall$4\", \"symbols\": [\"expr_exp\"] },\n        { \"name\": \"expr_mult$macrocall$1$subexpression$1\", \"symbols\": [\"expr_mult$macrocall$3\"] },\n        { \"name\": \"expr_mult$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_mult$macrocall$1$subexpression$2\", \"symbols\": [\"expr_mult$macrocall$4\"] },\n        { \"name\": \"expr_mult$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_mult$macrocall$1\", \"symbols\": [\"expr_mult$macrocall$1$subexpression$1\", \"expr_mult$macrocall$2\", \"expr_mult$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_mult$macrocall$1\", \"symbols\": [\"expr_mult$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_mult\", \"symbols\": [\"expr_mult$macrocall$1\"] },\n        { \"name\": \"expr_exp$macrocall$2$macrocall$2\", \"symbols\": [(lexer_1.lexerAny.has(\"op_exp\") ? { type: \"op_exp\" } : op_exp)] },\n        { \"name\": \"expr_exp$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_exp$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_exp$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_exp$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_exp$macrocall$2$macrocall$1\", \"symbols\": [\"expr_exp$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_exp$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_exp$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_exp$macrocall$2\", \"symbols\": [\"expr_exp$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_exp$macrocall$3\", \"symbols\": [\"expr_exp\"] },\n        { \"name\": \"expr_exp$macrocall$4\", \"symbols\": [\"expr_unary_add\"] },\n        { \"name\": \"expr_exp$macrocall$1$subexpression$1\", \"symbols\": [\"expr_exp$macrocall$3\"] },\n        { \"name\": \"expr_exp$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_exp$macrocall$1$subexpression$2\", \"symbols\": [\"expr_exp$macrocall$4\"] },\n        { \"name\": \"expr_exp$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_exp$macrocall$1\", \"symbols\": [\"expr_exp$macrocall$1$subexpression$1\", \"expr_exp$macrocall$2\", \"expr_exp$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_exp$macrocall$1\", \"symbols\": [\"expr_exp$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_exp\", \"symbols\": [\"expr_exp$macrocall$1\"] },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_plus\") ? { type: \"op_plus\" } : op_plus)] },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_minus\") ? { type: \"op_minus\" } : op_minus)] },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$2\", \"symbols\": [\"expr_unary_add$macrocall$2$macrocall$2$subexpression$1\"] },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_unary_add$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_unary_add$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$1\", \"symbols\": [\"expr_unary_add$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_unary_add$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_unary_add$macrocall$2\", \"symbols\": [\"expr_unary_add$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_unary_add$macrocall$3\", \"symbols\": [\"expr_unary_add\"] },\n        { \"name\": \"expr_unary_add$macrocall$4\", \"symbols\": [\"expr_various_constructs\"] },\n        { \"name\": \"expr_unary_add$macrocall$1$subexpression$1\", \"symbols\": [\"expr_unary_add$macrocall$3\"] },\n        { \"name\": \"expr_unary_add$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_unary_add$macrocall$1\", \"symbols\": [\"expr_unary_add$macrocall$2\", \"expr_unary_add$macrocall$1$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'unary',\n                ...unwrap(x[0]),\n                operand: unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_unary_add$macrocall$1\", \"symbols\": [\"expr_unary_add$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_unary_add\", \"symbols\": [\"expr_unary_add$macrocall$1\"] },\n        { \"name\": \"expr_various_constructs$macrocall$2$macrocall$2\", \"symbols\": [\"various_binaries\"] },\n        { \"name\": \"expr_various_constructs$macrocall$2$macrocall$1\", \"symbols\": [\"expr_various_constructs$macrocall$2$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_various_constructs$macrocall$2\", \"symbols\": [\"expr_various_constructs$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_various_constructs$macrocall$3\", \"symbols\": [\"expr_various_constructs\"] },\n        { \"name\": \"expr_various_constructs$macrocall$4\", \"symbols\": [\"expr_array_index\"] },\n        { \"name\": \"expr_various_constructs$macrocall$1$subexpression$1\", \"symbols\": [\"expr_various_constructs$macrocall$3\"] },\n        { \"name\": \"expr_various_constructs$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_various_constructs$macrocall$1$subexpression$2\", \"symbols\": [\"expr_various_constructs$macrocall$4\"] },\n        { \"name\": \"expr_various_constructs$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_various_constructs$macrocall$1\", \"symbols\": [\"expr_various_constructs$macrocall$1$subexpression$1\", \"expr_various_constructs$macrocall$2\", \"expr_various_constructs$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_various_constructs$macrocall$1\", \"symbols\": [\"expr_various_constructs$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_various_constructs\", \"symbols\": [\"expr_various_constructs$macrocall$1\"] },\n        { \"name\": \"expr_array_index$subexpression$1\", \"symbols\": [\"expr_array_index\"] },\n        { \"name\": \"expr_array_index$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_array_index\", \"symbols\": [\"expr_array_index$subexpression$1\", (lexer_1.lexerAny.has(\"lbracket\") ? { type: \"lbracket\" } : lbracket), \"expr_nostar\", (lexer_1.lexerAny.has(\"rbracket\") ? { type: \"rbracket\" } : rbracket)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'arrayIndex',\n                array: unwrap(x[0]),\n                index: unwrap(x[2]),\n            }) },\n        { \"name\": \"expr_array_index\", \"symbols\": [\"expr_member\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_member$subexpression$1\", \"symbols\": [\"expr_member\"] },\n        { \"name\": \"expr_member$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_member$subexpression$2\", \"symbols\": [\"string\"] },\n        { \"name\": \"expr_member$subexpression$2\", \"symbols\": [\"int\"] },\n        { \"name\": \"expr_member\", \"symbols\": [\"expr_member$subexpression$1\", \"ops_member\", \"expr_member$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'member',\n                operand: unwrap(x[0]),\n                op: x[1],\n                member: unwrap(x[2])\n            }) },\n        { \"name\": \"expr_member$subexpression$3\", \"symbols\": [\"expr_member\"] },\n        { \"name\": \"expr_member$subexpression$3\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_member\", \"symbols\": [\"expr_member$subexpression$3\", (lexer_1.lexerAny.has(\"op_cast\") ? { type: \"op_cast\" } : op_cast), \"data_type\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'cast',\n                operand: unwrap(x[0]),\n                to: x[2],\n            }) },\n        { \"name\": \"expr_member\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_cast\") ? { type: \"kw_cast\" } : kw_cast), \"lparen\", \"expr_nostar\", (lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"data_type\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'cast',\n                operand: unwrap(x[2]),\n                to: x[4],\n            }) },\n        { \"name\": \"expr_member\", \"symbols\": [\"data_type\", \"string\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'cast',\n                operand: (0, lexer_2.track)(x[1], {\n                    type: 'string',\n                    value: (0, lexer_2.unbox)(x[1]),\n                }),\n                to: (0, lexer_2.unbox)(x[0]),\n            }) },\n        { \"name\": \"expr_member\", \"symbols\": [\"expr_dot\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_dot$subexpression$1\", \"symbols\": [\"word\"] },\n        { \"name\": \"expr_dot$subexpression$1\", \"symbols\": [\"star\"] },\n        { \"name\": \"expr_dot\", \"symbols\": [\"qname\", (lexer_1.lexerAny.has(\"dot\") ? { type: \"dot\" } : dot), \"expr_dot$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'ref',\n                table: unwrap(x[0]),\n                name: toStr(x[2])\n            }) },\n        { \"name\": \"expr_dot\", \"symbols\": [\"expr_final\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_final\", \"symbols\": [\"expr_basic\"] },\n        { \"name\": \"expr_final\", \"symbols\": [\"expr_primary\"] },\n        { \"name\": \"expr_basic\", \"symbols\": [\"expr_special_calls\"] },\n        { \"name\": \"expr_basic\", \"symbols\": [\"expr_call\"] },\n        { \"name\": \"expr_basic\", \"symbols\": [\"expr_array\"] },\n        { \"name\": \"expr_basic\", \"symbols\": [\"expr_case\"] },\n        { \"name\": \"expr_basic\", \"symbols\": [\"expr_extract\"] },\n        { \"name\": \"expr_basic\", \"symbols\": [\"word\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'ref',\n                name: unwrap(x[0]),\n            }) },\n        { \"name\": \"expr_array$ebnf$1\", \"symbols\": [\"expr_subarray_items\"], \"postprocess\": id },\n        { \"name\": \"expr_array$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_array\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_array\") ? { type: \"kw_array\" } : kw_array), (lexer_1.lexerAny.has(\"lbracket\") ? { type: \"lbracket\" } : lbracket), \"expr_array$ebnf$1\", (lexer_1.lexerAny.has(\"rbracket\") ? { type: \"rbracket\" } : rbracket)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'array',\n                expressions: x[2] || [],\n            }) },\n        { \"name\": \"expr_array\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_array\") ? { type: \"kw_array\" } : kw_array), \"lparen\", \"selection\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'array select',\n                select: unwrap(x[2]),\n            }) },\n        { \"name\": \"expr_subarray$ebnf$1\", \"symbols\": [\"expr_subarray_items\"], \"postprocess\": id },\n        { \"name\": \"expr_subarray$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_subarray\", \"symbols\": [(lexer_1.lexerAny.has(\"lbracket\") ? { type: \"lbracket\" } : lbracket), \"expr_subarray$ebnf$1\", (lexer_1.lexerAny.has(\"rbracket\") ? { type: \"rbracket\" } : rbracket)], \"postprocess\": get(1) },\n        { \"name\": \"expr_subarray_items$macrocall$2\", \"symbols\": [\"expr_list_item\"] },\n        { \"name\": \"expr_subarray_items$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"expr_subarray_items$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"expr_subarray_items$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"expr_subarray_items$macrocall$1$ebnf$1\", \"symbols\": [\"expr_subarray_items$macrocall$1$ebnf$1\", \"expr_subarray_items$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expr_subarray_items$macrocall$1\", \"symbols\": [\"expr_subarray_items$macrocall$2\", \"expr_subarray_items$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"expr_subarray_items\", \"symbols\": [\"expr_subarray_items$macrocall$1\"], \"postprocess\": x => x[0].map(unwrap) },\n        { \"name\": \"expr_subarray_items$macrocall$4\", \"symbols\": [\"expr_subarray\"] },\n        { \"name\": \"expr_subarray_items$macrocall$3$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"expr_subarray_items$macrocall$3$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"expr_subarray_items$macrocall$4\"], \"postprocess\": last },\n        { \"name\": \"expr_subarray_items$macrocall$3$ebnf$1\", \"symbols\": [\"expr_subarray_items$macrocall$3$ebnf$1\", \"expr_subarray_items$macrocall$3$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expr_subarray_items$macrocall$3\", \"symbols\": [\"expr_subarray_items$macrocall$4\", \"expr_subarray_items$macrocall$3$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"expr_subarray_items\", \"symbols\": [\"expr_subarray_items$macrocall$3\"], \"postprocess\": (x) => {\n                return x[0].map((v) => {\n                    return (0, lexer_2.track)(v, {\n                        type: 'array',\n                        expressions: v[0].map(unwrap),\n                    });\n                });\n            } },\n        { \"name\": \"expr_function_call$ebnf$1\", \"symbols\": [\"expr_list_raw\"], \"postprocess\": id },\n        { \"name\": \"expr_function_call$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_function_call\", \"symbols\": [\"expr_fn_name\", \"lparen\", \"expr_function_call$ebnf$1\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'call',\n                function: unwrap(x[0]),\n                args: x[2] || [],\n            }) },\n        { \"name\": \"expr_call$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)] },\n        { \"name\": \"expr_call$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_distinct\") ? { type: \"kw_distinct\" } : kw_distinct)] },\n        { \"name\": \"expr_call$ebnf$1\", \"symbols\": [\"expr_call$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"expr_call$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call$ebnf$2\", \"symbols\": [\"expr_list_raw\"], \"postprocess\": id },\n        { \"name\": \"expr_call$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call$ebnf$3\", \"symbols\": [\"select_order_by\"], \"postprocess\": id },\n        { \"name\": \"expr_call$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call$ebnf$4$subexpression$1\", \"symbols\": [\"kw_filter\", \"lparen\", (lexer_1.lexerAny.has(\"kw_where\") ? { type: \"kw_where\" } : kw_where), \"expr\", \"rparen\"], \"postprocess\": get(3) },\n        { \"name\": \"expr_call$ebnf$4\", \"symbols\": [\"expr_call$ebnf$4$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"expr_call$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call$ebnf$5\", \"symbols\": [\"expr_call_within_group\"], \"postprocess\": id },\n        { \"name\": \"expr_call$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call$ebnf$6\", \"symbols\": [\"expr_call_over\"], \"postprocess\": id },\n        { \"name\": \"expr_call$ebnf$6\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call\", \"symbols\": [\"expr_fn_name\", \"lparen\", \"expr_call$ebnf$1\", \"expr_call$ebnf$2\", \"expr_call$ebnf$3\", \"rparen\", \"expr_call$ebnf$4\", \"expr_call$ebnf$5\", \"expr_call$ebnf$6\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'call',\n                function: unwrap(x[0]),\n                ...x[2] && { distinct: toStr(x[2]) },\n                args: x[3] || [],\n                ...x[4] && { orderBy: x[4] },\n                ...x[6] && { filter: unwrap(x[6]) },\n                ...x[7] && { withinGroup: x[7] },\n                ...x[8] && { over: unwrap(x[8]) },\n            }) },\n        { \"name\": \"expr_call_over$ebnf$1$subexpression$1\", \"symbols\": [\"kw_partition\", \"kw_by\", \"expr_list_raw\"], \"postprocess\": last },\n        { \"name\": \"expr_call_over$ebnf$1\", \"symbols\": [\"expr_call_over$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"expr_call_over$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call_over$ebnf$2\", \"symbols\": [\"select_order_by\"], \"postprocess\": id },\n        { \"name\": \"expr_call_over$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call_over\", \"symbols\": [\"kw_over\", \"lparen\", \"expr_call_over$ebnf$1\", \"expr_call_over$ebnf$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                ...x[2] && { partitionBy: x[2] },\n                ...x[3] && { orderBy: x[3] },\n            }) },\n        { \"name\": \"expr_call_within_group$subexpression$1\", \"symbols\": [\"kw_within\", (lexer_1.lexerAny.has(\"kw_group\") ? { type: \"kw_group\" } : kw_group)] },\n        { \"name\": \"expr_call_within_group$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_order\") ? { type: \"kw_order\" } : kw_order), \"kw_by\"] },\n        { \"name\": \"expr_call_within_group\", \"symbols\": [\"expr_call_within_group$subexpression$1\", \"lparen\", \"expr_call_within_group$subexpression$2\", \"select_order_by_expr\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, x[3]) },\n        { \"name\": \"expr_extract$subexpression$1\", \"symbols\": [\"word\"], \"postprocess\": kw('extract') },\n        { \"name\": \"expr_extract\", \"symbols\": [\"expr_extract$subexpression$1\", \"lparen\", \"word\", (lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from), \"expr\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'extract',\n                field: asName(x[2]),\n                from: x[4],\n            }) },\n        { \"name\": \"expr_primary\", \"symbols\": [\"float\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'numeric', value: (0, lexer_2.unbox)(x[0]) }) },\n        { \"name\": \"expr_primary\", \"symbols\": [\"int\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'integer', value: (0, lexer_2.unbox)(x[0]) }) },\n        { \"name\": \"expr_primary\", \"symbols\": [\"string\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'string', value: (0, lexer_2.unbox)(x[0]) }) },\n        { \"name\": \"expr_primary\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_true\") ? { type: \"kw_true\" } : kw_true)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'boolean', value: true }) },\n        { \"name\": \"expr_primary\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_false\") ? { type: \"kw_false\" } : kw_false)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'boolean', value: false }) },\n        { \"name\": \"expr_primary\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'null' }) },\n        { \"name\": \"expr_primary\", \"symbols\": [\"value_keyword\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'keyword', keyword: toStr(x) }) },\n        { \"name\": \"expr_primary\", \"symbols\": [(lexer_1.lexerAny.has(\"qparam\") ? { type: \"qparam\" } : qparam)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'parameter', name: toStr(x[0]) }) },\n        { \"name\": \"expr_primary\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'default' }) },\n        { \"name\": \"ops_like\", \"symbols\": [\"ops_like_keywors\"] },\n        { \"name\": \"ops_like\", \"symbols\": [\"ops_like_operators\"] },\n        { \"name\": \"ops_like_keywors$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)], \"postprocess\": id },\n        { \"name\": \"ops_like_keywors$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"ops_like_keywors$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_like\") ? { type: \"kw_like\" } : kw_like)] },\n        { \"name\": \"ops_like_keywors$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_ilike\") ? { type: \"kw_ilike\" } : kw_ilike)] },\n        { \"name\": \"ops_like_keywors\", \"symbols\": [\"ops_like_keywors$ebnf$1\", \"ops_like_keywors$subexpression$1\"] },\n        { \"name\": \"ops_like_operators$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_like\") ? { type: \"op_like\" } : op_like)], \"postprocess\": () => 'LIKE' },\n        { \"name\": \"ops_like_operators\", \"symbols\": [\"ops_like_operators$subexpression$1\"] },\n        { \"name\": \"ops_like_operators$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"op_ilike\") ? { type: \"op_ilike\" } : op_ilike)], \"postprocess\": () => 'ILIKE' },\n        { \"name\": \"ops_like_operators\", \"symbols\": [\"ops_like_operators$subexpression$2\"] },\n        { \"name\": \"ops_like_operators$subexpression$3\", \"symbols\": [(lexer_1.lexerAny.has(\"op_not_like\") ? { type: \"op_not_like\" } : op_not_like)], \"postprocess\": () => 'NOT LIKE' },\n        { \"name\": \"ops_like_operators\", \"symbols\": [\"ops_like_operators$subexpression$3\"] },\n        { \"name\": \"ops_like_operators$subexpression$4\", \"symbols\": [(lexer_1.lexerAny.has(\"op_not_ilike\") ? { type: \"op_not_ilike\" } : op_not_ilike)], \"postprocess\": () => 'NOT ILIKE' },\n        { \"name\": \"ops_like_operators\", \"symbols\": [\"ops_like_operators$subexpression$4\"] },\n        { \"name\": \"ops_in$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)], \"postprocess\": id },\n        { \"name\": \"ops_in$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"ops_in\", \"symbols\": [\"ops_in$ebnf$1\", (lexer_1.lexerAny.has(\"kw_in\") ? { type: \"kw_in\" } : kw_in)] },\n        { \"name\": \"ops_between$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)], \"postprocess\": id },\n        { \"name\": \"ops_between$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"ops_between\", \"symbols\": [\"ops_between$ebnf$1\", \"kw_between\"] },\n        { \"name\": \"ops_member$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_member\") ? { type: \"op_member\" } : op_member)] },\n        { \"name\": \"ops_member$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_membertext\") ? { type: \"op_membertext\" } : op_membertext)] },\n        { \"name\": \"ops_member\", \"symbols\": [\"ops_member$subexpression$1\"], \"postprocess\": x => { var _a; return (_a = unwrap(x)) === null || _a === void 0 ? void 0 : _a.value; } },\n        { \"name\": \"expr_list_item\", \"symbols\": [\"expr_or_select\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_list_item\", \"symbols\": [\"expr_star\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_list_raw$macrocall$2\", \"symbols\": [\"expr_list_item\"] },\n        { \"name\": \"expr_list_raw$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"expr_list_raw$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"expr_list_raw$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"expr_list_raw$macrocall$1$ebnf$1\", \"symbols\": [\"expr_list_raw$macrocall$1$ebnf$1\", \"expr_list_raw$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expr_list_raw$macrocall$1\", \"symbols\": [\"expr_list_raw$macrocall$2\", \"expr_list_raw$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"expr_list_raw\", \"symbols\": [\"expr_list_raw$macrocall$1\"], \"postprocess\": ([x]) => x.map(unwrap) },\n        { \"name\": \"expr_list_raw_many$macrocall$2\", \"symbols\": [\"expr_list_item\"] },\n        { \"name\": \"expr_list_raw_many$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"expr_list_raw_many$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"expr_list_raw_many$macrocall$1$ebnf$1\", \"symbols\": [\"expr_list_raw_many$macrocall$1$ebnf$1$subexpression$1\"] },\n        { \"name\": \"expr_list_raw_many$macrocall$1$ebnf$1$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"expr_list_raw_many$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"expr_list_raw_many$macrocall$1$ebnf$1\", \"symbols\": [\"expr_list_raw_many$macrocall$1$ebnf$1\", \"expr_list_raw_many$macrocall$1$ebnf$1$subexpression$2\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expr_list_raw_many$macrocall$1\", \"symbols\": [\"expr_list_raw_many$macrocall$2\", \"expr_list_raw_many$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"expr_list_raw_many\", \"symbols\": [\"expr_list_raw_many$macrocall$1\"], \"postprocess\": ([x]) => x.map(unwrap) },\n        { \"name\": \"expr_or_select\", \"symbols\": [\"expr_nostar\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_or_select\", \"symbols\": [\"selection\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_list_many\", \"symbols\": [\"expr_list_raw_many\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'list',\n                expressions: x[0],\n            }) },\n        { \"name\": \"expr_case$ebnf$1\", \"symbols\": [\"expr_nostar\"], \"postprocess\": id },\n        { \"name\": \"expr_case$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_case$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"expr_case$ebnf$2\", \"symbols\": [\"expr_case$ebnf$2\", \"expr_case_whens\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expr_case$ebnf$3\", \"symbols\": [\"expr_case_else\"], \"postprocess\": id },\n        { \"name\": \"expr_case$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_case\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_case\") ? { type: \"kw_case\" } : kw_case), \"expr_case$ebnf$1\", \"expr_case$ebnf$2\", \"expr_case$ebnf$3\", (lexer_1.lexerAny.has(\"kw_end\") ? { type: \"kw_end\" } : kw_end)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'case',\n                value: x[1],\n                whens: x[2],\n                else: x[3],\n            }) },\n        { \"name\": \"expr_case_whens\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_when\") ? { type: \"kw_when\" } : kw_when), \"expr_nostar\", (lexer_1.lexerAny.has(\"kw_then\") ? { type: \"kw_then\" } : kw_then), \"expr_nostar\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                when: x[1],\n                value: x[3],\n            }) },\n        { \"name\": \"expr_case_else\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_else\") ? { type: \"kw_else\" } : kw_else), \"expr_nostar\"], \"postprocess\": last },\n        { \"name\": \"expr_fn_name$subexpression$1$ebnf$1$subexpression$1\", \"symbols\": [\"word\", (lexer_1.lexerAny.has(\"dot\") ? { type: \"dot\" } : dot)] },\n        { \"name\": \"expr_fn_name$subexpression$1$ebnf$1\", \"symbols\": [\"expr_fn_name$subexpression$1$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"expr_fn_name$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_fn_name$subexpression$1\", \"symbols\": [\"expr_fn_name$subexpression$1$ebnf$1\", \"word_or_keyword\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                name: (0, lexer_2.unbox)(unwrap(x[1])),\n                ...x[0] && { schema: toStr(x[0][0]) },\n            }) },\n        { \"name\": \"expr_fn_name\", \"symbols\": [\"expr_fn_name$subexpression$1\"] },\n        { \"name\": \"expr_fn_name$subexpression$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_any\") ? { type: \"kw_any\" } : kw_any)] },\n        { \"name\": \"expr_fn_name$subexpression$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_some\") ? { type: \"kw_some\" } : kw_some)] },\n        { \"name\": \"expr_fn_name$subexpression$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)] },\n        { \"name\": \"expr_fn_name$subexpression$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_left\") ? { type: \"kw_left\" } : kw_left)] },\n        { \"name\": \"expr_fn_name$subexpression$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_right\") ? { type: \"kw_right\" } : kw_right)] },\n        { \"name\": \"expr_fn_name$subexpression$2\", \"symbols\": [\"expr_fn_name$subexpression$2$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                name: toStr(unwrap(x)),\n            }) },\n        { \"name\": \"expr_fn_name\", \"symbols\": [\"expr_fn_name$subexpression$2\"] },\n        { \"name\": \"word_or_keyword\", \"symbols\": [\"word\"] },\n        { \"name\": \"word_or_keyword\", \"symbols\": [\"value_keyword\"], \"postprocess\": x => (0, lexer_2.box)(x, toStr(x)) },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_catalog\") ? { type: \"kw_current_catalog\" } : kw_current_catalog)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_date\") ? { type: \"kw_current_date\" } : kw_current_date)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_role\") ? { type: \"kw_current_role\" } : kw_current_role)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_schema\") ? { type: \"kw_current_schema\" } : kw_current_schema)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_timestamp\") ? { type: \"kw_current_timestamp\" } : kw_current_timestamp)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_time\") ? { type: \"kw_current_time\" } : kw_current_time)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_localtimestamp\") ? { type: \"kw_localtimestamp\" } : kw_localtimestamp)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_localtime\") ? { type: \"kw_localtime\" } : kw_localtime)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_session_user\") ? { type: \"kw_session_user\" } : kw_session_user)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_user\") ? { type: \"kw_user\" } : kw_user)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_user\") ? { type: \"kw_current_user\" } : kw_current_user)] },\n        { \"name\": \"expr_special_calls\", \"symbols\": [\"spe_overlay\"] },\n        { \"name\": \"expr_special_calls\", \"symbols\": [\"spe_substring\"] },\n        { \"name\": \"spe_overlay$subexpression$1\", \"symbols\": [\"word\"], \"postprocess\": kw('overlay') },\n        { \"name\": \"spe_overlay$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"lparen\") ? { type: \"lparen\" } : lparen), \"expr_nostar\"] },\n        { \"name\": \"spe_overlay$subexpression$3\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_placing\") ? { type: \"kw_placing\" } : kw_placing), \"expr_nostar\"] },\n        { \"name\": \"spe_overlay$subexpression$4\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from), \"expr_nostar\"] },\n        { \"name\": \"spe_overlay$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_for\") ? { type: \"kw_for\" } : kw_for), \"expr_nostar\"] },\n        { \"name\": \"spe_overlay$ebnf$1\", \"symbols\": [\"spe_overlay$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"spe_overlay$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"spe_overlay\", \"symbols\": [\"spe_overlay$subexpression$1\", \"spe_overlay$subexpression$2\", \"spe_overlay$subexpression$3\", \"spe_overlay$subexpression$4\", \"spe_overlay$ebnf$1\", (lexer_1.lexerAny.has(\"rparen\") ? { type: \"rparen\" } : rparen)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'overlay',\n                value: x[1][1],\n                placing: x[2][1],\n                from: x[3][1],\n                ...x[4] && { for: x[4][1] },\n            }) },\n        { \"name\": \"spe_substring$subexpression$1\", \"symbols\": [\"word\"], \"postprocess\": kw('substring') },\n        { \"name\": \"spe_substring$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"lparen\") ? { type: \"lparen\" } : lparen), \"expr_nostar\"] },\n        { \"name\": \"spe_substring$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from), \"expr_nostar\"] },\n        { \"name\": \"spe_substring$ebnf$1\", \"symbols\": [\"spe_substring$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"spe_substring$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"spe_substring$ebnf$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_for\") ? { type: \"kw_for\" } : kw_for), \"expr_nostar\"] },\n        { \"name\": \"spe_substring$ebnf$2\", \"symbols\": [\"spe_substring$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"spe_substring$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"spe_substring\", \"symbols\": [\"spe_substring$subexpression$1\", \"spe_substring$subexpression$2\", \"spe_substring$ebnf$1\", \"spe_substring$ebnf$2\", (lexer_1.lexerAny.has(\"rparen\") ? { type: \"rparen\" } : rparen)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'substring',\n                value: x[1][1],\n                ...x[2] && { from: x[2][1] },\n                ...x[3] && { for: x[3][1] },\n            }) },\n        { \"name\": \"various_binaries\", \"symbols\": [\"kw_at\", \"kw_time\", \"kw_zone\"], \"postprocess\": () => 'AT TIME ZONE' },\n        { \"name\": \"createtable_statement$ebnf$1\", \"symbols\": [\"createtable_modifiers\"], \"postprocess\": id },\n        { \"name\": \"createtable_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtable_statement$ebnf$2\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"createtable_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtable_statement$ebnf$3\", \"symbols\": [\"createtable_opts\"], \"postprocess\": id },\n        { \"name\": \"createtable_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtable_statement\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"createtable_statement$ebnf$1\", (lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table), \"createtable_statement$ebnf$2\", \"qname\", \"lparen\", \"createtable_declarationlist\", \"rparen\", \"createtable_statement$ebnf$3\"], \"postprocess\": x => {\n                const cols = x[6].filter((v) => 'kind' in v);\n                const constraints = x[6].filter((v) => !('kind' in v));\n                return (0, lexer_2.track)(x, {\n                    type: 'create table',\n                    ...!!x[3] ? { ifNotExists: true } : {},\n                    name: x[4],\n                    columns: cols,\n                    ...unwrap(x[1]),\n                    ...constraints.length ? { constraints } : {},\n                    ...last(x),\n                });\n            } },\n        { \"name\": \"createtable_modifiers\", \"symbols\": [\"kw_unlogged\"], \"postprocess\": x => x[0] ? { unlogged: true } : {} },\n        { \"name\": \"createtable_modifiers\", \"symbols\": [\"m_locglob\"] },\n        { \"name\": \"createtable_modifiers\", \"symbols\": [\"m_tmp\"] },\n        { \"name\": \"createtable_modifiers\", \"symbols\": [\"m_locglob\", \"m_tmp\"], \"postprocess\": ([a, b]) => ({ ...a, ...b }) },\n        { \"name\": \"m_locglob$subexpression$1\", \"symbols\": [\"kw_local\"] },\n        { \"name\": \"m_locglob$subexpression$1\", \"symbols\": [\"kw_global\"] },\n        { \"name\": \"m_locglob\", \"symbols\": [\"m_locglob$subexpression$1\"], \"postprocess\": x => ({ locality: toStr(x) }) },\n        { \"name\": \"m_tmp$subexpression$1\", \"symbols\": [\"kw_temp\"] },\n        { \"name\": \"m_tmp$subexpression$1\", \"symbols\": [\"kw_temporary\"] },\n        { \"name\": \"m_tmp\", \"symbols\": [\"m_tmp$subexpression$1\"], \"postprocess\": x => ({ temporary: true }) },\n        { \"name\": \"createtable_declarationlist$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtable_declarationlist$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"createtable_declaration\"], \"postprocess\": last },\n        { \"name\": \"createtable_declarationlist$ebnf$1\", \"symbols\": [\"createtable_declarationlist$ebnf$1\", \"createtable_declarationlist$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtable_declarationlist\", \"symbols\": [\"createtable_declaration\", \"createtable_declarationlist$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"createtable_declaration$subexpression$1\", \"symbols\": [\"createtable_constraint\"] },\n        { \"name\": \"createtable_declaration$subexpression$1\", \"symbols\": [\"createtable_column\"] },\n        { \"name\": \"createtable_declaration$subexpression$1\", \"symbols\": [\"createtable_like\"] },\n        { \"name\": \"createtable_declaration\", \"symbols\": [\"createtable_declaration$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"createtable_constraint$macrocall$2\", \"symbols\": [\"createtable_constraint_def\"] },\n        { \"name\": \"createtable_constraint$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_constraint\") ? { type: \"kw_constraint\" } : kw_constraint), \"word\"] },\n        { \"name\": \"createtable_constraint$macrocall$1$ebnf$1\", \"symbols\": [\"createtable_constraint$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createtable_constraint$macrocall$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtable_constraint$macrocall$1\", \"symbols\": [\"createtable_constraint$macrocall$1$ebnf$1\", \"createtable_constraint$macrocall$2\"], \"postprocess\": x => {\n                const name = x[0] && asName(x[0][1]);\n                if (!name) {\n                    return (0, lexer_2.track)(x, unwrap(x[1]));\n                }\n                return (0, lexer_2.track)(x, {\n                    constraintName: name,\n                    ...unwrap(x[1]),\n                });\n            } },\n        { \"name\": \"createtable_constraint\", \"symbols\": [\"createtable_constraint$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"createtable_constraint_def\", \"symbols\": [\"createtable_constraint_def_unique\"] },\n        { \"name\": \"createtable_constraint_def\", \"symbols\": [\"createtable_constraint_def_check\"] },\n        { \"name\": \"createtable_constraint_def\", \"symbols\": [\"createtable_constraint_foreignkey\"] },\n        { \"name\": \"createtable_constraint_def_unique$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_unique\") ? { type: \"kw_unique\" } : kw_unique)] },\n        { \"name\": \"createtable_constraint_def_unique$subexpression$1\", \"symbols\": [\"kw_primary_key\"] },\n        { \"name\": \"createtable_constraint_def_unique\", \"symbols\": [\"createtable_constraint_def_unique$subexpression$1\", \"lparen\", \"createtable_collist\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: toStr(x[0], ' '),\n                columns: x[2].map(asName),\n            }) },\n        { \"name\": \"createtable_constraint_def_check\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_check\") ? { type: \"kw_check\" } : kw_check), \"expr_paren\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'check',\n                expr: unwrap(x[1]),\n            }) },\n        { \"name\": \"createtable_constraint_foreignkey\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_foreign\") ? { type: \"kw_foreign\" } : kw_foreign), \"kw_key\", \"collist_paren\", \"createtable_references\"], \"postprocess\": (x) => {\n                return (0, lexer_2.track)(x, {\n                    type: 'foreign key',\n                    localColumns: x[2].map(asName),\n                    ...x[3],\n                });\n            } },\n        { \"name\": \"createtable_references$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtable_references$ebnf$1\", \"symbols\": [\"createtable_references$ebnf$1\", \"createtable_constraint_foreignkey_onsometing\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtable_references\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_references\") ? { type: \"kw_references\" } : kw_references), \"table_ref\", \"collist_paren\", \"createtable_references$ebnf$1\"], \"postprocess\": (x) => {\n                return (0, lexer_2.track)(x, {\n                    foreignTable: unwrap(x[1]),\n                    foreignColumns: x[2].map(asName),\n                    ...x[3].reduce((a, b) => ({ ...a, ...b }), {}),\n                });\n            } },\n        { \"name\": \"createtable_constraint_foreignkey_onsometing\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"kw_delete\", \"createtable_constraint_on_action\"], \"postprocess\": x => (0, lexer_2.track)(x, { onDelete: last(x) }) },\n        { \"name\": \"createtable_constraint_foreignkey_onsometing\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"kw_update\", \"createtable_constraint_on_action\"], \"postprocess\": x => (0, lexer_2.track)(x, { onUpdate: last(x) }) },\n        { \"name\": \"createtable_constraint_foreignkey_onsometing$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_full\") ? { type: \"kw_full\" } : kw_full)] },\n        { \"name\": \"createtable_constraint_foreignkey_onsometing$subexpression$1\", \"symbols\": [\"kw_partial\"] },\n        { \"name\": \"createtable_constraint_foreignkey_onsometing$subexpression$1\", \"symbols\": [\"kw_simple\"] },\n        { \"name\": \"createtable_constraint_foreignkey_onsometing\", \"symbols\": [\"kw_match\", \"createtable_constraint_foreignkey_onsometing$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { match: toStr(last(x)) }) },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1\", \"symbols\": [\"kw_cascade\"] },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1$subexpression$1\", \"symbols\": [\"kw_no\", \"kw_action\"] },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1\", \"symbols\": [\"createtable_constraint_on_action$subexpression$1$subexpression$1\"] },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1\", \"symbols\": [\"kw_restrict\"] },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null)] },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)] },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1\", \"symbols\": [\"kw_set\", \"createtable_constraint_on_action$subexpression$1$subexpression$2\"] },\n        { \"name\": \"createtable_constraint_on_action\", \"symbols\": [\"createtable_constraint_on_action$subexpression$1\"], \"postprocess\": x => toStr(x, ' ') },\n        { \"name\": \"createtable_collist$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtable_collist$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"createtable_collist$ebnf$1\", \"symbols\": [\"createtable_collist$ebnf$1\", \"createtable_collist$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtable_collist\", \"symbols\": [\"ident\", \"createtable_collist$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"createtable_column$ebnf$1\", \"symbols\": [\"createtable_collate\"], \"postprocess\": id },\n        { \"name\": \"createtable_column$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtable_column$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"createtable_column$ebnf$2\", \"symbols\": [\"createtable_column$ebnf$2\", \"createtable_column_constraint\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtable_column\", \"symbols\": [\"word\", \"data_type\", \"createtable_column$ebnf$1\", \"createtable_column$ebnf$2\"], \"postprocess\": x => {\n                return (0, lexer_2.track)(x, {\n                    kind: 'column',\n                    name: asName(x[0]),\n                    dataType: x[1],\n                    ...x[2] ? { collate: x[2][1] } : {},\n                    ...x[3] && x[3].length ? { constraints: x[3] } : {},\n                });\n            } },\n        { \"name\": \"createtable_like$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtable_like$ebnf$1\", \"symbols\": [\"createtable_like$ebnf$1\", \"createtable_like_opt\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtable_like\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_like\") ? { type: \"kw_like\" } : kw_like), \"qname\", \"createtable_like$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                kind: 'like table',\n                like: x[1],\n                options: x[2],\n            }) },\n        { \"name\": \"createtable_like_opt$subexpression$1\", \"symbols\": [\"kw_including\"] },\n        { \"name\": \"createtable_like_opt$subexpression$1\", \"symbols\": [\"kw_excluding\"] },\n        { \"name\": \"createtable_like_opt\", \"symbols\": [\"createtable_like_opt$subexpression$1\", \"createtable_like_opt_val\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                verb: toStr(x[0]),\n                option: toStr(x[1]),\n            }) },\n        { \"name\": \"createtable_like_opt_val\", \"symbols\": [\"word\"], \"postprocess\": anyKw('defaults', 'constraints', 'indexes', 'storage', 'comments') },\n        { \"name\": \"createtable_like_opt_val\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)] },\n        { \"name\": \"createtable_column_constraint$macrocall$2\", \"symbols\": [\"createtable_column_constraint_def\"] },\n        { \"name\": \"createtable_column_constraint$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_constraint\") ? { type: \"kw_constraint\" } : kw_constraint), \"word\"] },\n        { \"name\": \"createtable_column_constraint$macrocall$1$ebnf$1\", \"symbols\": [\"createtable_column_constraint$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createtable_column_constraint$macrocall$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtable_column_constraint$macrocall$1\", \"symbols\": [\"createtable_column_constraint$macrocall$1$ebnf$1\", \"createtable_column_constraint$macrocall$2\"], \"postprocess\": x => {\n                const name = x[0] && asName(x[0][1]);\n                if (!name) {\n                    return (0, lexer_2.track)(x, unwrap(x[1]));\n                }\n                return (0, lexer_2.track)(x, {\n                    constraintName: name,\n                    ...unwrap(x[1]),\n                });\n            } },\n        { \"name\": \"createtable_column_constraint\", \"symbols\": [\"createtable_column_constraint$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_unique\") ? { type: \"kw_unique\" } : kw_unique)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'unique' }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [\"kw_primary_key\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'primary key' }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [\"kw_not_null\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'not null' }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'null' }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default), \"expr\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'default', default: unwrap(x[1]) }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_check\") ? { type: \"kw_check\" } : kw_check), \"expr_paren\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'check', expr: unwrap(x[1]) }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [\"createtable_references\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'reference', ...unwrap(x) }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [\"altercol_generated\"] },\n        { \"name\": \"createtable_collate\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_collate\") ? { type: \"kw_collate\" } : kw_collate), \"qualified_name\"] },\n        { \"name\": \"createtable_opts$subexpression$1\", \"symbols\": [\"word\"], \"postprocess\": kw('inherits') },\n        { \"name\": \"createtable_opts$macrocall$2\", \"symbols\": [\"qname\"] },\n        { \"name\": \"createtable_opts$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtable_opts$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"createtable_opts$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"createtable_opts$macrocall$1$ebnf$1\", \"symbols\": [\"createtable_opts$macrocall$1$ebnf$1\", \"createtable_opts$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtable_opts$macrocall$1\", \"symbols\": [\"createtable_opts$macrocall$2\", \"createtable_opts$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"createtable_opts\", \"symbols\": [\"createtable_opts$subexpression$1\", \"lparen\", \"createtable_opts$macrocall$1\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, { inherits: x[2] }) },\n        { \"name\": \"createindex_statement$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_unique\") ? { type: \"kw_unique\" } : kw_unique)], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_concurrently\") ? { type: \"kw_concurrently\" } : kw_concurrently)], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$3\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$4\", \"symbols\": [\"word\"], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$5$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_using\") ? { type: \"kw_using\" } : kw_using), \"ident\"], \"postprocess\": last },\n        { \"name\": \"createindex_statement$ebnf$5\", \"symbols\": [\"createindex_statement$ebnf$5$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$6\", \"symbols\": [\"createindex_with\"], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$6\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$7\", \"symbols\": [\"createindex_tblspace\"], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$7\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$8\", \"symbols\": [\"createindex_predicate\"], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$8\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"createindex_statement$ebnf$1\", \"kw_index\", \"createindex_statement$ebnf$2\", \"createindex_statement$ebnf$3\", \"createindex_statement$ebnf$4\", (lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"table_ref\", \"createindex_statement$ebnf$5\", \"lparen\", \"createindex_expressions\", \"rparen\", \"createindex_statement$ebnf$6\", \"createindex_statement$ebnf$7\", \"createindex_statement$ebnf$8\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'create index',\n                ...x[1] && { unique: true },\n                ...x[3] && { concurrently: true },\n                ...x[4] && { ifNotExists: true },\n                ...x[5] && { indexName: asName(x[5]) },\n                table: x[7],\n                ...x[8] && { using: asName(x[8]) },\n                expressions: x[10],\n                ...x[12] && { with: x[12] },\n                ...x[13] && { tablespace: unwrap(x[13]) },\n                ...x[14] && { where: unwrap(x[14]) },\n            }) },\n        { \"name\": \"createindex_expressions$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createindex_expressions$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"createindex_expression\"], \"postprocess\": last },\n        { \"name\": \"createindex_expressions$ebnf$1\", \"symbols\": [\"createindex_expressions$ebnf$1\", \"createindex_expressions$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createindex_expressions\", \"symbols\": [\"createindex_expression\", \"createindex_expressions$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"createindex_expression$subexpression$1\", \"symbols\": [\"expr_basic\"] },\n        { \"name\": \"createindex_expression$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"createindex_expression$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_collate\") ? { type: \"kw_collate\" } : kw_collate), \"qualified_name\"], \"postprocess\": last },\n        { \"name\": \"createindex_expression$ebnf$1\", \"symbols\": [\"createindex_expression$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createindex_expression$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_expression$ebnf$2\", \"symbols\": [\"qualified_name\"], \"postprocess\": id },\n        { \"name\": \"createindex_expression$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_expression$ebnf$3$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_asc\") ? { type: \"kw_asc\" } : kw_asc)] },\n        { \"name\": \"createindex_expression$ebnf$3$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_desc\") ? { type: \"kw_desc\" } : kw_desc)] },\n        { \"name\": \"createindex_expression$ebnf$3\", \"symbols\": [\"createindex_expression$ebnf$3$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createindex_expression$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_expression$ebnf$4$subexpression$1$subexpression$1\", \"symbols\": [\"kw_first\"] },\n        { \"name\": \"createindex_expression$ebnf$4$subexpression$1$subexpression$1\", \"symbols\": [\"kw_last\"] },\n        { \"name\": \"createindex_expression$ebnf$4$subexpression$1\", \"symbols\": [\"kw_nulls\", \"createindex_expression$ebnf$4$subexpression$1$subexpression$1\"], \"postprocess\": last },\n        { \"name\": \"createindex_expression$ebnf$4\", \"symbols\": [\"createindex_expression$ebnf$4$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createindex_expression$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_expression\", \"symbols\": [\"createindex_expression$subexpression$1\", \"createindex_expression$ebnf$1\", \"createindex_expression$ebnf$2\", \"createindex_expression$ebnf$3\", \"createindex_expression$ebnf$4\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                expression: unwrap(x[0]),\n                ...x[1] && { collate: unwrap(x[1]) },\n                ...x[2] && { opclass: unwrap(x[2]) },\n                ...x[3] && { order: unwrap(x[3]).value },\n                ...x[4] && { nulls: unwrap(x[4]) },\n            }) },\n        { \"name\": \"createindex_predicate\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_where\") ? { type: \"kw_where\" } : kw_where), \"expr\"], \"postprocess\": last },\n        { \"name\": \"createindex_with$macrocall$2\", \"symbols\": [\"createindex_with_item\"] },\n        { \"name\": \"createindex_with$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createindex_with$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"createindex_with$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"createindex_with$macrocall$1$ebnf$1\", \"symbols\": [\"createindex_with$macrocall$1$ebnf$1\", \"createindex_with$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createindex_with$macrocall$1\", \"symbols\": [\"createindex_with$macrocall$2\", \"createindex_with$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"createindex_with\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"lparen\", \"createindex_with$macrocall$1\", \"rparen\"], \"postprocess\": get(2) },\n        { \"name\": \"createindex_with_item$subexpression$1\", \"symbols\": [\"string\"] },\n        { \"name\": \"createindex_with_item$subexpression$1\", \"symbols\": [\"int\"] },\n        { \"name\": \"createindex_with_item\", \"symbols\": [\"ident\", (lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq), \"createindex_with_item$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { parameter: toStr(x[0]), value: unwrap(x[2]).toString() }) },\n        { \"name\": \"createindex_tblspace\", \"symbols\": [\"kw_tablespace\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"createextension_statement$ebnf$1\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"createextension_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createextension_statement$ebnf$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with)], \"postprocess\": id },\n        { \"name\": \"createextension_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createextension_statement$ebnf$3$subexpression$1\", \"symbols\": [\"kw_schema\", \"word\"], \"postprocess\": last },\n        { \"name\": \"createextension_statement$ebnf$3\", \"symbols\": [\"createextension_statement$ebnf$3$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createextension_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createextension_statement$ebnf$4$subexpression$1\", \"symbols\": [\"kw_version\", \"string\"], \"postprocess\": last },\n        { \"name\": \"createextension_statement$ebnf$4\", \"symbols\": [\"createextension_statement$ebnf$4$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createextension_statement$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createextension_statement$ebnf$5$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from), \"string\"], \"postprocess\": last },\n        { \"name\": \"createextension_statement$ebnf$5\", \"symbols\": [\"createextension_statement$ebnf$5$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createextension_statement$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createextension_statement\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"kw_extension\", \"createextension_statement$ebnf$1\", \"word\", \"createextension_statement$ebnf$2\", \"createextension_statement$ebnf$3\", \"createextension_statement$ebnf$4\", \"createextension_statement$ebnf$5\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'create extension',\n                ...!!x[2] ? { ifNotExists: true } : {},\n                extension: asName(x[3]),\n                ...!!x[5] ? { schema: asName(x[5]) } : {},\n                ...!!x[6] ? { version: asLit(x[6]) } : {},\n                ...!!x[7] ? { from: asLit(x[7]) } : {},\n            }) },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_start_transaction\"] },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_commit\"] },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_rollback\"] },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_tablespace\"] },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_set\"] },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_show\"] },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_begin\"] },\n        { \"name\": \"simplestatements_start_transaction$subexpression$1\", \"symbols\": [\"kw_start\", \"kw_transaction\"] },\n        { \"name\": \"simplestatements_start_transaction\", \"symbols\": [\"simplestatements_start_transaction$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'start transaction' }) },\n        { \"name\": \"simplestatements_commit\", \"symbols\": [\"kw_commit\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'commit' }) },\n        { \"name\": \"simplestatements_rollback\", \"symbols\": [\"kw_rollback\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'rollback' }) },\n        { \"name\": \"simplestatements_tablespace\", \"symbols\": [\"kw_tablespace\", \"word\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'tablespace',\n                tablespace: asName(x[1]),\n            }) },\n        { \"name\": \"simplestatements_set$subexpression$1\", \"symbols\": [\"simplestatements_set_simple\"] },\n        { \"name\": \"simplestatements_set$subexpression$1\", \"symbols\": [\"simplestatements_set_timezone\"] },\n        { \"name\": \"simplestatements_set$subexpression$1\", \"symbols\": [\"simplestatements_set_names\"] },\n        { \"name\": \"simplestatements_set\", \"symbols\": [\"kw_set\", \"simplestatements_set$subexpression$1\"], \"postprocess\": last },\n        { \"name\": \"simplestatements_set_timezone\", \"symbols\": [\"kw_time\", \"kw_zone\", \"simplestatements_set_timezone_val\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'set timezone', to: x[2] }) },\n        { \"name\": \"simplestatements_set_timezone_val$subexpression$1\", \"symbols\": [\"string\"] },\n        { \"name\": \"simplestatements_set_timezone_val$subexpression$1\", \"symbols\": [\"int\"] },\n        { \"name\": \"simplestatements_set_timezone_val\", \"symbols\": [\"simplestatements_set_timezone_val$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'value', value: unwrap(x[0]) }) },\n        { \"name\": \"simplestatements_set_timezone_val\", \"symbols\": [\"kw_local\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'local' }) },\n        { \"name\": \"simplestatements_set_timezone_val\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'default' }) },\n        { \"name\": \"simplestatements_set_timezone_val\", \"symbols\": [\"kw_interval\", \"string\", \"kw_hour\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"kw_minute\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'interval', value: (0, lexer_2.unbox)(x[1]) }) },\n        { \"name\": \"simplestatements_set_names\", \"symbols\": [\"kw_names\", \"simplestatements_set_names_val\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'set names', to: x[1] }) },\n        { \"name\": \"simplestatements_set_names_val$subexpression$1\", \"symbols\": [\"string\"] },\n        { \"name\": \"simplestatements_set_names_val\", \"symbols\": [\"simplestatements_set_names_val$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'value', value: unwrap(x[0]) }) },\n        { \"name\": \"simplestatements_set_simple$ebnf$1$subexpression$1\", \"symbols\": [\"kw_local\"] },\n        { \"name\": \"simplestatements_set_simple$ebnf$1$subexpression$1\", \"symbols\": [\"kw_session\"] },\n        { \"name\": \"simplestatements_set_simple$ebnf$1\", \"symbols\": [\"simplestatements_set_simple$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"simplestatements_set_simple$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"simplestatements_set_simple$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq)] },\n        { \"name\": \"simplestatements_set_simple$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to)] },\n        { \"name\": \"simplestatements_set_simple\", \"symbols\": [\"simplestatements_set_simple$ebnf$1\", \"ident\", \"simplestatements_set_simple$subexpression$1\", \"simplestatements_set_val\"], \"postprocess\": x => {\n                var _a;\n                return (0, lexer_2.track)(x, {\n                    type: 'set',\n                    variable: asName(x[1]),\n                    scope: (_a = unwrap(x[0])) === null || _a === void 0 ? void 0 : _a.toLowerCase(),\n                    set: (0, lexer_2.unbox)(x[3]),\n                });\n            } },\n        { \"name\": \"simplestatements_set_val\", \"symbols\": [\"simplestatements_set_val_raw\"], \"postprocess\": unwrap },\n        { \"name\": \"simplestatements_set_val\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'default' }) },\n        { \"name\": \"simplestatements_set_val$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"simplestatements_set_val_raw\"] },\n        { \"name\": \"simplestatements_set_val$ebnf$1\", \"symbols\": [\"simplestatements_set_val$ebnf$1$subexpression$1\"] },\n        { \"name\": \"simplestatements_set_val$ebnf$1$subexpression$2\", \"symbols\": [\"comma\", \"simplestatements_set_val_raw\"] },\n        { \"name\": \"simplestatements_set_val$ebnf$1\", \"symbols\": [\"simplestatements_set_val$ebnf$1\", \"simplestatements_set_val$ebnf$1$subexpression$2\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"simplestatements_set_val\", \"symbols\": [\"simplestatements_set_val_raw\", \"simplestatements_set_val$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'list',\n                values: [x[0], ...(x[1] || [])]\n            }) },\n        { \"name\": \"simplestatements_set_val_raw$subexpression$1\", \"symbols\": [\"string\"] },\n        { \"name\": \"simplestatements_set_val_raw$subexpression$1\", \"symbols\": [\"int\"] },\n        { \"name\": \"simplestatements_set_val_raw\", \"symbols\": [\"simplestatements_set_val_raw$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'value', value: unwrap(x) }) },\n        { \"name\": \"simplestatements_set_val_raw$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)] },\n        { \"name\": \"simplestatements_set_val_raw$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on)] },\n        { \"name\": \"simplestatements_set_val_raw$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_true\") ? { type: \"kw_true\" } : kw_true)] },\n        { \"name\": \"simplestatements_set_val_raw$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_false\") ? { type: \"kw_false\" } : kw_false)] },\n        { \"name\": \"simplestatements_set_val_raw\", \"symbols\": [\"simplestatements_set_val_raw$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'identifier', name: unwrap(x).value }) },\n        { \"name\": \"simplestatements_set_val_raw\", \"symbols\": [(lexer_1.lexerAny.has(\"quoted_word\") ? { type: \"quoted_word\" } : quoted_word)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'identifier', doubleQuoted: true, name: unwrap(x).value }) },\n        { \"name\": \"simplestatements_show\", \"symbols\": [\"kw_show\", \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'show', variable: asName(x[1]) }) },\n        { \"name\": \"create_schema$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"kw_schema\"] },\n        { \"name\": \"create_schema$ebnf$1\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"create_schema$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_schema\", \"symbols\": [\"create_schema$subexpression$1\", \"create_schema$ebnf$1\", \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'create schema',\n                name: asName(x[2]),\n                ...!!x[1] ? { ifNotExists: true } : {},\n            }) },\n        { \"name\": \"raise_statement$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": anyKw('debug', 'log', 'info', 'notice', 'warning', 'exception') },\n        { \"name\": \"raise_statement$ebnf$1\", \"symbols\": [\"raise_statement$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"raise_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"raise_statement$ebnf$2$subexpression$1\", \"symbols\": [\"comma\", \"expr_list_raw\"], \"postprocess\": last },\n        { \"name\": \"raise_statement$ebnf$2\", \"symbols\": [\"raise_statement$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"raise_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"raise_statement$ebnf$3\", \"symbols\": [\"raise_using\"], \"postprocess\": id },\n        { \"name\": \"raise_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"raise_statement\", \"symbols\": [\"kw_raise\", \"raise_statement$ebnf$1\", \"string\", \"raise_statement$ebnf$2\", \"raise_statement$ebnf$3\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'raise',\n                format: toStr(x[2]),\n                ...x[1] && { level: toStr(x[1]) },\n                ...x[3] && x[3].length && { formatExprs: x[3] },\n                ...x[4] && x[4].length && { using: x[4] },\n            }) },\n        { \"name\": \"raise_using$macrocall$2\", \"symbols\": [\"raise_using_one\"] },\n        { \"name\": \"raise_using$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"raise_using$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"raise_using$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"raise_using$macrocall$1$ebnf$1\", \"symbols\": [\"raise_using$macrocall$1$ebnf$1\", \"raise_using$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"raise_using$macrocall$1\", \"symbols\": [\"raise_using$macrocall$2\", \"raise_using$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"raise_using\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_using\") ? { type: \"kw_using\" } : kw_using), \"raise_using$macrocall$1\"], \"postprocess\": last },\n        { \"name\": \"raise_using_one\", \"symbols\": [\"raise_using_what\", (lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq), \"expr\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: toStr(x[0]),\n                value: x[2],\n            }) },\n        { \"name\": \"raise_using_what\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table)] },\n        { \"name\": \"raise_using_what\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": anyKw('message', 'detail', 'hint', 'errcode', 'column', 'constraint', 'datatype', 'schema') },\n        { \"name\": \"comment_statement\", \"symbols\": [\"kw_comment\", (lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"comment_what\", (lexer_1.lexerAny.has(\"kw_is\") ? { type: \"kw_is\" } : kw_is), \"string\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'comment',\n                comment: (0, lexer_2.unbox)(last(x)),\n                on: unwrap(x[2]),\n            }) },\n        { \"name\": \"comment_what\", \"symbols\": [\"comment_what_col\"] },\n        { \"name\": \"comment_what\", \"symbols\": [\"comment_what_nm\"] },\n        { \"name\": \"comment_what_nm$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table)] },\n        { \"name\": \"comment_what_nm$subexpression$1\", \"symbols\": [\"kw_materialized\", \"kw_view\"] },\n        { \"name\": \"comment_what_nm$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": anyKw('database', 'index', 'trigger', 'type', 'view') },\n        { \"name\": \"comment_what_nm\", \"symbols\": [\"comment_what_nm$subexpression$1\", \"qualified_name\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: toStr(x[0]),\n                name: x[1],\n            }) },\n        { \"name\": \"comment_what_col\", \"symbols\": [\"kw_column\", \"qcolumn\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'column',\n                column: last(x),\n            }) },\n        { \"name\": \"simplestatements_begin$ebnf$1$subexpression$1\", \"symbols\": [\"kw_transaction\"] },\n        { \"name\": \"simplestatements_begin$ebnf$1$subexpression$1\", \"symbols\": [\"kw_work\"] },\n        { \"name\": \"simplestatements_begin$ebnf$1\", \"symbols\": [\"simplestatements_begin$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"simplestatements_begin$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"simplestatements_begin$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"simplestatements_begin$ebnf$2$subexpression$1\", \"symbols\": [\"simplestatements_begin_isol\"] },\n        { \"name\": \"simplestatements_begin$ebnf$2$subexpression$1\", \"symbols\": [\"simplestatements_begin_writ\"] },\n        { \"name\": \"simplestatements_begin$ebnf$2$subexpression$1\", \"symbols\": [\"simplestatements_begin_def\"] },\n        { \"name\": \"simplestatements_begin$ebnf$2\", \"symbols\": [\"simplestatements_begin$ebnf$2\", \"simplestatements_begin$ebnf$2$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"simplestatements_begin\", \"symbols\": [\"kw_begin\", \"simplestatements_begin$ebnf$1\", \"simplestatements_begin$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'begin',\n                ...x[2].reduce((a, b) => ({ ...unwrap(a), ...unwrap(b) }), {}),\n            })\n        },\n        { \"name\": \"simplestatements_begin_isol$subexpression$1\", \"symbols\": [\"kw_isolation\", \"kw_level\"] },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2\", \"symbols\": [\"kw_serializable\"] },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2$subexpression$1\", \"symbols\": [\"word\"], \"postprocess\": kw('repeatable') },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2\", \"symbols\": [\"simplestatements_begin_isol$subexpression$2$subexpression$1\", \"kw_read\"] },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2$subexpression$2\", \"symbols\": [\"word\"], \"postprocess\": kw('committed') },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2\", \"symbols\": [\"kw_read\", \"simplestatements_begin_isol$subexpression$2$subexpression$2\"] },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2$subexpression$3\", \"symbols\": [\"word\"], \"postprocess\": kw('uncommitted') },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2\", \"symbols\": [\"kw_read\", \"simplestatements_begin_isol$subexpression$2$subexpression$3\"] },\n        { \"name\": \"simplestatements_begin_isol\", \"symbols\": [\"simplestatements_begin_isol$subexpression$1\", \"simplestatements_begin_isol$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                isolationLevel: toStr(x[1], ' '),\n            }) },\n        { \"name\": \"simplestatements_begin_writ$subexpression$1\", \"symbols\": [\"kw_read\", \"kw_write\"] },\n        { \"name\": \"simplestatements_begin_writ$subexpression$1\", \"symbols\": [\"kw_read\", (lexer_1.lexerAny.has(\"kw_only\") ? { type: \"kw_only\" } : kw_only)] },\n        { \"name\": \"simplestatements_begin_writ\", \"symbols\": [\"simplestatements_begin_writ$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                writeable: toStr(x, ' '),\n            }) },\n        { \"name\": \"simplestatements_begin_def$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)], \"postprocess\": id },\n        { \"name\": \"simplestatements_begin_def$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"simplestatements_begin_def\", \"symbols\": [\"simplestatements_begin_def$ebnf$1\", (lexer_1.lexerAny.has(\"kw_deferrable\") ? { type: \"kw_deferrable\" } : kw_deferrable)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                deferrable: !x[0]\n            }) },\n        { \"name\": \"insert_statement$subexpression$1\", \"symbols\": [\"kw_insert\", (lexer_1.lexerAny.has(\"kw_into\") ? { type: \"kw_into\" } : kw_into)] },\n        { \"name\": \"insert_statement$ebnf$1\", \"symbols\": [\"collist_paren\"], \"postprocess\": id },\n        { \"name\": \"insert_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_statement$ebnf$2$subexpression$1$subexpression$1\", \"symbols\": [\"kw_system\"] },\n        { \"name\": \"insert_statement$ebnf$2$subexpression$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_user\") ? { type: \"kw_user\" } : kw_user)] },\n        { \"name\": \"insert_statement$ebnf$2$subexpression$1\", \"symbols\": [\"kw_overriding\", \"insert_statement$ebnf$2$subexpression$1$subexpression$1\", \"kw_value\"], \"postprocess\": get(1) },\n        { \"name\": \"insert_statement$ebnf$2\", \"symbols\": [\"insert_statement$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"insert_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_statement$ebnf$3$subexpression$1\", \"symbols\": [\"selection\"] },\n        { \"name\": \"insert_statement$ebnf$3$subexpression$1\", \"symbols\": [\"selection_paren\"] },\n        { \"name\": \"insert_statement$ebnf$3\", \"symbols\": [\"insert_statement$ebnf$3$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"insert_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_statement$ebnf$4$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"kw_conflict\", \"insert_on_conflict\"], \"postprocess\": last },\n        { \"name\": \"insert_statement$ebnf$4\", \"symbols\": [\"insert_statement$ebnf$4$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"insert_statement$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_statement$ebnf$5$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_returning\") ? { type: \"kw_returning\" } : kw_returning), \"select_expr_list_aliased\"], \"postprocess\": last },\n        { \"name\": \"insert_statement$ebnf$5\", \"symbols\": [\"insert_statement$ebnf$5$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"insert_statement$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_statement\", \"symbols\": [\"insert_statement$subexpression$1\", \"table_ref_aliased\", \"insert_statement$ebnf$1\", \"insert_statement$ebnf$2\", \"insert_statement$ebnf$3\", \"insert_statement$ebnf$4\", \"insert_statement$ebnf$5\"], \"postprocess\": x => {\n                const columns = x[2] && x[2].map(asName);\n                const overriding = toStr(x[3]);\n                const insert = unwrap(x[4]);\n                const onConflict = x[5];\n                const returning = x[6];\n                return (0, lexer_2.track)(x, {\n                    type: 'insert',\n                    into: unwrap(x[1]),\n                    insert,\n                    ...overriding && { overriding },\n                    ...columns && { columns },\n                    ...returning && { returning },\n                    ...onConflict && { onConflict },\n                });\n            } },\n        { \"name\": \"insert_values$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"insert_values$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"insert_value\"], \"postprocess\": last },\n        { \"name\": \"insert_values$ebnf$1\", \"symbols\": [\"insert_values$ebnf$1\", \"insert_values$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"insert_values\", \"symbols\": [\"insert_value\", \"insert_values$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"insert_value\", \"symbols\": [\"lparen\", \"insert_expr_list_raw\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"insert_expr_list_raw$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"insert_expr_list_raw$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"expr_or_select\"], \"postprocess\": last },\n        { \"name\": \"insert_expr_list_raw$ebnf$1\", \"symbols\": [\"insert_expr_list_raw$ebnf$1\", \"insert_expr_list_raw$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"insert_expr_list_raw\", \"symbols\": [\"expr_or_select\", \"insert_expr_list_raw$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"insert_on_conflict$ebnf$1\", \"symbols\": [\"insert_on_conflict_what\"], \"postprocess\": id },\n        { \"name\": \"insert_on_conflict$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_on_conflict\", \"symbols\": [\"insert_on_conflict$ebnf$1\", \"insert_on_conflict_do\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                ...x[0] ? { on: unwrap(x[0]) } : {},\n                ...x[1],\n            }) },\n        { \"name\": \"insert_on_conflict_what\", \"symbols\": [\"lparen\", \"expr_list_raw\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'on expr',\n                exprs: x[1],\n            }) },\n        { \"name\": \"insert_on_conflict_what\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), (lexer_1.lexerAny.has(\"kw_constraint\") ? { type: \"kw_constraint\" } : kw_constraint), \"qname\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'on constraint',\n                constraint: last(x),\n            }) },\n        { \"name\": \"insert_on_conflict_do\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_do\") ? { type: \"kw_do\" } : kw_do), \"kw_nothing\"], \"postprocess\": x => ({ do: 'do nothing' }) },\n        { \"name\": \"insert_on_conflict_do$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_do\") ? { type: \"kw_do\" } : kw_do), \"kw_update\", \"kw_set\"] },\n        { \"name\": \"insert_on_conflict_do$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_where\") ? { type: \"kw_where\" } : kw_where), \"expr\"], \"postprocess\": last },\n        { \"name\": \"insert_on_conflict_do$ebnf$1\", \"symbols\": [\"insert_on_conflict_do$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"insert_on_conflict_do$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_on_conflict_do\", \"symbols\": [\"insert_on_conflict_do$subexpression$1\", \"update_set_list\", \"insert_on_conflict_do$ebnf$1\"], \"postprocess\": x => ({\n                do: { sets: x[1] },\n                ...x[2] && { where: x[2] },\n            }) },\n        { \"name\": \"update_statement$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from), \"select_from_subject\"], \"postprocess\": last },\n        { \"name\": \"update_statement$ebnf$1\", \"symbols\": [\"update_statement$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"update_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"update_statement$ebnf$2\", \"symbols\": [\"select_where\"], \"postprocess\": id },\n        { \"name\": \"update_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"update_statement$ebnf$3$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_returning\") ? { type: \"kw_returning\" } : kw_returning), \"select_expr_list_aliased\"], \"postprocess\": last },\n        { \"name\": \"update_statement$ebnf$3\", \"symbols\": [\"update_statement$ebnf$3$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"update_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"update_statement\", \"symbols\": [\"kw_update\", \"table_ref_aliased\", \"kw_set\", \"update_set_list\", \"update_statement$ebnf$1\", \"update_statement$ebnf$2\", \"update_statement$ebnf$3\"], \"postprocess\": x => {\n                const from = unwrap(x[4]);\n                const where = unwrap(x[5]);\n                const returning = x[6];\n                return (0, lexer_2.track)(x, {\n                    type: 'update',\n                    table: unwrap(x[1]),\n                    sets: x[3],\n                    ...where ? { where } : {},\n                    ...from ? { from } : {},\n                    ...returning ? { returning } : {},\n                });\n            } },\n        { \"name\": \"update_set_list$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"update_set_list$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"update_set\"], \"postprocess\": last },\n        { \"name\": \"update_set_list$ebnf$1\", \"symbols\": [\"update_set_list$ebnf$1\", \"update_set_list$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"update_set_list\", \"symbols\": [\"update_set\", \"update_set_list$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                const ret = [];\n                for (const _t of [head, ...(tail || [])]) {\n                    const t = unwrap(_t);\n                    if (Array.isArray(t)) {\n                        ret.push(...t);\n                    }\n                    else {\n                        ret.push(t);\n                    }\n                }\n                return ret;\n            } },\n        { \"name\": \"update_set\", \"symbols\": [\"update_set_one\"] },\n        { \"name\": \"update_set\", \"symbols\": [\"update_set_multiple\"] },\n        { \"name\": \"update_set_one\", \"symbols\": [\"ident\", (lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq), \"expr\"], \"postprocess\": x => (0, lexer_2.box)(x, {\n                column: asName(x[0]),\n                value: unwrap(x[2]),\n            }) },\n        { \"name\": \"update_set_multiple$subexpression$1\", \"symbols\": [\"lparen\", \"expr_list_raw\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"update_set_multiple\", \"symbols\": [\"collist_paren\", (lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq), \"update_set_multiple$subexpression$1\"], \"postprocess\": x => {\n                const cols = x[0];\n                const exprs = x[2];\n                if (cols.length !== exprs.length) {\n                    throw new Error('number of columns does not match number of values');\n                }\n                return (0, lexer_2.box)(x, cols.map((x, i) => ({\n                    column: asName(x),\n                    value: unwrap(exprs[i]),\n                })));\n            } },\n        { \"name\": \"altertable_statement$ebnf$1\", \"symbols\": [\"kw_ifexists\"], \"postprocess\": id },\n        { \"name\": \"altertable_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_statement$ebnf$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_only\") ? { type: \"kw_only\" } : kw_only)], \"postprocess\": id },\n        { \"name\": \"altertable_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_statement\", \"symbols\": [\"kw_alter\", (lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table), \"altertable_statement$ebnf$1\", \"altertable_statement$ebnf$2\", \"table_ref\", \"altertable_actions\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'alter table',\n                ...x[2] ? { ifExists: true } : {},\n                ...x[3] ? { only: true } : {},\n                table: unwrap(x[4]),\n                changes: (0, lexer_2.unbox)(x[5]).map(unwrap),\n            }) },\n        { \"name\": \"altertable_actions$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"altertable_actions$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"altertable_action\"], \"postprocess\": last },\n        { \"name\": \"altertable_actions$ebnf$1\", \"symbols\": [\"altertable_actions$ebnf$1\", \"altertable_actions$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"altertable_actions\", \"symbols\": [\"altertable_action\", \"altertable_actions$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_rename_table\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_rename_column\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_rename_constraint\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_add_column\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_drop_column\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_alter_column\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_add_constraint\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_drop_constraint\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_owner\"] },\n        { \"name\": \"altertable_rename_table\", \"symbols\": [\"kw_rename\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"word\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'rename',\n                to: asName(last(x)),\n            }) },\n        { \"name\": \"altertable_rename_column$ebnf$1\", \"symbols\": [\"kw_column\"], \"postprocess\": id },\n        { \"name\": \"altertable_rename_column$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_rename_column\", \"symbols\": [\"kw_rename\", \"altertable_rename_column$ebnf$1\", \"ident\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'rename column',\n                column: asName(x[2]),\n                to: asName(last(x)),\n            }) },\n        { \"name\": \"altertable_rename_constraint\", \"symbols\": [\"kw_rename\", (lexer_1.lexerAny.has(\"kw_constraint\") ? { type: \"kw_constraint\" } : kw_constraint), \"ident\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'rename constraint',\n                constraint: asName(x[2]),\n                to: asName(last(x)),\n            }) },\n        { \"name\": \"altertable_add_column$ebnf$1\", \"symbols\": [\"kw_column\"], \"postprocess\": id },\n        { \"name\": \"altertable_add_column$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_add_column$ebnf$2\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"altertable_add_column$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_add_column\", \"symbols\": [\"kw_add\", \"altertable_add_column$ebnf$1\", \"altertable_add_column$ebnf$2\", \"createtable_column\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'add column',\n                ...x[2] ? { ifNotExists: true } : {},\n                column: unwrap(x[3]),\n            }) },\n        { \"name\": \"altertable_drop_column$ebnf$1\", \"symbols\": [\"kw_column\"], \"postprocess\": id },\n        { \"name\": \"altertable_drop_column$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_drop_column$ebnf$2\", \"symbols\": [\"kw_ifexists\"], \"postprocess\": id },\n        { \"name\": \"altertable_drop_column$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_drop_column$ebnf$3$subexpression$1\", \"symbols\": [\"kw_restrict\"] },\n        { \"name\": \"altertable_drop_column$ebnf$3$subexpression$1\", \"symbols\": [\"kw_cascade\"] },\n        { \"name\": \"altertable_drop_column$ebnf$3\", \"symbols\": [\"altertable_drop_column$ebnf$3$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"altertable_drop_column$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_drop_column\", \"symbols\": [\"kw_drop\", \"altertable_drop_column$ebnf$1\", \"altertable_drop_column$ebnf$2\", \"ident\", \"altertable_drop_column$ebnf$3\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'drop column',\n                ...x[2] ? { ifExists: true } : {},\n                column: asName(x[3]),\n                ...x[4] ? { behaviour: toStr(x[4], ' ') } : {},\n            }) },\n        { \"name\": \"altertable_alter_column$ebnf$1\", \"symbols\": [\"kw_column\"], \"postprocess\": id },\n        { \"name\": \"altertable_alter_column$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_alter_column\", \"symbols\": [\"kw_alter\", \"altertable_alter_column$ebnf$1\", \"ident\", \"altercol\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'alter column',\n                column: asName(x[2]),\n                alter: unwrap(x[3])\n            }) },\n        { \"name\": \"altercol$ebnf$1$subexpression$1\", \"symbols\": [\"kw_set\", \"kw_data\"] },\n        { \"name\": \"altercol$ebnf$1\", \"symbols\": [\"altercol$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"altercol$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altercol\", \"symbols\": [\"altercol$ebnf$1\", \"kw_type\", \"data_type\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'set type', dataType: unwrap(last(x)) }) },\n        { \"name\": \"altercol\", \"symbols\": [\"kw_set\", (lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default), \"expr\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'set default', default: unwrap(last(x)) }) },\n        { \"name\": \"altercol\", \"symbols\": [\"kw_drop\", (lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'drop default' }) },\n        { \"name\": \"altercol$subexpression$1\", \"symbols\": [\"kw_set\"] },\n        { \"name\": \"altercol$subexpression$1\", \"symbols\": [\"kw_drop\"] },\n        { \"name\": \"altercol\", \"symbols\": [\"altercol$subexpression$1\", \"kw_not_null\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: toStr(x, ' ') }) },\n        { \"name\": \"altercol\", \"symbols\": [\"altercol_generated_add\"], \"postprocess\": unwrap },\n        { \"name\": \"altertable_add_constraint\", \"symbols\": [\"kw_add\", \"createtable_constraint\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'add constraint',\n                constraint: unwrap(last(x)),\n            }) },\n        { \"name\": \"altertable_drop_constraint$ebnf$1\", \"symbols\": [\"kw_ifexists\"], \"postprocess\": id },\n        { \"name\": \"altertable_drop_constraint$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_drop_constraint$ebnf$2$subexpression$1\", \"symbols\": [\"kw_restrict\"] },\n        { \"name\": \"altertable_drop_constraint$ebnf$2$subexpression$1\", \"symbols\": [\"kw_cascade\"] },\n        { \"name\": \"altertable_drop_constraint$ebnf$2\", \"symbols\": [\"altertable_drop_constraint$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"altertable_drop_constraint$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_drop_constraint\", \"symbols\": [\"kw_drop\", (lexer_1.lexerAny.has(\"kw_constraint\") ? { type: \"kw_constraint\" } : kw_constraint), \"altertable_drop_constraint$ebnf$1\", \"ident\", \"altertable_drop_constraint$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'drop constraint',\n                ...x[2] ? { ifExists: true } : {},\n                constraint: asName(x[3]),\n                ...x[4] ? { behaviour: toStr(x[4], ' ') } : {},\n            }) },\n        { \"name\": \"altertable_owner\", \"symbols\": [\"kw_owner\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'owner',\n                to: asName(last(x)),\n            }) },\n        { \"name\": \"altercol_generated_add\", \"symbols\": [\"kw_add\", \"altercol_generated\"], \"postprocess\": last },\n        { \"name\": \"altercol_generated$ebnf$1$subexpression$1\", \"symbols\": [\"kw_always\"] },\n        { \"name\": \"altercol_generated$ebnf$1$subexpression$1\", \"symbols\": [\"kw_by\", (lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)] },\n        { \"name\": \"altercol_generated$ebnf$1\", \"symbols\": [\"altercol_generated$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"altercol_generated$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altercol_generated$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"kw_identity\"] },\n        { \"name\": \"altercol_generated$ebnf$2$subexpression$1\", \"symbols\": [\"lparen\", \"altercol_generated_seq\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"altercol_generated$ebnf$2\", \"symbols\": [\"altercol_generated$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"altercol_generated$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altercol_generated\", \"symbols\": [\"kw_generated\", \"altercol_generated$ebnf$1\", \"altercol_generated$subexpression$1\", \"altercol_generated$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'add generated',\n                ...x[1] && { always: toStr(x[1], ' ') },\n                ...x[3] && { sequence: unwrap(x[3]) },\n            }) },\n        { \"name\": \"altercol_generated_seq$ebnf$1$subexpression$1\", \"symbols\": [\"kw_sequence\", \"kw_name\", \"qualified_name\"] },\n        { \"name\": \"altercol_generated_seq$ebnf$1\", \"symbols\": [\"altercol_generated_seq$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"altercol_generated_seq$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altercol_generated_seq$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"altercol_generated_seq$ebnf$2\", \"symbols\": [\"altercol_generated_seq$ebnf$2\", \"create_sequence_option\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"altercol_generated_seq\", \"symbols\": [\"altercol_generated_seq$ebnf$1\", \"altercol_generated_seq$ebnf$2\"], \"postprocess\": x => {\n                const ret = {\n                    ...x[0] && { name: unwrap(last(x[0])) },\n                };\n                setSeqOpts(ret, x[1]);\n                return (0, lexer_2.track)(x, ret);\n            } },\n        { \"name\": \"alterindex_statement$ebnf$1\", \"symbols\": [\"kw_ifexists\"], \"postprocess\": id },\n        { \"name\": \"alterindex_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"alterindex_statement\", \"symbols\": [\"kw_alter\", \"kw_index\", \"alterindex_statement$ebnf$1\", \"table_ref\", \"alterindex_action\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'alter index',\n                ...x[2] ? { ifExists: true } : {},\n                index: unwrap(x[3]),\n                change: unwrap(x[4]),\n            }) },\n        { \"name\": \"alterindex_action\", \"symbols\": [\"alterindex_rename\"] },\n        { \"name\": \"alterindex_action\", \"symbols\": [\"alterindex_set_tablespace\"] },\n        { \"name\": \"alterindex_rename\", \"symbols\": [\"kw_rename\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"word\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'rename',\n                to: asName(last(x)),\n            }) },\n        { \"name\": \"alterindex_set_tablespace\", \"symbols\": [\"kw_set\", \"kw_tablespace\", \"word\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'set tablespace',\n                tablespace: asName(last(x)),\n            }) },\n        { \"name\": \"delete_statement\", \"symbols\": [\"delete_delete\"] },\n        { \"name\": \"delete_statement\", \"symbols\": [\"delete_truncate\"] },\n        { \"name\": \"delete_delete$subexpression$1\", \"symbols\": [\"kw_delete\", (lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from)] },\n        { \"name\": \"delete_delete$ebnf$1\", \"symbols\": [\"select_where\"], \"postprocess\": id },\n        { \"name\": \"delete_delete$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"delete_delete$ebnf$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_returning\") ? { type: \"kw_returning\" } : kw_returning), \"select_expr_list_aliased\"], \"postprocess\": last },\n        { \"name\": \"delete_delete$ebnf$2\", \"symbols\": [\"delete_delete$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"delete_delete$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"delete_delete\", \"symbols\": [\"delete_delete$subexpression$1\", \"table_ref_aliased\", \"delete_delete$ebnf$1\", \"delete_delete$ebnf$2\"], \"postprocess\": x => {\n                const where = x[2];\n                const returning = x[3];\n                return (0, lexer_2.track)(x, {\n                    type: 'delete',\n                    from: unwrap(x[1]),\n                    ...where ? { where } : {},\n                    ...returning ? { returning } : {},\n                });\n            } },\n        { \"name\": \"delete_truncate$subexpression$1$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table)], \"postprocess\": id },\n        { \"name\": \"delete_truncate$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"delete_truncate$subexpression$1\", \"symbols\": [\"kw_truncate\", \"delete_truncate$subexpression$1$ebnf$1\"] },\n        { \"name\": \"delete_truncate$macrocall$2\", \"symbols\": [\"table_ref\"] },\n        { \"name\": \"delete_truncate$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"delete_truncate$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"delete_truncate$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"delete_truncate$macrocall$1$ebnf$1\", \"symbols\": [\"delete_truncate$macrocall$1$ebnf$1\", \"delete_truncate$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"delete_truncate$macrocall$1\", \"symbols\": [\"delete_truncate$macrocall$2\", \"delete_truncate$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"delete_truncate$ebnf$1$subexpression$1$subexpression$1\", \"symbols\": [\"kw_restart\"] },\n        { \"name\": \"delete_truncate$ebnf$1$subexpression$1$subexpression$1\", \"symbols\": [\"kw_continue\"] },\n        { \"name\": \"delete_truncate$ebnf$1$subexpression$1\", \"symbols\": [\"delete_truncate$ebnf$1$subexpression$1$subexpression$1\", \"kw_identity\"] },\n        { \"name\": \"delete_truncate$ebnf$1\", \"symbols\": [\"delete_truncate$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"delete_truncate$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"delete_truncate$ebnf$2$subexpression$1\", \"symbols\": [\"kw_restrict\"] },\n        { \"name\": \"delete_truncate$ebnf$2$subexpression$1\", \"symbols\": [\"kw_cascade\"] },\n        { \"name\": \"delete_truncate$ebnf$2\", \"symbols\": [\"delete_truncate$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"delete_truncate$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"delete_truncate\", \"symbols\": [\"delete_truncate$subexpression$1\", \"delete_truncate$macrocall$1\", \"delete_truncate$ebnf$1\", \"delete_truncate$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'truncate table',\n                tables: x[1],\n                ...x[2] && { identity: toStr(x[2][0]) },\n                ...x[3] && { cascade: toStr(x[3]) },\n            }) },\n        { \"name\": \"create_sequence_statement$ebnf$1$subexpression$1\", \"symbols\": [\"kw_temp\"] },\n        { \"name\": \"create_sequence_statement$ebnf$1$subexpression$1\", \"symbols\": [\"kw_temporary\"] },\n        { \"name\": \"create_sequence_statement$ebnf$1\", \"symbols\": [\"create_sequence_statement$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_sequence_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_sequence_statement$ebnf$2\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"create_sequence_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_sequence_statement$ebnf$3\", \"symbols\": [] },\n        { \"name\": \"create_sequence_statement$ebnf$3\", \"symbols\": [\"create_sequence_statement$ebnf$3\", \"create_sequence_option\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"create_sequence_statement\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"create_sequence_statement$ebnf$1\", \"kw_sequence\", \"create_sequence_statement$ebnf$2\", \"qualified_name\", \"create_sequence_statement$ebnf$3\"], \"postprocess\": x => {\n                const ret = {\n                    type: 'create sequence',\n                    ...x[1] && { temp: true },\n                    ...x[3] && { ifNotExists: true },\n                    name: unwrap(x[4]),\n                    options: {},\n                };\n                setSeqOpts(ret.options, x[5]);\n                return (0, lexer_2.track)(x, ret);\n            } },\n        { \"name\": \"create_sequence_option\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"data_type\"], \"postprocess\": x => (0, lexer_2.box)(x, ['as', x[1]]) },\n        { \"name\": \"create_sequence_option$ebnf$1\", \"symbols\": [\"kw_by\"], \"postprocess\": id },\n        { \"name\": \"create_sequence_option$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"kw_increment\", \"create_sequence_option$ebnf$1\", \"int\"], \"postprocess\": x => (0, lexer_2.box)(x, ['incrementBy', x[2]]) },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"create_sequence_minvalue\"], \"postprocess\": x => (0, lexer_2.box)(x, ['minValue', x[0]]) },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"create_sequence_maxvalue\"], \"postprocess\": x => (0, lexer_2.box)(x, ['maxValue', x[0]]) },\n        { \"name\": \"create_sequence_option$ebnf$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with)], \"postprocess\": id },\n        { \"name\": \"create_sequence_option$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"kw_start\", \"create_sequence_option$ebnf$2\", \"int\"], \"postprocess\": x => (0, lexer_2.box)(x, ['startWith', x[2]]) },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"kw_cache\", \"int\"], \"postprocess\": x => (0, lexer_2.box)(x, ['cache', x[1]]) },\n        { \"name\": \"create_sequence_option$ebnf$3\", \"symbols\": [\"kw_no\"], \"postprocess\": id },\n        { \"name\": \"create_sequence_option$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"create_sequence_option$ebnf$3\", \"kw_cycle\"], \"postprocess\": x => (0, lexer_2.box)(x, ['cycle', toStr(x, ' ')]) },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"create_sequence_owned_by\"], \"postprocess\": x => (0, lexer_2.box)(x, ['ownedBy', unwrap(x)]) },\n        { \"name\": \"create_sequence_minvalue\", \"symbols\": [\"kw_minvalue\", \"int\"], \"postprocess\": last },\n        { \"name\": \"create_sequence_minvalue\", \"symbols\": [\"kw_no\", \"kw_minvalue\"], \"postprocess\": x => (0, lexer_2.box)(x, 'no minvalue') },\n        { \"name\": \"create_sequence_maxvalue\", \"symbols\": [\"kw_maxvalue\", \"int\"], \"postprocess\": last },\n        { \"name\": \"create_sequence_maxvalue\", \"symbols\": [\"kw_no\", \"kw_maxvalue\"], \"postprocess\": x => (0, lexer_2.box)(x, 'no maxvalue') },\n        { \"name\": \"create_sequence_owned_by$subexpression$1\", \"symbols\": [\"kw_none\"] },\n        { \"name\": \"create_sequence_owned_by$subexpression$1\", \"symbols\": [\"qcolumn\"] },\n        { \"name\": \"create_sequence_owned_by\", \"symbols\": [\"kw_owned\", \"kw_by\", \"create_sequence_owned_by$subexpression$1\"], \"postprocess\": x => (0, lexer_2.box)(x, unwrap(last(x))) },\n        { \"name\": \"alter_sequence_statement$ebnf$1\", \"symbols\": [\"kw_ifexists\"], \"postprocess\": id },\n        { \"name\": \"alter_sequence_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"alter_sequence_statement\", \"symbols\": [\"kw_alter\", \"kw_sequence\", \"alter_sequence_statement$ebnf$1\", \"qualified_name\", \"alter_sequence_statement_body\"], \"postprocess\": x => {\n                const ret = {\n                    type: 'alter sequence',\n                    ...x[2] && { ifExists: true },\n                    name: unwrap(x[3]),\n                    change: x[4],\n                };\n                return (0, lexer_2.track)(x, ret);\n            } },\n        { \"name\": \"alter_sequence_statement_body$ebnf$1\", \"symbols\": [\"alter_sequence_option\"] },\n        { \"name\": \"alter_sequence_statement_body$ebnf$1\", \"symbols\": [\"alter_sequence_statement_body$ebnf$1\", \"alter_sequence_option\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"alter_sequence_statement_body\", \"symbols\": [\"alter_sequence_statement_body$ebnf$1\"], \"postprocess\": x => {\n                const ret = {\n                    type: 'set options',\n                };\n                setSeqOpts(ret, x[0]);\n                return (0, lexer_2.track)(x, ret);\n            } },\n        { \"name\": \"alter_sequence_statement_body$subexpression$1\", \"symbols\": [\"ident\"] },\n        { \"name\": \"alter_sequence_statement_body$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_session_user\") ? { type: \"kw_session_user\" } : kw_session_user)] },\n        { \"name\": \"alter_sequence_statement_body$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_user\") ? { type: \"kw_current_user\" } : kw_current_user)] },\n        { \"name\": \"alter_sequence_statement_body\", \"symbols\": [\"kw_owner\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"alter_sequence_statement_body$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'owner to', owner: asName(last(x)), }) },\n        { \"name\": \"alter_sequence_statement_body\", \"symbols\": [\"kw_rename\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'rename', newName: asName(last(x)) }) },\n        { \"name\": \"alter_sequence_statement_body\", \"symbols\": [\"kw_set\", \"kw_schema\", \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'set schema', newSchema: asName(last(x)) }) },\n        { \"name\": \"alter_sequence_option\", \"symbols\": [\"create_sequence_option\"], \"postprocess\": unwrap },\n        { \"name\": \"alter_sequence_option$ebnf$1$subexpression$1$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with)], \"postprocess\": id },\n        { \"name\": \"alter_sequence_option$ebnf$1$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"alter_sequence_option$ebnf$1$subexpression$1\", \"symbols\": [\"alter_sequence_option$ebnf$1$subexpression$1$ebnf$1\", \"int\"], \"postprocess\": last },\n        { \"name\": \"alter_sequence_option$ebnf$1\", \"symbols\": [\"alter_sequence_option$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"alter_sequence_option$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"alter_sequence_option\", \"symbols\": [\"kw_restart\", \"alter_sequence_option$ebnf$1\"], \"postprocess\": x => (0, lexer_2.box)(x, ['restart', typeof (0, lexer_2.unbox)(x[1]) === 'number' ? (0, lexer_2.unbox)(x[1]) : true]) },\n        { \"name\": \"drop_statement$ebnf$1\", \"symbols\": [\"kw_ifexists\"], \"postprocess\": id },\n        { \"name\": \"drop_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"drop_statement$macrocall$2\", \"symbols\": [\"qualified_name\"] },\n        { \"name\": \"drop_statement$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"drop_statement$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"drop_statement$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"drop_statement$macrocall$1$ebnf$1\", \"symbols\": [\"drop_statement$macrocall$1$ebnf$1\", \"drop_statement$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"drop_statement$macrocall$1\", \"symbols\": [\"drop_statement$macrocall$2\", \"drop_statement$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"drop_statement$ebnf$2$subexpression$1\", \"symbols\": [\"kw_cascade\"] },\n        { \"name\": \"drop_statement$ebnf$2$subexpression$1\", \"symbols\": [\"kw_restrict\"] },\n        { \"name\": \"drop_statement$ebnf$2\", \"symbols\": [\"drop_statement$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"drop_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"drop_statement\", \"symbols\": [\"kw_drop\", \"drop_what\", \"drop_statement$ebnf$1\", \"drop_statement$macrocall$1\", \"drop_statement$ebnf$2\"], \"postprocess\": (x, rej) => {\n                const v = unwrap(x[1]);\n                return (0, lexer_2.track)(x, {\n                    ...v,\n                    ...x[2] && { ifExists: true },\n                    names: x[3],\n                    ...x[4] && { cascade: toStr(x[4]) },\n                });\n            } },\n        { \"name\": \"drop_what\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'drop table' }) },\n        { \"name\": \"drop_what\", \"symbols\": [\"kw_sequence\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'drop sequence' }) },\n        { \"name\": \"drop_what\", \"symbols\": [\"kw_type\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'drop type' }) },\n        { \"name\": \"drop_what\", \"symbols\": [\"kw_trigger\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'drop trigger' }) },\n        { \"name\": \"drop_what$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_concurrently\") ? { type: \"kw_concurrently\" } : kw_concurrently)], \"postprocess\": id },\n        { \"name\": \"drop_what$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"drop_what\", \"symbols\": [\"kw_index\", \"drop_what$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'drop index',\n                ...x[1] && { concurrently: true },\n            }) },\n        { \"name\": \"with_statement\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"with_statement_bindings\", \"with_statement_statement\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'with',\n                bind: x[1],\n                in: unwrap(x[2]),\n            }) },\n        { \"name\": \"with_recursive_statement$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"kw_recursive\"] },\n        { \"name\": \"with_recursive_statement\", \"symbols\": [\"with_recursive_statement$subexpression$1\", \"ident\", \"collist_paren\", (lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"lparen\", \"union_statement\", \"rparen\", \"with_statement_statement\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'with recursive',\n                alias: asName(x[1]),\n                columnNames: x[2].map(asName),\n                bind: x[5],\n                in: unwrap(x[7]),\n            }) },\n        { \"name\": \"with_statement_bindings$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"with_statement_bindings$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"with_statement_binding\"], \"postprocess\": last },\n        { \"name\": \"with_statement_bindings$ebnf$1\", \"symbols\": [\"with_statement_bindings$ebnf$1\", \"with_statement_bindings$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"with_statement_bindings\", \"symbols\": [\"with_statement_binding\", \"with_statement_bindings$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"with_statement_binding\", \"symbols\": [\"word\", (lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"lparen\", \"with_statement_statement\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                alias: asName(x[0]),\n                statement: unwrap(x[3]),\n            }) },\n        { \"name\": \"with_statement_statement\", \"symbols\": [\"selection\"] },\n        { \"name\": \"with_statement_statement\", \"symbols\": [\"insert_statement\"] },\n        { \"name\": \"with_statement_statement\", \"symbols\": [\"update_statement\"] },\n        { \"name\": \"with_statement_statement\", \"symbols\": [\"delete_statement\"] },\n        { \"name\": \"createtype_statement$subexpression$1\", \"symbols\": [\"createtype_enum\"] },\n        { \"name\": \"createtype_statement$subexpression$1\", \"symbols\": [\"createtype_composite\"] },\n        { \"name\": \"createtype_statement\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"kw_type\", \"qualified_name\", \"createtype_statement$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                name: x[2],\n                ...unwrap(x[3]),\n            }) },\n        { \"name\": \"createtype_enum$macrocall$2\", \"symbols\": [\"enum_value\"] },\n        { \"name\": \"createtype_enum$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtype_enum$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"createtype_enum$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"createtype_enum$macrocall$1$ebnf$1\", \"symbols\": [\"createtype_enum$macrocall$1$ebnf$1\", \"createtype_enum$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtype_enum$macrocall$1\", \"symbols\": [\"createtype_enum$macrocall$2\", \"createtype_enum$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"createtype_enum\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"kw_enum\", \"lparen\", \"createtype_enum$macrocall$1\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'create enum',\n                values: x[3],\n            }) },\n        { \"name\": \"enum_value\", \"symbols\": [\"string\"], \"postprocess\": x => (0, lexer_2.track)(x, { value: toStr(x) }) },\n        { \"name\": \"createtype_composite$macrocall$2\", \"symbols\": [\"createtype_composite_attr\"] },\n        { \"name\": \"createtype_composite$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtype_composite$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"createtype_composite$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"createtype_composite$macrocall$1$ebnf$1\", \"symbols\": [\"createtype_composite$macrocall$1$ebnf$1\", \"createtype_composite$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtype_composite$macrocall$1\", \"symbols\": [\"createtype_composite$macrocall$2\", \"createtype_composite$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"createtype_composite\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"lparen\", \"createtype_composite$macrocall$1\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'create composite type',\n                attributes: x[2],\n            }) },\n        { \"name\": \"createtype_composite_attr$ebnf$1\", \"symbols\": [\"createtable_collate\"], \"postprocess\": id },\n        { \"name\": \"createtype_composite_attr$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtype_composite_attr\", \"symbols\": [\"word\", \"data_type\", \"createtype_composite_attr$ebnf$1\"], \"postprocess\": x => {\n                return (0, lexer_2.track)(x, {\n                    name: asName(x[0]),\n                    dataType: x[1],\n                    ...x[2] ? { collate: x[2][1] } : {},\n                });\n            } },\n        { \"name\": \"altertype_statement$subexpression$1\", \"symbols\": [\"altertype_enum_add_value\"] },\n        { \"name\": \"altertype_statement$subexpression$1\", \"symbols\": [\"altertype_enum_rename\"] },\n        { \"name\": \"altertype_statement\", \"symbols\": [\"kw_alter\", \"kw_type\", \"qualified_name\", \"altertype_statement$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                name: x[2],\n                ...unwrap(x[3]),\n            }) },\n        { \"name\": \"altertype_enum_add_value\", \"symbols\": [\"kw_add\", \"kw_value\", \"enum_additional_value\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'alter enum',\n                change: {\n                    type: 'add value',\n                    add: x[2]\n                }\n            }) },\n        { \"name\": \"enum_additional_value\", \"symbols\": [\"string\"], \"postprocess\": x => (0, lexer_2.track)(x, { value: toStr(x) }) },\n        { \"name\": \"altertype_enum_rename\", \"symbols\": [\"kw_rename\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"word\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'alter enum',\n                change: {\n                    type: 'rename',\n                    to: asName(last(x))\n                }\n            }) },\n        { \"name\": \"union_left\", \"symbols\": [\"select_statement\"] },\n        { \"name\": \"union_left\", \"symbols\": [\"select_values\"] },\n        { \"name\": \"union_left\", \"symbols\": [\"selection_paren\"] },\n        { \"name\": \"union_right\", \"symbols\": [\"selection\"] },\n        { \"name\": \"union_right\", \"symbols\": [\"selection_paren\"] },\n        { \"name\": \"union_statement$subexpression$1$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)], \"postprocess\": id },\n        { \"name\": \"union_statement$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"union_statement$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_union\") ? { type: \"kw_union\" } : kw_union), \"union_statement$subexpression$1$ebnf$1\"] },\n        { \"name\": \"union_statement\", \"symbols\": [\"union_left\", \"union_statement$subexpression$1\", \"union_right\"], \"postprocess\": x => {\n                return (0, lexer_2.track)(x, {\n                    type: toStr(x[1], ' '),\n                    left: unwrap(x[0]),\n                    right: unwrap(x[2]),\n                });\n            } },\n        { \"name\": \"prepare$ebnf$1$subexpression$1\", \"symbols\": [\"lparen\", \"data_type_list\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"prepare$ebnf$1\", \"symbols\": [\"prepare$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"prepare$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"prepare\", \"symbols\": [\"kw_prepare\", \"ident\", \"prepare$ebnf$1\", (lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"statement_noprep\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'prepare',\n                name: asName(x[1]),\n                ...x[2] && { args: x[2] },\n                statement: unwrap(last(x)),\n            }) },\n        { \"name\": \"deallocate$ebnf$1\", \"symbols\": [\"kw_prepare\"], \"postprocess\": id },\n        { \"name\": \"deallocate$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"deallocate\", \"symbols\": [\"kw_deallocate\", \"deallocate$ebnf$1\", \"deallocate_target\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'deallocate',\n                target: x[2],\n            }) },\n        { \"name\": \"deallocate_target\", \"symbols\": [\"deallocate_all\"], \"postprocess\": unwrap },\n        { \"name\": \"deallocate_target\", \"symbols\": [\"deallocate_name\"], \"postprocess\": unwrap },\n        { \"name\": \"deallocate_name\", \"symbols\": [\"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, asName(x[0])) },\n        { \"name\": \"deallocate_all\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)], \"postprocess\": x => (0, lexer_2.track)(x, { option: 'all' }) },\n        { \"name\": \"create_view_statements\", \"symbols\": [\"create_view\"] },\n        { \"name\": \"create_view_statements\", \"symbols\": [\"create_materialized_view\"] },\n        { \"name\": \"create_view$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_or\") ? { type: \"kw_or\" } : kw_or), \"kw_replace\"] },\n        { \"name\": \"create_view$ebnf$1\", \"symbols\": [\"create_view$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_view$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_view$ebnf$2$subexpression$1\", \"symbols\": [\"kw_temp\"] },\n        { \"name\": \"create_view$ebnf$2$subexpression$1\", \"symbols\": [\"kw_temporary\"] },\n        { \"name\": \"create_view$ebnf$2\", \"symbols\": [\"create_view$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_view$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_view$ebnf$3\", \"symbols\": [\"kw_recursive\"], \"postprocess\": id },\n        { \"name\": \"create_view$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_view$ebnf$4$subexpression$1$macrocall$2\", \"symbols\": [\"ident\"] },\n        { \"name\": \"create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"create_view$ebnf$4$subexpression$1$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1\", \"symbols\": [\"create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1\", \"create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"create_view$ebnf$4$subexpression$1$macrocall$1\", \"symbols\": [\"create_view$ebnf$4$subexpression$1$macrocall$2\", \"create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"create_view$ebnf$4$subexpression$1\", \"symbols\": [\"lparen\", \"create_view$ebnf$4$subexpression$1$macrocall$1\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"create_view$ebnf$4\", \"symbols\": [\"create_view$ebnf$4$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_view$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_view$ebnf$5\", \"symbols\": [\"create_view_opts\"], \"postprocess\": id },\n        { \"name\": \"create_view$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_view$ebnf$6$subexpression$1$subexpression$1\", \"symbols\": [\"kw_local\"] },\n        { \"name\": \"create_view$ebnf$6$subexpression$1$subexpression$1\", \"symbols\": [\"kw_cascaded\"] },\n        { \"name\": \"create_view$ebnf$6$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"create_view$ebnf$6$subexpression$1$subexpression$1\", (lexer_1.lexerAny.has(\"kw_check\") ? { type: \"kw_check\" } : kw_check), \"kw_option\"], \"postprocess\": get(1) },\n        { \"name\": \"create_view$ebnf$6\", \"symbols\": [\"create_view$ebnf$6$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_view$ebnf$6\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_view\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"create_view$ebnf$1\", \"create_view$ebnf$2\", \"create_view$ebnf$3\", \"kw_view\", \"qualified_name\", \"create_view$ebnf$4\", \"create_view$ebnf$5\", (lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"selection\", \"create_view$ebnf$6\"], \"postprocess\": x => {\n                return (0, lexer_2.track)(x, {\n                    type: 'create view',\n                    ...x[1] && { orReplace: true },\n                    ...x[2] && { temp: true },\n                    ...x[3] && { recursive: true },\n                    name: x[5],\n                    ...x[6] && { columnNames: x[6].map(asName) },\n                    ...x[7] && { parameters: fromEntries(x[7]) },\n                    query: x[9],\n                    ...x[10] && { checkOption: toStr(x[10]) },\n                });\n            } },\n        { \"name\": \"create_view_opt\", \"symbols\": [\"ident\", (lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq), \"ident\"], \"postprocess\": ([a, _, b]) => [toStr(a), toStr(b)] },\n        { \"name\": \"create_view_opts$macrocall$2\", \"symbols\": [\"create_view_opt\"] },\n        { \"name\": \"create_view_opts$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"create_view_opts$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"create_view_opts$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"create_view_opts$macrocall$1$ebnf$1\", \"symbols\": [\"create_view_opts$macrocall$1$ebnf$1\", \"create_view_opts$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"create_view_opts$macrocall$1\", \"symbols\": [\"create_view_opts$macrocall$2\", \"create_view_opts$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"create_view_opts\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"create_view_opts$macrocall$1\"], \"postprocess\": last },\n        { \"name\": \"create_materialized_view$ebnf$1\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"create_materialized_view$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_materialized_view$ebnf$2$subexpression$1$macrocall$2\", \"symbols\": [\"ident\"] },\n        { \"name\": \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"create_materialized_view$ebnf$2$subexpression$1$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1\", \"symbols\": [\"create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1\", \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1\", \"symbols\": [\"create_materialized_view$ebnf$2$subexpression$1$macrocall$2\", \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"create_materialized_view$ebnf$2$subexpression$1\", \"symbols\": [\"lparen\", \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"create_materialized_view$ebnf$2\", \"symbols\": [\"create_materialized_view$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_materialized_view$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_materialized_view$ebnf$3\", \"symbols\": [\"create_view_opts\"], \"postprocess\": id },\n        { \"name\": \"create_materialized_view$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_materialized_view$ebnf$4$subexpression$1\", \"symbols\": [\"kw_tablespace\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"create_materialized_view$ebnf$4\", \"symbols\": [\"create_materialized_view$ebnf$4$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_materialized_view$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_materialized_view$ebnf$5$subexpression$1$ebnf$1\", \"symbols\": [\"kw_no\"], \"postprocess\": id },\n        { \"name\": \"create_materialized_view$ebnf$5$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_materialized_view$ebnf$5$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"create_materialized_view$ebnf$5$subexpression$1$ebnf$1\", \"kw_data\"] },\n        { \"name\": \"create_materialized_view$ebnf$5\", \"symbols\": [\"create_materialized_view$ebnf$5$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_materialized_view$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_materialized_view\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"kw_materialized\", \"kw_view\", \"create_materialized_view$ebnf$1\", \"qualified_name\", \"create_materialized_view$ebnf$2\", \"create_materialized_view$ebnf$3\", \"create_materialized_view$ebnf$4\", (lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"selection\", \"create_materialized_view$ebnf$5\"], \"postprocess\": x => {\n                return (0, lexer_2.track)(x, {\n                    type: 'create materialized view',\n                    ...x[3] && { ifNotExists: true },\n                    name: x[4],\n                    ...x[5] && { columnNames: x[6].map(asName) },\n                    ...x[6] && { parameters: fromEntries(x[6]) },\n                    ...x[7] && { tablespace: asName(x[7]) },\n                    query: x[9],\n                    ...x[10] && { withData: toStr(x[10][1]) !== 'no' },\n                });\n            } },\n        { \"name\": \"refresh_view_statements$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_concurrently\") ? { type: \"kw_concurrently\" } : kw_concurrently)], \"postprocess\": id },\n        { \"name\": \"refresh_view_statements$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"refresh_view_statements$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"kw_no\"], \"postprocess\": id },\n        { \"name\": \"refresh_view_statements$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"refresh_view_statements$ebnf$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"refresh_view_statements$ebnf$2$subexpression$1$ebnf$1\", \"kw_data\"] },\n        { \"name\": \"refresh_view_statements$ebnf$2\", \"symbols\": [\"refresh_view_statements$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"refresh_view_statements$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"refresh_view_statements\", \"symbols\": [\"kw_refresh\", \"kw_materialized\", \"kw_view\", \"refresh_view_statements$ebnf$1\", \"qname\", \"refresh_view_statements$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'refresh materialized view',\n                ...!!x[3] ? { concurrently: true } : {},\n                name: x[4],\n                ...!!x[5] ? { withData: toStr(x[5][1]) !== 'no' } : {},\n            }) },\n        { \"name\": \"functions_statements\", \"symbols\": [\"create_func\"] },\n        { \"name\": \"functions_statements\", \"symbols\": [\"do_stm\"] },\n        { \"name\": \"functions_statements\", \"symbols\": [\"drop_func\"] },\n        { \"name\": \"create_func$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_or\") ? { type: \"kw_or\" } : kw_or), \"kw_replace\"] },\n        { \"name\": \"create_func$ebnf$1\", \"symbols\": [\"create_func$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_func$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_func$subexpression$1$ebnf$1$macrocall$2\", \"symbols\": [\"func_argdef\"] },\n        { \"name\": \"create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"create_func$subexpression$1$ebnf$1$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1\", \"symbols\": [\"create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1\", \"create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"create_func$subexpression$1$ebnf$1$macrocall$1\", \"symbols\": [\"create_func$subexpression$1$ebnf$1$macrocall$2\", \"create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"create_func$subexpression$1$ebnf$1\", \"symbols\": [\"create_func$subexpression$1$ebnf$1$macrocall$1\"], \"postprocess\": id },\n        { \"name\": \"create_func$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_func$subexpression$1\", \"symbols\": [\"lparen\", \"create_func$subexpression$1$ebnf$1\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"create_func$ebnf$2\", \"symbols\": [\"func_spec\"] },\n        { \"name\": \"create_func$ebnf$2\", \"symbols\": [\"create_func$ebnf$2\", \"func_spec\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"create_func\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"create_func$ebnf$1\", \"kw_function\", \"qname\", \"create_func$subexpression$1\", \"create_func$ebnf$2\"], \"postprocess\": (x, rej) => {\n                var _a;\n                const specs = {};\n                for (const s of x[5]) {\n                    for (const k in s) {\n                        if (k[0] !== '_' && k in specs) {\n                            throw new Error('conflicting or redundant options ' + k);\n                        }\n                    }\n                    Object.assign(specs, s);\n                }\n                return (0, lexer_2.track)(x, {\n                    type: 'create function',\n                    ...x[1] && { orReplace: true },\n                    name: x[3],\n                    arguments: (_a = x[4]) !== null && _a !== void 0 ? _a : [],\n                    ...specs,\n                });\n            } },\n        { \"name\": \"func_argdef$ebnf$1\", \"symbols\": [\"func_argopts\"], \"postprocess\": id },\n        { \"name\": \"func_argdef$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"func_argdef$ebnf$2\", \"symbols\": [\"func_argdefault\"], \"postprocess\": id },\n        { \"name\": \"func_argdef$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"func_argdef\", \"symbols\": [\"func_argdef$ebnf$1\", \"data_type\", \"func_argdef$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                default: x[2],\n                type: x[1],\n                ...x[0],\n            }) },\n        { \"name\": \"func_argdefault\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default), \"expr\"], \"postprocess\": x => x[1]\n        },\n        { \"name\": \"func_argdefault\", \"symbols\": [(lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq), \"expr\"], \"postprocess\": x => x[1] },\n        { \"name\": \"func_argopts$ebnf$1\", \"symbols\": [\"word\"], \"postprocess\": id },\n        { \"name\": \"func_argopts$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"func_argopts\", \"symbols\": [\"func_argmod\", \"func_argopts$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                mode: toStr(x[0]),\n                ...x[1] && { name: asName(x[1]) },\n            }) },\n        { \"name\": \"func_argopts\", \"symbols\": [\"word\"], \"postprocess\": (x, rej) => {\n                const name = asName(x);\n                if (name === 'out' || name === 'inout' || name === 'variadic') {\n                    return rej; // avoid ambiguous syntax\n                }\n                return (0, lexer_2.track)(x, { name });\n            } },\n        { \"name\": \"func_argmod\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_in\") ? { type: \"kw_in\" } : kw_in)] },\n        { \"name\": \"func_argmod\", \"symbols\": [\"kw_out\"] },\n        { \"name\": \"func_argmod\", \"symbols\": [\"kw_inout\"] },\n        { \"name\": \"func_argmod\", \"symbols\": [\"kw_variadic\"] },\n        { \"name\": \"func_spec\", \"symbols\": [\"kw_language\", \"word\"], \"postprocess\": x => (0, lexer_2.track)(x, { language: asName(last(x)) }) },\n        { \"name\": \"func_spec\", \"symbols\": [\"func_purity\"], \"postprocess\": x => (0, lexer_2.track)(x, { purity: toStr(x) }) },\n        { \"name\": \"func_spec$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"codeblock\") ? { type: \"codeblock\" } : codeblock)] },\n        { \"name\": \"func_spec$subexpression$1\", \"symbols\": [\"string\"] },\n        { \"name\": \"func_spec\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"func_spec$subexpression$1\"], \"postprocess\": x => ({ code: toStr(last(x)) }) },\n        { \"name\": \"func_spec$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)], \"postprocess\": id },\n        { \"name\": \"func_spec$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"func_spec$subexpression$2\", \"symbols\": [\"word\"], \"postprocess\": kw('leakproof') },\n        { \"name\": \"func_spec\", \"symbols\": [\"func_spec$ebnf$1\", \"func_spec$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, { leakproof: !x[0] }) },\n        { \"name\": \"func_spec\", \"symbols\": [\"func_returns\"], \"postprocess\": x => (0, lexer_2.track)(x, { returns: unwrap(x) }) },\n        { \"name\": \"func_spec$subexpression$3\", \"symbols\": [\"word\"], \"postprocess\": kw('called') },\n        { \"name\": \"func_spec\", \"symbols\": [\"func_spec$subexpression$3\", \"oninp\"], \"postprocess\": () => ({ onNullInput: 'call' }) },\n        { \"name\": \"func_spec$subexpression$4\", \"symbols\": [\"word\"], \"postprocess\": kw('returns') },\n        { \"name\": \"func_spec\", \"symbols\": [\"func_spec$subexpression$4\", (lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null), \"oninp\"], \"postprocess\": () => ({ onNullInput: 'null' }) },\n        { \"name\": \"func_spec$subexpression$5\", \"symbols\": [\"word\"], \"postprocess\": kw('strict') },\n        { \"name\": \"func_spec\", \"symbols\": [\"func_spec$subexpression$5\"], \"postprocess\": () => ({ onNullInput: 'strict' }) },\n        { \"name\": \"func_purity\", \"symbols\": [\"word\"], \"postprocess\": kw('immutable') },\n        { \"name\": \"func_purity\", \"symbols\": [\"word\"], \"postprocess\": kw('stable') },\n        { \"name\": \"func_purity\", \"symbols\": [\"word\"], \"postprocess\": kw('volatile') },\n        { \"name\": \"oninp$subexpression$1\", \"symbols\": [\"word\"], \"postprocess\": kw('input') },\n        { \"name\": \"oninp\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), (lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null), \"oninp$subexpression$1\"] },\n        { \"name\": \"func_returns\", \"symbols\": [\"kw_returns\", \"data_type\"], \"postprocess\": last },\n        { \"name\": \"func_returns$macrocall$2\", \"symbols\": [\"func_ret_table_col\"] },\n        { \"name\": \"func_returns$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"func_returns$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"func_returns$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"func_returns$macrocall$1$ebnf$1\", \"symbols\": [\"func_returns$macrocall$1$ebnf$1\", \"func_returns$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"func_returns$macrocall$1\", \"symbols\": [\"func_returns$macrocall$2\", \"func_returns$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"func_returns\", \"symbols\": [\"kw_returns\", (lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table), \"lparen\", \"func_returns$macrocall$1\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                kind: 'table',\n                columns: x[3],\n            }) },\n        { \"name\": \"func_ret_table_col\", \"symbols\": [\"word\", \"data_type\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: asName(x[0]), type: x[1] }) },\n        { \"name\": \"do_stm$ebnf$1$subexpression$1\", \"symbols\": [\"kw_language\", \"word\"], \"postprocess\": last },\n        { \"name\": \"do_stm$ebnf$1\", \"symbols\": [\"do_stm$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"do_stm$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"do_stm\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_do\") ? { type: \"kw_do\" } : kw_do), \"do_stm$ebnf$1\", (lexer_1.lexerAny.has(\"codeblock\") ? { type: \"codeblock\" } : codeblock)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'do',\n                ...x[1] && { language: asName(x[1]) },\n                code: x[2].value,\n            }) },\n        { \"name\": \"drop_func$ebnf$1$subexpression$1\", \"symbols\": [\"kw_if\", \"kw_exists\"] },\n        { \"name\": \"drop_func$ebnf$1\", \"symbols\": [\"drop_func$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"drop_func$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"drop_func$ebnf$2\", \"symbols\": [\"drop_func_overload\"], \"postprocess\": id },\n        { \"name\": \"drop_func$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"drop_func\", \"symbols\": [\"kw_drop\", \"kw_function\", \"drop_func$ebnf$1\", \"qname\", \"drop_func$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'drop function',\n                ...x[2] && { ifExists: true },\n                name: x[3],\n                ...x[4] && { arguments: x[4] },\n            }) },\n        { \"name\": \"drop_func_overload$macrocall$2\", \"symbols\": [\"drop_func_overload_col\"] },\n        { \"name\": \"drop_func_overload$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"drop_func_overload$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"drop_func_overload$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"drop_func_overload$macrocall$1$ebnf$1\", \"symbols\": [\"drop_func_overload$macrocall$1$ebnf$1\", \"drop_func_overload$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"drop_func_overload$macrocall$1\", \"symbols\": [\"drop_func_overload$macrocall$2\", \"drop_func_overload$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"drop_func_overload\", \"symbols\": [\"lparen\", \"drop_func_overload$macrocall$1\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"drop_func_overload_col$ebnf$1\", \"symbols\": [\"word\"], \"postprocess\": id },\n        { \"name\": \"drop_func_overload_col$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"drop_func_overload_col\", \"symbols\": [\"drop_func_overload_col$ebnf$1\", \"qname\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: x[1],\n                ...x[0] && { name: asName(x[0]) },\n            }) },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [\"main$ebnf$1\", \"statement_separator\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"main$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"statement_separator\"] },\n        { \"name\": \"main$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"main$ebnf$2$subexpression$1$ebnf$1\", \"statement_separator\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main$ebnf$2$subexpression$1\", \"symbols\": [\"main$ebnf$2$subexpression$1$ebnf$1\", \"statement\"] },\n        { \"name\": \"main$ebnf$2\", \"symbols\": [\"main$ebnf$2\", \"main$ebnf$2$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main$ebnf$3\", \"symbols\": [] },\n        { \"name\": \"main$ebnf$3\", \"symbols\": [\"main$ebnf$3\", \"statement_separator\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main\", \"symbols\": [\"main$ebnf$1\", \"statement\", \"main$ebnf$2\", \"main$ebnf$3\"], \"postprocess\": ([_, head, _tail]) => {\n                const tail = _tail;\n                const ret = [unwrap(head), ...tail.map((x) => unwrap(x[1]))];\n                return ret.length === 1\n                    ? ret[0]\n                    : ret;\n            } },\n        { \"name\": \"statement_separator\", \"symbols\": [(lexer_1.lexerAny.has(\"semicolon\") ? { type: \"semicolon\" } : semicolon)] },\n        { \"name\": \"statement\", \"symbols\": [\"statement_noprep\"] },\n        { \"name\": \"statement\", \"symbols\": [\"prepare\"] },\n        { \"name\": \"statement\", \"symbols\": [\"deallocate\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"selection\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"createtable_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"createextension_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"createindex_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"simplestatements_all\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"insert_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"update_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"altertable_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"alterindex_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"delete_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"create_sequence_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"alter_sequence_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"drop_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"createtype_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"altertype_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"create_view_statements\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"refresh_view_statements\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"create_schema\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"raise_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"comment_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"functions_statements\"] },\n        { \"name\": \"selection\", \"symbols\": [\"select_statement\"], \"postprocess\": unwrap },\n        { \"name\": \"selection\", \"symbols\": [\"select_values\"], \"postprocess\": unwrap },\n        { \"name\": \"selection\", \"symbols\": [\"with_statement\"], \"postprocess\": unwrap },\n        { \"name\": \"selection\", \"symbols\": [\"with_recursive_statement\"], \"postprocess\": unwrap },\n        { \"name\": \"selection\", \"symbols\": [\"union_statement\"], \"postprocess\": unwrap },\n        { \"name\": \"selection_paren\", \"symbols\": [\"lparen\", \"selection\", \"rparen\"], \"postprocess\": get(1) }\n    ],\n    ParserStart: \"main\",\n};\nexports.default = grammar;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Generated automatically by nearley, version unknown\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nfunction id(d) { return d[0]; }\nconst array_lexer_1 = __webpack_require__(12);\nconst get = (i) => (x) => x[i];\nconst last = (x) => x && x[x.length - 1];\n;\n;\n;\n;\nconst grammar = {\n    Lexer: array_lexer_1.lexerAny,\n    ParserRules: [\n        { \"name\": \"main$ebnf$1\", \"symbols\": [\"elements\"], \"postprocess\": id },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"main\", \"symbols\": [(array_lexer_1.lexerAny.has(\"start_list\") ? { type: \"start_list\" } : start_list), \"main$ebnf$1\", (array_lexer_1.lexerAny.has(\"end_list\") ? { type: \"end_list\" } : end_list)], \"postprocess\": x => x[1] || [] },\n        { \"name\": \"elements$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"elements$ebnf$1$subexpression$1\", \"symbols\": [(array_lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"elt\"], \"postprocess\": last },\n        { \"name\": \"elements$ebnf$1\", \"symbols\": [\"elements$ebnf$1\", \"elements$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"elements\", \"symbols\": [\"elt\", \"elements$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"elt\", \"symbols\": [(array_lexer_1.lexerAny.has(\"value\") ? { type: \"value\" } : value)], \"postprocess\": x => x[0].value },\n        { \"name\": \"elt\", \"symbols\": [\"main\"], \"postprocess\": x => x[0] }\n    ],\n    ParserStart: \"main\",\n};\nexports.default = grammar;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lexerAny = exports.lexer = void 0;\nconst moo_1 = __webpack_require__(0);\n// build lexer\nexports.lexer = (0, moo_1.compile)({\n    valueString: {\n        match: /\"(?:\\\\[\"\\\\]|[^\\n\"\\\\])*\"/,\n        value: x => JSON.parse(x),\n        type: x => 'value',\n    },\n    valueRaw: {\n        match: /[^\\s,\\{\\}\"](?:[^,\\{\\}\"]*[^\\s,\\{\\}\"])?/,\n        type: () => 'value',\n    },\n    comma: ',',\n    space: { match: /[\\s\\t\\n\\v\\f\\r]+/, lineBreaks: true, },\n    start_list: '{',\n    end_list: '}',\n});\nexports.lexer.next = (next => () => {\n    let tok;\n    while ((tok = next.call(exports.lexer)) && (tok.type === 'space')) {\n    }\n    return tok;\n})(exports.lexer.next);\nexports.lexerAny = exports.lexer;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Generated automatically by nearley, version unknown\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nfunction id(d) { return d[0]; }\nconst geometric_lexer_1 = __webpack_require__(14);\nconst get = (i) => (x) => x[i];\nconst last = (x) => x && x[x.length - 1];\nfunction unwrap(e) {\n    if (Array.isArray(e) && e.length === 1) {\n        e = unwrap(e[0]);\n    }\n    if (Array.isArray(e) && !e.length) {\n        return null;\n    }\n    return e;\n}\n;\n;\n;\n;\nconst grammar = {\n    Lexer: geometric_lexer_1.lexerAny,\n    ParserRules: [\n        { \"name\": \"number$subexpression$1\", \"symbols\": [\"float\"] },\n        { \"name\": \"number$subexpression$1\", \"symbols\": [\"int\"] },\n        { \"name\": \"number\", \"symbols\": [\"number$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"float\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"float\") ? { type: \"float\" } : float)], \"postprocess\": args => parseFloat(unwrap(args)) },\n        { \"name\": \"int\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)], \"postprocess\": arg => parseInt(unwrap(arg), 10) },\n        { \"name\": \"comma\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma)], \"postprocess\": id },\n        { \"name\": \"point$macrocall$2\", \"symbols\": [\"point_content\"] },\n        { \"name\": \"point$macrocall$1$subexpression$1\", \"symbols\": [\"point$macrocall$2\"] },\n        { \"name\": \"point$macrocall$1$subexpression$1\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"lparen\") ? { type: \"lparen\" } : lparen), \"point$macrocall$2\", (geometric_lexer_1.lexerAny.has(\"rparen\") ? { type: \"rparen\" } : rparen)], \"postprocess\": get(1) },\n        { \"name\": \"point$macrocall$1\", \"symbols\": [\"point$macrocall$1$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"point\", \"symbols\": [\"point$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"point_content\", \"symbols\": [\"number\", \"comma\", \"number\"], \"postprocess\": x => ({ x: x[0], y: x[2] }) },\n        { \"name\": \"line\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"lcurl\") ? { type: \"lcurl\" } : lcurl), \"number\", \"comma\", \"number\", \"comma\", \"number\", (geometric_lexer_1.lexerAny.has(\"rcurl\") ? { type: \"rcurl\" } : rcurl)], \"postprocess\": x => ({\n                a: x[1],\n                b: x[3],\n                c: x[5],\n            }) },\n        { \"name\": \"box\", \"symbols\": [\"closed_path\"], \"postprocess\": ([x], rej) => {\n                if (x.length !== 2) {\n                    return rej;\n                }\n                return x;\n            } },\n        { \"name\": \"lseg\", \"symbols\": [\"path\"], \"postprocess\": ([x], rej) => {\n                if (x.path.length !== 2) {\n                    return rej;\n                }\n                return x.path;\n            } },\n        { \"name\": \"path\", \"symbols\": [\"open_path\"], \"postprocess\": ([path]) => ({ closed: false, path }) },\n        { \"name\": \"path\", \"symbols\": [\"closed_path\"], \"postprocess\": ([path]) => ({ closed: true, path }) },\n        { \"name\": \"open_path$macrocall$2\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"lbracket\") ? { type: \"lbracket\" } : lbracket)] },\n        { \"name\": \"open_path$macrocall$3\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"rbracket\") ? { type: \"rbracket\" } : rbracket)] },\n        { \"name\": \"open_path$macrocall$1$macrocall$2\", \"symbols\": [\"point\"] },\n        { \"name\": \"open_path$macrocall$1$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"open_path$macrocall$1$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"open_path$macrocall$1$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"open_path$macrocall$1$macrocall$1$ebnf$1\", \"symbols\": [\"open_path$macrocall$1$macrocall$1$ebnf$1\", \"open_path$macrocall$1$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"open_path$macrocall$1$macrocall$1\", \"symbols\": [\"open_path$macrocall$1$macrocall$2\", \"open_path$macrocall$1$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"open_path$macrocall$1\", \"symbols\": [\"open_path$macrocall$2\", \"open_path$macrocall$1$macrocall$1\", \"open_path$macrocall$3\"], \"postprocess\": get(1) },\n        { \"name\": \"open_path\", \"symbols\": [\"open_path$macrocall$1\"], \"postprocess\": last },\n        { \"name\": \"closed_path$subexpression$1$macrocall$2\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"lparen\") ? { type: \"lparen\" } : lparen)] },\n        { \"name\": \"closed_path$subexpression$1$macrocall$3\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"rparen\") ? { type: \"rparen\" } : rparen)] },\n        { \"name\": \"closed_path$subexpression$1$macrocall$1$macrocall$2\", \"symbols\": [\"point\"] },\n        { \"name\": \"closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"closed_path$subexpression$1$macrocall$1$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1\", \"symbols\": [\"closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1\", \"closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"closed_path$subexpression$1$macrocall$1$macrocall$1\", \"symbols\": [\"closed_path$subexpression$1$macrocall$1$macrocall$2\", \"closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"closed_path$subexpression$1$macrocall$1\", \"symbols\": [\"closed_path$subexpression$1$macrocall$2\", \"closed_path$subexpression$1$macrocall$1$macrocall$1\", \"closed_path$subexpression$1$macrocall$3\"], \"postprocess\": get(1) },\n        { \"name\": \"closed_path$subexpression$1\", \"symbols\": [\"closed_path$subexpression$1$macrocall$1\"], \"postprocess\": last },\n        { \"name\": \"closed_path$subexpression$1$macrocall$5\", \"symbols\": [\"point\"] },\n        { \"name\": \"closed_path$subexpression$1$macrocall$4$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"closed_path$subexpression$1$macrocall$4$ebnf$1$subexpression$1\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"closed_path$subexpression$1$macrocall$5\"], \"postprocess\": last },\n        { \"name\": \"closed_path$subexpression$1$macrocall$4$ebnf$1\", \"symbols\": [\"closed_path$subexpression$1$macrocall$4$ebnf$1\", \"closed_path$subexpression$1$macrocall$4$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"closed_path$subexpression$1$macrocall$4\", \"symbols\": [\"closed_path$subexpression$1$macrocall$5\", \"closed_path$subexpression$1$macrocall$4$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"closed_path$subexpression$1\", \"symbols\": [\"closed_path$subexpression$1$macrocall$4\"], \"postprocess\": last },\n        { \"name\": \"closed_path\", \"symbols\": [\"closed_path$subexpression$1\"], \"postprocess\": get(0) },\n        { \"name\": \"polygon\", \"symbols\": [\"closed_path\"], \"postprocess\": get(0) },\n        { \"name\": \"circle_body\", \"symbols\": [\"point\", \"comma\", \"number\"], \"postprocess\": x => ({ c: x[0], r: x[2] }) },\n        { \"name\": \"circle$subexpression$1$macrocall$2\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"lcomp\") ? { type: \"lcomp\" } : lcomp)] },\n        { \"name\": \"circle$subexpression$1$macrocall$3\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"rcomp\") ? { type: \"rcomp\" } : rcomp)] },\n        { \"name\": \"circle$subexpression$1$macrocall$1\", \"symbols\": [\"circle$subexpression$1$macrocall$2\", \"circle_body\", \"circle$subexpression$1$macrocall$3\"], \"postprocess\": get(1) },\n        { \"name\": \"circle$subexpression$1\", \"symbols\": [\"circle$subexpression$1$macrocall$1\"] },\n        { \"name\": \"circle$subexpression$1$macrocall$5\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"lparen\") ? { type: \"lparen\" } : lparen)] },\n        { \"name\": \"circle$subexpression$1$macrocall$6\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"rparen\") ? { type: \"rparen\" } : rparen)] },\n        { \"name\": \"circle$subexpression$1$macrocall$4\", \"symbols\": [\"circle$subexpression$1$macrocall$5\", \"circle_body\", \"circle$subexpression$1$macrocall$6\"], \"postprocess\": get(1) },\n        { \"name\": \"circle$subexpression$1\", \"symbols\": [\"circle$subexpression$1$macrocall$4\"] },\n        { \"name\": \"circle$subexpression$1\", \"symbols\": [\"circle_body\"] },\n        { \"name\": \"circle\", \"symbols\": [\"circle$subexpression$1\"], \"postprocess\": unwrap }\n    ],\n    ParserStart: \"number\",\n};\nexports.default = grammar;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lexerAny = exports.lexer = void 0;\nconst moo_1 = __webpack_require__(0);\n// build lexer\nexports.lexer = (0, moo_1.compile)({\n    comma: ',',\n    space: { match: /[\\s\\t\\n\\v\\f\\r]+/, lineBreaks: true, },\n    int: /\\-?\\d+(?![\\.\\d])/,\n    float: /\\-?(?:(?:\\d*\\.\\d+)|(?:\\d+\\.\\d*))/,\n    lcurl: '{',\n    rcurl: '}',\n    lparen: '(',\n    rparen: ')',\n    lbracket: '[',\n    rbracket: ']',\n    lcomp: '<',\n    rcomp: '>',\n});\nexports.lexer.next = (next => () => {\n    let tok;\n    while ((tok = next.call(exports.lexer)) && (tok.type === 'space')) {\n    }\n    return tok;\n})(exports.lexer.next);\nexports.lexerAny = exports.lexer;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Generated automatically by nearley, version unknown\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nfunction id(d) { return d[0]; }\nconst interval_lexer_1 = __webpack_require__(16);\n;\n;\n;\n;\nconst grammar = {\n    Lexer: interval_lexer_1.lexerAny,\n    ParserRules: [\n        { \"name\": \"main$ebnf$1\", \"symbols\": [\"elt\"] },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [\"main$ebnf$1\", \"elt\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main\", \"symbols\": [\"main$ebnf$1\"], \"postprocess\": ([elts]) => {\n                // check unicity\n                const s = new Set();\n                for (const e of elts) {\n                    const k = typeof e[1] === 'number'\n                        ? e[0]\n                        : 'time';\n                    if (s.has(k)) {\n                        return 'invalid';\n                    }\n                    s.add(k);\n                }\n                return elts;\n            } },\n        { \"name\": \"elt\", \"symbols\": [\"time\"] },\n        { \"name\": \"elt\", \"symbols\": [\"num\", \"unit\"], \"postprocess\": ([[n], u]) => {\n                u = u[0].type;\n                return [u, n];\n            } },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"years\") ? { type: \"years\" } : years)] },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"months\") ? { type: \"months\" } : months)] },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"days\") ? { type: \"days\" } : days)] },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"hours\") ? { type: \"hours\" } : hours)] },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"minutes\") ? { type: \"minutes\" } : minutes)] },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"seconds\") ? { type: \"seconds\" } : seconds)] },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"milliseconds\") ? { type: \"milliseconds\" } : milliseconds)] },\n        { \"name\": \"num\", \"symbols\": [\"int\"] },\n        { \"name\": \"num\", \"symbols\": [\"float\"] },\n        { \"name\": \"uint\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)], \"postprocess\": ([x]) => parseInt(x, 10) },\n        { \"name\": \"int$ebnf$1$subexpression$1\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"neg\") ? { type: \"neg\" } : neg)] },\n        { \"name\": \"int$ebnf$1\", \"symbols\": [\"int$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"int$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"int\", \"symbols\": [\"int$ebnf$1\", (interval_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)], \"postprocess\": ([neg, x]) => parseInt(x, 10) * (neg ? -1 : 1) },\n        { \"name\": \"float$ebnf$1$subexpression$1\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"neg\") ? { type: \"neg\" } : neg)] },\n        { \"name\": \"float$ebnf$1\", \"symbols\": [\"float$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"float$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"float$ebnf$2\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)], \"postprocess\": id },\n        { \"name\": \"float$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"float\", \"symbols\": [\"float$ebnf$1\", \"float$ebnf$2\", (interval_lexer_1.lexerAny.has(\"dot\") ? { type: \"dot\" } : dot), (interval_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)], \"postprocess\": ([neg, ...v]) => parseFloat(v.map(v => v ? v.text : '0').join('')) * (neg ? -1 : 1) },\n        { \"name\": \"time$ebnf$1$subexpression$1\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"colon\") ? { type: \"colon\" } : colon), \"uint\"] },\n        { \"name\": \"time$ebnf$1\", \"symbols\": [\"time$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"time$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"time$ebnf$2$subexpression$1\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"dot\") ? { type: \"dot\" } : dot), (interval_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)] },\n        { \"name\": \"time$ebnf$2\", \"symbols\": [\"time$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"time$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"time\", \"symbols\": [\"uint\", (interval_lexer_1.lexerAny.has(\"colon\") ? { type: \"colon\" } : colon), \"uint\", \"time$ebnf$1\", \"time$ebnf$2\"], \"postprocess\": ([a, _, b, c, d]) => {\n                c = c && c[1];\n                d = d && d[1];\n                const ret = typeof c === 'number' ? [\n                    ['hours', a],\n                    ['minutes', b],\n                    ['seconds', c],\n                ] : [\n                    ['minutes', a],\n                    ['seconds', b],\n                ];\n                if (d) {\n                    ret.push(['milliseconds', parseFloat('0.' + d) * 1000]);\n                }\n                return ret;\n            } }\n    ],\n    ParserStart: \"main\",\n};\nexports.default = grammar;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lexerAny = exports.lexer = void 0;\nconst moo_1 = __webpack_require__(0);\n// build lexer\nexports.lexer = (0, moo_1.compile)({\n    int: /\\d+/,\n    neg: '-',\n    dot: '.',\n    years: /(?:y|yrs?|years?)\\b/,\n    months: /(?:mon(?:th)?s?)\\b/,\n    days: /(?:d|days?)\\b/,\n    hours: /(?:h|hrs?|hours?)\\b/,\n    minutes: /(?:m|mins?|minutes?)\\b/,\n    seconds: /(?:s|secs?|seconds?)\\b/,\n    milliseconds: /(?:ms|milliseconds?)\\b/,\n    space: { match: /[\\s\\t\\n\\v\\f\\r]+/, lineBreaks: true, },\n    colon: ':',\n});\nexports.lexer.next = (next => () => {\n    let tok;\n    while ((tok = next.call(exports.lexer)) && (tok.type === 'space')) {\n    }\n    return tok;\n})(exports.lexer.next);\nexports.lexerAny = exports.lexer;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Generated automatically by nearley, version unknown\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nfunction id(d) { return d[0]; }\nconst interval_iso_lexer_1 = __webpack_require__(18);\n;\n;\n;\n;\nconst grammar = {\n    Lexer: interval_iso_lexer_1.lexerAny,\n    ParserRules: [\n        { \"name\": \"num\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)] },\n        { \"name\": \"num\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"float\") ? { type: \"float\" } : float)] },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [\"main$ebnf$1\", \"long\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"short\"] },\n        { \"name\": \"main$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"main$ebnf$2$subexpression$1$ebnf$1\", \"short\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main$ebnf$2$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"T\") ? { type: \"T\" } : T), \"main$ebnf$2$subexpression$1$ebnf$1\"] },\n        { \"name\": \"main$ebnf$2\", \"symbols\": [\"main$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"main$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"main\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"P\") ? { type: \"P\" } : P), \"main$ebnf$1\", \"main$ebnf$2\"], \"postprocess\": ([_, a, b], rej) => {\n                b = !b ? [] : b[1];\n                { }\n                if (!a.length && !b.length) {\n                    return rej;\n                }\n                return !a.length ? b\n                    : !b.length ? a\n                        : [...a, ...b];\n            } },\n        { \"name\": \"long$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"Y\") ? { type: \"Y\" } : Y)] },\n        { \"name\": \"long$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"M\") ? { type: \"M\" } : M)] },\n        { \"name\": \"long$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"W\") ? { type: \"W\" } : W)] },\n        { \"name\": \"long$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"D\") ? { type: \"D\" } : D)] },\n        { \"name\": \"long\", \"symbols\": [\"num\", \"long$subexpression$1\"], \"postprocess\": ([n, u]) => {\n                n = parseFloat(n[0].value);\n                u = u[0].type;\n                switch (u) {\n                    case 'Y':\n                        return ['years', n];\n                    case 'M':\n                        return ['months', n];\n                    case 'W':\n                        return ['days', n * 7];\n                    case 'D':\n                        return ['days', n];\n                    default:\n                        throw new Error('Unexpected unit ' + u);\n                }\n            } },\n        { \"name\": \"short$ebnf$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"T\") ? { type: \"T\" } : T)], \"postprocess\": id },\n        { \"name\": \"short$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"short$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"H\") ? { type: \"H\" } : H)] },\n        { \"name\": \"short$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"M\") ? { type: \"M\" } : M)] },\n        { \"name\": \"short$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"S\") ? { type: \"S\" } : S)] },\n        { \"name\": \"short\", \"symbols\": [\"short$ebnf$1\", \"num\", \"short$subexpression$1\"], \"postprocess\": ([_, n, u]) => {\n                n = parseFloat(n[0].value);\n                u = u[0].type;\n                switch (u) {\n                    case 'H':\n                        return ['hours', n];\n                    case 'M':\n                        return ['minutes', n];\n                    case 'S':\n                        return ['seconds', n];\n                    default:\n                        throw new Error('Unexpected unit ' + u);\n                }\n            } }\n    ],\n    ParserStart: \"num\",\n};\nexports.default = grammar;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lexerAny = exports.lexer = void 0;\nconst moo_1 = __webpack_require__(0);\n// build lexer\nexports.lexer = (0, moo_1.compile)({\n    int: /\\-?\\d+(?![\\.\\d])/,\n    float: /\\-?(?:(?:\\d*\\.\\d+)|(?:\\d+\\.\\d*))/,\n    P: 'P',\n    Y: 'Y',\n    M: 'M',\n    W: 'W',\n    D: 'D',\n    H: 'H',\n    S: 'S',\n    T: 'T',\n});\nexports.lexerAny = exports.lexer;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toSql = void 0;\nconst ast_mapper_1 = __webpack_require__(2);\nconst ast_visitor_1 = __webpack_require__(5);\nconst utils_1 = __webpack_require__(6);\nconst pg_escape_1 = __webpack_require__(20);\nconst keywords_1 = __webpack_require__(3);\nconst kwSet = new Set(keywords_1.sqlKeywords.map(x => x.toLowerCase()));\nlet ret = [];\nfunction name(nm) {\n    return ident(nm.name);\n}\nfunction ident(nm, forceDoubleQuote) {\n    if (!forceDoubleQuote) {\n        // only add quotes if has upper cases, or if it is a keyword.\n        const low = nm.toLowerCase();\n        if (low === nm && !kwSet.has(low) && /^[a-z][a-z0-9_]*$/.test(low)) {\n            return nm;\n        }\n    }\n    return '\"' + nm + '\"';\n}\nfunction list(elems, act, addParen) {\n    if (addParen) {\n        ret.push('(');\n    }\n    let first = true;\n    for (const e of elems) {\n        if (!first) {\n            ret.push(', ');\n        }\n        first = false;\n        act(e);\n    }\n    if (addParen) {\n        ret.push(')');\n    }\n}\nfunction addConstraint(c, m) {\n    switch (c.type) {\n        case 'foreign key':\n            ret.push(' foreign key (', ...c.localColumns.map(name).join(', '), ')');\n        // 👈 There is no \"break\" here... that's not an error, we want to fall throught the 'reference' case\n        case 'reference':\n            ret.push(' REFERENCES ');\n            m.tableRef(c.foreignTable);\n            ret.push('(', ...c.foreignColumns.map(name).join(', '), ') ');\n            if (c.match) {\n                ret.push(' MATCH ', c.match.toUpperCase());\n            }\n            if (c.onDelete) {\n                ret.push(' ON DELETE ', c.onDelete);\n            }\n            if (c.onUpdate) {\n                ret.push(' ON UPDATE ', c.onUpdate);\n            }\n            break;\n        case 'primary key':\n        case 'unique':\n            ret.push(' ', c.type, ' ');\n            if ('columns' in c) {\n                ret.push('(', ...c.columns.map(name).join(', '), ') ');\n            }\n            break;\n        case 'check':\n            ret.push(' check ');\n            m.expr(c.expr);\n            break;\n        case 'not null':\n        case 'null':\n            ret.push(' ', c.type, ' ');\n            break;\n        case 'default':\n            ret.push(' default ');\n            m.expr(c.default);\n            break;\n        case 'add generated':\n            ret.push(' GENERATED ');\n            visitGenerated(m, c);\n            break;\n        default:\n            throw utils_1.NotSupported.never(c);\n    }\n    ret.push(' ');\n}\nfunction visitQualifiedName(cs, forceDoubleQuote) {\n    if (cs.schema) {\n        ret.push(ident(cs.schema), '.');\n    }\n    ret.push(ident(cs.name, forceDoubleQuote), ' ');\n}\nfunction visitQualifiedNameAliased(cs) {\n    visitQualifiedName(cs);\n    if (cs.alias) {\n        ret.push(' AS ', ident(cs.alias), ' ');\n    }\n}\nfunction visitOrderBy(m, orderBy) {\n    ret.push(' ORDER BY ');\n    list(orderBy, e => {\n        m.expr(e.by);\n        if (e.order) {\n            ret.push(' ', e.order, ' ');\n        }\n        if (e.nulls) {\n            ret.push(' NULLS ', e.nulls, ' ');\n        }\n    }, false);\n}\nfunction visitSetVal(set) {\n    switch (set.type) {\n        case 'default':\n            ret.push('DEFAULT ');\n            break;\n        case 'identifier':\n            ret.push(set.name);\n            break;\n        case 'list':\n            let first = true;\n            for (const v of set.values) {\n                if (!first) {\n                    ret.push(', ');\n                }\n                first = false;\n                visitSetVal(v);\n            }\n            break;\n        case 'value':\n            ret.push(typeof set.value === 'number' ? set.value.toString() : (0, pg_escape_1.literal)(set.value));\n            break;\n        default:\n            throw utils_1.NotSupported.never(set);\n    }\n}\nfunction visitGenerated(m, alter) {\n    if (alter.always) {\n        ret.push(alter.always.toUpperCase(), ' ');\n    }\n    ret.push('AS IDENTITY ');\n    if (alter.sequence) {\n        ret.push('(');\n        if (alter.sequence.name) {\n            ret.push('SEQUENCE NAME ');\n            visitQualifiedName(alter.sequence.name);\n            ret.push(' ');\n        }\n        visitSeqOpts(m, alter.sequence);\n        ret.push(') ');\n    }\n}\nfunction visitSeqOpts(m, cs) {\n    if (cs.as) {\n        ret.push('AS ');\n        m.dataType(cs.as);\n        ret.push(' ');\n    }\n    if (typeof cs.incrementBy === 'number') {\n        ret.push('INCREMENT BY ', cs.incrementBy.toString(), ' ');\n    }\n    if (cs.minValue === 'no minvalue') {\n        ret.push('NO MINVALUE ');\n    }\n    if (typeof cs.minValue === 'number') {\n        ret.push('MINVALUE ', cs.minValue.toString(), ' ');\n    }\n    if (cs.maxValue === 'no maxvalue') {\n        ret.push('NO MAXVALUE ');\n    }\n    if (typeof cs.maxValue === 'number') {\n        ret.push('MAXVALUE ', cs.maxValue.toString(), ' ');\n    }\n    if (typeof cs.startWith === 'number') {\n        ret.push('START WITH ', cs.startWith.toString(), ' ');\n    }\n    if (typeof cs.cache === 'number') {\n        ret.push('CACHE ', cs.cache.toString(), ' ');\n    }\n    if (cs.cycle) {\n        ret.push(cs.cycle, ' ');\n    }\n    if (cs.ownedBy === 'none') {\n        ret.push('OWNED BY NONE ');\n    }\n    else if (cs.ownedBy) {\n        ret.push('OWNED BY ');\n        visitQColumn(cs.ownedBy);\n    }\n    if ('restart' in cs) {\n        if (cs.restart === true) {\n            ret.push('RESTART ');\n        }\n        else if (cs.restart) {\n            ret.push('RESTART WITH ', cs.restart.toString(), ' ');\n        }\n    }\n}\nfunction visitQColumn(col) {\n    if (col.schema) {\n        ret.push(ident(col.schema), '.');\n    }\n    ret.push(ident(col.table), '.', ident(col.column), ' ');\n}\nfunction join(m, j, tbl) {\n    if (!j) {\n        tbl();\n        return;\n    }\n    ret.push(j.type, ' ');\n    tbl();\n    if (j.on) {\n        ret.push('ON ');\n        m.expr(j.on);\n    }\n    if (j.using) {\n        ret.push('USING (');\n        list(j.using, x => ret.push(name(x)), false);\n        ret.push(') ');\n    }\n    ret.push(' ');\n}\nfunction visitOp(v) {\n    if (v.opSchema) {\n        ret.push(' operator(', ident(v.opSchema), '.', v.op, ') ');\n    }\n    else {\n        ret.push(' ', v.op, ' ');\n    }\n}\nconst visitor = (0, ast_visitor_1.astVisitor)(m => ({\n    addColumn: (...args) => {\n        ret.push(' ADD COLUMN ');\n        if (args[0].ifNotExists) {\n            ret.push('IF NOT EXISTS ');\n        }\n        m.super().addColumn(...args);\n    },\n    createExtension: e => {\n        ret.push('CREATE EXTENSION ');\n        if (e.ifNotExists) {\n            ret.push(' IF NOT EXISTS ');\n        }\n        ret.push(name(e.extension));\n        if (!e.from && !e.version && !e.schema) {\n            return;\n        }\n        ret.push(' WITH');\n        if (e.schema) {\n            ret.push(' SCHEMA ', name(e.schema));\n        }\n        if (e.version) {\n            ret.push(' VERSION ', (0, pg_escape_1.literal)(e.version.value));\n        }\n        if (e.from) {\n            ret.push(' FROM ', (0, pg_escape_1.literal)(e.from.value));\n        }\n    },\n    tablespace: t => {\n        ret.push('TABLESPACE ', name(t.tablespace));\n    },\n    addConstraint: c => {\n        ret.push(' ADD ');\n        const cname = c.constraint.constraintName;\n        if (cname) {\n            ret.push(' CONSTRAINT ', name(cname), ' ');\n        }\n        addConstraint(c.constraint, m);\n    },\n    alterColumn: (c, t) => {\n        ret.push(' ALTER COLUMN ', name(c.column), ' ');\n        m.super().alterColumn(c, t);\n    },\n    setColumnDefault: (a, t, c) => {\n        ret.push(' SET DEFAULT ');\n        m.expr(a.default);\n        if (a.updateExisting) {\n            throw new Error('Not implemented: updateExisting on set column default');\n        }\n    },\n    createEnum: t => {\n        ret.push('CREATE TYPE ');\n        visitQualifiedName(t.name);\n        ret.push(' AS ENUM ');\n        list(t.values, x => ret.push((0, pg_escape_1.literal)(x.value)), true);\n        ret.push(' ');\n    },\n    alterEnum: t => {\n        ret.push('ALTER TYPE ');\n        visitQualifiedName(t.name);\n        if (t.change.type === 'rename') {\n            ret.push(' RENAME TO ');\n            visitQualifiedName(t.change.to);\n        }\n        else {\n            ret.push(' ADD VALUE ', (0, pg_escape_1.literal)(t.change.add.value));\n        }\n    },\n    createCompositeType: c => {\n        ret.push('CREATE TYPE ');\n        visitQualifiedName(c.name);\n        ret.push(' AS ');\n        list(c.attributes, x => {\n            ret.push(name(x.name), ' ');\n            m.dataType(x.dataType);\n            if (x.collate) {\n                ret.push('COLLATE ');\n                visitQualifiedName(x.collate);\n            }\n        }, true);\n        ret.push(' ');\n    },\n    setTableOwner: o => {\n        ret.push(' OWNER TO ', name(o.to));\n    },\n    alterColumnSimple: c => ret.push(c.type),\n    alterColumnAddGenerated: (alter) => {\n        ret.push(' ADD GENERATED ');\n        visitGenerated(m, alter);\n    },\n    setColumnType: t => {\n        ret.push(' SET DATA TYPE ');\n        m.dataType(t.dataType);\n        ret.push(' ');\n    },\n    alterTable: t => {\n        ret.push('ALTER TABLE ');\n        if (t.ifExists) {\n            ret.push(' IF EXISTS ');\n        }\n        if (t.only) {\n            ret.push(' ONLY ');\n        }\n        visitQualifiedNameAliased(t.table);\n        list(t.changes, change => m.tableAlteration(change, t.table), false);\n    },\n    alterIndex: t => {\n        ret.push('ALTER INDEX ');\n        if (t.ifExists) {\n            ret.push(' IF EXISTS ');\n        }\n        visitQualifiedNameAliased(t.index);\n        switch (t.change.type) {\n            case 'rename':\n                ret.push(' RENAME TO ');\n                visitQualifiedName(t.change.to);\n                ret.push(' ');\n                break;\n            case 'set tablespace':\n                ret.push(' SET TABLESPACE ');\n                visitQualifiedName(t.change.tablespace);\n                ret.push(' ');\n                break;\n            default:\n                throw utils_1.NotSupported.never(t.change, 'Alter index type not supported: ');\n        }\n    },\n    tableAlteration: (change, table) => {\n        switch (change.type) {\n            case 'add column':\n                return m.addColumn(change, table);\n            case 'add constraint':\n                return m.addConstraint(change, table);\n            case 'alter column':\n                return m.alterColumn(change, table);\n            case 'rename':\n                return m.renameTable(change, table);\n            case 'rename column':\n                return m.renameColumn(change, table);\n            case 'rename constraint':\n                return m.renameConstraint(change, table);\n            case 'drop column':\n                return m.dropColumn(change, table);\n            case 'drop constraint':\n                return m.dropConstraint(change, table);\n            case 'owner':\n                return m.setTableOwner(change, table);\n            default:\n                throw utils_1.NotSupported.never(change);\n        }\n    },\n    array: v => {\n        ret.push(v.type === 'array' ? 'ARRAY[' : '(');\n        list(v.expressions, e => m.expr(e), false);\n        ret.push(v.type === 'array' ? ']' : ')');\n    },\n    arrayIndex: v => {\n        m.expr(v.array);\n        ret.push('[');\n        m.expr(v.index);\n        ret.push('] ');\n    },\n    expr: e => {\n        if (e.type === 'ref') {\n            m.ref(e);\n            return;\n        }\n        // lists can become incorrect with an additional set of parentheses\n        if (e.type === 'list') {\n            m.super().expr(e);\n            return;\n        }\n        // this forces to respect precedence\n        // (however, it will introduce lots of unecessary parenthesis)\n        ret.push('(');\n        m.super().expr(e);\n        ret.push(')');\n    },\n    callOverlay: o => {\n        ret.push('OVERLAY(');\n        m.expr(o.value);\n        ret.push(' PLACING ');\n        m.expr(o.placing);\n        ret.push(' FROM ');\n        m.expr(o.from);\n        if (o.for) {\n            ret.push(' FOR ');\n            m.expr(o.for);\n        }\n        ret.push(')');\n    },\n    callSubstring: s => {\n        ret.push('SUBSTRING(');\n        m.expr(s.value);\n        if (s.from) {\n            ret.push(' FROM ');\n            m.expr(s.from);\n        }\n        if (s.for) {\n            ret.push(' FOR ');\n            m.expr(s.for);\n        }\n        ret.push(')');\n    },\n    binary: v => {\n        m.expr(v.left);\n        visitOp(v);\n        m.expr(v.right);\n    },\n    call: v => {\n        visitQualifiedName(v.function);\n        ret.push('(');\n        if (v.distinct) {\n            ret.push(v.distinct, ' ');\n        }\n        list(v.args, e => m.expr(e), false);\n        if (v.orderBy) {\n            visitOrderBy(m, v.orderBy);\n        }\n        ret.push(') ');\n        if (v.filter) {\n            ret.push('filter (where ');\n            m.expr(v.filter);\n            ret.push(') ');\n        }\n        if (v.withinGroup) {\n            ret.push('WITHIN GROUP (');\n            visitOrderBy(m, [v.withinGroup]);\n            ret.push(') ');\n        }\n        if (v.over) {\n            ret.push('over (');\n            if (v.over.partitionBy) {\n                ret.push('PARTITION BY ');\n                list(v.over.partitionBy, x => m.expr(x), false);\n                ret.push(' ');\n            }\n            if (v.over.orderBy) {\n                visitOrderBy(m, v.over.orderBy);\n                ret.push(' ');\n            }\n            ret.push(') ');\n        }\n    },\n    case: c => {\n        ret.push('CASE ');\n        if (c.value) {\n            m.expr(c.value);\n        }\n        for (const e of c.whens) {\n            ret.push(' WHEN ');\n            m.expr(e.when);\n            ret.push(' THEN ');\n            m.expr(e.value);\n        }\n        if (c.else) {\n            ret.push(' ELSE ');\n            m.expr(c.else);\n        }\n        ret.push(' END ');\n    },\n    cast: c => {\n        m.expr(c.operand);\n        ret.push('::');\n        m.dataType(c.to);\n    },\n    constant: c => {\n        switch (c.type) {\n            case 'boolean':\n                ret.push(c.value ? 'true' : 'false');\n                break;\n            case 'integer':\n                ret.push(c.value.toString(10));\n                break;\n            case 'numeric':\n                ret.push(c.value.toString());\n                if (Number.isInteger(c.value)) {\n                    ret.push('.');\n                }\n                break;\n            case 'null':\n                ret.push('null');\n                break;\n            case 'constant':\n                break;\n            case 'string':\n                ret.push((0, pg_escape_1.literal)(c.value));\n                break;\n            default:\n                throw utils_1.NotSupported.never(c);\n        }\n    },\n    valueKeyword: v => {\n        ret.push(v.keyword, ' ');\n    },\n    comment: c => {\n        ret.push('COMMENT ON ', c.on.type.toUpperCase(), ' ');\n        switch (c.on.type) {\n            case 'column':\n                visitQColumn(c.on.column);\n                break;\n            default:\n                visitQualifiedName(c.on.name);\n                break;\n        }\n        ret.push(' IS ', (0, pg_escape_1.literal)(c.comment), ' ');\n    },\n    extract: v => {\n        ret.push('EXTRACT (', v.field.name.toUpperCase(), ' FROM ');\n        m.expr(v.from);\n        ret.push(') ');\n    },\n    createColumn: c => {\n        var _a;\n        ret.push(name(c.name), ' ');\n        m.dataType(c.dataType);\n        ret.push(' ');\n        if (c.collate) {\n            ret.push('COLLATE ');\n            visitQualifiedName(c.collate);\n        }\n        for (const cst of (_a = c.constraints) !== null && _a !== void 0 ? _a : []) {\n            m.constraint(cst);\n        }\n    },\n    begin: beg => {\n        ret.push('BEGIN ');\n        if (beg.isolationLevel) {\n            ret.push('ISOLATION LEVEL ', beg.isolationLevel.toUpperCase(), ' ');\n        }\n        if (beg.writeable) {\n            ret.push(beg.writeable.toUpperCase(), ' ');\n        }\n        if (typeof beg.deferrable === 'boolean') {\n            if (!beg.deferrable) {\n                ret.push('NOT ');\n            }\n            ret.push('DEFERRABLE ');\n        }\n    },\n    alterSequence: cs => {\n        ret.push('ALTER SEQUENCE ');\n        if (cs.ifExists) {\n            ret.push('IF EXISTS ');\n        }\n        visitQualifiedName(cs.name);\n        switch (cs.change.type) {\n            case 'set options':\n                visitSeqOpts(m, cs.change);\n                break;\n            case 'rename':\n                ret.push('RENAME TO ', name(cs.change.newName), ' ');\n                break;\n            case 'set schema':\n                ret.push('SET SCHEMA ', name(cs.change.newSchema), ' ');\n                break;\n            case 'owner to':\n                const own = cs.change.owner;\n                ret.push('OWNER TO ', name(cs.change.owner), ' ');\n                break;\n            default:\n                throw utils_1.NotSupported.never(cs.change);\n        }\n    },\n    createSequence: cs => {\n        ret.push('CREATE ');\n        if (cs.temp) {\n            ret.push('TEMPORARY ');\n        }\n        ret.push('SEQUENCE ');\n        if (cs.ifNotExists) {\n            ret.push('IF NOT EXISTS ');\n        }\n        visitQualifiedName(cs.name);\n        visitSeqOpts(m, cs.options);\n    },\n    drop: val => {\n        ret.push(val.type.toUpperCase(), ' ');\n        if (val.concurrently) {\n            ret.push('CONCURRENTLY ');\n        }\n        if (val.ifExists) {\n            ret.push('IF EXISTS ');\n        }\n        list(val.names, x => m.tableRef(x), false);\n        if (val.cascade) {\n            ret.push(val.cascade.toUpperCase(), ' ');\n        }\n    },\n    constraint: cst => {\n        if (cst.constraintName) {\n            ret.push(' CONSTRAINT ', name(cst.constraintName), ' ');\n        }\n        addConstraint(cst, m);\n    },\n    do: d => {\n        ret.push('DO');\n        if (d.language) {\n            ret.push(' LANGUAGE ', d.language.name);\n        }\n        ret.push(' $$', d.code, '$$');\n    },\n    createFunction: c => {\n        var _a;\n        ret.push(c.orReplace ? 'CREATE OR REPLACE FUNCTION ' : 'CREATE FUNCTION ');\n        visitQualifiedName(c.name);\n        // args\n        list(c.arguments, a => {\n            if (a.mode) {\n                ret.push(a.mode, ' ');\n            }\n            if (a.name) {\n                ret.push(name(a.name), ' ');\n            }\n            m.dataType(a.type);\n            if (a.default) {\n                ret.push(\" = \");\n                m.expr(a.default);\n            }\n        }, true);\n        // ret type\n        if (c.returns) {\n            switch (c.returns.kind) {\n                case 'table':\n                    ret.push(' RETURNS TABLE ');\n                    list(c.returns.columns, t => {\n                        ret.push(name(t.name), ' ');\n                        m.dataType(t.type);\n                    }, true);\n                    break;\n                case undefined:\n                case null:\n                case 'array':\n                    ret.push(' RETURNS ');\n                    m.dataType(c.returns);\n                    break;\n                default:\n                    throw utils_1.NotSupported.never(c.returns);\n            }\n        }\n        ret.push(' AS $$', (_a = c.code) !== null && _a !== void 0 ? _a : '', '$$');\n        // function settings\n        if (c.language) {\n            ret.push('LANGUAGE ', c.language.name, ' ');\n        }\n        if (c.purity) {\n            ret.push(c.purity.toUpperCase(), ' ');\n        }\n        if (typeof c.leakproof === 'boolean') {\n            ret.push(c.leakproof ? 'LEAKPROOF ' : 'NOT LEAKPROOF ');\n        }\n        switch (c.onNullInput) {\n            case 'call':\n                ret.push('CALLED ON NULL INPUT ');\n                break;\n            case 'null':\n                ret.push('RETURNS NULL ON NULL INPUT ');\n                break;\n            case 'strict':\n                ret.push('STRICT ');\n                break;\n            case null:\n            case undefined:\n                break;\n            default:\n                throw utils_1.NotSupported.never(c.onNullInput);\n        }\n    },\n    dropFunction: d => {\n        ret.push('DROP FUNCTION ');\n        if (d.ifExists) {\n            ret.push('IF EXISTS ');\n        }\n        visitQualifiedName(d.name);\n        if (d.arguments) {\n            list(d.arguments, a => {\n                if (a.name) {\n                    visitQualifiedName(a.name);\n                    ret.push(' ');\n                }\n                m.dataType(a.type);\n            }, true);\n        }\n        ret.push(' ');\n    },\n    with: w => {\n        ret.push('WITH ');\n        list(w.bind, b => {\n            ret.push(name(b.alias), ' AS (');\n            m.statement(b.statement);\n            ret.push(') ');\n        }, false);\n        m.statement(w.in);\n    },\n    withRecursive: val => {\n        ret.push('WITH RECURSIVE ', name(val.alias), '(', ...val.columnNames.map(name).join(', '), ') AS (');\n        m.union(val.bind);\n        ret.push(') ');\n        m.statement(val.in);\n    },\n    setGlobal: g => {\n        ret.push('SET ');\n        if (g.scope) {\n            ret.push(g.scope.toUpperCase() + ' ');\n        }\n        ret.push(name(g.variable), ' = ');\n        visitSetVal(g.set);\n    },\n    setTimezone: g => {\n        ret.push('SET TIME ZONE ');\n        switch (g.to.type) {\n            case 'default':\n            case 'local':\n                ret.push(g.to.type.toUpperCase(), ' ');\n                break;\n            case 'value':\n                ret.push(typeof g.to.value === 'string'\n                    ? (0, pg_escape_1.literal)(g.to.value)\n                    : g.to.value.toString(10));\n                break;\n            case 'interval':\n                ret.push('INTERVAL ', (0, pg_escape_1.literal)(g.to.value), ' HOUR TO MINUTE');\n                break;\n            default:\n                throw utils_1.NotSupported.never(g.to);\n        }\n    },\n    setNames: g => {\n        ret.push('SET NAMES ');\n        switch (g.to.type) {\n            case 'value':\n                ret.push((0, pg_escape_1.literal)(g.to.value));\n                break;\n        }\n    },\n    dataType: d => {\n        var _a, _b;\n        if ((d === null || d === void 0 ? void 0 : d.kind) === 'array') {\n            m.dataType(d.arrayOf);\n            ret.push('[]');\n            return;\n        }\n        if (!(d === null || d === void 0 ? void 0 : d.name)) {\n            ret.push('unkown');\n            return;\n        }\n        let appendConfig = true;\n        if (d.schema) {\n            visitQualifiedName(d, d.doubleQuoted);\n        }\n        else {\n            // see https://www.postgresql.org/docs/13/datatype.html\n            // & issue https://github.com/oguimbal/pgsql-ast-parser/issues/38\n            if (d.doubleQuoted) {\n                visitQualifiedName(d, true);\n            }\n            else {\n                switch (d.name) {\n                    case 'double precision':\n                    case 'character varying':\n                    case 'bit varying':\n                        ret.push(d.name, ' ');\n                        break;\n                    case 'time without time zone':\n                    case 'timestamp without time zone':\n                    case 'time with time zone':\n                    case 'timestamp with time zone':\n                        const parts = d.name.split(' ');\n                        ret.push(parts.shift());\n                        if ((_a = d.config) === null || _a === void 0 ? void 0 : _a.length) {\n                            list(d.config, v => ret.push(v.toString(10)), true);\n                        }\n                        ret.push(' ');\n                        ret.push(parts.join(' '), ' ');\n                        appendConfig = false;\n                        break;\n                    default:\n                        visitQualifiedName(d);\n                        break;\n                }\n            }\n        }\n        if (appendConfig && ((_b = d.config) === null || _b === void 0 ? void 0 : _b.length)) {\n            list(d.config, v => ret.push(v.toString(10)), true);\n        }\n    },\n    createIndex: c => {\n        ret.push(c.unique ? 'CREATE UNIQUE INDEX ' : 'CREATE INDEX ');\n        if (c.concurrently) {\n            ret.push('CONCURRENTLY ');\n        }\n        if (c.ifNotExists) {\n            ret.push(' IF NOT EXISTS ');\n        }\n        if (c.indexName) {\n            ret.push(name(c.indexName), ' ');\n        }\n        ret.push('ON ');\n        m.tableRef(c.table);\n        if (c.using) {\n            ret.push('USING ', name(c.using), ' ');\n        }\n        list(c.expressions, e => {\n            m.expr(e.expression);\n            ret.push(' ');\n            if (e.collate) {\n                ret.push('COLLATE ');\n                visitQualifiedName(e.collate);\n            }\n            if (e.opclass) {\n                visitQualifiedName(e.opclass);\n            }\n            if (e.order) {\n                ret.push(e.order, ' ');\n            }\n            if (e.nulls) {\n                ret.push('nulls ', e.nulls, ' ');\n            }\n        }, true);\n        if (c.with) {\n            ret.push('WITH ');\n            list(c.with, w => {\n                ret.push(w.parameter, ' = ', (0, pg_escape_1.literal)(w.value));\n            }, true);\n        }\n        if (c.tablespace) {\n            ret.push('TABLESPACE ', ident(c.tablespace));\n        }\n        if (c.where) {\n            ret.push(' WHERE ');\n            m.expr(c.where);\n        }\n        ret.push(' ');\n    },\n    createTable: t => {\n        var _a;\n        ret.push('CREATE ');\n        if (t.locality) {\n            ret.push(t.locality.toUpperCase(), ' ');\n        }\n        if (t.temporary) {\n            ret.push('TEMPORARY ');\n        }\n        if (t.unlogged) {\n            ret.push('UNLOGGED ');\n        }\n        ret.push(t.ifNotExists ? 'TABLE IF NOT EXISTS ' : 'TABLE ');\n        m.tableRef(t.name);\n        ret.push('(');\n        list(t.columns, c => {\n            switch (c.kind) {\n                case 'column':\n                    return m.createColumn(c);\n                case 'like table':\n                    return m.likeTable(c);\n                default:\n                    throw utils_1.NotSupported.never(c);\n            }\n        }, false);\n        if (t.constraints) {\n            ret.push(', ');\n            list(t.constraints, c => {\n                const cname = c.constraintName;\n                if (cname) {\n                    ret.push('CONSTRAINT ', name(cname), ' ');\n                }\n                addConstraint(c, m);\n            }, false);\n        }\n        ret.push(') ');\n        if ((_a = t.inherits) === null || _a === void 0 ? void 0 : _a.length) {\n            ret.push(' INHERITS ');\n            list(t.inherits, i => visitQualifiedName(i), true);\n        }\n    },\n    likeTable: l => {\n        ret.push(' LIKE ');\n        m.tableRef(l.like);\n        ret.push(' ');\n        for (const { verb, option } of l.options) {\n            ret.push(verb.toUpperCase(), ' ', option.toUpperCase(), ' ');\n        }\n    },\n    createSchema: s => {\n        ret.push(s.ifNotExists ? 'CREATE SCHEMA IF NOT EXISTS ' : 'CREATE SCHEMA ');\n        ret.push(name(s.name));\n    },\n    truncateTable: t => {\n        ret.push('TRUNCATE TABLE ');\n        let first = true;\n        for (const tbl of t.tables) {\n            if (!first) {\n                ret.push(', ');\n            }\n            first = false;\n            m.tableRef(tbl);\n        }\n        if (t.identity) {\n            switch (t.identity) {\n                case 'restart':\n                    ret.push(' RESTART IDENTITY ');\n                    break;\n                case 'continue':\n                    ret.push(' CONTINUE IDENTITY ');\n                    break;\n            }\n        }\n        if (t.cascade) {\n            ret.push(' ', t.cascade, ' ');\n        }\n    },\n    delete: t => {\n        ret.push('DELETE FROM ');\n        m.tableRef(t.from);\n        if (t.where) {\n            ret.push(' WHERE ');\n            m.expr(t.where);\n        }\n        if (t.returning) {\n            ret.push(' RETURNING ');\n            list(t.returning, r => m.selectionColumn(r), false);\n        }\n        ret.push(' ');\n    },\n    dropColumn: t => {\n        ret.push(' DROP COLUMN ');\n        if (t.ifExists) {\n            ret.push(' IF EXISTS ');\n        }\n        ret.push(name(t.column));\n        if (t.behaviour) {\n            ret.push(' ', t.behaviour);\n        }\n        ret.push(' ');\n    },\n    dropConstraint: t => {\n        ret.push(' DROP CONSTRAINT ');\n        if (t.ifExists) {\n            ret.push(' IF EXISTS ');\n        }\n        ret.push(name(t.constraint));\n        if (t.behaviour) {\n            ret.push(' ', t.behaviour.toUpperCase(), ' ');\n        }\n    },\n    from: t => m.super().from(t),\n    fromCall: s => {\n        join(m, s.join, () => {\n            var _a, _b;\n            if (s.lateral) {\n                ret.push(\"LATERAL \");\n            }\n            m.call(s);\n            if (s.withOrdinality) {\n                ret.push(' WITH ORDINALITY');\n            }\n            if (s.alias) {\n                ret.push(' AS ', name(s.alias), ' ');\n                const len = (_b = (_a = s.alias.columns) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n                if (len > 0) {\n                    ret.push('(');\n                    for (let ix = 0; ix < len; ++ix) {\n                        if (ix !== 0) {\n                            ret.push(', ');\n                        }\n                        ret.push(name(s.alias.columns[ix]));\n                    }\n                    ret.push(')');\n                }\n            }\n        });\n        ret.push(' ');\n    },\n    fromStatement: s => {\n        // todo: use 's.db' if defined\n        join(m, s.join, () => {\n            if (s.lateral) {\n                ret.push(\"LATERAL \");\n            }\n            ret.push('(');\n            m.select(s.statement);\n            ret.push(') ');\n            if (s.alias) {\n                ret.push(' AS ', ident(s.alias));\n                if (s.columnNames) {\n                    list(s.columnNames, c => ret.push(name(c)), true);\n                }\n                ret.push(' ');\n            }\n        });\n        ret.push(' ');\n    },\n    values: s => {\n        ret.push('VALUES ');\n        list(s.values, vlist => {\n            list(vlist, e => {\n                m.expr(e);\n            }, true);\n        }, false);\n    },\n    fromTable: s => {\n        join(m, s.join, () => {\n            m.tableRef(s.name);\n            if (s.name.columnNames) {\n                if (!s.name.alias) {\n                    throw new Error('Cannot specify aliased column names without an alias');\n                }\n                list(s.name.columnNames, c => ret.push(name(c)), true);\n            }\n        });\n    },\n    join: j => {\n        throw new Error('Should not happen 💀');\n    },\n    insert: i => {\n        ret.push('INSERT INTO ');\n        m.tableRef(i.into);\n        if (i.columns) {\n            ret.push('(', i.columns.map(name).join(', '), ')');\n        }\n        ret.push(' ');\n        if (i.overriding) {\n            ret.push('OVERRIDING ', i.overriding.toUpperCase(), ' VALUE ');\n        }\n        m.select(i.insert);\n        ret.push(' ');\n        if (i.onConflict) {\n            ret.push('ON CONFLICT ');\n            const on = i.onConflict.on;\n            switch (on === null || on === void 0 ? void 0 : on.type) {\n                case 'on expr':\n                    list(on.exprs, e => m.expr(e), true);\n                    break;\n                case 'on constraint':\n                    ret.push('ON CONSTRAINT ');\n                    visitQualifiedName(on.constraint);\n                case null:\n                case undefined:\n                    break;\n                default:\n                    throw utils_1.NotSupported.never(on);\n            }\n            if (i.onConflict.do === 'do nothing') {\n                ret.push(' DO NOTHING');\n            }\n            else {\n                ret.push(' DO UPDATE SET ');\n                list(i.onConflict.do.sets, s => m.set(s), false);\n                if (i.onConflict.where) {\n                    ret.push(' WHERE ');\n                    m.expr(i.onConflict.where);\n                }\n            }\n            ret.push(' ');\n        }\n        if (i.returning) {\n            ret.push(' RETURNING ');\n            list(i.returning, r => m.selectionColumn(r), false);\n        }\n    },\n    raise: r => {\n        var _a, _b;\n        ret.push('RAISE ');\n        if (r.level) {\n            ret.push(r.level.toUpperCase(), ' ');\n        }\n        ret.push((0, pg_escape_1.literal)(r.format), ' ');\n        if ((_a = r.formatExprs) === null || _a === void 0 ? void 0 : _a.length) {\n            ret.push(', ');\n            list(r.formatExprs, e => m.expr(e), false);\n        }\n        if ((_b = r.using) === null || _b === void 0 ? void 0 : _b.length) {\n            ret.push(' USING ');\n            list(r.using, ({ type, value }) => {\n                ret.push(type.toUpperCase(), '=');\n                m.expr(value);\n            }, false);\n        }\n        ret.push(' ');\n    },\n    default: () => {\n        ret.push(' DEFAULT ');\n    },\n    member: e => {\n        m.expr(e.operand);\n        ret.push(e.op);\n        ret.push(typeof e.member === 'number'\n            ? e.member.toString(10)\n            : (0, pg_escape_1.literal)(e.member));\n    },\n    ref: r => {\n        if (r.table) {\n            visitQualifiedName(r.table);\n            ret.push('.');\n        }\n        ret.push(r.name === '*' ? '*' : ident(r.name));\n    },\n    parameter: p => {\n        ret.push(p.name);\n    },\n    renameColumn: r => {\n        ret.push(' RENAME COLUMN ', name(r.column), ' TO ', name(r.to));\n    },\n    renameConstraint: r => {\n        ret.push(' RENAME CONSTRAINT ', name(r.constraint), ' TO ', name(r.to));\n    },\n    renameTable: r => {\n        ret.push(' RENAME TO ', name(r.to));\n    },\n    createView: c => {\n        ret.push('CREATE ');\n        if (c.orReplace) {\n            ret.push('OR REPLACE ');\n        }\n        if (c.temp) {\n            ret.push('TEMP ');\n        }\n        if (c.recursive) {\n            ret.push('RECURSIVE ');\n        }\n        ret.push('VIEW ');\n        m.tableRef(c.name);\n        if (c.columnNames) {\n            list(c.columnNames, c => ret.push(name(c)), true);\n        }\n        const opts = c.parameters && Object.entries(c.parameters);\n        if (opts === null || opts === void 0 ? void 0 : opts.length) {\n            ret.push(' WITH ');\n            list(opts, ([k, v]) => ret.push(k, '=', v), false);\n        }\n        ret.push(' AS ');\n        m.select(c.query);\n        if (c.checkOption) {\n            ret.push(' WITH ', c.checkOption.toUpperCase(), ' CHECK OPTION');\n        }\n    },\n    createMaterializedView: c => {\n        ret.push('CREATE MATERIALIZED VIEW ');\n        if (c.ifNotExists) {\n            ret.push('IF NOT EXISTS ');\n        }\n        m.tableRef(c.name);\n        if (c.columnNames) {\n            list(c.columnNames, c => ret.push(name(c)), true);\n        }\n        const opts = c.parameters && Object.entries(c.parameters);\n        if (opts === null || opts === void 0 ? void 0 : opts.length) {\n            ret.push(' WITH ');\n            list(opts, ([k, v]) => ret.push(k, '=', v), false);\n        }\n        if (c.tablespace) {\n            ret.push(' TABLESPACE ', name(c.tablespace));\n        }\n        ret.push(' AS ');\n        m.select(c.query);\n        if (typeof c.withData === 'boolean') {\n            ret.push(c.withData ? ' WITH DATA' : ' WITH NO DATA');\n        }\n    },\n    refreshMaterializedView: val => {\n        ret.push('REFRESH MATERIALIZED VIEW ');\n        if (val.concurrently) {\n            ret.push('CONCURRENTLY ');\n        }\n        m.tableRef(val.name);\n        if (typeof val.withData === 'boolean') {\n            ret.push(val.withData ? ' WITH DATA' : ' WITH NO DATA');\n        }\n    },\n    select: s => m.super().select(s),\n    selection: s => {\n        ret.push('SELECT ');\n        if (s.distinct) {\n            if (typeof s.distinct === 'string') {\n                ret.push(s.distinct.toUpperCase());\n            }\n            else {\n                ret.push(' DISTINCT ON ');\n                list(s.distinct, v => m.expr(v), true);\n            }\n            ret.push(' ');\n        }\n        if (s.columns) {\n            list(s.columns, c => m.selectionColumn(c), false);\n        }\n        ret.push(' ');\n        if (s.from) {\n            ret.push('FROM ');\n            const tblCnt = s.from.length;\n            for (let i = 0; i < tblCnt; i++) {\n                const f = s.from[i];\n                if (i > 0 && !f.join) {\n                    // implicit cross join (https://www.postgresql.org/docs/9.5/sql-select.html#SQL-FROM)\n                    ret.push(',');\n                }\n                m.from(f);\n            }\n            ret.push(' ');\n        }\n        if (s.where) {\n            ret.push('WHERE ');\n            m.expr(s.where);\n            ret.push(' ');\n        }\n        if (s.groupBy) {\n            ret.push('GROUP BY ');\n            list(s.groupBy, e => m.expr(e), false);\n            ret.push(' ');\n            if (s.having) {\n                ret.push(' HAVING ');\n                m.expr(s.having);\n                ret.push(' ');\n            }\n        }\n        if (s.orderBy) {\n            visitOrderBy(m, s.orderBy);\n            ret.push(' ');\n        }\n        if (s.limit) {\n            if (s.limit.offset) {\n                ret.push(`OFFSET `);\n                m.expr(s.limit.offset);\n            }\n            if (s.limit.limit) {\n                ret.push(`LIMIT `);\n                m.expr(s.limit.limit);\n            }\n        }\n        if (s.for) {\n            ret.push('FOR ', s.for.type.toUpperCase());\n            if (s.skip) {\n                ret.push(' ', s.skip.type.toUpperCase());\n            }\n        }\n    },\n    show: s => {\n        ret.push('SHOW ', name(s.variable));\n    },\n    prepare: s => {\n        var _a;\n        ret.push('PREPARE ', name(s.name));\n        if ((_a = s.args) === null || _a === void 0 ? void 0 : _a.length) {\n            list(s.args, a => m.dataType(a), true);\n        }\n        ret.push(' AS ');\n        m.statement(s.statement);\n    },\n    deallocate: s => {\n        ret.push('DEALLOCATE ');\n        if ('name' in s.target) {\n            ret.push(s.target.name);\n            return;\n        }\n        ret.push('ALL');\n    },\n    arraySelect: s => {\n        ret.push('array(');\n        m.select(s.select);\n        ret.push(')');\n    },\n    union: s => {\n        ret.push('(');\n        m.statement(s.left);\n        ret.push(') ', s.type.toUpperCase(), ' ');\n        if (s.right.type === 'union' || s.right.type === 'union all') {\n            m.union(s.right);\n        }\n        else {\n            ret.push('(');\n            m.statement(s.right);\n            ret.push(')');\n        }\n    },\n    selectionColumn: c => {\n        m.expr(c.expr);\n        if (c.alias) {\n            ret.push(' AS ', name(c.alias));\n        }\n        ret.push(' ');\n    },\n    set: s => {\n        ret.push(name(s.column), ' = ');\n        m.expr(s.value);\n        ret.push(' ');\n    },\n    statement: s => m.super().statement(s),\n    tableRef: r => {\n        visitQualifiedName(r);\n        if (r.alias) {\n            ret.push(' AS ', ident(r.alias));\n        }\n        ret.push(' ');\n    },\n    ternary: t => {\n        m.expr(t.value);\n        ret.push(' ', t.op, ' ');\n        m.expr(t.lo);\n        ret.push(' AND ');\n        m.expr(t.hi);\n        ret.push(' ');\n    },\n    transaction: t => {\n        ret.push(t.type);\n    },\n    unary: t => {\n        switch (t.op) {\n            case '+':\n            case '-':\n                // prefix ops\n                visitOp(t);\n                m.expr(t.operand);\n                break;\n            case 'NOT':\n                // prefix ops\n                ret.push(t.op);\n                ret.push(' ');\n                m.expr(t.operand);\n                break;\n            default:\n                // postfix ops\n                m.expr(t.operand);\n                ret.push(' ');\n                ret.push(t.op);\n        }\n    },\n    update: u => {\n        ret.push('UPDATE ');\n        m.tableRef(u.table);\n        ret.push(' SET ');\n        list(u.sets, s => m.set(s), false);\n        ret.push(' ');\n        if (u.from) {\n            ret.push('FROM ');\n            m.from(u.from);\n            ret.push(' ');\n        }\n        if (u.where) {\n            ret.push('WHERE ');\n            m.expr(u.where);\n            ret.push(' ');\n        }\n        if (u.returning) {\n            ret.push(' RETURNING ');\n            list(u.returning, r => m.selectionColumn(r), false);\n            ret.push(' ');\n        }\n    },\n}));\nexports.toSql = {};\nconst proto = ast_mapper_1.AstDefaultMapper.prototype;\nfor (const k of Object.getOwnPropertyNames(proto)) {\n    const orig = proto[k];\n    if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {\n        continue;\n    }\n    exports.toSql[k] = function (...args) {\n        try {\n            visitor[k].apply(visitor, args);\n            return ret.join('').trim();\n        }\n        finally {\n            ret = [];\n        }\n    };\n}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// stolen from https://github.com/segmentio/pg-escape/blob/master/index.js\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.literal = void 0;\nfunction literal(val) {\n    if (null == val)\n        return 'NULL';\n    if (Array.isArray(val)) {\n        var vals = val.map(literal);\n        return \"(\" + vals.join(\", \") + \")\";\n    }\n    var backslash = ~val.indexOf('\\\\');\n    var prefix = backslash ? 'E' : '';\n    val = val.replace(/'/g, \"''\");\n    val = val.replace(/\\\\/g, '\\\\\\\\');\n    return prefix + \"'\" + val + \"'\";\n}\nexports.literal = literal;\n;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.locationOf = void 0;\nfunction locationOf(node) {\n    const n = node._location;\n    if (!n) {\n        throw new Error('This statement has not been parsed using location tracking (which has a small performance hit). ');\n    }\n    return n;\n}\nexports.locationOf = locationOf;\n;\n;\n\n\n/***/ })\n/******/ ])));\n//# sourceMappingURL=index.js.map","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","'use strict'\n\nconst debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n        version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    if (this.major < other.major) {\n      return -1\n    }\n    if (this.major > other.major) {\n      return 1\n    }\n    if (this.minor < other.minor) {\n      return -1\n    }\n    if (this.minor > other.minor) {\n      return 1\n    }\n    if (this.patch < other.patch) {\n      return -1\n    }\n    if (this.patch > other.patch) {\n      return 1\n    }\n    return 0\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    if (release.startsWith('pre')) {\n      if (!identifier && identifierBase === false) {\n        throw new Error('invalid increment argument: identifier is empty')\n      }\n      // Avoid an invalid semver results\n      if (identifier) {\n        const match = `-${identifier}`.match(this.options.loose ? re[t.PRERELEASELOOSE] : re[t.PRERELEASE])\n        if (!match || match[1] !== identifier) {\n          throw new Error(`invalid identifier: ${identifier}`)\n        }\n      }\n    }\n\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'release':\n        if (this.prerelease.length === 0) {\n          throw new Error(`version ${this.raw} is not a prerelease`)\n        }\n        this.prerelease.length = 0\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","'use strict'\n\nconst parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","'use strict'\n\nconst SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  comp = comp.replace(re[t.BUILD], '')\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","'use strict'\n\n// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__8531__;","(function(root, factory) {\n    if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.nearley = factory();\n    }\n}(this, function() {\n\n    function Rule(name, symbols, postprocess) {\n        this.id = ++Rule.highestId;\n        this.name = name;\n        this.symbols = symbols;        // a list of literal | regex class | nonterminal\n        this.postprocess = postprocess;\n        return this;\n    }\n    Rule.highestId = 0;\n\n    Rule.prototype.toString = function(withCursorAt) {\n        var symbolSequence = (typeof withCursorAt === \"undefined\")\n                             ? this.symbols.map(getSymbolShortDisplay).join(' ')\n                             : (   this.symbols.slice(0, withCursorAt).map(getSymbolShortDisplay).join(' ')\n                                 + \" ● \"\n                                 + this.symbols.slice(withCursorAt).map(getSymbolShortDisplay).join(' ')     );\n        return this.name + \" → \" + symbolSequence;\n    }\n\n\n    // a State is a rule at a position from a given starting point in the input stream (reference)\n    function State(rule, dot, reference, wantedBy) {\n        this.rule = rule;\n        this.dot = dot;\n        this.reference = reference;\n        this.data = [];\n        this.wantedBy = wantedBy;\n        this.isComplete = this.dot === rule.symbols.length;\n    }\n\n    State.prototype.toString = function() {\n        return \"{\" + this.rule.toString(this.dot) + \"}, from: \" + (this.reference || 0);\n    };\n\n    State.prototype.nextState = function(child) {\n        var state = new State(this.rule, this.dot + 1, this.reference, this.wantedBy);\n        state.left = this;\n        state.right = child;\n        if (state.isComplete) {\n            state.data = state.build();\n            // Having right set here will prevent the right state and its children\n            // form being garbage collected\n            state.right = undefined;\n        }\n        return state;\n    };\n\n    State.prototype.build = function() {\n        var children = [];\n        var node = this;\n        do {\n            children.push(node.right.data);\n            node = node.left;\n        } while (node.left);\n        children.reverse();\n        return children;\n    };\n\n    State.prototype.finish = function() {\n        if (this.rule.postprocess) {\n            this.data = this.rule.postprocess(this.data, this.reference, Parser.fail);\n        }\n    };\n\n\n    function Column(grammar, index) {\n        this.grammar = grammar;\n        this.index = index;\n        this.states = [];\n        this.wants = {}; // states indexed by the non-terminal they expect\n        this.scannable = []; // list of states that expect a token\n        this.completed = {}; // states that are nullable\n    }\n\n\n    Column.prototype.process = function(nextColumn) {\n        var states = this.states;\n        var wants = this.wants;\n        var completed = this.completed;\n\n        for (var w = 0; w < states.length; w++) { // nb. we push() during iteration\n            var state = states[w];\n\n            if (state.isComplete) {\n                state.finish();\n                if (state.data !== Parser.fail) {\n                    // complete\n                    var wantedBy = state.wantedBy;\n                    for (var i = wantedBy.length; i--; ) { // this line is hot\n                        var left = wantedBy[i];\n                        this.complete(left, state);\n                    }\n\n                    // special-case nullables\n                    if (state.reference === this.index) {\n                        // make sure future predictors of this rule get completed.\n                        var exp = state.rule.name;\n                        (this.completed[exp] = this.completed[exp] || []).push(state);\n                    }\n                }\n\n            } else {\n                // queue scannable states\n                var exp = state.rule.symbols[state.dot];\n                if (typeof exp !== 'string') {\n                    this.scannable.push(state);\n                    continue;\n                }\n\n                // predict\n                if (wants[exp]) {\n                    wants[exp].push(state);\n\n                    if (completed.hasOwnProperty(exp)) {\n                        var nulls = completed[exp];\n                        for (var i = 0; i < nulls.length; i++) {\n                            var right = nulls[i];\n                            this.complete(state, right);\n                        }\n                    }\n                } else {\n                    wants[exp] = [state];\n                    this.predict(exp);\n                }\n            }\n        }\n    }\n\n    Column.prototype.predict = function(exp) {\n        var rules = this.grammar.byName[exp] || [];\n\n        for (var i = 0; i < rules.length; i++) {\n            var r = rules[i];\n            var wantedBy = this.wants[exp];\n            var s = new State(r, 0, this.index, wantedBy);\n            this.states.push(s);\n        }\n    }\n\n    Column.prototype.complete = function(left, right) {\n        var copy = left.nextState(right);\n        this.states.push(copy);\n    }\n\n\n    function Grammar(rules, start) {\n        this.rules = rules;\n        this.start = start || this.rules[0].name;\n        var byName = this.byName = {};\n        this.rules.forEach(function(rule) {\n            if (!byName.hasOwnProperty(rule.name)) {\n                byName[rule.name] = [];\n            }\n            byName[rule.name].push(rule);\n        });\n    }\n\n    // So we can allow passing (rules, start) directly to Parser for backwards compatibility\n    Grammar.fromCompiled = function(rules, start) {\n        var lexer = rules.Lexer;\n        if (rules.ParserStart) {\n          start = rules.ParserStart;\n          rules = rules.ParserRules;\n        }\n        var rules = rules.map(function (r) { return (new Rule(r.name, r.symbols, r.postprocess)); });\n        var g = new Grammar(rules, start);\n        g.lexer = lexer; // nb. storing lexer on Grammar is iffy, but unavoidable\n        return g;\n    }\n\n\n    function StreamLexer() {\n      this.reset(\"\");\n    }\n\n    StreamLexer.prototype.reset = function(data, state) {\n        this.buffer = data;\n        this.index = 0;\n        this.line = state ? state.line : 1;\n        this.lastLineBreak = state ? -state.col : 0;\n    }\n\n    StreamLexer.prototype.next = function() {\n        if (this.index < this.buffer.length) {\n            var ch = this.buffer[this.index++];\n            if (ch === '\\n') {\n              this.line += 1;\n              this.lastLineBreak = this.index;\n            }\n            return {value: ch};\n        }\n    }\n\n    StreamLexer.prototype.save = function() {\n      return {\n        line: this.line,\n        col: this.index - this.lastLineBreak,\n      }\n    }\n\n    StreamLexer.prototype.formatError = function(token, message) {\n        // nb. this gets called after consuming the offending token,\n        // so the culprit is index-1\n        var buffer = this.buffer;\n        if (typeof buffer === 'string') {\n            var lines = buffer\n                .split(\"\\n\")\n                .slice(\n                    Math.max(0, this.line - 5), \n                    this.line\n                );\n\n            var nextLineBreak = buffer.indexOf('\\n', this.index);\n            if (nextLineBreak === -1) nextLineBreak = buffer.length;\n            var col = this.index - this.lastLineBreak;\n            var lastLineDigits = String(this.line).length;\n            message += \" at line \" + this.line + \" col \" + col + \":\\n\\n\";\n            message += lines\n                .map(function(line, i) {\n                    return pad(this.line - lines.length + i + 1, lastLineDigits) + \" \" + line;\n                }, this)\n                .join(\"\\n\");\n            message += \"\\n\" + pad(\"\", lastLineDigits + col) + \"^\\n\";\n            return message;\n        } else {\n            return message + \" at index \" + (this.index - 1);\n        }\n\n        function pad(n, length) {\n            var s = String(n);\n            return Array(length - s.length + 1).join(\" \") + s;\n        }\n    }\n\n    function Parser(rules, start, options) {\n        if (rules instanceof Grammar) {\n            var grammar = rules;\n            var options = start;\n        } else {\n            var grammar = Grammar.fromCompiled(rules, start);\n        }\n        this.grammar = grammar;\n\n        // Read options\n        this.options = {\n            keepHistory: false,\n            lexer: grammar.lexer || new StreamLexer,\n        };\n        for (var key in (options || {})) {\n            this.options[key] = options[key];\n        }\n\n        // Setup lexer\n        this.lexer = this.options.lexer;\n        this.lexerState = undefined;\n\n        // Setup a table\n        var column = new Column(grammar, 0);\n        var table = this.table = [column];\n\n        // I could be expecting anything.\n        column.wants[grammar.start] = [];\n        column.predict(grammar.start);\n        // TODO what if start rule is nullable?\n        column.process();\n        this.current = 0; // token index\n    }\n\n    // create a reserved token for indicating a parse fail\n    Parser.fail = {};\n\n    Parser.prototype.feed = function(chunk) {\n        var lexer = this.lexer;\n        lexer.reset(chunk, this.lexerState);\n\n        var token;\n        while (true) {\n            try {\n                token = lexer.next();\n                if (!token) {\n                    break;\n                }\n            } catch (e) {\n                // Create the next column so that the error reporter\n                // can display the correctly predicted states.\n                var nextColumn = new Column(this.grammar, this.current + 1);\n                this.table.push(nextColumn);\n                var err = new Error(this.reportLexerError(e));\n                err.offset = this.current;\n                err.token = e.token;\n                throw err;\n            }\n            // We add new states to table[current+1]\n            var column = this.table[this.current];\n\n            // GC unused states\n            if (!this.options.keepHistory) {\n                delete this.table[this.current - 1];\n            }\n\n            var n = this.current + 1;\n            var nextColumn = new Column(this.grammar, n);\n            this.table.push(nextColumn);\n\n            // Advance all tokens that expect the symbol\n            var literal = token.text !== undefined ? token.text : token.value;\n            var value = lexer.constructor === StreamLexer ? token.value : token;\n            var scannable = column.scannable;\n            for (var w = scannable.length; w--; ) {\n                var state = scannable[w];\n                var expect = state.rule.symbols[state.dot];\n                // Try to consume the token\n                // either regex or literal\n                if (expect.test ? expect.test(value) :\n                    expect.type ? expect.type === token.type\n                                : expect.literal === literal) {\n                    // Add it\n                    var next = state.nextState({data: value, token: token, isToken: true, reference: n - 1});\n                    nextColumn.states.push(next);\n                }\n            }\n\n            // Next, for each of the rules, we either\n            // (a) complete it, and try to see if the reference row expected that\n            //     rule\n            // (b) predict the next nonterminal it expects by adding that\n            //     nonterminal's start state\n            // To prevent duplication, we also keep track of rules we have already\n            // added\n\n            nextColumn.process();\n\n            // If needed, throw an error:\n            if (nextColumn.states.length === 0) {\n                // No states at all! This is not good.\n                var err = new Error(this.reportError(token));\n                err.offset = this.current;\n                err.token = token;\n                throw err;\n            }\n\n            // maybe save lexer state\n            if (this.options.keepHistory) {\n              column.lexerState = lexer.save()\n            }\n\n            this.current++;\n        }\n        if (column) {\n          this.lexerState = lexer.save()\n        }\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n\n        // Allow chaining, for whatever it's worth\n        return this;\n    };\n\n    Parser.prototype.reportLexerError = function(lexerError) {\n        var tokenDisplay, lexerMessage;\n        // Planning to add a token property to moo's thrown error\n        // even on erroring tokens to be used in error display below\n        var token = lexerError.token;\n        if (token) {\n            tokenDisplay = \"input \" + JSON.stringify(token.text[0]) + \" (lexer error)\";\n            lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        } else {\n            tokenDisplay = \"input (lexer error)\";\n            lexerMessage = lexerError.message;\n        }\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportError = function(token) {\n        var tokenDisplay = (token.type ? token.type + \" token: \" : \"\") + JSON.stringify(token.value !== undefined ? token.value : token);\n        var lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportErrorCommon = function(lexerMessage, tokenDisplay) {\n        var lines = [];\n        lines.push(lexerMessage);\n        var lastColumnIndex = this.table.length - 2;\n        var lastColumn = this.table[lastColumnIndex];\n        var expectantStates = lastColumn.states\n            .filter(function(state) {\n                var nextSymbol = state.rule.symbols[state.dot];\n                return nextSymbol && typeof nextSymbol !== \"string\";\n            });\n\n        if (expectantStates.length === 0) {\n            lines.push('Unexpected ' + tokenDisplay + '. I did not expect any more input. Here is the state of my parse table:\\n');\n            this.displayStateStack(lastColumn.states, lines);\n        } else {\n            lines.push('Unexpected ' + tokenDisplay + '. Instead, I was expecting to see one of the following:\\n');\n            // Display a \"state stack\" for each expectant state\n            // - which shows you how this state came to be, step by step.\n            // If there is more than one derivation, we only display the first one.\n            var stateStacks = expectantStates\n                .map(function(state) {\n                    return this.buildFirstStateStack(state, []) || [state];\n                }, this);\n            // Display each state that is expecting a terminal symbol next.\n            stateStacks.forEach(function(stateStack) {\n                var state = stateStack[0];\n                var nextSymbol = state.rule.symbols[state.dot];\n                var symbolDisplay = this.getSymbolDisplay(nextSymbol);\n                lines.push('A ' + symbolDisplay + ' based on:');\n                this.displayStateStack(stateStack, lines);\n            }, this);\n        }\n        lines.push(\"\");\n        return lines.join(\"\\n\");\n    }\n    \n    Parser.prototype.displayStateStack = function(stateStack, lines) {\n        var lastDisplay;\n        var sameDisplayCount = 0;\n        for (var j = 0; j < stateStack.length; j++) {\n            var state = stateStack[j];\n            var display = state.rule.toString(state.dot);\n            if (display === lastDisplay) {\n                sameDisplayCount++;\n            } else {\n                if (sameDisplayCount > 0) {\n                    lines.push('    ^ ' + sameDisplayCount + ' more lines identical to this');\n                }\n                sameDisplayCount = 0;\n                lines.push('    ' + display);\n            }\n            lastDisplay = display;\n        }\n    };\n\n    Parser.prototype.getSymbolDisplay = function(symbol) {\n        return getSymbolLongDisplay(symbol);\n    };\n\n    /*\n    Builds a the first state stack. You can think of a state stack as the call stack\n    of the recursive-descent parser which the Nearley parse algorithm simulates.\n    A state stack is represented as an array of state objects. Within a\n    state stack, the first item of the array will be the starting\n    state, with each successive item in the array going further back into history.\n\n    This function needs to be given a starting state and an empty array representing\n    the visited states, and it returns an single state stack.\n\n    */\n    Parser.prototype.buildFirstStateStack = function(state, visited) {\n        if (visited.indexOf(state) !== -1) {\n            // Found cycle, return null\n            // to eliminate this path from the results, because\n            // we don't know how to display it meaningfully\n            return null;\n        }\n        if (state.wantedBy.length === 0) {\n            return [state];\n        }\n        var prevState = state.wantedBy[0];\n        var childVisited = [state].concat(visited);\n        var childResult = this.buildFirstStateStack(prevState, childVisited);\n        if (childResult === null) {\n            return null;\n        }\n        return [state].concat(childResult);\n    };\n\n    Parser.prototype.save = function() {\n        var column = this.table[this.current];\n        column.lexerState = this.lexerState;\n        return column;\n    };\n\n    Parser.prototype.restore = function(column) {\n        var index = column.index;\n        this.current = index;\n        this.table[index] = column;\n        this.table.splice(index + 1);\n        this.lexerState = column.lexerState;\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n    };\n\n    // nb. deprecated: use save/restore instead!\n    Parser.prototype.rewind = function(index) {\n        if (!this.options.keepHistory) {\n            throw new Error('set option `keepHistory` to enable rewinding')\n        }\n        // nb. recall column (table) indicies fall between token indicies.\n        //        col 0   --   token 0   --   col 1\n        this.restore(this.table[index]);\n    };\n\n    Parser.prototype.finish = function() {\n        // Return the possible parsings\n        var considerations = [];\n        var start = this.grammar.start;\n        var column = this.table[this.table.length - 1]\n        column.states.forEach(function (t) {\n            if (t.rule.name === start\n                    && t.dot === t.rule.symbols.length\n                    && t.reference === 0\n                    && t.data !== Parser.fail) {\n                considerations.push(t);\n            }\n        });\n        return considerations.map(function(c) {return c.data; });\n    };\n\n    function getSymbolLongDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return 'character matching ' + symbol;\n            } else if (symbol.type) {\n                return symbol.type + ' token';\n            } else if (symbol.test) {\n                return 'token matching ' + String(symbol.test);\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    function getSymbolShortDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return symbol.toString();\n            } else if (symbol.type) {\n                return '%' + symbol.type;\n            } else if (symbol.test) {\n                return '<' + String(symbol.test) + '>';\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    return {\n        Parser: Parser,\n        Grammar: Grammar,\n        Rule: Rule,\n    };\n\n}));\n","'use strict'\n\nconst Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","'use strict'\n\nconst ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","'use strict'\n\nconst parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","'use strict'\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","'use strict'\n\nconst debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"public/plugins/grafana-clickhouse-datasource/\";","\nimport amdMetaModule from 'amd-module';\n\n__webpack_public_path__ =\n  amdMetaModule && amdMetaModule.uri\n    ? amdMetaModule.uri.slice(0, amdMetaModule.uri.lastIndexOf('/') + 1)\n    : 'public/plugins/grafana-clickhouse-datasource/';\n","export interface FieldLabel {\n  label: string;\n  tooltip: string;\n}\n\nexport enum BuilderMode {\n  List = 'list',\n  Aggregate = 'aggregate',\n  Trend = 'trend',\n}\n\n/**\n * QueryType determines the display/query format.\n */\nexport enum QueryType {\n  Table = 'table',\n  Logs = 'logs',\n  TimeSeries = 'timeseries',\n  Traces = 'traces',\n}\n\nexport interface QueryBuilderOptions {\n  database: string;\n  table: string;\n  queryType: QueryType;\n\n  mode?: BuilderMode; // TODO: no longer required?\n\n  columns?: SelectedColumn[];\n  aggregates?: AggregateColumn[];\n  filters?: Filter[];\n  groupBy?: string[];\n  orderBy?: OrderBy[];\n  limit?: number;\n\n  /**\n   * Contains metadata for editor-specific use cases.\n   */\n  meta?: {\n    /**\n     * When enabled, will hide most/all of the query builder options.\n     *\n     * Intended to be used for trace ID lookups where we only care to show the visualization panel\n     */\n    minimized?: boolean;\n\n    // Logs\n    liveView?: boolean;\n    logMessageLike?: string;\n\n    // Trace\n    traceDurationUnit?: TimeUnit;\n    /**\n     * true for trace ID mode, false for trace search mode\n     */\n    isTraceIdMode?: boolean;\n    traceId?: string;\n\n    /**\n     * True if \"Nested\" column types should be treated as if they\n     * were created with flatten_nested=1. Applies to trace Events and Links columns.\n     */\n    flattenNested?: boolean;\n    traceEventsColumnPrefix?: string;\n    traceLinksColumnPrefix?: string;\n\n    // Logs & Traces\n    otelEnabled?: boolean;\n    otelVersion?: string;\n  };\n}\n\nexport enum AggregateType {\n  Sum = 'sum',\n  Average = 'avg',\n  Min = 'min',\n  Max = 'max',\n  Count = 'count',\n  Any = 'any',\n  // Count_Distinct = 'count_distinct',\n}\n\nexport type AggregateColumn = {\n  aggregateType: AggregateType;\n  column: string;\n  alias?: string;\n};\n\nexport interface Field {\n  name: string;\n  type: string;\n  rel: string;\n  label: string;\n  ref: string[];\n}\n\nexport interface FullEntity {\n  name: string;\n  label: string;\n  custom: boolean;\n  queryable: boolean;\n}\n\ninterface TableColumnPickListItem {\n  label: string;\n  value: string;\n}\n\n/**\n * Represents a column retrieved from ClickHouse\n */\nexport interface TableColumn {\n  name: string;\n  type: string;\n  picklistValues: TableColumnPickListItem[];\n  label?: string;\n  filterable?: boolean;\n  sortable?: boolean;\n  groupable?: boolean;\n  aggregatable?: boolean;\n}\n\nexport interface SqlFunction {\n  name: string;\n  isAggregate: boolean;\n  caseInsensitive: boolean;\n  aliasTo: string;\n  origin: string;\n  description: string;\n  syntax: string;\n  arguments: string;\n  returnedValue: string;\n  examples: string;\n  categories: string;\n}\n\n/**\n * Some columns are used to enable certain features.\n * This enum defines the different use cases that a column may be used for in the query generator.\n * For example, \"Time\" would be used to identify the primary time column for a time series.\n */\nexport enum ColumnHint {\n  Time = 'time',\n\n  LogLevel = 'log_level',\n  LogMessage = 'log_message',\n  LogLabels = 'log_labels',\n\n  TraceId = 'trace_id',\n  TraceSpanId = 'trace_span_id',\n  TraceParentSpanId = 'trace_parent_span_id',\n  TraceServiceName = 'trace_service_name',\n  TraceOperationName = 'trace_operation_name',\n  TraceDurationTime = 'trace_duration_time',\n  TraceTags = 'trace_tags',\n  TraceServiceTags = 'trace_service_tags',\n  TraceStatusCode = 'trace_status_code',\n  TraceKind = 'trace_kind',\n  TraceStatusMessage = 'trace_status_message',\n  TraceInstrumentationLibraryName = 'instrumentation_library_name',\n  TraceInstrumentationLibraryVersion = 'instrumentation_library_version',\n  TraceState = 'trace_state',\n}\n\n/**\n * TimeUnit determines a unit of time.\n */\nexport enum TimeUnit {\n  Seconds = 'seconds',\n  Milliseconds = 'milliseconds',\n  Microseconds = 'microseconds',\n  Nanoseconds = 'nanoseconds',\n}\n\n/**\n * Represents a column selection, including metadata for the query generator to use.\n */\nexport interface SelectedColumn {\n  name: string;\n  type?: string;\n  alias?: string;\n  custom?: boolean;\n  hint?: ColumnHint;\n}\n\nexport enum OrderByDirection {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n\nexport interface OrderBy {\n  name: string;\n  dir: OrderByDirection;\n  /**\n   * true if this orderBy was configured to be present by default\n   */\n  default?: boolean;\n\n  /**\n   * If provided, SQL generator will ignore \"name\" and instead\n   * find the intended column by the hint\n   */\n  hint?: ColumnHint;\n}\n\nexport enum FilterOperator {\n  /**\n   * A placeholder filter that gets excluded from SQL generation\n   */\n  IsAnything = 'IS ANYTHING',\n\n  /**\n   * Compares to an empty string\n   */\n  IsEmpty = 'IS EMPTY',\n  IsNotEmpty = 'IS NOT EMPTY',\n\n  IsNull = 'IS NULL',\n  IsNotNull = 'IS NOT NULL',\n  Equals = '=',\n  NotEquals = '!=',\n  LessThan = '<',\n  LessThanOrEqual = '<=',\n  GreaterThan = '>',\n  GreaterThanOrEqual = '>=',\n  Like = 'LIKE',\n  NotLike = 'NOT LIKE',\n  In = 'IN',\n  NotIn = 'NOT IN',\n  WithInGrafanaTimeRange = 'WITH IN DASHBOARD TIME RANGE',\n  OutsideGrafanaTimeRange = 'OUTSIDE DASHBOARD TIME RANGE',\n}\n\nexport interface CommonFilterProps {\n  filterType: 'custom';\n  /**\n   * Column name\n   */\n  key: string;\n  /**\n   * key used when using a map type: exampleMap['mapKey']\n   */\n  mapKey?: string;\n  type: string;\n  condition: 'AND' | 'OR';\n\n  /**\n   * Used to uniquely identify a dynamically added filter\n   * For example, might be set to 'timeRange' for the default added time range filter.\n   */\n  id?: string;\n  /**\n   * If provided, SQL generator will ignore \"key\" and instead\n   * find the intended column by the hint.\n   *\n   * Note that the column MUST be present in the selected columns array in order\n   * for the filter to be applied unless key is also provided.\n   */\n  hint?: ColumnHint;\n\n  /**\n   * Display label for filter\n   */\n  label?: string;\n}\n\nexport interface NullFilter extends CommonFilterProps {\n  operator: FilterOperator.IsAnything | FilterOperator.IsNull | FilterOperator.IsNotNull;\n}\n\nexport interface BooleanFilter extends CommonFilterProps {\n  type: 'boolean';\n  operator: FilterOperator.IsAnything | FilterOperator.Equals | FilterOperator.NotEquals;\n  value: boolean;\n}\n\nexport interface StringFilter extends CommonFilterProps {\n  operator:\n    | FilterOperator.IsAnything\n    | FilterOperator.IsEmpty\n    | FilterOperator.IsNotEmpty\n    | FilterOperator.Equals\n    | FilterOperator.NotEquals\n    | FilterOperator.Like\n    | FilterOperator.NotLike;\n  value: string;\n}\n\nexport interface NumberFilter extends CommonFilterProps {\n  operator:\n    | FilterOperator.IsAnything\n    | FilterOperator.Equals\n    | FilterOperator.NotEquals\n    | FilterOperator.LessThan\n    | FilterOperator.LessThanOrEqual\n    | FilterOperator.GreaterThan\n    | FilterOperator.GreaterThanOrEqual;\n  value: number;\n}\n\nexport interface DateFilterWithValue extends CommonFilterProps {\n  type: 'datetime' | 'date';\n  operator:\n    | FilterOperator.IsAnything\n    | FilterOperator.Equals\n    | FilterOperator.NotEquals\n    | FilterOperator.LessThan\n    | FilterOperator.LessThanOrEqual\n    | FilterOperator.GreaterThan\n    | FilterOperator.GreaterThanOrEqual;\n  value: string;\n}\n\nexport interface DateFilterWithoutValue extends CommonFilterProps {\n  type: 'datetime' | 'date';\n  operator: FilterOperator.IsAnything | FilterOperator.WithInGrafanaTimeRange | FilterOperator.OutsideGrafanaTimeRange;\n}\n\nexport type DateFilter = DateFilterWithValue | DateFilterWithoutValue;\n\nexport interface MultiFilter extends CommonFilterProps {\n  operator: FilterOperator.IsAnything | FilterOperator.In | FilterOperator.NotIn;\n  value: string[];\n}\n\nexport type Filter = NullFilter | BooleanFilter | NumberFilter | DateFilter | StringFilter | MultiFilter;\n","import { DataQuery } from '@grafana/schema';\nimport { BuilderMode, QueryType, QueryBuilderOptions } from './queryBuilder';\n\n/**\n * EditorType determines the query editor type.\n */\nexport enum EditorType {\n  SQL = 'sql',\n  Builder = 'builder',\n}\n\nexport interface CHQueryBase extends DataQuery {\n  pluginVersion: string;\n  editorType: EditorType;\n  rawSql: string;\n\n  /**\n   * REQUIRED by backend for auto selecting preferredVisualizationType.\n   * Only used in explore view.\n   * src: https://github.com/grafana/sqlds/blob/dda2dc0a54b128961fc9f7885baabf555f3ddfdc/query.go#L36\n   */\n  format?: number;\n}\n\nexport interface CHSqlQuery extends CHQueryBase {\n  editorType: EditorType.SQL;\n  queryType?: QueryType; // only used in explore view\n  meta?: {\n    timezone?: string;\n    // meta fields to be used just for building builder options when migrating back to EditorType.Builder\n    builderOptions?: QueryBuilderOptions;\n  };\n  expand?: boolean;\n}\n\nexport interface CHBuilderQuery extends CHQueryBase {\n  editorType: EditorType.Builder;\n  builderOptions: QueryBuilderOptions;\n  meta?: {\n    timezone?: string;\n  };\n}\n\nexport type CHQuery = CHSqlQuery | CHBuilderQuery;\n\n// TODO: these aren't really types\nexport const defaultEditorType: EditorType = EditorType.Builder;\nexport const defaultCHBuilderQuery: Omit<CHBuilderQuery, 'refId'> = {\n  pluginVersion: '',\n  editorType: EditorType.Builder,\n  rawSql: '',\n  builderOptions: {\n    database: '',\n    table: '',\n    queryType: QueryType.Table,\n    mode: BuilderMode.List,\n    columns: [],\n    meta: {},\n    limit: 1000,\n  },\n};\nexport const defaultCHSqlQuery: Omit<CHSqlQuery, 'refId'> = {\n  pluginVersion: '',\n  editorType: EditorType.SQL,\n  rawSql: '',\n  expand: false,\n};\n","import { parseFirst, Statement, SelectFromStatement, astMapper, toSql, ExprRef } from 'pgsql-ast-parser';\n\ninterface ReplacePart {\n  startIndex: number;\n  name: string;\n  replacementName: string;\n}\ntype ReplaceParts = ReplacePart[];\n\nfunction getReplacementKey(isVariable: boolean) {\n  const prefix = isVariable ? 'v' : 'f';\n  return prefix + (Math.random() + 1).toString(36).substring(7);\n}\n\n/**\n * Replaces macro functions and keywords such as $__timeFilter() and \"default\"\n */\nfunction replaceMacroFunctions(sql: string): [ReplaceParts, string] {\n  const replaceFuncs: ReplaceParts = [];\n  // default is a keyword in this grammar, but it can be used in CH\n  const keywordRegex = /(\\$__|\\$|default|settings)/gi;\n  let regExpArray: RegExpExecArray | null;\n  while ((regExpArray = keywordRegex.exec(sql)) !== null) {\n    replaceFuncs.push({ startIndex: regExpArray.index, name: regExpArray[0], replacementName: '' });\n  }\n\n  // need to process in reverse so starting positions aren't affected by replacing other things\n  for (let i = replaceFuncs.length - 1; i >= 0; i--) {\n    const si = replaceFuncs[i].startIndex;\n    const replacementName = getReplacementKey(false);\n    replaceFuncs[i].replacementName = replacementName;\n    // settings do not parse and we do not need information from them so we will remove them\n    if (replaceFuncs[i].name.toLowerCase() === 'settings') {\n      sql = sql.substring(0, si);\n      continue;\n    }\n    sql = sql.substring(0, si) + replacementName + sql.substring(si + replaceFuncs[i].name.length);\n  }\n\n  return [replaceFuncs, sql];\n}\n\n/**\n * Replaces Grafana variables such as ${var} ${var.key} ${var.key:singlequote}\n * https://grafana.com/docs/grafana/latest/dashboards/variables\n */\nfunction replaceMacroVariables(sql: string): [ReplaceParts, string] {\n  const replaceVariables: ReplaceParts = [];\n  const variableRegex = /\\${[a-zA-Z0-9_:.\\w]+}/g;\n\n  let regExpArray: RegExpExecArray | null;\n  while ((regExpArray = variableRegex.exec(sql)) !== null) {\n    replaceVariables.push({ startIndex: regExpArray.index, name: regExpArray[0], replacementName: '' });\n  }\n\n  // need to process in reverse so starting positions aren't affected by replacing other things\n  for (let i = replaceVariables.length - 1; i >= 0; i--) {\n    const si = replaceVariables[i].startIndex;\n    const replacementName = getReplacementKey(true);\n    replaceVariables[i].replacementName = replacementName;\n    sql = sql.substring(0, si) + replacementName + sql.substring(si + replaceVariables[i].name.length);\n  }\n\n  return [replaceVariables, sql];\n}\n\n// TODO: support query parameters: https://clickhouse.com/docs/en/interfaces/cli#cli-queries-with-parameters\n\nexport function sqlToStatement(rawSql: string): Statement {\n  const [replaceVars, variableSql] = replaceMacroVariables(rawSql);\n  const [replaceFuncs, sql] = replaceMacroFunctions(variableSql);\n  const replaceParts = replaceVars.concat(replaceFuncs);\n\n  let ast: Statement;\n  try {\n    ast = parseFirst(sql);\n  } catch (err) {\n    console.error(`Failed to parse SQL statement into an AST: ${err}`);\n    return {} as Statement;\n  }\n\n  const mapper = astMapper((map) => ({\n    tableRef: (t) => {\n      const rfs = replaceParts.find((x) => x.replacementName === t.schema);\n      if (rfs) {\n        return { ...t, schema: t.schema?.replace(rfs.replacementName, rfs.name) };\n      }\n      const rft = replaceParts.find((x) => x.replacementName === t.name);\n      if (rft) {\n        return { ...t, name: t.name.replace(rft.replacementName, rft.name) };\n      }\n      return map.super().tableRef(t);\n    },\n    ref: (r) => {\n      const rf = replaceParts.find((x) => r.name.startsWith(x.replacementName));\n      if (rf) {\n        const d = r.name.replace(rf.replacementName, rf.name);\n        return { ...r, name: d };\n      }\n      return map.super().ref(r);\n    },\n    expr: (e) => {\n      if (!e || e.type !== 'string') {\n        return map.super().expr(e);\n      }\n\n      const rf = replaceParts.find((x) => e.value.startsWith(x.replacementName));\n      if (rf) {\n        const d = e.value.replace(rf.replacementName, rf.name);\n        return { ...e, value: d };\n      }\n\n      return map.super().expr(e);\n    },\n    call: (c) => {\n      const rf = replaceParts.find((x) => c.function.name.startsWith(x.replacementName));\n      if (rf) {\n        return { ...c, function: { ...c.function, name: c.function.name.replace(rf.replacementName, rf.name) } };\n      }\n      return map.super().call(c);\n    },\n  }));\n  return mapper.statement(ast)!;\n}\n\nexport function getTable(sql: string): string {\n  const stm = sqlToStatement(sql);\n  if (stm.type !== 'select' || !stm.from?.length || stm.from?.length <= 0) {\n    return '';\n  }\n  switch (stm.from![0].type) {\n    case 'table': {\n      const table = stm.from![0];\n      const tableName = `${table.name.schema ? `${table.name.schema}.` : ''}${table.name.name}`;\n      // clickhouse table names are case-sensitive and pgsql parser removes casing,\n      // so we need to get the casing from the raw sql\n      const s = new RegExp(`\\\\b${tableName}\\\\b`, 'gi').exec(sql);\n      return s ? s[0] : tableName;\n    }\n    case 'statement': {\n      const table = stm.from![0];\n      return getTable(toSql.statement(table.statement));\n    }\n  }\n  return '';\n}\n\nexport function getFields(sql: string): string[] {\n  const stm = sqlToStatement(sql) as SelectFromStatement;\n  if (stm.type !== 'select' || !stm.columns?.length || stm.columns?.length <= 0) {\n    return [];\n  }\n\n  return stm.columns.map((x) => {\n    const exprName = (x.expr as ExprRef).name;\n\n    if (x.alias !== undefined) {\n      return `${exprName} as ${x.alias?.name}`;\n    } else {\n      return `${exprName}`;\n    }\n  });\n}\n","import { AdHocVariableFilter } from '@grafana/data';\nimport { getTable } from './ast';\n\nexport class AdHocFilter {\n  private _targetTable = '';\n\n  setTargetTableFromQuery(query: string) {\n    this._targetTable = getTable(query);\n    if (this._targetTable === '') {\n      throw new Error('Failed to get table from adhoc query.');\n    }\n  }\n\n  apply(sql: string, adHocFilters: AdHocVariableFilter[]): string {\n    if (sql === '' || !adHocFilters || adHocFilters.length === 0) {\n      return sql;\n    }\n\n    // sql can contain a query with double quotes around the database and table name, e.g. \"default\".\"table\", so we remove those\n    if (this._targetTable !== '' && !sql.replace(/\"/g, '').match(new RegExp(`.*\\\\b${this._targetTable}\\\\b.*`, 'gi'))) {\n      return sql;\n    }\n\n    if (this._targetTable === '') {\n      this._targetTable = getTable(sql);\n    }\n\n    if (this._targetTable === '') {\n      return sql;\n    }\n\n    const filters = adHocFilters\n      .filter((filter: AdHocVariableFilter) => {\n        const valid = isValid(filter);\n        if (!valid) {\n          console.warn('Invalid adhoc filter will be ignored:', filter);\n        }\n        return valid;\n      })\n      .map((f, i) => {\n        const key = escapeKey(f.key);\n        const value = escapeValueBasedOnOperator(f.value, f.operator);\n        const condition = i !== adHocFilters.length - 1 ? (f.condition ? f.condition : 'AND') : '';\n        const operator = convertOperatorToClickHouseOperator(f.operator);\n        return ` ${key} ${operator} ${value} ${condition}`;\n      })\n      .join('');\n\n    if (filters === '') {\n      return sql;\n    }\n    // Semicolons are not required and cause problems when building the SQL\n    sql = sql.replace(';', '');\n    return `${sql} settings additional_table_filters={'${this._targetTable}' : '${filters}'}`;\n  }\n}\n\nfunction isValid(filter: AdHocVariableFilter): boolean {\n  return filter.key !== undefined && filter.operator !== undefined && filter.value !== undefined;\n}\n\nfunction escapeKey(s: string): string {\n  if (['ResourceAttributes', 'ScopeAttributes', 'LogAttributes'].includes(s.split('.')[0])) {\n    return s;\n  }\n\n  // Convert arrayElement syntax to bracket notation\n  if (s.startsWith('arrayElement(') && s.endsWith(')')) {\n    const match = s.match(/arrayElement\\((.*?),\\s*['\"](.*?)['\"]\\)/);\n    if (match) {\n      const [_, array, key] = match;\n      return `${array}[\\\\'${key}\\\\']`;\n    }\n  }\n  return s.includes('.') ? s.split('.')[1] : s;\n}\n\nfunction escapeValueBasedOnOperator(s: string, operator: string): string {\n  if (operator === 'IN') {\n    // Allow list of values without parentheses\n    if (s.length > 2 && s[0] !== '(' && s[s.length - 1] !== ')') {\n      s = `(${s})`;\n    }\n    return s.replace(/'/g, \"\\\\'\");\n  } else {\n    return `\\\\'${s}\\\\'`;\n  }\n}\n\nfunction convertOperatorToClickHouseOperator(operator: string): string {\n  if (operator === '=~') {\n    return 'ILIKE';\n  }\n  if (operator === '!~') {\n    return 'NOT ILIKE';\n  }\n  return operator;\n}\n","var DataTopic = /* @__PURE__ */ ((DataTopic2) => {\n  DataTopic2[\"AlertStates\"] = \"alertStates\";\n  DataTopic2[\"Annotations\"] = \"annotations\";\n  DataTopic2[\"Series\"] = \"series\";\n  return DataTopic2;\n})(DataTopic || {});\nvar ScaleDimensionMode = /* @__PURE__ */ ((ScaleDimensionMode2) => {\n  ScaleDimensionMode2[\"Linear\"] = \"linear\";\n  ScaleDimensionMode2[\"Quad\"] = \"quad\";\n  return ScaleDimensionMode2;\n})(ScaleDimensionMode || {});\nvar ScalarDimensionMode = /* @__PURE__ */ ((ScalarDimensionMode2) => {\n  ScalarDimensionMode2[\"Clamped\"] = \"clamped\";\n  ScalarDimensionMode2[\"Mod\"] = \"mod\";\n  return ScalarDimensionMode2;\n})(ScalarDimensionMode || {});\nvar TextDimensionMode = /* @__PURE__ */ ((TextDimensionMode2) => {\n  TextDimensionMode2[\"Field\"] = \"field\";\n  TextDimensionMode2[\"Fixed\"] = \"fixed\";\n  TextDimensionMode2[\"Template\"] = \"template\";\n  return TextDimensionMode2;\n})(TextDimensionMode || {});\nvar ResourceDimensionMode = /* @__PURE__ */ ((ResourceDimensionMode2) => {\n  ResourceDimensionMode2[\"Field\"] = \"field\";\n  ResourceDimensionMode2[\"Fixed\"] = \"fixed\";\n  ResourceDimensionMode2[\"Mapping\"] = \"mapping\";\n  return ResourceDimensionMode2;\n})(ResourceDimensionMode || {});\nvar FrameGeometrySourceMode = /* @__PURE__ */ ((FrameGeometrySourceMode2) => {\n  FrameGeometrySourceMode2[\"Auto\"] = \"auto\";\n  FrameGeometrySourceMode2[\"Coords\"] = \"coords\";\n  FrameGeometrySourceMode2[\"Geohash\"] = \"geohash\";\n  FrameGeometrySourceMode2[\"Lookup\"] = \"lookup\";\n  return FrameGeometrySourceMode2;\n})(FrameGeometrySourceMode || {});\nvar HeatmapCalculationMode = /* @__PURE__ */ ((HeatmapCalculationMode2) => {\n  HeatmapCalculationMode2[\"Count\"] = \"count\";\n  HeatmapCalculationMode2[\"Size\"] = \"size\";\n  return HeatmapCalculationMode2;\n})(HeatmapCalculationMode || {});\nvar HeatmapCellLayout = /* @__PURE__ */ ((HeatmapCellLayout2) => {\n  HeatmapCellLayout2[\"auto\"] = \"auto\";\n  HeatmapCellLayout2[\"ge\"] = \"ge\";\n  HeatmapCellLayout2[\"le\"] = \"le\";\n  HeatmapCellLayout2[\"unknown\"] = \"unknown\";\n  return HeatmapCellLayout2;\n})(HeatmapCellLayout || {});\nvar LogsSortOrder = /* @__PURE__ */ ((LogsSortOrder2) => {\n  LogsSortOrder2[\"Ascending\"] = \"Ascending\";\n  LogsSortOrder2[\"Descending\"] = \"Descending\";\n  return LogsSortOrder2;\n})(LogsSortOrder || {});\nvar AxisPlacement = /* @__PURE__ */ ((AxisPlacement2) => {\n  AxisPlacement2[\"Auto\"] = \"auto\";\n  AxisPlacement2[\"Bottom\"] = \"bottom\";\n  AxisPlacement2[\"Hidden\"] = \"hidden\";\n  AxisPlacement2[\"Left\"] = \"left\";\n  AxisPlacement2[\"Right\"] = \"right\";\n  AxisPlacement2[\"Top\"] = \"top\";\n  return AxisPlacement2;\n})(AxisPlacement || {});\nvar AxisColorMode = /* @__PURE__ */ ((AxisColorMode2) => {\n  AxisColorMode2[\"Series\"] = \"series\";\n  AxisColorMode2[\"Text\"] = \"text\";\n  return AxisColorMode2;\n})(AxisColorMode || {});\nvar VisibilityMode = /* @__PURE__ */ ((VisibilityMode2) => {\n  VisibilityMode2[\"Always\"] = \"always\";\n  VisibilityMode2[\"Auto\"] = \"auto\";\n  VisibilityMode2[\"Never\"] = \"never\";\n  return VisibilityMode2;\n})(VisibilityMode || {});\nvar GraphDrawStyle = /* @__PURE__ */ ((GraphDrawStyle2) => {\n  GraphDrawStyle2[\"Bars\"] = \"bars\";\n  GraphDrawStyle2[\"Line\"] = \"line\";\n  GraphDrawStyle2[\"Points\"] = \"points\";\n  return GraphDrawStyle2;\n})(GraphDrawStyle || {});\nvar GraphTransform = /* @__PURE__ */ ((GraphTransform2) => {\n  GraphTransform2[\"Constant\"] = \"constant\";\n  GraphTransform2[\"NegativeY\"] = \"negative-Y\";\n  return GraphTransform2;\n})(GraphTransform || {});\nvar LineInterpolation = /* @__PURE__ */ ((LineInterpolation2) => {\n  LineInterpolation2[\"Linear\"] = \"linear\";\n  LineInterpolation2[\"Smooth\"] = \"smooth\";\n  LineInterpolation2[\"StepAfter\"] = \"stepAfter\";\n  LineInterpolation2[\"StepBefore\"] = \"stepBefore\";\n  return LineInterpolation2;\n})(LineInterpolation || {});\nvar ScaleDistribution = /* @__PURE__ */ ((ScaleDistribution2) => {\n  ScaleDistribution2[\"Linear\"] = \"linear\";\n  ScaleDistribution2[\"Log\"] = \"log\";\n  ScaleDistribution2[\"Ordinal\"] = \"ordinal\";\n  ScaleDistribution2[\"Symlog\"] = \"symlog\";\n  return ScaleDistribution2;\n})(ScaleDistribution || {});\nvar GraphGradientMode = /* @__PURE__ */ ((GraphGradientMode2) => {\n  GraphGradientMode2[\"Hue\"] = \"hue\";\n  GraphGradientMode2[\"None\"] = \"none\";\n  GraphGradientMode2[\"Opacity\"] = \"opacity\";\n  GraphGradientMode2[\"Scheme\"] = \"scheme\";\n  return GraphGradientMode2;\n})(GraphGradientMode || {});\nvar StackingMode = /* @__PURE__ */ ((StackingMode2) => {\n  StackingMode2[\"None\"] = \"none\";\n  StackingMode2[\"Normal\"] = \"normal\";\n  StackingMode2[\"Percent\"] = \"percent\";\n  return StackingMode2;\n})(StackingMode || {});\nvar BarAlignment = /* @__PURE__ */ ((BarAlignment2) => {\n  BarAlignment2[BarAlignment2[\"After\"] = 1] = \"After\";\n  BarAlignment2[BarAlignment2[\"Before\"] = -1] = \"Before\";\n  BarAlignment2[BarAlignment2[\"Center\"] = 0] = \"Center\";\n  return BarAlignment2;\n})(BarAlignment || {});\nvar ScaleOrientation = /* @__PURE__ */ ((ScaleOrientation2) => {\n  ScaleOrientation2[ScaleOrientation2[\"Horizontal\"] = 0] = \"Horizontal\";\n  ScaleOrientation2[ScaleOrientation2[\"Vertical\"] = 1] = \"Vertical\";\n  return ScaleOrientation2;\n})(ScaleOrientation || {});\nvar ScaleDirection = /* @__PURE__ */ ((ScaleDirection2) => {\n  ScaleDirection2[ScaleDirection2[\"Down\"] = -1] = \"Down\";\n  ScaleDirection2[ScaleDirection2[\"Left\"] = -1] = \"Left\";\n  ScaleDirection2[ScaleDirection2[\"Right\"] = 1] = \"Right\";\n  ScaleDirection2[ScaleDirection2[\"Up\"] = 1] = \"Up\";\n  return ScaleDirection2;\n})(ScaleDirection || {});\nconst defaultLineStyle = {\n  dash: []\n};\nvar GraphThresholdsStyleMode = /* @__PURE__ */ ((GraphThresholdsStyleMode2) => {\n  GraphThresholdsStyleMode2[\"Area\"] = \"area\";\n  GraphThresholdsStyleMode2[\"Dashed\"] = \"dashed\";\n  GraphThresholdsStyleMode2[\"DashedAndArea\"] = \"dashed+area\";\n  GraphThresholdsStyleMode2[\"Line\"] = \"line\";\n  GraphThresholdsStyleMode2[\"LineAndArea\"] = \"line+area\";\n  GraphThresholdsStyleMode2[\"Off\"] = \"off\";\n  GraphThresholdsStyleMode2[\"Series\"] = \"series\";\n  return GraphThresholdsStyleMode2;\n})(GraphThresholdsStyleMode || {});\nvar LegendDisplayMode = /* @__PURE__ */ ((LegendDisplayMode2) => {\n  LegendDisplayMode2[\"Hidden\"] = \"hidden\";\n  LegendDisplayMode2[\"List\"] = \"list\";\n  LegendDisplayMode2[\"Table\"] = \"table\";\n  return LegendDisplayMode2;\n})(LegendDisplayMode || {});\nconst defaultReduceDataOptions = {\n  calcs: []\n};\nvar VizOrientation = /* @__PURE__ */ ((VizOrientation2) => {\n  VizOrientation2[\"Auto\"] = \"auto\";\n  VizOrientation2[\"Horizontal\"] = \"horizontal\";\n  VizOrientation2[\"Vertical\"] = \"vertical\";\n  return VizOrientation2;\n})(VizOrientation || {});\nconst defaultOptionsWithTimezones = {\n  timezone: []\n};\nvar BigValueColorMode = /* @__PURE__ */ ((BigValueColorMode2) => {\n  BigValueColorMode2[\"Background\"] = \"background\";\n  BigValueColorMode2[\"BackgroundSolid\"] = \"background_solid\";\n  BigValueColorMode2[\"None\"] = \"none\";\n  BigValueColorMode2[\"Value\"] = \"value\";\n  return BigValueColorMode2;\n})(BigValueColorMode || {});\nvar BigValueGraphMode = /* @__PURE__ */ ((BigValueGraphMode2) => {\n  BigValueGraphMode2[\"Area\"] = \"area\";\n  BigValueGraphMode2[\"Line\"] = \"line\";\n  BigValueGraphMode2[\"None\"] = \"none\";\n  return BigValueGraphMode2;\n})(BigValueGraphMode || {});\nvar BigValueJustifyMode = /* @__PURE__ */ ((BigValueJustifyMode2) => {\n  BigValueJustifyMode2[\"Auto\"] = \"auto\";\n  BigValueJustifyMode2[\"Center\"] = \"center\";\n  return BigValueJustifyMode2;\n})(BigValueJustifyMode || {});\nvar BigValueTextMode = /* @__PURE__ */ ((BigValueTextMode2) => {\n  BigValueTextMode2[\"Auto\"] = \"auto\";\n  BigValueTextMode2[\"Name\"] = \"name\";\n  BigValueTextMode2[\"None\"] = \"none\";\n  BigValueTextMode2[\"Value\"] = \"value\";\n  BigValueTextMode2[\"ValueAndName\"] = \"value_and_name\";\n  return BigValueTextMode2;\n})(BigValueTextMode || {});\nvar PercentChangeColorMode = /* @__PURE__ */ ((PercentChangeColorMode2) => {\n  PercentChangeColorMode2[\"Inverted\"] = \"inverted\";\n  PercentChangeColorMode2[\"SameAsValue\"] = \"same_as_value\";\n  PercentChangeColorMode2[\"Standard\"] = \"standard\";\n  return PercentChangeColorMode2;\n})(PercentChangeColorMode || {});\nvar TooltipDisplayMode = /* @__PURE__ */ ((TooltipDisplayMode2) => {\n  TooltipDisplayMode2[\"Multi\"] = \"multi\";\n  TooltipDisplayMode2[\"None\"] = \"none\";\n  TooltipDisplayMode2[\"Single\"] = \"single\";\n  return TooltipDisplayMode2;\n})(TooltipDisplayMode || {});\nvar SortOrder = /* @__PURE__ */ ((SortOrder2) => {\n  SortOrder2[\"Ascending\"] = \"asc\";\n  SortOrder2[\"Descending\"] = \"desc\";\n  SortOrder2[\"None\"] = \"none\";\n  return SortOrder2;\n})(SortOrder || {});\nconst defaultVizLegendOptions = {\n  calcs: []\n};\nvar BarGaugeDisplayMode = /* @__PURE__ */ ((BarGaugeDisplayMode2) => {\n  BarGaugeDisplayMode2[\"Basic\"] = \"basic\";\n  BarGaugeDisplayMode2[\"Gradient\"] = \"gradient\";\n  BarGaugeDisplayMode2[\"Lcd\"] = \"lcd\";\n  return BarGaugeDisplayMode2;\n})(BarGaugeDisplayMode || {});\nvar BarGaugeValueMode = /* @__PURE__ */ ((BarGaugeValueMode2) => {\n  BarGaugeValueMode2[\"Color\"] = \"color\";\n  BarGaugeValueMode2[\"Hidden\"] = \"hidden\";\n  BarGaugeValueMode2[\"Text\"] = \"text\";\n  return BarGaugeValueMode2;\n})(BarGaugeValueMode || {});\nvar BarGaugeNamePlacement = /* @__PURE__ */ ((BarGaugeNamePlacement2) => {\n  BarGaugeNamePlacement2[\"Auto\"] = \"auto\";\n  BarGaugeNamePlacement2[\"Hidden\"] = \"hidden\";\n  BarGaugeNamePlacement2[\"Left\"] = \"left\";\n  BarGaugeNamePlacement2[\"Top\"] = \"top\";\n  return BarGaugeNamePlacement2;\n})(BarGaugeNamePlacement || {});\nvar BarGaugeSizing = /* @__PURE__ */ ((BarGaugeSizing2) => {\n  BarGaugeSizing2[\"Auto\"] = \"auto\";\n  BarGaugeSizing2[\"Manual\"] = \"manual\";\n  return BarGaugeSizing2;\n})(BarGaugeSizing || {});\nvar TableCellDisplayMode = /* @__PURE__ */ ((TableCellDisplayMode2) => {\n  TableCellDisplayMode2[\"Actions\"] = \"actions\";\n  TableCellDisplayMode2[\"Auto\"] = \"auto\";\n  TableCellDisplayMode2[\"BasicGauge\"] = \"basic\";\n  TableCellDisplayMode2[\"ColorBackground\"] = \"color-background\";\n  TableCellDisplayMode2[\"ColorBackgroundSolid\"] = \"color-background-solid\";\n  TableCellDisplayMode2[\"ColorText\"] = \"color-text\";\n  TableCellDisplayMode2[\"Custom\"] = \"custom\";\n  TableCellDisplayMode2[\"DataLinks\"] = \"data-links\";\n  TableCellDisplayMode2[\"Gauge\"] = \"gauge\";\n  TableCellDisplayMode2[\"GradientGauge\"] = \"gradient-gauge\";\n  TableCellDisplayMode2[\"Image\"] = \"image\";\n  TableCellDisplayMode2[\"JSONView\"] = \"json-view\";\n  TableCellDisplayMode2[\"LcdGauge\"] = \"lcd-gauge\";\n  TableCellDisplayMode2[\"Sparkline\"] = \"sparkline\";\n  return TableCellDisplayMode2;\n})(TableCellDisplayMode || {});\nvar TableCellBackgroundDisplayMode = /* @__PURE__ */ ((TableCellBackgroundDisplayMode2) => {\n  TableCellBackgroundDisplayMode2[\"Basic\"] = \"basic\";\n  TableCellBackgroundDisplayMode2[\"Gradient\"] = \"gradient\";\n  return TableCellBackgroundDisplayMode2;\n})(TableCellBackgroundDisplayMode || {});\nconst defaultTableFooterOptions = {\n  fields: [],\n  reducer: []\n};\nvar TableCellHeight = /* @__PURE__ */ ((TableCellHeight2) => {\n  TableCellHeight2[\"Auto\"] = \"auto\";\n  TableCellHeight2[\"Lg\"] = \"lg\";\n  TableCellHeight2[\"Md\"] = \"md\";\n  TableCellHeight2[\"Sm\"] = \"sm\";\n  return TableCellHeight2;\n})(TableCellHeight || {});\nvar VariableFormatID = /* @__PURE__ */ ((VariableFormatID2) => {\n  VariableFormatID2[\"CSV\"] = \"csv\";\n  VariableFormatID2[\"Date\"] = \"date\";\n  VariableFormatID2[\"Distributed\"] = \"distributed\";\n  VariableFormatID2[\"DoubleQuote\"] = \"doublequote\";\n  VariableFormatID2[\"Glob\"] = \"glob\";\n  VariableFormatID2[\"HTML\"] = \"html\";\n  VariableFormatID2[\"JSON\"] = \"json\";\n  VariableFormatID2[\"Lucene\"] = \"lucene\";\n  VariableFormatID2[\"PercentEncode\"] = \"percentencode\";\n  VariableFormatID2[\"Pipe\"] = \"pipe\";\n  VariableFormatID2[\"QueryParam\"] = \"queryparam\";\n  VariableFormatID2[\"Raw\"] = \"raw\";\n  VariableFormatID2[\"Regex\"] = \"regex\";\n  VariableFormatID2[\"SQLString\"] = \"sqlstring\";\n  VariableFormatID2[\"SingleQuote\"] = \"singlequote\";\n  VariableFormatID2[\"Text\"] = \"text\";\n  VariableFormatID2[\"UriEncode\"] = \"uriencode\";\n  return VariableFormatID2;\n})(VariableFormatID || {});\nvar LogsDedupStrategy = /* @__PURE__ */ ((LogsDedupStrategy2) => {\n  LogsDedupStrategy2[\"exact\"] = \"exact\";\n  LogsDedupStrategy2[\"none\"] = \"none\";\n  LogsDedupStrategy2[\"numbers\"] = \"numbers\";\n  LogsDedupStrategy2[\"signature\"] = \"signature\";\n  return LogsDedupStrategy2;\n})(LogsDedupStrategy || {});\nvar ComparisonOperation = /* @__PURE__ */ ((ComparisonOperation2) => {\n  ComparisonOperation2[\"EQ\"] = \"eq\";\n  ComparisonOperation2[\"GT\"] = \"gt\";\n  ComparisonOperation2[\"GTE\"] = \"gte\";\n  ComparisonOperation2[\"LT\"] = \"lt\";\n  ComparisonOperation2[\"LTE\"] = \"lte\";\n  ComparisonOperation2[\"NEQ\"] = \"neq\";\n  return ComparisonOperation2;\n})(ComparisonOperation || {});\nconst defaultTimeZone = \"browser\";\n\nexport { AxisColorMode, AxisPlacement, BarAlignment, BarGaugeDisplayMode, BarGaugeNamePlacement, BarGaugeSizing, BarGaugeValueMode, BigValueColorMode, BigValueGraphMode, BigValueJustifyMode, BigValueTextMode, ComparisonOperation, DataTopic, FrameGeometrySourceMode, GraphDrawStyle, GraphGradientMode, GraphThresholdsStyleMode, GraphTransform, HeatmapCalculationMode, HeatmapCellLayout, LegendDisplayMode, LineInterpolation, LogsDedupStrategy, LogsSortOrder, PercentChangeColorMode, ResourceDimensionMode, ScalarDimensionMode, ScaleDimensionMode, ScaleDirection, ScaleDistribution, ScaleOrientation, SortOrder, StackingMode, TableCellBackgroundDisplayMode, TableCellDisplayMode, TableCellHeight, TextDimensionMode, TooltipDisplayMode, VariableFormatID, VisibilityMode, VizOrientation, defaultLineStyle, defaultOptionsWithTimezones, defaultReduceDataOptions, defaultTableFooterOptions, defaultTimeZone, defaultVizLegendOptions };\n//# sourceMappingURL=common.gen.mjs.map\n","import { BarAlignment, DataQuery, DataSourceJsonData, GraphDrawStyle, StackingMode } from '@grafana/schema';\nimport {\n  DataFrame,\n  DataQueryError,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  FieldColorModeId,\n  FieldType,\n  LoadingState,\n  LogLevel,\n  MutableDataFrame,\n  ScopedVars,\n  TimeRange,\n  toDataFrame,\n} from '@grafana/data';\nimport { from, isObservable, Observable } from 'rxjs';\nimport { config } from '@grafana/runtime';\nimport { colors } from '@grafana/ui';\nimport { partition } from 'lodash';\n\n/**\n * Partially copy-pasted and adjusted to ClickHouse server-side aggregations\n * from `public/app/core/logsModel.ts` (release-9.4.3 branch)\n *\n * See https://github.com/grafana/grafana/blob/release-9.4.3/public/app/core/logsModel.ts\n */\n\ntype LogsVolumeQueryOptions<T extends DataQuery> = {\n  targets: T[];\n  range: TimeRange;\n};\n\nconst MILLISECOND = 1;\nconst SECOND = 1000 * MILLISECOND;\nconst MINUTE = 60 * SECOND;\nconst HOUR = 60 * MINUTE;\nconst DAY = 24 * HOUR;\n\nconst LogLevelColor = {\n  [LogLevel.critical]: colors[7],\n  [LogLevel.warning]: colors[1],\n  [LogLevel.error]: colors[4],\n  [LogLevel.info]: colors[0],\n  [LogLevel.debug]: colors[5],\n  [LogLevel.trace]: colors[2],\n  [LogLevel.unknown]: getThemeColor('#8e8e8e', '#bdc4cd'),\n};\n\nfunction getThemeColor(dark: string, light: string): string {\n  return config.bootData.user.lightTheme ? light : dark;\n}\n\n/**\n * Creates an observable, which makes requests to get logs volume and aggregates results.\n */\nexport function queryLogsVolume<TQuery extends DataQuery, TOptions extends DataSourceJsonData>(\n  datasource: DataSourceApi<TQuery, TOptions>,\n  logsVolumeRequest: DataQueryRequest<TQuery>,\n  options: LogsVolumeQueryOptions<TQuery>\n): Observable<DataQueryResponse> {\n  return new Observable((observer) => {\n    let rawLogsVolume: DataFrame[] = [];\n    observer.next({\n      state: LoadingState.Loading,\n      error: undefined,\n      data: [],\n    });\n\n    const queryResponse = datasource.query(logsVolumeRequest);\n    const queryObservable = isObservable(queryResponse) ? queryResponse : from(queryResponse);\n\n    const subscription = queryObservable.subscribe({\n      complete: () => {\n        const aggregatedLogsVolume = aggregateRawLogsVolume(rawLogsVolume);\n        if (aggregatedLogsVolume[0]) {\n          aggregatedLogsVolume[0].meta = {\n            custom: {\n              targets: options.targets,\n              absoluteRange: { from: options.range.from.valueOf(), to: options.range.to.valueOf() },\n            },\n          };\n        }\n        observer.next({\n          state: LoadingState.Done,\n          error: undefined,\n          data: aggregatedLogsVolume,\n        });\n        observer.complete();\n      },\n      next: (dataQueryResponse: DataQueryResponse) => {\n        const { error } = dataQueryResponse;\n        if (error !== undefined) {\n          observer.next({\n            state: LoadingState.Error,\n            error,\n            data: [],\n          });\n          observer.error(error);\n        } else {\n          rawLogsVolume = rawLogsVolume.concat(dataQueryResponse.data.map(toDataFrame));\n        }\n      },\n      error: (error: DataQueryError) => {\n        observer.next({\n          state: LoadingState.Error,\n          error: error,\n          data: [],\n        });\n        observer.error(error);\n      },\n    });\n    return () => {\n      subscription?.unsubscribe();\n    };\n  });\n}\n\n/**\n * Take multiple data frames, sum up values and group by level.\n * Return a list of data frames, each representing single level.\n */\nexport function aggregateRawLogsVolume(rawLogsVolume: DataFrame[]): DataFrame[] {\n  if (rawLogsVolume.length !== 1) {\n    return []; // we always expect a single DataFrame with all the aggregations from ClickHouse\n  }\n\n  const [[timeField], levelFields] = partition(rawLogsVolume[0].fields, (f) => f.name === TIME_FIELD_ALIAS);\n  if (timeField === undefined) {\n    return []; // should never happen if we have a DataFrame available\n  }\n\n  const oneLevelDetected = levelFields.length === 1 && levelFields[0].name === DEFAULT_LOGS_ALIAS;\n  if (oneLevelDetected) {\n    levelFields[0].name = 'logs';\n  }\n\n  const totalLength = timeField.values.length;\n  return levelFields.map((field) => {\n    const logLevel = LogLevel[field.name as keyof typeof LogLevel] || LogLevel.unknown;\n    const df = new MutableDataFrame();\n    df.addField({ name: 'Time', type: FieldType.time, values: timeField.values }, totalLength);\n    df.addField({\n      name: 'Value',\n      type: FieldType.number,\n      config: getLogVolumeFieldConfig(logLevel, oneLevelDetected),\n      values: field.values,\n    });\n    return df;\n  });\n}\n\n/**\n * Returns field configuration used to render logs volume bars\n */\nfunction getLogVolumeFieldConfig(level: LogLevel, oneLevelDetected: boolean) {\n  const name = oneLevelDetected && level === LogLevel.unknown ? 'logs' : level;\n  const color = LogLevelColor[level];\n  return {\n    displayNameFromDS: name,\n    color: {\n      mode: FieldColorModeId.Fixed,\n      fixedColor: color,\n    },\n    custom: {\n      drawStyle: GraphDrawStyle.Bars,\n      barAlignment: BarAlignment.Center,\n      lineColor: color,\n      pointColor: color,\n      fillColor: color,\n      lineWidth: 1,\n      fillOpacity: 100,\n      stacking: {\n        mode: StackingMode.Normal,\n        group: 'A',\n      },\n    },\n  };\n}\n\nexport function getIntervalInfo(scopedVars: ScopedVars): { interval: string; intervalMs?: number } {\n  if (scopedVars.__interval_ms) {\n    let intervalMs: number = scopedVars.__interval_ms.value;\n    let interval;\n    if (intervalMs > HOUR) {\n      intervalMs = DAY;\n      interval = '1d';\n    } else if (intervalMs > MINUTE) {\n      intervalMs = HOUR;\n      interval = '1h';\n    } else if (intervalMs > SECOND) {\n      intervalMs = MINUTE;\n      interval = '1m';\n    } else {\n      intervalMs = SECOND;\n      interval = '1s';\n    }\n\n    return { interval, intervalMs };\n  } else {\n    return { interval: '$__interval' };\n  }\n}\n\nexport function getTimeFieldRoundingClause(scopedVars: ScopedVars, timeField: string): string {\n  // NB: slight discrepancy with getIntervalInfo here\n  // it returns { interval: '$__interval' } when the interval from the ScopedVars is undefined,\n  // but we fall back to DAY here\n  let interval = 'DAY';\n  if (scopedVars.__interval_ms) {\n    let intervalMs: number = scopedVars.__interval_ms.value;\n    if (intervalMs > HOUR) {\n      interval = 'DAY';\n    } else if (intervalMs > MINUTE) {\n      interval = 'HOUR';\n    } else if (intervalMs > SECOND) {\n      interval = 'MINUTE';\n    } else {\n      interval = 'SECOND';\n    }\n  }\n  return `toStartOfInterval(\"${timeField}\", INTERVAL 1 ${interval})`;\n}\n\nexport const TIME_FIELD_ALIAS = 'time';\nexport const DEFAULT_LOGS_ALIAS = 'logs';\n\n/**\n * Mapping of canonical log levels to corresponding IN clauses\n * with all possible lower, upper and capital case values for this level\n *\n * For example: trace -> IN ('trace', 'TRACE', 'Trace')\n *\n * @see {LogLevel} for reference values\n */\ntype LogLevelToInClause = Record<'critical' | 'error' | 'warn' | 'info' | 'debug' | 'trace' | 'unknown', string>;\nexport const LOG_LEVEL_TO_IN_CLAUSE: LogLevelToInClause = (() => {\n  const levels = {\n    critical: ['critical', 'fatal', 'crit', 'alert', 'emerg'],\n    error: ['error', 'err', 'eror'],\n    warn: ['warn', 'warning'],\n    info: ['info', 'information', 'informational'],\n    debug: ['debug', 'dbug'],\n    trace: ['trace'],\n    unknown: ['unknown'],\n  };\n  return (Object.keys(levels) as Array<keyof typeof levels>).reduce((allLevels, level) => {\n    allLevels[level] = `${[\n      ...levels[level].map((l) => `'${l}'`),\n      ...levels[level].map((l) => `'${l.toUpperCase()}'`),\n      ...levels[level].map((l) => `'${l.charAt(0).toUpperCase() + l.slice(1)}'`),\n    ].join(',')}`;\n    return allLevels;\n  }, {} as LogLevelToInClause);\n})();\n\nexport const allLogLevels = [\n  'critical',\n  'fatal',\n  'crit',\n  'alert',\n  'emerg',\n  'error',\n  'err',\n  'eror',\n  'warn',\n  'warning',\n  'info',\n  'information',\n  'informational',\n  'debug',\n  'dbug',\n  'trace',\n  'unknown',\n];\n","import { ColumnHint, TimeUnit } from 'types/queryBuilder';\n\nexport const defaultLogsTable = 'otel_logs';\nexport const defaultTraceTable = 'otel_traces';\n\nexport const traceTimestampTableSuffix = '_trace_id_ts';\n\nexport interface OtelVersion {\n  name: string;\n  version: string;\n  specUrl?: string;\n  logsTable: string;\n  logColumnMap: Map<ColumnHint, string>;\n  logLevels: string[];\n  traceTable: string;\n  traceColumnMap: Map<ColumnHint, string>;\n  traceDurationUnit: TimeUnit.Nanoseconds;\n  flattenNested: boolean;\n  traceEventsColumnPrefix: string;\n  traceLinksColumnPrefix: string;\n}\n\nconst otel129: OtelVersion = {\n  name: '1.2.9',\n  version: '1.29.0',\n  specUrl: 'https://opentelemetry.io/docs/specs/otel',\n  logsTable: defaultLogsTable,\n  logColumnMap: new Map<ColumnHint, string>([\n    [ColumnHint.Time, 'Timestamp'],\n    [ColumnHint.LogMessage, 'Body'],\n    [ColumnHint.LogLevel, 'SeverityText'],\n    [ColumnHint.LogLabels, 'LogAttributes'],\n    [ColumnHint.TraceId, 'TraceId'],\n  ]),\n  logLevels: ['TRACE', 'DEBUG', 'INFO', 'WARN', 'ERROR', 'FATAL'],\n  traceTable: defaultTraceTable,\n  traceColumnMap: new Map<ColumnHint, string>([\n    [ColumnHint.Time, 'Timestamp'],\n    [ColumnHint.TraceId, 'TraceId'],\n    [ColumnHint.TraceSpanId, 'SpanId'],\n    [ColumnHint.TraceParentSpanId, 'ParentSpanId'],\n    [ColumnHint.TraceServiceName, 'ServiceName'],\n    [ColumnHint.TraceOperationName, 'SpanName'],\n    [ColumnHint.TraceDurationTime, 'Duration'],\n    [ColumnHint.TraceTags, 'SpanAttributes'],\n    [ColumnHint.TraceServiceTags, 'ResourceAttributes'],\n    [ColumnHint.TraceStatusCode, 'StatusCode'],\n    [ColumnHint.TraceKind, 'SpanKind'],\n    [ColumnHint.TraceStatusMessage, 'StatusMessage'],\n    [ColumnHint.TraceState, 'TraceState'],\n  ]),\n  flattenNested: false,\n  traceDurationUnit: TimeUnit.Nanoseconds,\n  traceEventsColumnPrefix: 'Events',\n  traceLinksColumnPrefix: 'Links',\n};\n\nexport const versions: readonly OtelVersion[] = [\n  // When selected, will always keep OTEL config up to date as new versions are added\n  { ...otel129, name: `latest (${otel129.name})`, version: 'latest' },\n  otel129,\n];\n\nexport const getLatestVersion = (): OtelVersion => versions[0];\nexport const getVersion = (version: string | undefined): OtelVersion | undefined => {\n  if (!version) {\n    return;\n  }\n\n  return versions.find((v) => v.version === version);\n};\n\nexport default {\n  traceTimestampTableSuffix,\n  versions,\n  getLatestVersion,\n  getVersion,\n};\n","import {\n  BooleanFilter,\n  BuilderMode,\n  ColumnHint,\n  DateFilterWithValue,\n  FilterOperator,\n  MultiFilter,\n  NumberFilter,\n  QueryBuilderOptions,\n  QueryType,\n  SelectedColumn,\n  StringFilter,\n  TimeUnit,\n} from 'types/queryBuilder';\nimport otel from 'otel';\n\n/**\n * Generates a SQL string for the given QueryBuilderOptions\n */\nexport const generateSql = (options: QueryBuilderOptions): string => {\n  const hasTraceIdFilter = options.meta?.isTraceIdMode && options.meta?.traceId;\n  if (options.queryType === QueryType.Traces && hasTraceIdFilter) {\n    return generateTraceIdQuery(options);\n  } else if (options.queryType === QueryType.Traces) {\n    return generateTraceSearchQuery(options);\n  } else if (options.queryType === QueryType.Logs) {\n    return generateLogsQuery(options);\n  } else if (options.queryType === QueryType.TimeSeries && options.mode !== BuilderMode.Trend) {\n    return generateSimpleTimeSeriesQuery(options);\n  } else if (options.queryType === QueryType.TimeSeries && options.mode === BuilderMode.Trend) {\n    return generateAggregateTimeSeriesQuery(options);\n  } else if (options.queryType === QueryType.Table) {\n    return generateTableQuery(options);\n  }\n\n  return '';\n};\n\n/**\n * Generates trace search query.\n */\nconst generateTraceSearchQuery = (options: QueryBuilderOptions): string => {\n  const { database, table } = options;\n\n  const queryParts: string[] = [];\n\n  // TODO: these columns could be a map or some other convenience function\n  const selectParts: string[] = [];\n  const traceId = getColumnByHint(options, ColumnHint.TraceId);\n  if (traceId !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceId.name)} as traceID`);\n  }\n\n  const traceServiceName = getColumnByHint(options, ColumnHint.TraceServiceName);\n  if (traceServiceName !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceServiceName.name)} as serviceName`);\n  }\n\n  const traceOperationName = getColumnByHint(options, ColumnHint.TraceOperationName);\n  if (traceOperationName !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceOperationName.name)} as operationName`);\n  }\n\n  const traceStartTime = getColumnByHint(options, ColumnHint.Time);\n  if (traceStartTime !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceStartTime.name)} as startTime`);\n  }\n\n  const traceDurationTime = getColumnByHint(options, ColumnHint.TraceDurationTime);\n  if (traceDurationTime !== undefined) {\n    const timeUnit = options.meta?.traceDurationUnit;\n    selectParts.push(getTraceDurationSelectSql(escapeIdentifier(traceDurationTime.name), timeUnit));\n  }\n\n  const selectPartsSql = selectParts.join(', ');\n\n  queryParts.push('SELECT');\n  queryParts.push(selectPartsSql);\n  queryParts.push('FROM');\n  queryParts.push(getTableIdentifier(database, table));\n\n  const filterParts = getFilters(options);\n  if (filterParts) {\n    queryParts.push('WHERE');\n    queryParts.push(filterParts);\n  }\n\n  const orderBy = getOrderBy(options);\n  if (orderBy) {\n    queryParts.push('ORDER BY');\n    queryParts.push(orderBy);\n  }\n\n  const limit = getLimit(options.limit);\n  if (limit !== '') {\n    queryParts.push(limit);\n  }\n\n  return concatQueryParts(queryParts);\n};\n\n/**\n * Generates trace query with columns that fit Grafana's Trace panel\n * Column aliases follow this structure:\n * https://grafana.com/docs/grafana/latest/explore/trace-integration/#data-frame-structure\n */\nconst generateTraceIdQuery = (options: QueryBuilderOptions): string => {\n  const { database, table } = options;\n\n  const queryParts: string[] = [];\n\n  // TODO: these columns could be a map or some other convenience function\n  const selectParts: string[] = [];\n  const traceId = getColumnByHint(options, ColumnHint.TraceId);\n  if (traceId !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceId.name)} as traceID`);\n  }\n\n  const traceSpanId = getColumnByHint(options, ColumnHint.TraceSpanId);\n  if (traceSpanId !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceSpanId.name)} as spanID`);\n  }\n\n  const traceParentSpanId = getColumnByHint(options, ColumnHint.TraceParentSpanId);\n  if (traceParentSpanId !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceParentSpanId.name)} as parentSpanID`);\n  }\n\n  const traceServiceName = getColumnByHint(options, ColumnHint.TraceServiceName);\n  if (traceServiceName !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceServiceName.name)} as serviceName`);\n  }\n\n  const traceOperationName = getColumnByHint(options, ColumnHint.TraceOperationName);\n  if (traceOperationName !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceOperationName.name)} as operationName`);\n  }\n\n  const traceStartTime = getColumnByHint(options, ColumnHint.Time);\n  if (traceStartTime !== undefined) {\n    selectParts.push(`${convertTimeFieldToMilliseconds(escapeIdentifier(traceStartTime.name))} as startTime`);\n  }\n\n  const traceDurationTime = getColumnByHint(options, ColumnHint.TraceDurationTime);\n  if (traceDurationTime !== undefined) {\n    const timeUnit = options.meta?.traceDurationUnit;\n    selectParts.push(getTraceDurationSelectSql(escapeIdentifier(traceDurationTime.name), timeUnit));\n  }\n\n  // TODO: for tags and serviceTags, consider the column type. They might not require mapping, they could already be JSON.\n  const traceTags = getColumnByHint(options, ColumnHint.TraceTags);\n  if (traceTags !== undefined) {\n    selectParts.push(\n      `arrayMap(key -> map('key', key, 'value',${escapeIdentifier(traceTags.name)}[key]), mapKeys(${escapeIdentifier(traceTags.name)})) as tags`\n    );\n  }\n\n  const traceServiceTags = getColumnByHint(options, ColumnHint.TraceServiceTags);\n  if (traceServiceTags !== undefined) {\n    selectParts.push(\n      `arrayMap(key -> map('key', key, 'value',${escapeIdentifier(traceServiceTags.name)}[key]), mapKeys(${escapeIdentifier(traceServiceTags.name)})) as serviceTags`\n    );\n  }\n\n  const traceStatusCode = getColumnByHint(options, ColumnHint.TraceStatusCode);\n  if (traceStatusCode !== undefined) {\n    selectParts.push(\n      `if(${escapeIdentifier(traceStatusCode.name)} IN ('Error', 'STATUS_CODE_ERROR'), 2, 0) as statusCode`\n    );\n  }\n\n  const flattenNested = Boolean(options.meta?.flattenNested);\n\n  const traceEventsPrefix = options.meta?.traceEventsColumnPrefix || '';\n  if (traceEventsPrefix !== '') {\n    if (flattenNested) {\n      selectParts.push(\n        [\n          `arrayMap(event -> tuple(multiply(toFloat64(event.Timestamp), 1000),`,\n          `arrayConcat(arrayMap(key -> map('key', key, 'value', event.Attributes[key]),`,\n          `mapKeys(event.Attributes)), [map('key', 'message', 'value', event.Name)]))::Tuple(timestamp Float64, fields Array(Map(String, String))),`,\n          `${escapeIdentifier(traceEventsPrefix)}) as logs`,\n        ].join(' ')\n      );\n    } else {\n      selectParts.push(\n        [\n          `arrayMap((name, timestamp, attributes) -> tuple(name, toString(toUnixTimestamp64Milli(timestamp)),`,\n          `arrayMap( key -> map('key', key, 'value', attributes[key]),`,\n          `mapKeys(attributes)))::Tuple(name String, timestamp String, fields Array(Map(String, String))),`,\n          `${escapeIdentifier(traceEventsPrefix)}.Name, ${escapeIdentifier(traceEventsPrefix)}.Timestamp,`,\n          `${escapeIdentifier(traceEventsPrefix)}.Attributes) AS logs`,\n        ].join(' ')\n      );\n    }\n  }\n\n  const traceLinksPrefix = options.meta?.traceLinksColumnPrefix || '';\n  if (traceLinksPrefix !== '') {\n    if (flattenNested) {\n      selectParts.push(\n        [\n          `arrayMap(link -> tuple(link.TraceId, link.SpanId, arrayMap(key -> map('key', key, 'value', link.Attributes[key]),`,\n          `mapKeys(link.Attributes)))::Tuple(traceID String, spanID String, tags Array(Map(String, String))),`,\n          `${escapeIdentifier(traceLinksPrefix)}) AS references`,\n        ].join(' ')\n      );\n    } else {\n      selectParts.push(\n        [\n          `arrayMap((traceID, spanID, attributes) -> tuple(traceID, spanID, arrayMap(key -> map('key', key, 'value', attributes[key]),`,\n          `mapKeys(attributes)))::Tuple(traceID String, spanID String, tags Array(Map(String, String))),`,\n          `${escapeIdentifier(traceLinksPrefix)}.TraceId, ${escapeIdentifier(traceLinksPrefix)}.SpanId,`,\n          `${escapeIdentifier(traceLinksPrefix)}.Attributes) AS references`,\n        ].join(' ')\n      );\n    }\n  }\n\n  const traceKind = getColumnByHint(options, ColumnHint.TraceKind);\n  if (traceKind !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceKind.name)} as kind`);\n  }\n\n  const traceStatusMessage = getColumnByHint(options, ColumnHint.TraceStatusMessage);\n  if (traceStatusMessage !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceStatusMessage.name)} as statusMessage`);\n  }\n\n  const traceInstrumentationLibraryName = getColumnByHint(options, ColumnHint.TraceInstrumentationLibraryName);\n  if (traceInstrumentationLibraryName !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceInstrumentationLibraryName.name)} as instrumentationLibraryName`);\n  }\n\n  const traceInstrumentationLibraryVersion = getColumnByHint(options, ColumnHint.TraceInstrumentationLibraryVersion);\n  if (traceInstrumentationLibraryVersion !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceInstrumentationLibraryVersion.name)} as instrumentationLibraryVersion`);\n  }\n\n  const traceState = getColumnByHint(options, ColumnHint.TraceState);\n  if (traceState !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceState.name)} as traceState`);\n  }\n\n  const selectPartsSql = selectParts.join(', ');\n\n  // Optimize trace ID filtering for OTel enabled trace lookups\n  const hasTraceIdFilter = options.meta?.isTraceIdMode && options.meta?.traceId;\n  const otelVersion = otel.getVersion(options.meta?.otelVersion);\n  const applyTraceIdOptimization =\n    hasTraceIdFilter && traceStartTime !== undefined && options.meta?.otelEnabled && otelVersion;\n  if (applyTraceIdOptimization) {\n    const traceId = options.meta!.traceId;\n    const timestampTable = getTableIdentifier(database, table + otel.traceTimestampTableSuffix);\n    queryParts.push('WITH');\n    queryParts.push(`'${traceId}' as trace_id,`);\n    queryParts.push(`(SELECT min(Start) FROM ${timestampTable} WHERE TraceId = trace_id) as trace_start,`);\n    queryParts.push(`(SELECT max(End) + 1 FROM ${timestampTable} WHERE TraceId = trace_id) as trace_end`);\n  }\n\n  queryParts.push('SELECT');\n  queryParts.push(selectPartsSql);\n  queryParts.push('FROM');\n  queryParts.push(getTableIdentifier(database, table));\n\n  const filterParts = getFilters(options);\n\n  if (hasTraceIdFilter || filterParts) {\n    queryParts.push('WHERE');\n  }\n\n  if (applyTraceIdOptimization) {\n    queryParts.push('traceID = trace_id');\n    queryParts.push('AND');\n    queryParts.push(`${escapeIdentifier(traceStartTime.name)} >= trace_start`);\n    queryParts.push('AND');\n    queryParts.push(`${escapeIdentifier(traceStartTime.name)} <= trace_end`);\n  } else if (hasTraceIdFilter) {\n    const traceId = options.meta!.traceId;\n    queryParts.push(`traceID = '${traceId}'`);\n  }\n\n  if (filterParts) {\n    if (hasTraceIdFilter) {\n      queryParts.push('AND');\n    }\n\n    queryParts.push(filterParts);\n  }\n\n  const orderBy = getOrderBy(options);\n  if (orderBy) {\n    queryParts.push('ORDER BY');\n    queryParts.push(orderBy);\n  }\n\n  const limit = getLimit(options.limit);\n  if (limit !== '') {\n    queryParts.push(limit);\n  }\n\n  return concatQueryParts(queryParts);\n};\n\n/**\n * Generates logs query with columns that fit Grafana's Logs panel\n * Column aliases follow this structure:\n * https://grafana.com/developers/plugin-tools/tutorials/build-a-logs-data-source-plugin#logs-data-frame-format\n *\n * note: column order seems to matter as well as alias name\n */\nconst generateLogsQuery = (_options: QueryBuilderOptions): string => {\n  // Copy columns so column aliases can be safely mutated\n  const options = { ..._options, columns: _options.columns?.map((c) => ({ ...c })) };\n  const { database, table } = options;\n\n  const queryParts: string[] = [];\n\n  // TODO: these columns could be a map or some other convenience function\n  const selectParts: string[] = [];\n  const logTime = getColumnByHint(options, ColumnHint.Time);\n  if (logTime !== undefined) {\n    // Must be first column in list.\n    logTime.alias = logColumnHintsToAlias.get(ColumnHint.Time);\n    selectParts.push(getColumnIdentifier(logTime));\n  }\n\n  const logMessage = getColumnByHint(options, ColumnHint.LogMessage);\n  if (logMessage !== undefined) {\n    // Must be second column in list.\n    logMessage.alias = logColumnHintsToAlias.get(ColumnHint.LogMessage);\n    selectParts.push(getColumnIdentifier(logMessage));\n  }\n\n  const logLevel = getColumnByHint(options, ColumnHint.LogLevel);\n  if (logLevel !== undefined) {\n    // TODO: \"severity\" should be a number, but \"level\" can be a string? Perhaps we can check the column type here?\n    logLevel.alias = logColumnHintsToAlias.get(ColumnHint.LogLevel);\n    selectParts.push(getColumnIdentifier(logLevel));\n  }\n\n  const logLabels = getColumnByHint(options, ColumnHint.LogLabels);\n  if (logLabels !== undefined) {\n    logLabels.alias = logColumnHintsToAlias.get(ColumnHint.LogLabels);\n    selectParts.push(getColumnIdentifier(logLabels));\n  }\n\n  const traceId = getColumnByHint(options, ColumnHint.TraceId);\n  if (traceId !== undefined) {\n    traceId.alias = logColumnHintsToAlias.get(ColumnHint.TraceId);\n    selectParts.push(getColumnIdentifier(traceId));\n  }\n\n  options.columns\n    ?.filter((c) => c.hint === undefined) // remove specialized columns\n    .forEach((c) => selectParts.push(getColumnIdentifier(c)));\n\n  const selectPartsSql = selectParts.join(', ');\n\n  queryParts.push('SELECT');\n  queryParts.push(selectPartsSql);\n  queryParts.push('FROM');\n  queryParts.push(getTableIdentifier(database, table));\n\n  const filterParts = getFilters(options);\n  const hasLogMessageFilter = logMessage && options.meta?.logMessageLike;\n\n  if (filterParts || hasLogMessageFilter) {\n    queryParts.push('WHERE');\n  }\n\n  if (filterParts) {\n    queryParts.push(filterParts);\n  }\n\n  if (hasLogMessageFilter) {\n    if (filterParts) {\n      queryParts.push('AND');\n    }\n\n    queryParts.push(`(${logMessage.alias || logMessage.name} LIKE '%${options.meta!.logMessageLike}%')`);\n  }\n\n  const orderBy = getOrderBy(options);\n  if (orderBy) {\n    queryParts.push('ORDER BY');\n    queryParts.push(orderBy);\n  }\n\n  const limit = getLimit(options.limit);\n  if (limit !== '') {\n    queryParts.push(limit);\n  }\n\n  return concatQueryParts(queryParts);\n};\n\n/**\n * Generates a simple time series query. Includes user selected columns.\n */\nconst generateSimpleTimeSeriesQuery = (_options: QueryBuilderOptions): string => {\n  // Copy columns so column aliases can be safely mutated\n  const options = { ..._options, columns: _options.columns?.map((c) => ({ ...c })) };\n  const { database, table } = options;\n\n  const queryParts: string[] = [];\n\n  const selectParts: string[] = [];\n  const selectNames = new Set<string>();\n  const timeColumn = getColumnByHint(options, ColumnHint.Time);\n  if (timeColumn !== undefined) {\n    timeColumn.alias = 'time';\n    selectParts.push(getColumnIdentifier(timeColumn));\n    selectNames.add(timeColumn.alias);\n  }\n\n  const columnsExcludingTimeColumn = options.columns?.filter((c) => c.hint !== ColumnHint.Time);\n  columnsExcludingTimeColumn?.forEach((c) => {\n    selectParts.push(getColumnIdentifier(c));\n    selectNames.add(c.alias || c.name);\n  });\n\n  const aggregateSelectParts: string[] = [];\n  options.aggregates?.forEach((agg) => {\n    const alias = agg.alias ? ` as ${agg.alias.replace(/ /g, '_')}` : '';\n    const name = `${agg.aggregateType}(${agg.column})`;\n    aggregateSelectParts.push(`${name}${alias}`);\n    selectNames.add(alias ? alias.substring(4) : name);\n  });\n\n  options.groupBy?.forEach((g) => {\n    if (selectNames.has(g)) {\n      // don't add if already selected\n      return;\n    }\n\n    selectParts.push(g);\n  });\n\n  // (v3) aggregate selections go AFTER group by\n  aggregateSelectParts.forEach((a) => selectParts.push(a));\n\n  const selectPartsSql = selectParts.join(', ');\n\n  queryParts.push('SELECT');\n  queryParts.push(selectPartsSql);\n  queryParts.push('FROM');\n  queryParts.push(getTableIdentifier(database, table));\n\n  const filterParts = getFilters(options);\n  if (filterParts) {\n    queryParts.push('WHERE');\n    queryParts.push(filterParts);\n  }\n\n  const hasAggregates = options.aggregates?.length || 0 > 0;\n  const hasGroupBy = options.groupBy?.length || 0 > 0;\n  if (hasAggregates || hasGroupBy) {\n    queryParts.push('GROUP BY');\n  }\n\n  if ((options.groupBy?.length || 0) > 0) {\n    const groupByTime = timeColumn !== undefined ? `, ${timeColumn.alias}` : '';\n    queryParts.push(`${options.groupBy!.join(', ')}${groupByTime}`);\n  } else if (hasAggregates && timeColumn) {\n    queryParts.push(timeColumn.alias!);\n  }\n\n  const orderBy = getOrderBy(options);\n  if (orderBy) {\n    queryParts.push('ORDER BY');\n    queryParts.push(orderBy);\n  }\n\n  const limit = getLimit(options.limit);\n  if (limit !== '') {\n    queryParts.push(limit);\n  }\n\n  return concatQueryParts(queryParts);\n};\n\n/**\n * Generates an aggregate time series query.\n */\nconst generateAggregateTimeSeriesQuery = (_options: QueryBuilderOptions): string => {\n  // Copy columns so column aliases can be safely mutated\n  const options = { ..._options, columns: _options.columns?.map((c) => ({ ...c })) };\n  const { database, table } = options;\n\n  const queryParts: string[] = [];\n  const selectParts: string[] = [];\n\n  const timeColumn = getColumnByHint(options, ColumnHint.Time);\n  if (timeColumn !== undefined) {\n    timeColumn.name = `$__timeInterval(${timeColumn.name})`;\n    timeColumn.alias = 'time';\n    selectParts.push(getColumnIdentifier(timeColumn));\n  }\n\n  options.groupBy?.forEach((g) => selectParts.push(g));\n\n  options.aggregates?.forEach((agg) => {\n    const alias = agg.alias ? ` as ${agg.alias.replace(/ /g, '_')}` : '';\n    const name = `${agg.aggregateType}(${agg.column})`;\n    selectParts.push(`${name}${alias}`);\n  });\n\n  const selectPartsSql = selectParts.join(', ');\n\n  queryParts.push('SELECT');\n  queryParts.push(selectPartsSql);\n  queryParts.push('FROM');\n  queryParts.push(getTableIdentifier(database, table));\n\n  const filterParts = getFilters(options);\n  if (filterParts) {\n    queryParts.push('WHERE');\n    queryParts.push(filterParts);\n  }\n\n  queryParts.push('GROUP BY');\n  if ((options.groupBy?.length || 0) > 0) {\n    const groupByTime = timeColumn !== undefined ? `, ${timeColumn.alias}` : '';\n    queryParts.push(`${options.groupBy!.join(', ')}${groupByTime}`);\n  } else if (timeColumn) {\n    queryParts.push(timeColumn.alias!);\n  }\n\n  const orderBy = getOrderBy(options);\n  if (orderBy) {\n    queryParts.push('ORDER BY');\n    queryParts.push(orderBy);\n  }\n\n  const limit = getLimit(options.limit);\n  if (limit !== '') {\n    queryParts.push(limit);\n  }\n\n  return concatQueryParts(queryParts);\n};\n\n/**\n * Generates a table query.\n */\nconst generateTableQuery = (options: QueryBuilderOptions): string => {\n  const { database, table } = options;\n  const isAggregateMode = options.mode === BuilderMode.Aggregate;\n\n  const queryParts: string[] = [];\n  const selectParts: string[] = [];\n  const selectNames = new Set<string>();\n\n  options.columns?.forEach((c) => {\n    selectParts.push(getColumnIdentifier(c));\n    selectNames.add(c.alias || c.name);\n  });\n\n  if (isAggregateMode) {\n    options.aggregates?.forEach((agg) => {\n      const alias = agg.alias ? ` as ${agg.alias.replace(/ /g, '_')}` : '';\n      const name = `${agg.aggregateType}(${agg.column})`;\n      selectParts.push(`${name}${alias}`);\n      selectNames.add(alias ? alias.substring(4) : name);\n    });\n\n    options.groupBy?.forEach((g) => {\n      if (selectNames.has(g)) {\n        // don't add if already selected\n        return;\n      }\n\n      // user must manually select groupBys, for flexibility\n      // selectParts.push(g)\n    });\n  }\n\n  const selectPartsSql = selectParts.join(', ');\n\n  queryParts.push('SELECT');\n  queryParts.push(selectPartsSql);\n  queryParts.push('FROM');\n  queryParts.push(getTableIdentifier(database, table));\n\n  const filterParts = getFilters(options);\n  if (filterParts) {\n    queryParts.push('WHERE');\n    queryParts.push(filterParts);\n  }\n\n  if (isAggregateMode && (options.groupBy?.length || 0) > 0) {\n    queryParts.push('GROUP BY');\n    queryParts.push(options.groupBy!.join(', '));\n  }\n\n  const orderBy = getOrderBy(options);\n  if (orderBy) {\n    queryParts.push('ORDER BY');\n    queryParts.push(orderBy);\n  }\n\n  const limit = getLimit(options.limit);\n  if (limit !== '') {\n    queryParts.push(limit);\n  }\n\n  return concatQueryParts(queryParts);\n};\n\nexport const isAggregateQuery = (builder: QueryBuilderOptions): boolean => (builder.aggregates?.length || 0) > 0;\nexport const getColumnByHint = (options: QueryBuilderOptions, hint: ColumnHint): SelectedColumn | undefined =>\n  options.columns?.find((c) => c.hint === hint);\nexport const getColumnIndexByHint = (options: QueryBuilderOptions, hint: ColumnHint): number =>\n  (options.columns || []).findIndex((c) => c.hint === hint);\nexport const getColumnsByHints = (\n  options: QueryBuilderOptions,\n  hints: readonly ColumnHint[]\n): readonly SelectedColumn[] => {\n  const columns = [];\n\n  for (let hint of hints) {\n    const col = getColumnByHint(options, hint);\n    if (col !== undefined) {\n      columns.push(col);\n    }\n  }\n\n  return columns;\n};\n\nconst getColumnIdentifier = (col: SelectedColumn): string => {\n  let colName = col.name;\n\n  // allow for functions like count()\n  if (\n    colName.includes('(') ||\n    colName.includes(')') ||\n    colName.includes('\"') ||\n    colName.includes('\"') ||\n    colName.includes(' as ')\n  ) {\n    colName = col.name;\n  } else if (colName.includes(' ')) {\n    colName = escapeIdentifier(col.name);\n  }\n\n  if (col.alias && col.alias !== col.name && escapeIdentifier(col.alias) !== colName) {\n    return `${colName} as \"${col.alias}\"`;\n  }\n\n  return colName;\n};\n\nconst getTableIdentifier = (database: string, table: string): string => {\n  const sep = !database || !table ? '' : '.';\n  return `${escapeIdentifier(database)}${sep}${escapeIdentifier(table)}`;\n};\n\nconst escapeIdentifier = (id: string): string => {\n  return id ? `\"${id}\"` : '';\n};\n\nconst escapeValue = (value: string): string => {\n  if (value.includes('$') || value.includes('(') || value.includes(')') || value.includes(\"'\") || value.includes('\"')) {\n    return value;\n  }\n\n  return `'${value}'`;\n};\n\n/**\n * Returns the SELECT column for trace duration.\n * Time unit is used to convert the value to milliseconds, as is required by Grafana's Trace panel.\n */\nconst getTraceDurationSelectSql = (columnIdentifier: string, timeUnit?: TimeUnit): string => {\n  const alias = 'duration';\n  switch (timeUnit) {\n    case TimeUnit.Seconds:\n      return `multiply(${columnIdentifier}, 1000) as ${alias}`;\n    case TimeUnit.Milliseconds:\n      return `${columnIdentifier} as ${alias}`;\n    case TimeUnit.Microseconds:\n      return `multiply(${columnIdentifier}, 0.001) as ${alias}`;\n    case TimeUnit.Nanoseconds:\n      return `multiply(${columnIdentifier}, 0.000001) as ${alias}`;\n    default:\n      return `${columnIdentifier} as ${alias}`;\n  }\n};\n\n/** Returns the input time field converted to a Unix timestamp in nanoseconds and then adjusted to milliseconds. */\nconst convertTimeFieldToMilliseconds = (columnIdentifier: string) =>\n  `multiply(toUnixTimestamp64Nano(${columnIdentifier}), 0.000001)`;\n\n/**\n * Concatenates query parts with no empty spaces.\n */\nconst concatQueryParts = (parts: readonly string[]): string => {\n  let query = '';\n  for (let i = 0; i < parts.length; i++) {\n    const p = parts[i];\n    if (!p) {\n      continue;\n    }\n\n    query += p;\n\n    if (i !== parts.length - 1) {\n      query += ' ';\n    }\n  }\n\n  return query;\n};\n\n/**\n * Returns the order by list, excluding the \"ORDER BY\" keyword.\n */\nconst getOrderBy = (options: QueryBuilderOptions): string => {\n  const orderByParts: string[] = [];\n  if ((options.orderBy?.length || 0) > 0) {\n    options.orderBy?.forEach((o) => {\n      let colName = o.name;\n      const hintedColumn = o.hint && getColumnByHint(options, o.hint);\n      if (hintedColumn) {\n        colName = hintedColumn.alias || hintedColumn.name;\n      }\n\n      if (!colName) {\n        return;\n      }\n\n      orderByParts.push(`${colName} ${o.dir}`);\n    });\n  }\n\n  return orderByParts.join(', ');\n};\n\n/**\n * Returns the limit clause including the \"LIMIT\" keyword\n */\nconst getLimit = (limit?: number | undefined): string => {\n  limit = Math.max(0, limit || 0);\n  if (limit > 0) {\n    return 'LIMIT ' + limit;\n  }\n\n  return '';\n};\n\n/**\n * Returns the filters in the WHERE clause, excluding the \"WHERE\" keyword\n */\nconst getFilters = (options: QueryBuilderOptions): string => {\n  const filters = options.filters || [];\n  const builtFilters: string[] = [];\n\n  for (const filter of filters) {\n    if (filter.operator === FilterOperator.IsAnything) {\n      continue;\n    }\n\n    const filterParts: string[] = [];\n\n    let column = filter.key;\n    let type = filter.type || '';\n    const hintedColumn = filter.hint && getColumnByHint(options, filter.hint);\n    if (hintedColumn) {\n      column = hintedColumn.alias || hintedColumn.name;\n      type = hintedColumn.type || type;\n    }\n\n    if (!column) {\n      continue;\n    }\n\n    if (filter.mapKey && type.startsWith('Map')) {\n      column += `['${filter.mapKey}']`;\n    } else if (filter.mapKey && type.startsWith('JSON')) {\n      const escapedJSONPaths = filter.mapKey\n        .split('.')\n        .map((p) => `\\`${p}\\``)\n        .join('.');\n      column += `.${escapedJSONPaths}`;\n    }\n\n    filterParts.push(column);\n\n    let operator: string = filter.operator;\n    let negate = false;\n    if (filter.operator === FilterOperator.IsEmpty || filter.operator === FilterOperator.IsNotEmpty) {\n      operator = '';\n    } else if (filter.operator === FilterOperator.NotLike) {\n      operator = 'LIKE';\n      negate = true;\n    } else if (filter.operator === FilterOperator.OutsideGrafanaTimeRange) {\n      operator = '';\n      negate = true;\n    } else if (filter.operator === FilterOperator.WithInGrafanaTimeRange) {\n      operator = '';\n    }\n\n    if (operator) {\n      filterParts.push(operator);\n    }\n\n    if (isNullFilter(filter.operator)) {\n      // empty\n    } else if (filter.operator === FilterOperator.IsEmpty) {\n      filterParts.push(`= ''`);\n    } else if (filter.operator === FilterOperator.IsNotEmpty) {\n      filterParts.push(`!= ''`);\n    } else if (isBooleanFilter(type)) {\n      filterParts.push(String((filter as BooleanFilter).value));\n    } else if (isNumberFilter(type)) {\n      filterParts.push(String((filter as NumberFilter).value || '0'));\n    } else if (isDateFilter(type)) {\n      if (isDateFilterWithoutValue(type, filter.operator)) {\n        if (isDateType(type)) {\n          filterParts.push('>=', '$__fromTime', 'AND', column, '<=', '$__toTime');\n        }\n      } else {\n        switch ((filter as DateFilterWithValue).value) {\n          case 'GRAFANA_START_TIME':\n            if (isDateType(type)) {\n              filterParts.push('$__fromTime');\n            }\n            break;\n          case 'GRAFANA_END_TIME':\n            if (isDateType(type)) {\n              filterParts.push('$__toTime');\n            }\n            break;\n          default:\n            filterParts.push(escapeValue(String((filter as DateFilterWithValue).value || 'TODAY')));\n        }\n      }\n    } else if (isStringFilter(type, filter.operator)) {\n      if (filter.operator === FilterOperator.Like || filter.operator === FilterOperator.NotLike) {\n        filterParts.push(`'%${filter.value || ''}%'`);\n      } else {\n        filterParts.push(escapeValue((filter as StringFilter).value || ''));\n      }\n    } else if (isMultiFilter(type, filter.operator)) {\n      filterParts.push(`(${(filter as MultiFilter).value?.map((v) => escapeValue(v.trim())).join(', ')})`);\n    } else {\n      filterParts.push(escapeValue((filter as StringFilter).value || ''));\n    }\n\n    if (negate) {\n      filterParts.unshift('NOT', '(');\n      filterParts.push(')');\n    }\n\n    filterParts.unshift('(');\n    if (builtFilters.length > 0) {\n      filterParts.unshift(filter.condition);\n    }\n    filterParts.push(')');\n\n    const builtFilter = concatQueryParts(filterParts);\n    builtFilters.push(builtFilter);\n  }\n\n  return concatQueryParts(builtFilters);\n};\n\nconst stripTypeModifiers = (type: string): string => {\n  return type\n    .toLowerCase()\n    .replace(/\\(/g, '')\n    .replace(/\\)/g, '')\n    .replace(/nullable/g, '')\n    .replace(/lowcardinality/g, '');\n};\nconst isBooleanType = (type: string): boolean => type?.toLowerCase().startsWith('boolean');\nconst numberTypes = ['int', 'float', 'decimal'];\nconst isNumberType = (type: string): boolean => numberTypes.some((t) => type?.toLowerCase().includes(t));\nconst isDateType = (type: string): boolean =>\n  type?.toLowerCase().startsWith('date') || type?.toLowerCase().startsWith('nullable(date');\n// const isDateTimeType = (type: string): boolean => type?.toLowerCase().startsWith('datetime') || type?.toLowerCase().startsWith('nullable(datetime');\nconst isStringType = (type: string): boolean => {\n  type = stripTypeModifiers(type.toLowerCase());\n  return (\n    (type === 'string' || type.startsWith('fixedstring')) &&\n    !(isBooleanType(type) || isNumberType(type) || isDateType(type))\n  );\n};\nconst isNullFilter = (operator: FilterOperator): boolean =>\n  operator === FilterOperator.IsNull || operator === FilterOperator.IsNotNull;\nconst isBooleanFilter = (type: string): boolean => isBooleanType(type);\nconst isNumberFilter = (type: string): boolean => isNumberType(type);\nconst isDateFilterWithoutValue = (type: string, operator: FilterOperator): boolean =>\n  isDateType(type) &&\n  (operator === FilterOperator.WithInGrafanaTimeRange || operator === FilterOperator.OutsideGrafanaTimeRange);\nconst isDateFilter = (type: string): boolean => isDateType(type);\nconst isStringFilter = (type: string, operator: FilterOperator): boolean =>\n  isStringType(type) && !(operator === FilterOperator.In || operator === FilterOperator.NotIn);\nconst isMultiFilter = (type: string, operator: FilterOperator): boolean =>\n  isStringType(type) && (operator === FilterOperator.In || operator === FilterOperator.NotIn);\n\n/**\n * When filtering in the logs panel in explore view, we need a way to\n * map from the SQL generator's aliases back to the original column hints\n * so that filters can be added properly.\n */\nconst logAliasToColumnHintsEntries: ReadonlyArray<[string, ColumnHint]> = [\n  ['timestamp', ColumnHint.Time],\n  ['body', ColumnHint.LogMessage],\n  ['level', ColumnHint.LogLevel],\n  ['labels', ColumnHint.LogLabels],\n  ['traceID', ColumnHint.TraceId],\n];\nexport const logAliasToColumnHints: Map<string, ColumnHint> = new Map(logAliasToColumnHintsEntries);\nexport const logColumnHintsToAlias: Map<ColumnHint, string> = new Map(\n  logAliasToColumnHintsEntries.map((e) => [e[1], e[0]])\n);\n\nexport const _testExports = {\n  getColumnIdentifier,\n  getTableIdentifier,\n  escapeIdentifier,\n  escapeValue,\n  concatQueryParts,\n  getOrderBy,\n  getLimit,\n  getFilters,\n  isStringType,\n};\n","import pluginPackage from '../../package.json';\nimport { isNumber } from 'lodash';\n\nexport const pluginVersion = pluginPackage.version;\n\nconst versionPattern = /^(\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))?(?:-([0-9A-Za-z\\.]+))?/;\n\nexport class SemVersion {\n  major: number;\n  minor: number;\n  patch: number;\n  meta: string;\n\n  constructor(version: string) {\n    this.major = 0;\n    this.minor = 0;\n    this.patch = 0;\n    this.meta = '';\n\n    const match = versionPattern.exec(version);\n    if (match) {\n      this.major = Number(match[1]);\n      this.minor = Number(match[2] || 0);\n      this.patch = Number(match[3] || 0);\n      this.meta = match[4];\n    }\n  }\n\n  isGtOrEq(version: string): boolean {\n    const compared = new SemVersion(version);\n\n    for (let i = 0; i < this.comparable.length; ++i) {\n      if (this.comparable[i] > compared.comparable[i]) {\n        return true;\n      }\n      if (this.comparable[i] < compared.comparable[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  isValid(): boolean {\n    return isNumber(this.major);\n  }\n\n  get comparable() {\n    return [this.major, this.minor, this.patch];\n  }\n}\n\nexport function isVersionGtOrEq(a: string, b: string): boolean {\n  const aSemver = new SemVersion(a);\n  return aSemver.isGtOrEq(b);\n}\n","import { CoreApp, DataFrame, DataQueryRequest, DataQueryResponse } from '@grafana/data';\nimport {\n  ColumnHint,\n  FilterOperator,\n  OrderByDirection,\n  QueryBuilderOptions,\n  QueryType,\n  SelectedColumn,\n  StringFilter,\n} from 'types/queryBuilder';\nimport { CHBuilderQuery, CHQuery, EditorType } from 'types/sql';\nimport { Datasource } from './CHDatasource';\nimport { pluginVersion } from 'utils/version';\nimport { logColumnHintsToAlias } from './sqlGenerator';\nimport otel from 'otel';\n\n/**\n * Returns true if the builder options contain enough information to start showing a query\n */\nexport const isBuilderOptionsRunnable = (builderOptions: QueryBuilderOptions): boolean => {\n  return (\n    (builderOptions.columns?.length || 0) > 0 ||\n    (builderOptions.filters?.length || 0) > 0 ||\n    (builderOptions.orderBy?.length || 0) > 0 ||\n    (builderOptions.aggregates?.length || 0) > 0 ||\n    (builderOptions.groupBy?.length || 0) > 0\n  );\n};\n\n/**\n * Converts QueryBuilderOptions to Grafana format\n * src: https://github.com/grafana/sqlds/blob/main/query.go#L20\n */\nexport const mapQueryBuilderOptionsToGrafanaFormat = (t?: QueryBuilderOptions): number => {\n  switch (t?.queryType) {\n    case QueryType.Table:\n      return 1;\n    case QueryType.Logs:\n      return 2;\n    case QueryType.TimeSeries:\n      return 0;\n    case QueryType.Traces:\n      return t.meta?.isTraceIdMode ? 3 : 1;\n    default:\n      return 1 << 8; // an unused u32, defaults to timeseries/graph on plugin backend.\n  }\n};\n\n/**\n * Converts QueryType to Grafana format\n * src: https://github.com/grafana/sqlds/blob/main/query.go#L20\n */\nexport const mapQueryTypeToGrafanaFormat = (t?: QueryType): number => {\n  switch (t) {\n    case QueryType.Table:\n      return 1;\n    case QueryType.Logs:\n      return 2;\n    case QueryType.TimeSeries:\n      return 0;\n    case QueryType.Traces:\n      return 3;\n    default:\n      return 1 << 8; // an unused u32, defaults to timeseries/graph on plugin backend.\n  }\n};\n\n/**\n * Converts Grafana format to builder QueryType\n * src: https://github.com/grafana/sqlds/blob/main/query.go#L20\n */\nexport const mapGrafanaFormatToQueryType = (f?: number): QueryType => {\n  switch (f) {\n    case 0:\n      return QueryType.TimeSeries;\n    case 1:\n      return QueryType.Table;\n    case 2:\n      return QueryType.Logs;\n    case 3:\n      return QueryType.Traces;\n    default:\n      return QueryType.Table;\n  }\n};\n\n/**\n * Manipulates column array in-place to include column hints, loosely matched by the provided column hint map.\n */\nexport const tryApplyColumnHints = (columns: SelectedColumn[], hintsToColumns?: Map<ColumnHint, string>) => {\n  const columnsToHints: Map<string, ColumnHint> = new Map();\n  if (hintsToColumns) {\n    hintsToColumns.forEach((name, hint) => {\n      columnsToHints.set(name.toLowerCase().trim(), hint);\n    });\n  }\n\n  for (const column of columns) {\n    if (column.hint) {\n      continue;\n    }\n\n    const name = column.name.toLowerCase().trim();\n    const alias = column.alias?.toLowerCase().trim() || '';\n\n    const hint = columnsToHints.get(name) || columnsToHints.get(alias);\n    if (hint) {\n      column.hint = hint;\n      continue;\n    }\n\n    if (name.includes('time')) {\n      column.hint = ColumnHint.Time;\n    }\n  }\n};\n\n/**\n * Converts label into sql-style column name.\n * Example: \"Test Column\" -> \"test_column\"\n */\nexport const columnLabelToPlaceholder = (label: string) => label.toLowerCase().replace(/ /g, '_');\n\n/**\n * Mutates the DataQueryResponse to include trace/log links on the traceID field.\n * The link will open a second query editor in split view\n * on the explore page with the selected trace ID.\n *\n * Requires defaults to be configured when crossing query types.\n */\nexport const transformQueryResponseWithTraceAndLogLinks = (\n  datasource: Datasource,\n  req: DataQueryRequest<CHQuery>,\n  res: DataQueryResponse\n): DataQueryResponse => {\n  res.data.forEach((frame: DataFrame) => {\n    const originalQuery = req.targets.find((t) => t.refId === frame.refId) as CHBuilderQuery;\n    if (!originalQuery) {\n      return;\n    }\n\n    const traceField = frame.fields.find(\n      (field) => field.name.toLowerCase() === 'traceid' || field.name.toLowerCase() === 'trace_id'\n    );\n    if (!traceField) {\n      return;\n    }\n\n    const traceIdQuery: CHBuilderQuery = {\n      datasource: datasource,\n      editorType: EditorType.Builder,\n      /**\n       * Evil bug:\n       * The rawSql value might contain time filters such as $__fromTime and $__toTime.\n       * Grafana sees these time range filters as data links and will refuse to enable the traceID link if these are present.\n       * Set rawSql to empty since it gets regenerated when the panel renders anyway.\n       */\n      rawSql: '',\n      builderOptions: {} as QueryBuilderOptions,\n      pluginVersion,\n      refId: 'Trace ID',\n    };\n\n    if (\n      originalQuery.editorType === EditorType.Builder &&\n      originalQuery.builderOptions.queryType === QueryType.Traces\n    ) {\n      // Copy fields directly from trace search\n\n      traceIdQuery.builderOptions = {\n        ...originalQuery.builderOptions,\n        filters: [], // Clear filters and orderBy since it's an exact ID lookup\n        orderBy: [],\n        meta: {\n          ...originalQuery.builderOptions.meta,\n          minimized: true,\n          isTraceIdMode: true,\n          traceId: '${__value.raw}',\n        },\n      };\n    } else {\n      // Create new query based on trace defaults\n\n      const otelVersion = datasource.getTraceOtelVersion();\n      const otelConfig = otel.getVersion(otelVersion);\n      const traceEventsColumnPrefix = datasource.getDefaultTraceEventsColumnPrefix();\n      const traceLinksColumnPrefix = datasource.getDefaultTraceLinksColumnPrefix();\n      const options: QueryBuilderOptions = {\n        database:\n          datasource.getDefaultTraceDatabase() ||\n          traceIdQuery.builderOptions.database ||\n          datasource.getDefaultDatabase(),\n        table: datasource.getDefaultTraceTable() || datasource.getDefaultTable() || traceIdQuery.builderOptions.table,\n        queryType: QueryType.Traces,\n        columns: [],\n        filters: [],\n        orderBy: [],\n        meta: {\n          minimized: true,\n          isTraceIdMode: true,\n          traceId: '${__value.raw}',\n          traceDurationUnit: datasource.getDefaultTraceDurationUnit(),\n          otelEnabled: Boolean(otelVersion),\n          otelVersion: otelVersion,\n          traceEventsColumnPrefix: traceEventsColumnPrefix,\n          traceLinksColumnPrefix: traceLinksColumnPrefix,\n        },\n      };\n\n      if (otelConfig?.traceColumnMap) {\n        options.columns = Array.from(otelConfig.traceColumnMap, ([hint, name]) => ({ name, hint }));\n      } else {\n        const defaultColumns = datasource.getDefaultTraceColumns();\n        for (let [hint, colName] of defaultColumns) {\n          options.columns!.push({ name: colName, hint });\n        }\n      }\n\n      traceIdQuery.builderOptions = options;\n    }\n\n    const traceLogsQuery: CHBuilderQuery = {\n      datasource: datasource,\n      editorType: EditorType.Builder,\n      rawSql: '',\n      builderOptions: {} as QueryBuilderOptions,\n      pluginVersion,\n      refId: 'Trace Logs',\n    };\n\n    if (originalQuery.editorType === EditorType.Builder && originalQuery.builderOptions.queryType === QueryType.Logs) {\n      // Copy fields directly from log search\n      traceLogsQuery.builderOptions = {\n        ...originalQuery.builderOptions,\n        filters: [\n          {\n            type: 'string',\n            operator: FilterOperator.Equals,\n            filterType: 'custom',\n            key: '',\n            hint: ColumnHint.TraceId,\n            condition: 'AND',\n            value: '${__value.raw}',\n          } as StringFilter,\n        ],\n        orderBy: [{ name: '', hint: ColumnHint.Time, dir: OrderByDirection.ASC }],\n        meta: {\n          ...originalQuery.builderOptions.meta,\n          minimized: true,\n        },\n      };\n    } else {\n      // Create new query based on log defaults\n\n      const otelVersion = datasource.getLogsOtelVersion();\n      const options: QueryBuilderOptions = {\n        database:\n          datasource.getDefaultLogsDatabase() ||\n          traceLogsQuery.builderOptions.database ||\n          datasource.getDefaultDatabase(),\n        table: datasource.getDefaultLogsTable() || datasource.getDefaultTable() || traceLogsQuery.builderOptions.table,\n        queryType: QueryType.Logs,\n        columns: [],\n        orderBy: [{ name: '', hint: ColumnHint.Time, dir: OrderByDirection.ASC }],\n        filters: [\n          {\n            type: 'string',\n            operator: FilterOperator.Equals,\n            filterType: 'custom',\n            key: '',\n            hint: ColumnHint.TraceId,\n            condition: 'AND',\n            value: '${__value.raw}',\n          } as StringFilter,\n        ],\n        meta: {\n          minimized: true,\n          otelEnabled: Boolean(otelVersion),\n          otelVersion: otelVersion,\n        },\n      };\n\n      const defaultColumns = datasource.getDefaultLogsColumns();\n      for (let [hint, colName] of defaultColumns) {\n        options.columns!.push({ name: colName, hint });\n      }\n\n      traceLogsQuery.builderOptions = options;\n    }\n\n    const openInNewWindow = req.app !== CoreApp.Explore;\n    traceField.config.links = [];\n    traceField.config.links!.push({\n      title: 'View trace',\n      targetBlank: openInNewWindow,\n      url: '',\n      internal: {\n        query: traceIdQuery,\n        datasourceUid: traceIdQuery.datasource?.uid!,\n        datasourceName: traceIdQuery.datasource?.type!,\n        panelsState: {\n          trace: {\n            spanId: '${__value.raw}',\n          },\n        },\n      },\n    });\n    traceField.config.links!.push({\n      title: 'View logs',\n      targetBlank: openInNewWindow,\n      url: '',\n      internal: {\n        query: traceLogsQuery,\n        datasourceUid: traceLogsQuery.datasource?.uid!,\n        datasourceName: traceLogsQuery.datasource?.type!,\n      },\n    });\n  });\n\n  return res;\n};\n\n/**\n * Returns true if the dataframe contains a log label that matches the provided name.\n *\n * This function exists for the logs panel, when clicking \"filter for value\" on a single log row.\n * A dataframe will be provided for that single row, and we need to check the labels object to see if it\n * contains a field with that name. If it does then we can create a filter using the labels column hint.\n */\nexport const dataFrameHasLogLabelWithName = (frame: DataFrame | undefined, name: string): boolean => {\n  if (!frame || !frame.fields || frame.fields.length === 0) {\n    return false;\n  }\n\n  const logLabelsFieldName = logColumnHintsToAlias.get(ColumnHint.LogLabels);\n  const field = frame.fields.find((f) => f.name === logLabelsFieldName);\n  if (!field || !field.values || field.values.length < 1 || !field.values.get(0)) {\n    return false;\n  }\n\n  const labels = (field.values.get(0) || {}) as object;\n  const labelKeys = Object.keys(labels);\n\n  return labelKeys.includes(name);\n};\n","import { E2ESelectors } from '@grafana/e2e-selectors';\nexport const Components = {\n  QueryEditor: {\n    CodeEditor: {\n      input: () => '.monaco-editor textarea',\n      container: 'data-testid-code-editor-container',\n      Expand: 'data-testid-code-editor-expand-button',\n    },\n    Format: {\n      label: 'Format',\n      tooltip: 'Query Type',\n      options: {\n        AUTO: 'Auto',\n        TABLE: 'Table',\n        TIME_SERIES: 'Time Series',\n        LOGS: 'Logs',\n        TRACE: 'Trace',\n      },\n    },\n    Types: {\n      label: 'Query Type',\n      tooltip: 'Query Type',\n      options: {\n        SQLEditor: 'SQL Editor',\n        QueryBuilder: 'Query Builder',\n      },\n      switcher: {\n        title: 'Are you sure?',\n        body: 'Queries that are too complex for the Query Builder will be altered.',\n        confirmText: 'Continue',\n        dismissText: 'Cancel',\n      },\n      cannotConvert: {\n        title: 'Cannot convert',\n        confirmText: 'Yes',\n      },\n    },\n    QueryBuilder: {\n      TYPES: {\n        label: 'Show as',\n        tooltip: 'Show as',\n        options: {\n          LIST: 'Table',\n          AGGREGATE: 'Aggregate',\n          TREND: 'Time Series',\n        },\n      },\n      DATABASE: {\n        label: 'Database',\n        tooltip: 'Clickhouse database to query from',\n      },\n      FROM: {\n        label: 'Table',\n        tooltip: 'Clickhouse table to query from',\n      },\n      SELECT: {\n        label: 'Fields',\n        tooltipTable: 'List of fields to show',\n        tooltipAggregate: `List of metrics to show. Use any of the given aggregation along with the field`,\n        ALIAS: {\n          label: 'as',\n          tooltip: 'alias',\n        },\n        AddLabel: 'Field',\n        RemoveLabel: '',\n      },\n      AGGREGATES: {\n        label: 'Aggregates',\n        tooltipTable: 'Aggregate functions to use',\n        tooltipAggregate: `Aggregate functions to use`,\n        ALIAS: {\n          label: 'as',\n          tooltip: 'alias',\n        },\n        AddLabel: 'Aggregate',\n        RemoveLabel: '',\n      },\n      WHERE: {\n        label: 'Filters',\n        tooltip: `List of filters`,\n        AddLabel: 'Filter',\n        RemoveLabel: '',\n      },\n      GROUP_BY: {\n        label: 'Group by',\n        tooltip: 'Group the results by specific field',\n      },\n      ORDER_BY: {\n        label: 'Order by',\n        tooltip: 'Order by field',\n        AddLabel: 'Order by',\n        RemoveLabel: '',\n      },\n      LIMIT: {\n        label: 'Limit',\n        tooltip: 'Number of records/results to show.',\n      },\n      TIME_FIELD: {\n        label: 'Time field',\n        tooltip: 'Select the time field for trending over time',\n      },\n      LOGS_VOLUME_TIME_FIELD: {\n        label: 'Time field',\n        tooltip: 'Select the time field for logs volume histogram. If not selected, the histogram will not be shown',\n      },\n      LOG_LEVEL_FIELD: {\n        label: 'Log level field',\n        tooltip: 'Select the field to extract log level information from',\n      },\n      PREVIEW: {\n        label: 'SQL Preview',\n        tooltip: 'SQL Preview. You can safely switch to SQL Editor to customize the generated query',\n      },\n    },\n  },\n  Config: {\n    HttpHeaderConfig: {\n      headerEditor: 'config__http-header-config__header-editor',\n      addHeaderButton: 'config__http-header-config__add-header-button',\n      removeHeaderButton: 'config__http-header-config__remove-header-button',\n      headerSecureSwitch: 'config__http-header-config__header-secure-switch',\n      headerNameInput: 'config__http-header-config__header-name-input',\n      headerValueInput: 'config__http-header-config__header-value-input',\n      forwardGrafanaHeadersSwitch: 'config__http-header-config__forward-grafana-headers-switch',\n    },\n    AliasTableConfig: {\n      aliasEditor: 'config__alias-table-config__alias-editor',\n      addEntryButton: 'config__alias-table-config__add-entry-button',\n      removeEntryButton: 'config__alias-table-config__remove-entry-button',\n      targetDatabaseInput: 'config__alias-table-config__target-database-input',\n      targetTableInput: 'config__alias-table-config__target-table-input',\n      aliasDatabaseInput: 'config__alias-table-config__alias-database-input',\n      aliasTableInput: 'config__alias-table-config__alias-table-input',\n    },\n  },\n  LogsContextPanel: {\n    alert: 'logs-context-panel__alert',\n    LogsContextKey: 'logs-context-panel__logs-context-key',\n  },\n  QueryBuilder: {\n    expandBuilderButton: 'query-builder__expand-builder-button',\n    LogsQueryBuilder: {\n      LogMessageLikeInput: {\n        input: 'query-builder__logs-query-builder__log-message-like-input__input',\n      },\n    },\n    AggregateEditor: {\n      sectionLabel: 'query-builder__aggregate-editor__section-label',\n      itemWrapper: 'query-builder__aggregate-editor__item-wrapper',\n      itemRemoveButton: 'query-builder__aggregate-editor-item-remove-button',\n      addButton: 'query-builder__aggregate-editor__add-button',\n    },\n    ColumnsEditor: {\n      multiSelectWrapper: 'query-builder__columns-editor__multi-select-wrapper',\n    },\n    GroupByEditor: {\n      multiSelectWrapper: 'query-builder__group-by__multi-select-wrapper',\n    },\n    LimitEditor: {\n      input: 'query-builder__limit-editor__input',\n    },\n    TraceIdInput: {\n      input: 'query-builder__trace-id-input__input',\n    },\n  },\n};\nexport const selectors: { components: E2ESelectors<typeof Components> } = {\n  components: Components,\n};\n","import React from 'react';\nimport { Alert, Icon, IconName, Stack, useTheme2 } from '@grafana/ui';\nimport { css } from '@emotion/css';\nimport { LogContextColumn } from 'data/CHDatasource';\nimport { Components } from 'selectors';\n\nconst LogsContextPanelStyles = css`\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  width: 100%;\n`;\n\ninterface LogContextPanelProps {\n  columns: LogContextColumn[];\n  datasourceUid: string;\n}\n\nconst LogsContextPanel = (props: LogContextPanelProps) => {\n  const { columns, datasourceUid } = props;\n  const theme = useTheme2();\n\n  if (!columns || columns.length === 0) {\n    return (\n      <Alert data-testid={Components.LogsContextPanel.alert} title=\"\" severity=\"warning\">\n        <Stack direction=\"column\">\n          <div>\n            {\n              'Unable to match any context columns. Make sure your query returns at least one log context column from your '\n            }\n            <a\n              style={{ textDecoration: 'underline' }}\n              href={`/connections/datasources/edit/${encodeURIComponent(datasourceUid)}#logs-config`}\n            >\n              ClickHouse Data Source settings\n            </a>\n          </div>\n        </Stack>\n      </Alert>\n    );\n  }\n\n  return (\n    <div className={LogsContextPanelStyles}>\n      {columns.map((p) => (\n        <LogContextKey\n          key={p.name}\n          name={p.name}\n          value={p.value}\n          primaryColor={theme.colors.secondary.main}\n          primaryTextColor={theme.colors.text.primary}\n          secondaryColor={theme.colors.background.secondary}\n          secondaryTextColor={theme.colors.info.text}\n        />\n      ))}\n    </div>\n  );\n};\n\n/**\n * Roughly match an icon with the context column name.\n */\nconst iconMatcher = (contextName: string): IconName => {\n  contextName = contextName.toLowerCase();\n\n  if (contextName === 'db' || contextName === 'database' || contextName.includes('data')) {\n    return 'database';\n  } else if (contextName.includes('service')) {\n    return 'building';\n  } else if (\n    contextName.includes('error') ||\n    contextName.includes('warn') ||\n    contextName.includes('critical') ||\n    contextName.includes('fatal')\n  ) {\n    return 'exclamation-triangle';\n  } else if (contextName.includes('user') || contextName.includes('admin')) {\n    return 'user';\n  } else if (contextName.includes('email')) {\n    return 'at';\n  } else if (contextName.includes('file')) {\n    return 'file-alt';\n  } else if (contextName.includes('bug')) {\n    return 'bug';\n  } else if (contextName.includes('search')) {\n    return 'search';\n  } else if (contextName.includes('tag')) {\n    return 'tag-alt';\n  } else if (contextName.includes('span') || contextName.includes('stack')) {\n    return 'brackets-curly';\n  }\n  if (contextName === 'host' || contextName === 'hostname' || contextName.includes('host')) {\n    return 'cloud';\n  }\n  if (contextName === 'url' || contextName.includes('url')) {\n    return 'link';\n  } else if (contextName.includes('container') || contextName.includes('pod')) {\n    return 'cube';\n  }\n\n  return 'align-left';\n};\n\ninterface LogContextKeyProps {\n  name: string;\n  value: string;\n  primaryColor: string;\n  primaryTextColor: string;\n  secondaryColor: string;\n  secondaryTextColor: string;\n}\n\nconst LogContextKey = (props: LogContextKeyProps) => {\n  const { name, value, primaryColor, primaryTextColor, secondaryColor, secondaryTextColor } = props;\n\n  const styles = {\n    container: css`\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin: 0.25em;\n      color: ${primaryTextColor};\n    `,\n    containerLeft: css`\n      display: flex;\n      align-items: center;\n      background-color: ${primaryColor};\n      border-radius: 2px;\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n\n      padding-top: 0.15em;\n      padding-bottom: 0.15em;\n      padding-left: 0.25em;\n      padding-right: 0.25em;\n    `,\n    contextName: css`\n      font-weight: bold;\n      padding-left: 0.25em;\n      user-select: all;\n    `,\n    contextValue: css`\n      background-color: ${secondaryColor};\n      color: ${secondaryTextColor};\n      border-radius: 2px;\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n      user-select: all;\n      font-family: monospace;\n\n      padding-top: 0.15em;\n      padding-bottom: 0.15em;\n      padding-left: 0.25em;\n      padding-right: 0.25em;\n    `,\n  };\n\n  return (\n    <div className={styles.container} data-testid={Components.LogsContextPanel.LogsContextKey}>\n      <div className={styles.containerLeft}>\n        <Icon name={iconMatcher(name)} size=\"md\" />\n        <div>test</div>\n        <span className={styles.contextName}>{name}</span>\n      </div>\n      <span className={styles.contextValue}>{value}</span>\n    </div>\n  );\n};\n\nexport default LogsContextPanel;\n\nexport const _testExports = {\n  iconMatcher,\n  LogContextKey,\n};\n","import {\n  AdHocVariableFilter,\n  DataFrame,\n  DataFrameView,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceInstanceSettings,\n  DataSourceWithLogsContextSupport,\n  DataSourceWithSupplementaryQueriesSupport,\n  getTimeZone,\n  getTimeZoneInfo,\n  LogRowContextOptions,\n  LogRowContextQueryDirection,\n  LogRowModel,\n  MetricFindValue,\n  QueryFixAction,\n  ScopedVars,\n  SupplementaryQueryOptions,\n  SupplementaryQueryType,\n  TypedVariableModel,\n} from '@grafana/data';\nimport { DataSourceWithBackend, getTemplateSrv } from '@grafana/runtime';\nimport { Observable, map, firstValueFrom } from 'rxjs';\nimport { CHConfig } from 'types/config';\nimport { EditorType, CHQuery } from 'types/sql';\nimport {\n  QueryType,\n  AggregateColumn,\n  AggregateType,\n  BuilderMode,\n  Filter,\n  FilterOperator,\n  TableColumn,\n  OrderByDirection,\n  QueryBuilderOptions,\n  ColumnHint,\n  TimeUnit,\n  SelectedColumn,\n  SqlFunction,\n} from 'types/queryBuilder';\nimport { AdHocFilter } from './adHocFilter';\nimport { cloneDeep, isEmpty, isString } from 'lodash';\nimport {\n  DEFAULT_LOGS_ALIAS,\n  getIntervalInfo,\n  getTimeFieldRoundingClause,\n  LOG_LEVEL_TO_IN_CLAUSE,\n  queryLogsVolume,\n  TIME_FIELD_ALIAS,\n} from './logs';\nimport { generateSql, getColumnByHint, logAliasToColumnHints } from './sqlGenerator';\nimport otel from 'otel';\nimport { createElement as createReactElement, ReactNode } from 'react';\nimport { dataFrameHasLogLabelWithName, transformQueryResponseWithTraceAndLogLinks } from './utils';\nimport { pluginVersion } from 'utils/version';\nimport LogsContextPanel from 'components/LogsContextPanel';\n\nexport class Datasource\n  extends DataSourceWithBackend<CHQuery, CHConfig>\n  implements DataSourceWithSupplementaryQueriesSupport<CHQuery>, DataSourceWithLogsContextSupport<CHQuery>\n{\n  // This enables default annotation support for 7.2+\n  annotations = {};\n  settings: DataSourceInstanceSettings<CHConfig>;\n  adHocFilter: AdHocFilter;\n  skipAdHocFilter = false; // don't apply adhoc filters to the query\n  adHocFiltersStatus = AdHocFilterStatus.none; // ad hoc filters only work with CH 22.7+\n  adHocCHVerReq = { major: 22, minor: 7 };\n\n  constructor(instanceSettings: DataSourceInstanceSettings<CHConfig>) {\n    super(instanceSettings);\n    this.settings = instanceSettings;\n    this.adHocFilter = new AdHocFilter();\n  }\n\n  getDataProvider(\n    type: SupplementaryQueryType,\n    request: DataQueryRequest<CHQuery>\n  ): Observable<DataQueryResponse> | undefined {\n    if (!this.getSupportedSupplementaryQueryTypes().includes(type)) {\n      return undefined;\n    }\n    switch (type) {\n      case SupplementaryQueryType.LogsVolume:\n        const logsVolumeRequest = cloneDeep(request);\n\n        const intervalInfo = getIntervalInfo(logsVolumeRequest.scopedVars);\n        logsVolumeRequest.interval = intervalInfo.interval;\n        logsVolumeRequest.scopedVars.__interval = { value: intervalInfo.interval, text: intervalInfo.interval };\n        logsVolumeRequest.hideFromInspector = true;\n        if (intervalInfo.intervalMs !== undefined) {\n          logsVolumeRequest.intervalMs = intervalInfo.intervalMs;\n          logsVolumeRequest.scopedVars.__interval_ms = {\n            value: intervalInfo.intervalMs,\n            text: intervalInfo.intervalMs,\n          };\n        }\n\n        const targets: CHQuery[] = [];\n        logsVolumeRequest.targets.forEach((target) => {\n          const supplementaryQuery = this.getSupplementaryLogsVolumeQuery(logsVolumeRequest, target);\n          if (supplementaryQuery !== undefined) {\n            targets.push(supplementaryQuery);\n          }\n        });\n\n        if (!targets.length) {\n          return undefined;\n        }\n\n        return queryLogsVolume(\n          this,\n          { ...logsVolumeRequest, targets },\n          {\n            range: logsVolumeRequest.range,\n            targets: logsVolumeRequest.targets,\n          }\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  getSupportedSupplementaryQueryTypes(): SupplementaryQueryType[] {\n    return [SupplementaryQueryType.LogsVolume];\n  }\n\n  getSupplementaryLogsVolumeQuery(logsVolumeRequest: DataQueryRequest<CHQuery>, query: CHQuery): CHQuery | undefined {\n    if (\n      query.editorType !== EditorType.Builder ||\n      query.builderOptions.queryType !== QueryType.Logs ||\n      query.builderOptions.mode !== BuilderMode.List ||\n      query.builderOptions.database === '' ||\n      query.builderOptions.table === ''\n    ) {\n      return undefined;\n    }\n\n    const timeColumn = getColumnByHint(query.builderOptions, ColumnHint.Time);\n    if (timeColumn === undefined) {\n      return undefined;\n    }\n\n    const columns: SelectedColumn[] = [];\n    const aggregates: AggregateColumn[] = [];\n    columns.push({\n      name: getTimeFieldRoundingClause(logsVolumeRequest.scopedVars, timeColumn.name),\n      alias: TIME_FIELD_ALIAS,\n      hint: ColumnHint.Time,\n    });\n\n    const logLevelColumn = getColumnByHint(query.builderOptions, ColumnHint.LogLevel);\n    if (logLevelColumn) {\n      // Generates aggregates like\n      // sum(toString(\"log_level\") IN ('dbug', 'debug', 'DBUG', 'DEBUG', 'Dbug', 'Debug')) AS debug\n      const llf = `toString(\"${logLevelColumn.name}\")`;\n      let level: keyof typeof LOG_LEVEL_TO_IN_CLAUSE;\n      for (level in LOG_LEVEL_TO_IN_CLAUSE) {\n        aggregates.push({\n          aggregateType: AggregateType.Sum,\n          column: `multiSearchAny(${llf}, [${LOG_LEVEL_TO_IN_CLAUSE[level]}])`,\n          alias: level,\n        });\n      }\n    } else {\n      // Count all logs if level column isn't selected\n      aggregates.push({\n        aggregateType: AggregateType.Count,\n        column: '*',\n        alias: DEFAULT_LOGS_ALIAS,\n      });\n    }\n\n    const filters = (query.builderOptions.filters?.slice() || []).map((f) => {\n      // In order for a hinted filter to work, the hinted column must be SELECTed OR provide \"key\"\n      // For this histogram query the \"level\" column isn't selected, so we must find the original column name\n      if (f.hint && !f.key) {\n        const originalColumn = getColumnByHint(query.builderOptions, f.hint);\n        f.key = originalColumn?.alias || originalColumn?.name || '';\n      }\n\n      return f;\n    });\n\n    const logVolumeSqlBuilderOptions: QueryBuilderOptions = {\n      database: query.builderOptions.database,\n      table: query.builderOptions.table,\n      queryType: QueryType.TimeSeries,\n      filters,\n      columns,\n      aggregates,\n      orderBy: [{ name: '', hint: ColumnHint.Time, dir: OrderByDirection.ASC }],\n    };\n\n    const logVolumeSupplementaryQuery = generateSql(logVolumeSqlBuilderOptions);\n    return {\n      pluginVersion,\n      editorType: EditorType.Builder,\n      builderOptions: logVolumeSqlBuilderOptions,\n      rawSql: logVolumeSupplementaryQuery,\n      refId: '',\n    };\n  }\n\n  getSupplementaryQuery(options: SupplementaryQueryOptions, originalQuery: CHQuery): CHQuery | undefined {\n    return undefined;\n  }\n\n  async metricFindQuery(query: CHQuery | string, options: any) {\n    if (this.adHocFiltersStatus === AdHocFilterStatus.none) {\n      this.adHocFiltersStatus = await this.canUseAdhocFilters();\n    }\n    const chQuery = isString(query) ? { rawSql: query, editorType: EditorType.SQL } : query;\n\n    if (!(chQuery.editorType === EditorType.SQL || chQuery.editorType === EditorType.Builder || !chQuery.editorType)) {\n      return [];\n    }\n\n    if (!chQuery.rawSql) {\n      return [];\n    }\n    const frame = await this.runQuery(chQuery, options);\n    if (frame.fields?.length === 0) {\n      return [];\n    }\n    if (frame?.fields?.length === 1) {\n      return frame?.fields[0]?.values.map((text) => ({ text, value: text }));\n    }\n    // convention - assume the first field is an id field\n    const ids = frame?.fields[0]?.values;\n    return frame?.fields[1]?.values.map((text, i) => ({ text, value: ids.get(i) }));\n  }\n\n  applyTemplateVariables(query: CHQuery, scoped: ScopedVars, filters: AdHocVariableFilter[] = []): CHQuery {\n    let rawQuery = query.rawSql || '';\n    const templateSrv = getTemplateSrv();\n\n    // resolve template variables\n    rawQuery = this.applyConditionalAll(rawQuery, templateSrv.getVariables());\n    rawQuery = this.replace(rawQuery, scoped) || '';\n\n    if (!this.skipAdHocFilter) {\n      if (this.adHocFiltersStatus === AdHocFilterStatus.disabled && filters.length > 0) {\n        throw new Error(\n          `Unable to apply ad hoc filters. Upgrade ClickHouse to >=${this.adHocCHVerReq.major}.${this.adHocCHVerReq.minor} or remove ad hoc filters for the dashboard.`\n        );\n      }\n      rawQuery = this.adHocFilter.apply(rawQuery, filters);\n    }\n    this.skipAdHocFilter = false;\n\n    return {\n      ...query,\n      rawSql: rawQuery,\n    };\n  }\n\n  applyConditionalAll(rawQuery: string, templateVars: TypedVariableModel[]): string {\n    if (!rawQuery) {\n      return rawQuery;\n    }\n    const macro = '$__conditionalAll(';\n    let macroIndex = rawQuery.lastIndexOf(macro);\n\n    while (macroIndex !== -1) {\n      const params = this.getMacroArgs(rawQuery, macroIndex + macro.length - 1);\n      if (params.length !== 2) {\n        return rawQuery;\n      }\n      const templateVarParam = params[1].trim();\n      const varRegex = new RegExp(/(?<=\\$\\{)[\\w\\d]+(?=\\})|(?<=\\$)[\\w\\d]+/);\n      const templateVar = varRegex.exec(templateVarParam);\n      let phrase = params[0];\n      if (templateVar) {\n        const key = templateVars.find((x) => x.name === templateVar[0]) as any;\n        let value = key?.current.value.toString();\n        if (value === '' || value === '$__all') {\n          phrase = '1=1';\n        }\n      }\n      rawQuery = rawQuery.replace(`${macro}${params[0]},${params[1]})`, phrase);\n      macroIndex = rawQuery.lastIndexOf(macro);\n    }\n    return rawQuery;\n  }\n\n  // Support filtering by field value in Explore\n  modifyQuery(query: CHQuery, action: QueryFixAction): CHQuery {\n    if (query.editorType !== EditorType.Builder || !action.options || !action.options.key || !action.options.value) {\n      return query;\n    }\n\n    let columnName = action.options.key || '';\n    const actionFrame: DataFrame | undefined = (action as any).frame;\n    const actionValue = action.options.value;\n    let mapKey = '';\n\n    // Convert flattened/merged OTel attributes into column+path pair\n    if (['ResourceAttributes', 'ScopeAttributes', 'LogAttributes'].includes(columnName.split('.')[0])) {\n      const prefixIndex = columnName.indexOf('.');\n      mapKey = columnName.substring(prefixIndex + 1);\n      columnName = columnName.substring(0, prefixIndex);\n    }\n\n    // Find selected column by alias/name\n    const lookupByAlias = query.builderOptions.columns?.find((c) => c.alias === columnName); // Check all aliases first,\n    const lookupByName = query.builderOptions.columns?.find((c) => c.name === columnName); // then try matching column name\n    const lookupByLogsAlias = logAliasToColumnHints.has(columnName)\n      ? getColumnByHint(query.builderOptions, logAliasToColumnHints.get(columnName)!)\n      : undefined;\n    const lookupByLogLabels =\n      dataFrameHasLogLabelWithName(actionFrame, columnName) &&\n      getColumnByHint(query.builderOptions, ColumnHint.LogLabels);\n    const column = lookupByAlias || lookupByName || lookupByLogsAlias || lookupByLogLabels;\n    const columnType = column ? column.type || '' : '';\n    const hasMapKey = mapKey !== '' || Boolean(lookupByLogLabels);\n\n    let nextFilters: Filter[] = query.builderOptions.filters?.slice() || [];\n    if (action.type === 'ADD_FILTER') {\n      // we need to remove *any other EQ or NE* for the same field,\n      // because we don't want to end up with two filters like `level=info` AND `level=error`\n      nextFilters = nextFilters.filter(\n        (f) =>\n          !(\n            f.type === 'string' &&\n            (column && column.hint && f.hint ? f.hint === column.hint : f.key === columnName) &&\n            (f.operator === FilterOperator.IsAnything ||\n              f.operator === FilterOperator.Equals ||\n              f.operator === FilterOperator.NotEquals)\n          ) &&\n          !(\n            (f.type.startsWith('Map') || f.type.startsWith('JSON')) &&\n            column &&\n            hasMapKey &&\n            f.mapKey === mapKey &&\n            (f.operator === FilterOperator.IsAnything ||\n              f.operator === FilterOperator.Equals ||\n              f.operator === FilterOperator.NotEquals)\n          )\n      );\n\n      nextFilters.push({\n        condition: 'AND',\n        key: column && column.hint ? '' : columnName,\n        hint: column && column.hint ? column.hint : undefined,\n        mapKey: hasMapKey ? mapKey : undefined,\n        type: hasMapKey ? (columnType.startsWith('Map') ? 'Map(String, String)' : 'JSON') : 'String',\n        filterType: 'custom',\n        operator: FilterOperator.Equals,\n        value: actionValue,\n      });\n    } else if (action.type === 'ADD_FILTER_OUT') {\n      // with this we might want to add multiple values as NE filters\n      // for example, `level != info` AND `level != debug`\n      // thus, here we remove only exactly matching NE filters or an existing EQ filter for this field\n      nextFilters = nextFilters.filter(\n        (f) =>\n          !(\n            (f.type === 'string' &&\n              (column && column.hint && f.hint ? f.hint === column.hint : f.key === columnName) &&\n              'value' in f &&\n              f.value === actionValue &&\n              (f.operator === FilterOperator.IsAnything || f.operator === FilterOperator.NotEquals)) ||\n            (f.type === 'string' &&\n              (column && column.hint && f.hint ? f.hint === column.hint : f.key === columnName) &&\n              (f.operator === FilterOperator.IsAnything || f.operator === FilterOperator.Equals)) ||\n            ((f.type.startsWith('Map') || f.type.startsWith('JSON')) &&\n              column &&\n              hasMapKey &&\n              f.mapKey === mapKey &&\n              (f.operator === FilterOperator.IsAnything || f.operator === FilterOperator.Equals))\n          )\n      );\n\n      nextFilters.push({\n        condition: 'AND',\n        key: column && column.hint ? '' : columnName,\n        hint: column && column.hint ? column.hint : undefined,\n        mapKey: hasMapKey ? mapKey : undefined,\n        type: hasMapKey ? (columnType.startsWith('Map') ? 'Map(String, String)' : 'JSON') : 'String',\n        filterType: 'custom',\n        operator: FilterOperator.NotEquals,\n        value: actionValue,\n      });\n    }\n\n    // the query is updated to trigger the URL update and propagation to the panels\n    const nextOptions = { ...query.builderOptions, filters: nextFilters };\n    return {\n      ...query,\n      rawSql: generateSql(nextOptions),\n      builderOptions: nextOptions,\n    };\n  }\n\n  private getMacroArgs(query: string, argsIndex: number): string[] {\n    const args = [] as string[];\n    const re = /\\(|\\)|,/g;\n    let bracketCount = 0;\n    let lastArgEndIndex = 1;\n    let regExpArray: RegExpExecArray | null;\n    const argsSubstr = query.substring(argsIndex, query.length);\n    while ((regExpArray = re.exec(argsSubstr)) !== null) {\n      const foundNode = regExpArray[0];\n      if (foundNode === '(') {\n        bracketCount++;\n      } else if (foundNode === ')') {\n        bracketCount--;\n      }\n      if (foundNode === ',' && bracketCount === 1) {\n        args.push(argsSubstr.substring(lastArgEndIndex, re.lastIndex - 1));\n        lastArgEndIndex = re.lastIndex;\n      }\n      if (bracketCount === 0) {\n        args.push(argsSubstr.substring(lastArgEndIndex, re.lastIndex - 1));\n        return args;\n      }\n    }\n    return [];\n  }\n\n  private replace(value?: string, scopedVars?: ScopedVars) {\n    if (value !== undefined) {\n      return getTemplateSrv().replace(value, scopedVars, this.format);\n    }\n    return value;\n  }\n\n  private format(value: any) {\n    if (Array.isArray(value)) {\n      return `'${value.join(\"','\")}'`;\n    }\n    return value;\n  }\n\n  getDefaultDatabase(): string {\n    return this.settings.jsonData.defaultDatabase || 'default';\n  }\n\n  getDefaultTable(): string | undefined {\n    return this.settings.jsonData.defaultTable;\n  }\n\n  getDefaultLogsDatabase(): string | undefined {\n    return this.settings.jsonData.logs?.defaultDatabase;\n  }\n\n  getDefaultLogsTable(): string | undefined {\n    return this.settings.jsonData.logs?.defaultTable;\n  }\n\n  getDefaultLogsColumns(): Map<ColumnHint, string> {\n    const result = new Map<ColumnHint, string>();\n    const logsConfig = this.settings.jsonData.logs;\n    if (!logsConfig) {\n      return result;\n    }\n\n    const otelEnabled = logsConfig.otelEnabled;\n    const otelVersion = logsConfig.otelVersion;\n\n    const otelConfig = otel.getVersion(otelVersion);\n    if (otelEnabled && otelConfig) {\n      return otelConfig.logColumnMap;\n    }\n\n    logsConfig.timeColumn && result.set(ColumnHint.Time, logsConfig.timeColumn);\n    logsConfig.levelColumn && result.set(ColumnHint.LogLevel, logsConfig.levelColumn);\n    logsConfig.messageColumn && result.set(ColumnHint.LogMessage, logsConfig.messageColumn);\n\n    return result;\n  }\n\n  shouldSelectLogContextColumns(): boolean {\n    return this.settings.jsonData.logs?.selectContextColumns || false;\n  }\n\n  getLogContextColumnNames(): string[] {\n    return this.settings.jsonData.logs?.contextColumns?.length ? this.settings.jsonData.logs?.contextColumns : [];\n  }\n\n  /**\n   * Get configured OTEL version for logs. Returns undefined when versioning is disabled/unset.\n   */\n  getLogsOtelVersion(): string | undefined {\n    const logConfig = this.settings.jsonData.logs;\n    return logConfig?.otelEnabled ? logConfig.otelVersion || undefined : undefined;\n  }\n\n  getDefaultTraceDatabase(): string | undefined {\n    return this.settings.jsonData.traces?.defaultDatabase;\n  }\n\n  getDefaultTraceTable(): string | undefined {\n    return this.settings.jsonData.traces?.defaultTable;\n  }\n\n  getDefaultTraceColumns(): Map<ColumnHint, string> {\n    const result = new Map<ColumnHint, string>();\n    const traceConfig = this.settings.jsonData.traces;\n    if (!traceConfig) {\n      return result;\n    }\n\n    const otelEnabled = traceConfig.otelEnabled;\n    const otelVersion = traceConfig.otelVersion;\n\n    const otelConfig = otel.getVersion(otelVersion);\n    if (otelEnabled && otelConfig) {\n      return otelConfig.traceColumnMap;\n    }\n\n    traceConfig.traceIdColumn && result.set(ColumnHint.TraceId, traceConfig.traceIdColumn);\n    traceConfig.spanIdColumn && result.set(ColumnHint.TraceSpanId, traceConfig.spanIdColumn);\n    traceConfig.operationNameColumn && result.set(ColumnHint.TraceOperationName, traceConfig.operationNameColumn);\n    traceConfig.parentSpanIdColumn && result.set(ColumnHint.TraceParentSpanId, traceConfig.parentSpanIdColumn);\n    traceConfig.serviceNameColumn && result.set(ColumnHint.TraceServiceName, traceConfig.serviceNameColumn);\n    traceConfig.durationColumn && result.set(ColumnHint.TraceDurationTime, traceConfig.durationColumn);\n    traceConfig.startTimeColumn && result.set(ColumnHint.Time, traceConfig.startTimeColumn);\n    traceConfig.tagsColumn && result.set(ColumnHint.TraceTags, traceConfig.tagsColumn);\n    traceConfig.serviceTagsColumn && result.set(ColumnHint.TraceServiceTags, traceConfig.serviceTagsColumn);\n    traceConfig.kindColumn && result.set(ColumnHint.TraceKind, traceConfig.kindColumn);\n    traceConfig.statusCodeColumn && result.set(ColumnHint.TraceStatusCode, traceConfig.statusCodeColumn);\n    traceConfig.statusMessageColumn && result.set(ColumnHint.TraceStatusMessage, traceConfig.statusMessageColumn);\n    traceConfig.instrumentationLibraryNameColumn &&\n      result.set(ColumnHint.TraceInstrumentationLibraryName, traceConfig.instrumentationLibraryNameColumn);\n    traceConfig.instrumentationLibraryVersionColumn &&\n      result.set(ColumnHint.TraceInstrumentationLibraryVersion, traceConfig.instrumentationLibraryVersionColumn);\n    traceConfig.stateColumn && result.set(ColumnHint.TraceState, traceConfig.stateColumn);\n\n    return result;\n  }\n\n  /**\n   * Get configured OTEL version for traces. Returns undefined when versioning is disabled/unset.\n   */\n  getTraceOtelVersion(): string | undefined {\n    const traceConfig = this.settings.jsonData.traces;\n    return traceConfig?.otelEnabled ? traceConfig.otelVersion || undefined : undefined;\n  }\n\n  getDefaultTraceDurationUnit(): TimeUnit {\n    return (this.settings.jsonData.traces?.durationUnit as TimeUnit) || TimeUnit.Nanoseconds;\n  }\n\n  getDefaultTraceFlattenNested(): boolean {\n    return this.settings.jsonData.traces?.flattenNested || false;\n  }\n\n  getDefaultTraceEventsColumnPrefix(): string {\n    return this.settings.jsonData.traces?.traceEventsColumnPrefix || 'Events';\n  }\n\n  getDefaultTraceLinksColumnPrefix(): string {\n    return this.settings.jsonData.traces?.traceLinksColumnPrefix || 'Links';\n  }\n\n  async fetchDatabases(): Promise<string[]> {\n    return this.fetchData('SHOW DATABASES');\n  }\n\n  async fetchTables(db?: string): Promise<string[]> {\n    const rawSql = db ? `SHOW TABLES FROM \"${db}\"` : 'SHOW TABLES';\n    return this.fetchData(rawSql);\n  }\n\n  /**\n   * Used to populate suggestions in the filter editor for Map columns.\n   *\n   * Samples rows to get a unique set of keys for the map.\n   * May not include ALL keys for a given dataset.\n   *\n   * TODO: This query can be slow/expensive\n   */\n  async fetchUniqueMapKeys(mapColumn: string, db: string, table: string): Promise<string[]> {\n    const rawSql = `SELECT DISTINCT arrayJoin(${mapColumn}.keys) as keys FROM \"${db}\".\"${table}\" LIMIT 1000`;\n    return this.fetchData(rawSql);\n  }\n\n  async fetchEntities() {\n    return this.fetchTables();\n  }\n\n  async fetchFields(database: string, table: string): Promise<string[]> {\n    return this.fetchData(`DESC TABLE \"${database}\".\"${table}\"`);\n  }\n\n  /**\n   * Fetches JSON column suggestions for each specified JSON column.\n   */\n  async fetchPathsForJSONColumns(\n    database: string | undefined,\n    table: string,\n    jsonColumnName: string\n  ): Promise<TableColumn[]> {\n    const prefix = Boolean(database) ? `\"${database}\".` : '';\n    const rawSql = `SELECT arrayJoin(distinctJSONPathsAndTypes(${jsonColumnName})) FROM ${prefix}\"${table}\" SETTINGS max_execution_time=10`;\n    const frame = await this.runQuery({ rawSql });\n    if (frame.fields?.length === 0) {\n      return [];\n    }\n\n    const view = new DataFrameView(frame);\n    const jsonPathsAndTypes: Array<[string, string]> = [];\n    for (let x of view) {\n      if (!x || !x[0]) {\n        continue;\n      }\n\n      const kv = typeof x[0] === 'string' ? JSON.parse(x[0]) : x[0];\n      if (!kv.keys || !kv.values) {\n        continue;\n      }\n\n      jsonPathsAndTypes.push([kv.keys, kv.values]);\n    }\n\n    const columns: TableColumn[] = [];\n    for (let pathAndTypes of jsonPathsAndTypes) {\n      const path = pathAndTypes[0];\n      const types = pathAndTypes[1];\n      if (!path || !types || types.length === 0) {\n        continue;\n      }\n\n      columns.push({\n        name: `${jsonColumnName}.${path}`,\n        label: `${jsonColumnName}.${path}`,\n        type: types[0],\n        picklistValues: [],\n      });\n    }\n\n    return columns;\n  }\n\n  /**\n   * Fetches column suggestions from the table schema.\n   */\n  async fetchColumnsFromTable(database: string | undefined, table: string): Promise<TableColumn[]> {\n    const prefix = Boolean(database) ? `\"${database}\".` : '';\n    const rawSql = `DESC TABLE ${prefix}\"${table}\"`;\n    const frame = await this.runQuery({ rawSql });\n    if (frame.fields?.length === 0) {\n      return [];\n    }\n    const view = new DataFrameView(frame);\n    const columns: TableColumn[] = view.map((item) => ({\n      name: item[0],\n      type: item[1],\n      label: item[0],\n      picklistValues: [],\n    }));\n\n    const results = await Promise.all(\n      columns\n        .filter((c) => c.type.startsWith('JSON'))\n        .map((c) => this.fetchPathsForJSONColumns(database, table, c.name))\n    );\n\n    return [...columns, ...results.flat()];\n  }\n\n  /**\n   * Fetches SQL functions from server.\n   */\n  async fetchSqlFunctions(): Promise<SqlFunction[]> {\n    const rawSql = `\n      SELECT\n        name, is_aggregate, case_insensitive, alias_to, origin, description,\n        syntax, arguments, returned_value, examples, categories\n      FROM system.functions\n      LIMIT 10000\n    `;\n    const frame = await this.runQuery({ rawSql });\n    if (frame.fields?.length === 0) {\n      return [];\n    }\n    const view = new DataFrameView(frame);\n    const sqlFunctions: SqlFunction[] = view.map((item) => ({\n      name: String(item[0]),\n      isAggregate: Boolean(item[1]),\n      caseInsensitive: Boolean(item[2]),\n      aliasTo: String(item[3]),\n      origin: String(item[4]),\n      description: String(item[5]),\n      syntax: String(item[6]),\n      arguments: String(item[7]),\n      returnedValue: String(item[8]),\n      examples: String(item[9]),\n      categories: String(item[10]),\n    }));\n\n    return sqlFunctions;\n  }\n\n  /**\n   * Fetches column suggestions from an alias definition table.\n   */\n  async fetchColumnsFromAliasTable(fullTableName: string): Promise<TableColumn[]> {\n    const rawSql = `SELECT alias, select, \"type\" FROM ${fullTableName}`;\n    const frame = await this.runQuery({ rawSql });\n    if (frame.fields?.length === 0) {\n      return [];\n    }\n    const view = new DataFrameView(frame);\n    return view.map((item) => ({\n      name: item[1],\n      type: item[2],\n      label: item[0],\n      picklistValues: [],\n    }));\n  }\n\n  getAliasTable(targetDatabase: string | undefined, targetTable: string): string | null {\n    const aliasEntries = this.settings?.jsonData?.aliasTables || [];\n    const matchedEntry =\n      aliasEntries.find((e) => {\n        const matchDatabase = !e.targetDatabase || e.targetDatabase === targetDatabase;\n        const matchTable = e.targetTable === targetTable;\n        return matchDatabase && matchTable;\n      }) || null;\n\n    if (matchedEntry === null) {\n      return null;\n    }\n\n    const aliasDatabase = matchedEntry.aliasDatabase || targetDatabase || null;\n    const aliasTable = matchedEntry.aliasTable;\n    const prefix = Boolean(aliasDatabase) ? `\"${aliasDatabase}\".` : '';\n    return `${prefix}\"${aliasTable}\"`;\n  }\n\n  async fetchColumns(database: string | undefined, table: string): Promise<TableColumn[]> {\n    const fullAliasTableName = this.getAliasTable(database, table);\n    if (fullAliasTableName !== null) {\n      return this.fetchColumnsFromAliasTable(fullAliasTableName);\n    }\n\n    return this.fetchColumnsFromTable(database, table);\n  }\n\n  private async fetchData(rawSql: string) {\n    const frame = await this.runQuery({ rawSql });\n    return this.values(frame);\n  }\n\n  private getTimezone(request: DataQueryRequest<CHQuery>): string | undefined {\n    // timezone specified in the time picker\n    if (request.timezone && request.timezone !== 'browser') {\n      return request.timezone;\n    }\n    // fall back to the local timezone\n    const localTimezoneInfo = getTimeZoneInfo(getTimeZone(), Date.now());\n    return localTimezoneInfo?.ianaName;\n  }\n\n  query(request: DataQueryRequest<CHQuery>): Observable<DataQueryResponse> {\n    const targets = request.targets\n      // filters out queries disabled in UI\n      .filter((t) => t.hide !== true)\n      // attach timezone information\n      .map((t) => {\n        return {\n          ...t,\n          meta: {\n            ...t?.meta,\n            timezone: this.getTimezone(request),\n          },\n        };\n      });\n\n    return super\n      .query({\n        ...request,\n        targets,\n      })\n      .pipe(map((res: DataQueryResponse) => transformQueryResponseWithTraceAndLogLinks(this, request, res)));\n  }\n\n  private runQuery(request: Partial<CHQuery>, options?: any): Promise<DataFrame> {\n    return new Promise((resolve) => {\n      const req = {\n        targets: [{ ...request, refId: String(Math.random()) }],\n        range: options ? options.range : (getTemplateSrv() as any).timeRange,\n      } as DataQueryRequest<CHQuery>;\n      this.query(req).subscribe((res: DataQueryResponse) => {\n        resolve(res.data[0] || { fields: [] });\n      });\n    });\n  }\n\n  private values(frame: DataFrame) {\n    if (frame.fields?.length === 0) {\n      return [];\n    }\n    return frame?.fields[0]?.values.map((text) => text);\n  }\n\n  async getTagKeys(): Promise<MetricFindValue[]> {\n    if (this.adHocFiltersStatus === AdHocFilterStatus.disabled || this.adHocFiltersStatus === AdHocFilterStatus.none) {\n      this.adHocFiltersStatus = await this.canUseAdhocFilters();\n      if (this.adHocFiltersStatus === AdHocFilterStatus.disabled) {\n        return {} as MetricFindValue[];\n      }\n    }\n    const { type, frame } = await this.fetchTags();\n    if (type === TagType.query) {\n      return frame.fields.map((f) => ({ text: f.name }));\n    }\n    const view = new DataFrameView(frame);\n    return view.map((item) => ({\n      text: `${item[2]}.${item[0]}`,\n    }));\n  }\n\n  async getTagValues({ key }: any): Promise<MetricFindValue[]> {\n    const { type } = this.getTagSource();\n    this.skipAdHocFilter = true;\n    if (type === TagType.query) {\n      return this.fetchTagValuesFromQuery(key);\n    }\n    return this.fetchTagValuesFromSchema(key);\n  }\n\n  private async fetchTagValuesFromSchema(key: string): Promise<MetricFindValue[]> {\n    const { from } = this.getTagSource();\n    const [table, col] = key.split('.');\n    const source = from?.includes('.') ? `${from.split('.')[0]}.${table}` : table;\n    const rawSql = `select distinct ${col} from ${source} limit 1000`;\n    const frame = await this.runQuery({ rawSql });\n    if (frame.fields?.length === 0) {\n      return [];\n    }\n    const field = frame.fields[0];\n    // Convert to string to avoid https://github.com/grafana/grafana/issues/12209\n    return field.values\n      .filter((value) => value !== null)\n      .map((value) => {\n        return { text: String(value) };\n      });\n  }\n\n  private async fetchTagValuesFromQuery(key: string): Promise<MetricFindValue[]> {\n    const { frame } = await this.fetchTags();\n    const field = frame.fields.find((f) => f.name === key);\n    if (field) {\n      // Convert to string to avoid https://github.com/grafana/grafana/issues/12209\n      return field.values\n        .filter((value) => value !== null)\n        .map((value) => {\n          return { text: String(value) };\n        });\n    }\n    return [];\n  }\n\n  private async fetchTags(): Promise<Tags> {\n    const tagSource = this.getTagSource();\n    this.skipAdHocFilter = true;\n\n    if (tagSource.source === undefined) {\n      const rawSql = 'SELECT name, type, table FROM system.columns';\n      const results = await this.runQuery({ rawSql });\n      return { type: TagType.schema, frame: results };\n    }\n\n    if (tagSource.type === TagType.query) {\n      this.adHocFilter.setTargetTableFromQuery(tagSource.source);\n    }\n\n    const results = await this.runQuery({ rawSql: tagSource.source });\n    return { type: tagSource.type, frame: results };\n  }\n\n  private getTagSource() {\n    // @todo https://github.com/grafana/grafana/issues/13109\n    const ADHOC_VAR = '$clickhouse_adhoc_query';\n    const defaultDatabase = this.getDefaultDatabase();\n    let source = getTemplateSrv().replace(ADHOC_VAR);\n    if (source === ADHOC_VAR && isEmpty(defaultDatabase)) {\n      return { type: TagType.schema, source: undefined };\n    }\n    source = source === ADHOC_VAR ? defaultDatabase! : source;\n    if (source.toLowerCase().startsWith('select')) {\n      return { type: TagType.query, source };\n    }\n    if (!source.includes('.')) {\n      const sql = `SELECT name, type, table FROM system.columns WHERE database IN ('${source}')`;\n      return { type: TagType.schema, source: sql, from: source };\n    }\n    const [db, table] = source.split('.');\n    const sql = `SELECT name, type, table FROM system.columns WHERE database IN ('${db}') AND table = '${table}'`;\n    return { type: TagType.schema, source: sql, from: source };\n  }\n\n  // Returns true if ClickHouse's version is greater than or equal to 22.7\n  // 22.7 added 'settings additional_table_filters' which is used for ad hoc filters\n  private async canUseAdhocFilters(): Promise<AdHocFilterStatus> {\n    this.skipAdHocFilter = true;\n    const data = await this.fetchData(`SELECT version()`);\n    try {\n      const verString = (data[0] as unknown as string).split('.');\n      const ver = { major: Number.parseInt(verString[0], 10), minor: Number.parseInt(verString[1], 10) };\n      return ver.major > this.adHocCHVerReq.major ||\n        (ver.major === this.adHocCHVerReq.major && ver.minor >= this.adHocCHVerReq.minor)\n        ? AdHocFilterStatus.enabled\n        : AdHocFilterStatus.disabled;\n    } catch (err) {\n      console.error(`Unable to parse ClickHouse version: ${err}`);\n      throw err;\n    }\n  }\n\n  // interface DataSourceWithLogsContextSupport\n  getLogContextColumnsFromLogRow(row: LogRowModel): LogContextColumn[] {\n    const contextColumnNames = this.getLogContextColumnNames();\n    const contextColumns: LogContextColumn[] = [];\n\n    for (let columnName of contextColumnNames) {\n      const isMapKey = columnName.includes(\"['\") && columnName.includes(\"']\");\n      let mapName = '';\n      let keyName = '';\n      if (isMapKey) {\n        mapName = columnName.substring(0, columnName.indexOf('['));\n        keyName = columnName.substring(columnName.indexOf(\"['\") + 2, columnName.lastIndexOf(\"']\"));\n      }\n\n      const field = row.dataFrame.fields.find(\n        (f) =>\n          // exact column name match\n          f.name === columnName ||\n          (isMapKey &&\n            // entire map was selected\n            (f.name === mapName ||\n              // single key was selected from map\n              f.name === `arrayElement(${mapName}, '${keyName}')`))\n      );\n      if (!field) {\n        continue;\n      }\n\n      let value = field.values.get(row.rowIndex);\n      if (value && field.type === 'other' && isMapKey) {\n        value = value[keyName];\n      }\n\n      if (!value) {\n        continue;\n      }\n\n      let contextColumnName: string;\n      if (isMapKey) {\n        contextColumnName = `${mapName}['${keyName}']`;\n      } else {\n        contextColumnName = columnName;\n      }\n\n      contextColumns.push({\n        name: contextColumnName,\n        value,\n      });\n    }\n\n    return contextColumns;\n  }\n\n  /**\n   * Runs a query based on a single log row and a direction (forward/backward)\n   *\n   * Will remove all filters and ORDER BYs, and will re-add them based on the configured context columns.\n   * Context columns are used to narrow down to a single logging unit as defined by your logging infrastructure.\n   * Typically this will be a single service, or container/pod in docker/k8s.\n   *\n   * If no context columns can be matched from the selected data frame, then the query is not run.\n   */\n  async getLogRowContext(\n    row: LogRowModel,\n    options?: LogRowContextOptions,\n    query?: CHQuery | undefined,\n    cacheFilters?: boolean\n  ): Promise<DataQueryResponse> {\n    if (!query) {\n      throw new Error('Missing query for log context');\n    } else if (!options || !options.direction || options.limit === undefined) {\n      throw new Error('Missing log context options for query');\n    } else if (query.editorType === EditorType.SQL || !query.builderOptions) {\n      throw new Error('Log context feature only works for builder queries');\n    }\n\n    const contextQuery = cloneDeep(query);\n    contextQuery.refId = '';\n    const builderOptions = contextQuery.builderOptions;\n    builderOptions.limit = options.limit;\n\n    if (!getColumnByHint(builderOptions, ColumnHint.Time)) {\n      throw new Error('Missing time column for log context');\n    }\n\n    builderOptions.orderBy = [];\n    builderOptions.orderBy.push({\n      name: '',\n      hint: ColumnHint.Time,\n      dir: options.direction === LogRowContextQueryDirection.Forward ? OrderByDirection.ASC : OrderByDirection.DESC,\n    });\n\n    builderOptions.filters = [];\n    builderOptions.filters.push({\n      operator:\n        options.direction === LogRowContextQueryDirection.Forward\n          ? FilterOperator.GreaterThanOrEqual\n          : FilterOperator.LessThanOrEqual,\n      filterType: 'custom',\n      hint: ColumnHint.Time,\n      key: '',\n      value: `fromUnixTimestamp64Nano(${row.timeEpochNs})`,\n      type: 'datetime',\n      condition: 'AND',\n    });\n\n    const contextColumns = this.getLogContextColumnsFromLogRow(row);\n    if (contextColumns.length < 1) {\n      throw new Error('Unable to match any log context columns');\n    }\n\n    const contextColumnFilters: Filter[] = contextColumns.map((c) => ({\n      operator: FilterOperator.Equals,\n      filterType: 'custom',\n      key: c.name,\n      value: c.value,\n      type: 'string',\n      condition: 'AND',\n    }));\n    builderOptions.filters.push(...contextColumnFilters);\n\n    contextQuery.rawSql = generateSql(builderOptions);\n    const req = {\n      targets: [contextQuery],\n    } as DataQueryRequest<CHQuery>;\n\n    return await firstValueFrom(this.query(req));\n  }\n\n  /**\n   * Unused + deprecated but required by interface, log context button is always visible now\n   * https://github.com/grafana/grafana/issues/66819\n   */\n  showContextToggle(row?: LogRowModel): boolean {\n    return true;\n  }\n\n  /**\n   * Returns a React component that is displayed in the top portion of the log context panel\n   */\n  getLogRowContextUi(\n    row: LogRowModel,\n    runContextQuery?: (() => void) | undefined,\n    query?: CHQuery | undefined\n  ): ReactNode {\n    const contextColumns = this.getLogContextColumnsFromLogRow(row);\n    return createReactElement(LogsContextPanel, { columns: contextColumns, datasourceUid: this.uid });\n  }\n}\n\nenum TagType {\n  query,\n  schema,\n}\n\nenum AdHocFilterStatus {\n  none = 0,\n  enabled,\n  disabled,\n}\n\ninterface Tags {\n  type?: TagType;\n  frame: DataFrame;\n}\n\nexport interface LogContextColumn {\n  name: string;\n  value: string;\n}\n","import React, { ChangeEvent, MouseEvent, FC } from 'react';\nimport { Input, Button, TextArea, Field } from '@grafana/ui';\n\ninterface Props {\n  label: string;\n  hasCert: boolean;\n  placeholder: string;\n  onChange: (event: ChangeEvent<HTMLTextAreaElement>) => void;\n  onClick: (event: MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport const CertificationKey: FC<Props> = ({ hasCert, label, onChange, onClick, placeholder }) => {\n  return (\n    <Field label={label}>\n      {hasCert ? (\n        <>\n          <Input type=\"text\" disabled value=\"configured\" width={24} />\n          <Button variant=\"secondary\" onClick={onClick} style={{ marginLeft: 4 }}>\n            Reset\n          </Button>\n        </>\n      ) : (\n        <TextArea rows={7} onChange={onChange} placeholder={placeholder} required />\n      )}\n    </Field>\n  );\n};\n","import { DataSourceJsonData, KeyValue } from '@grafana/data';\n\nexport interface CHConfig extends DataSourceJsonData {\n  /**\n   * The version of the plugin this config was saved with\n   */\n  version: string;\n\n  host: string;\n  port: number;\n  protocol: Protocol;\n  secure?: boolean;\n  path?: string;\n\n  tlsSkipVerify?: boolean;\n  tlsAuth?: boolean;\n  tlsAuthWithCACert?: boolean;\n\n  username: string;\n\n  defaultDatabase?: string;\n  defaultTable?: string;\n\n  connMaxLifetime?: string;\n  dialTimeout?: string;\n  maxIdleConns?: string;\n  maxOpenConns?: string;\n  queryTimeout?: string;\n  validateSql?: boolean;\n\n  logs?: CHLogsConfig;\n  traces?: CHTracesConfig;\n\n  aliasTables?: AliasTableEntry[];\n\n  httpHeaders?: CHHttpHeader[];\n  forwardGrafanaHeaders?: boolean;\n\n  customSettings?: CHCustomSetting[];\n  enableSecureSocksProxy?: boolean;\n  enableRowLimit?: boolean;\n\n  pdcInjected?: boolean;\n}\n\ninterface CHSecureConfigProperties {\n  password?: string;\n\n  tlsCACert?: string;\n  tlsClientCert?: string;\n  tlsClientKey?: string;\n}\nexport type CHSecureConfig = CHSecureConfigProperties | KeyValue<string>;\n\nexport interface CHHttpHeader {\n  name: string;\n  value: string;\n  secure: boolean;\n}\n\nexport interface CHCustomSetting {\n  setting: string;\n  value: string;\n}\n\nexport interface CHLogsConfig {\n  defaultDatabase?: string;\n  defaultTable?: string;\n\n  otelEnabled?: boolean;\n  otelVersion?: string;\n\n  timeColumn?: string;\n  levelColumn?: string;\n  messageColumn?: string;\n\n  selectContextColumns?: boolean;\n  contextColumns?: string[];\n}\n\nexport interface CHTracesConfig {\n  defaultDatabase?: string;\n  defaultTable?: string;\n\n  otelEnabled?: boolean;\n  otelVersion?: string;\n\n  traceIdColumn?: string;\n  spanIdColumn?: string;\n  operationNameColumn?: string;\n  parentSpanIdColumn?: string;\n  serviceNameColumn?: string;\n  durationColumn?: string;\n  durationUnit?: string;\n  startTimeColumn?: string;\n  tagsColumn?: string;\n  serviceTagsColumn?: string;\n  kindColumn?: string;\n  statusCodeColumn?: string;\n  statusMessageColumn?: string;\n  stateColumn?: string;\n  instrumentationLibraryNameColumn?: string;\n  instrumentationLibraryVersionColumn?: string;\n\n  flattenNested?: boolean;\n  traceEventsColumnPrefix?: string;\n  traceLinksColumnPrefix?: string;\n}\n\nexport interface AliasTableEntry {\n  targetDatabase: string;\n  targetTable: string;\n  aliasDatabase: string;\n  aliasTable: string;\n}\n\nexport enum Protocol {\n  Native = 'native',\n  Http = 'http',\n}\n","import React, { useState, ReactNode } from 'react';\nimport { css } from '@emotion/css';\nimport { useTheme2, IconButton, IconName } from '@grafana/ui';\n\nexport type Props = {\n  title: string;\n  description?: ReactNode;\n  isCollapsible?: boolean;\n  isInitiallyOpen?: boolean;\n  kind?: 'section' | 'sub-section';\n  className?: string;\n  children: ReactNode;\n};\n\nexport const GenericConfigSection = ({\n  children,\n  title,\n  description,\n  isCollapsible = false,\n  isInitiallyOpen = true,\n  kind = 'section',\n  className,\n}: Props) => {\n  const { colors, typography, spacing } = useTheme2();\n  const [isOpen, setIsOpen] = useState(isCollapsible ? isInitiallyOpen : true);\n  const iconName: IconName = isOpen ? 'angle-up' : 'angle-down';\n  const isSubSection = kind === 'sub-section';\n  const collapsibleButtonAriaLabel = `${isOpen ? 'Collapse' : 'Expand'} section ${title}`;\n\n  const styles = {\n    header: css({\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    }),\n    title: css({\n      margin: 0,\n    }),\n    subtitle: css({\n      margin: 0,\n      fontWeight: typography.fontWeightRegular,\n    }),\n    descriptionText: css({\n      marginTop: spacing(isSubSection ? 0.25 : 0.5),\n      marginBottom: 0,\n      ...typography.bodySmall,\n      color: colors.text.secondary,\n    }),\n    content: css({\n      marginTop: spacing(2),\n    }),\n  };\n\n  return (\n    <div className={className}>\n      <div className={styles.header}>\n        {kind === 'section' ? <h3 className={styles.title}>{title}</h3> : <h6 className={styles.subtitle}>{title}</h6>}\n        {isCollapsible && (\n          <IconButton\n            name={iconName}\n            onClick={() => setIsOpen(!isOpen)}\n            type=\"button\"\n            size=\"xl\"\n            aria-label={collapsibleButtonAriaLabel}\n          />\n        )}\n      </div>\n      {description && <p className={styles.descriptionText}>{description}</p>}\n      {isOpen && <div className={styles.content}>{children}</div>}\n    </div>\n  );\n};\n","import React from 'react';\nimport { GenericConfigSection, Props as GenericConfigSectionProps } from './GenericConfigSection';\n\ntype Props = Omit<GenericConfigSectionProps, 'kind'>;\n\nexport const ConfigSection = ({ children, ...props }: Props) => {\n  return (\n    <GenericConfigSection {...props} kind=\"section\">\n      {children}\n    </GenericConfigSection>\n  );\n};\n","import React from 'react';\nimport { GenericConfigSection, Props as GenericConfigSectionProps } from './GenericConfigSection';\n\ntype Props = Omit<GenericConfigSectionProps, 'kind'>;\n\nexport const ConfigSubSection = ({ children, ...props }: Props) => {\n  return (\n    <GenericConfigSection {...props} kind=\"sub-section\">\n      {children}\n    </GenericConfigSection>\n  );\n};\n","import React from 'react';\nimport { cx, css } from '@emotion/css';\nimport { useTheme2 } from '@grafana/ui';\n\ntype Props = {\n  dataSourceName: string;\n  docsLink: string;\n  hasRequiredFields?: boolean;\n  className?: string;\n};\n\nexport const DataSourceDescription = ({ dataSourceName, docsLink, hasRequiredFields = true, className }: Props) => {\n  const theme = useTheme2();\n\n  const styles = {\n    container: css({\n      p: {\n        margin: 0,\n      },\n      'p + p': {\n        marginTop: theme.spacing(2),\n      },\n    }),\n    text: css({\n      ...theme.typography.body,\n      color: theme.colors.text.secondary,\n      a: css({\n        color: theme.colors.text.link,\n        textDecoration: 'underline',\n        '&:hover': {\n          textDecoration: 'none',\n        },\n      }),\n    }),\n  };\n\n  return (\n    <div className={cx(styles.container, className)}>\n      <p className={styles.text}>\n        Before you can use the {dataSourceName} data source, you must configure it below or in the config file. For\n        detailed instructions,{' '}\n        <a href={docsLink} target=\"_blank\" rel=\"noreferrer\">\n          view the documentation\n        </a>\n        .\n      </p>\n      {hasRequiredFields && (\n        <p className={styles.text}>\n          <i>Fields marked with * are required</i>\n        </p>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Divider as GrafanaDivider, useTheme2 } from '@grafana/ui';\nimport { config } from '@grafana/runtime';\nimport { isVersionGtOrEq } from 'utils/version';\n\nexport function Divider() {\n  const theme = useTheme2();\n  return isVersionGtOrEq(config.buildInfo.version, '10.1.0') ? (\n    <GrafanaDivider />\n  ) : (\n    <div\n      style={{ borderTop: `1px solid ${theme.colors.border.weak}`, margin: theme.spacing(2, 0), width: '100%' }}\n    ></div>\n  );\n}\n","import { ColumnHint } from 'types/queryBuilder';\n\nexport default {\n  components: {\n    Config: {\n      ConfigEditor: {\n        serverAddress: {\n          label: 'Server address',\n          placeholder: 'Server address',\n          tooltip: 'ClickHouse host address',\n          error: 'Server address required',\n        },\n        serverPort: {\n          label: 'Server port',\n          insecureNativePort: '9000',\n          insecureHttpPort: '8123',\n          secureNativePort: '9440',\n          secureHttpPort: '8443',\n          tooltip: 'ClickHouse server port',\n          error: 'Port is required',\n        },\n        path: {\n          label: 'HTTP URL Path',\n          tooltip: 'Additional URL path for HTTP requests',\n          placeholder: 'additional-path',\n        },\n        protocol: {\n          label: 'Protocol',\n          tooltip: 'Native or HTTP for server protocol',\n        },\n        username: {\n          label: 'Username',\n          placeholder: 'default',\n          tooltip: 'ClickHouse username',\n        },\n        password: {\n          label: 'Password',\n          placeholder: 'password',\n          tooltip: 'ClickHouse password',\n        },\n        tlsSkipVerify: {\n          label: 'Skip TLS Verify',\n          tooltip: 'Skip TLS Verify',\n        },\n        tlsClientAuth: {\n          label: 'TLS Client Auth',\n          tooltip: 'TLS Client Auth',\n        },\n        tlsAuthWithCACert: {\n          label: 'With CA Cert',\n          tooltip: 'Needed for verifying self-signed TLS Certs',\n        },\n        tlsCACert: {\n          label: 'CA Cert',\n          placeholder: 'CA Cert. Begins with -----BEGIN CERTIFICATE-----',\n        },\n        tlsClientCert: {\n          label: 'Client Cert',\n          placeholder: 'Client Cert. Begins with -----BEGIN CERTIFICATE-----',\n        },\n        tlsClientKey: {\n          label: 'Client Key',\n          placeholder: 'Client Key. Begins with -----BEGIN RSA PRIVATE KEY-----',\n        },\n        secure: {\n          label: 'Secure Connection',\n          tooltip: 'Toggle on if the connection is secure',\n        },\n        secureSocksProxy: {\n          label: 'Enable Secure Socks Proxy',\n          tooltip: 'Enable proxying the datasource connection through the secure socks proxy to a different network.',\n        },\n        enableRowLimit: {\n          label: 'Enable row limit',\n          testid: 'data-testid enable-row-limit-switch',\n          tooltip:\n            'Enable using the Grafana row limit setting to limit the number of rows returned from Clickhouse. Ensure the appropriate permissions are set for your user. Only supported for Grafana >= 11.0.0. Defaults to false.',\n        },\n      },\n      HttpHeadersConfig: {\n        title: 'HTTP Headers',\n        label: 'Custom HTTP Headers',\n        description: 'Add Custom HTTP headers when querying the database',\n        headerNameLabel: 'Header Name',\n        headerNamePlaceholder: 'X-Custom-Header',\n        insecureHeaderValueLabel: 'Header Value',\n        secureHeaderValueLabel: 'Secure Header Value',\n        secureLabel: 'Secure',\n        addHeaderLabel: 'Add Header',\n        forwardGrafanaHeaders: {\n          label: 'Forward Grafana HTTP Headers',\n          tooltip: 'Forward Grafana HTTP Headers to datasource.',\n        },\n      },\n      AliasTableConfig: {\n        title: 'Column Alias Tables',\n        descriptionParts: [\n          'Provide alias tables with a',\n          '(`alias` String, `select` String, `type` String)',\n          'schema to use as a source for column selection.',\n        ],\n        addTableLabel: 'Add Table',\n        targetDatabaseLabel: 'Target Database',\n        targetDatabasePlaceholder: '(optional)',\n        targetTableLabel: 'Target Table',\n        aliasDatabaseLabel: 'Alias Database',\n        aliasDatabasePlaceholder: '(optional)',\n        aliasTableLabel: 'Alias Table',\n      },\n\n      DefaultDatabaseTableConfig: {\n        title: 'Default DB and table',\n        database: {\n          label: 'Default database',\n          description: 'the default database used by the query builder',\n          name: 'defaultDatabase',\n          placeholder: 'default',\n        },\n        table: {\n          label: 'Default table',\n          description: 'the default table used by the query builder',\n          name: 'defaultTable',\n          placeholder: 'table',\n        },\n      },\n      QuerySettingsConfig: {\n        title: 'Query settings',\n        connMaxLifetime: {\n          label: 'Connection Max Lifetime (minutes)',\n          name: 'connMaxLifetime',\n          placeholder: '5',\n          tooltip: 'Maximum lifetime of a connection in minutes',\n        },\n        dialTimeout: {\n          label: 'Dial Timeout (seconds)',\n          name: 'dialTimeout',\n          placeholder: '10',\n          tooltip: 'Timeout in seconds for connection',\n        },\n        maxIdleConns: {\n          label: 'Max Idle Connections',\n          name: 'maxIdleConns',\n          placeholder: '25',\n          tooltip: 'Maximum number of idle connections',\n        },\n        maxOpenConns: {\n          label: 'Max Open Connections',\n          name: 'maxOpenConns',\n          placeholder: '50',\n          tooltip: 'Maximum number of open connections',\n        },\n        queryTimeout: {\n          label: 'Query Timeout (seconds)',\n          name: 'queryTimeout',\n          placeholder: '60',\n          tooltip: 'Timeout in seconds for read queries',\n        },\n        validateSql: {\n          label: 'Validate SQL',\n          tooltip: 'Validate SQL in the editor.',\n        },\n      },\n      TracesConfig: {\n        title: 'Traces configuration',\n        description: '(Optional) Default settings for trace queries',\n        defaultDatabase: {\n          label: 'Default trace database',\n          description: 'the default database used by the trace query builder',\n          name: 'defaultDatabase',\n          placeholder: 'default',\n        },\n        defaultTable: {\n          label: 'Default trace table',\n          description: 'the default table used by the trace query builder',\n          name: 'defaultTable',\n        },\n        columns: {\n          title: 'Default columns',\n          description: 'Default columns for trace queries. Leave empty to disable.',\n\n          traceId: {\n            label: 'Trace ID column',\n            tooltip: 'Column for the trace ID',\n          },\n          spanId: {\n            label: 'Span ID column',\n            tooltip: 'Column for the span ID',\n          },\n          parentSpanId: {\n            label: 'Parent Span ID column',\n            tooltip: 'Column for the parent span ID',\n          },\n          serviceName: {\n            label: 'Service Name column',\n            tooltip: 'Column for the service name',\n          },\n          operationName: {\n            label: 'Operation Name column',\n            tooltip: 'Column for the operation name',\n          },\n          startTime: {\n            label: 'Start Time column',\n            tooltip: 'Column for the start time',\n          },\n          durationTime: {\n            label: 'Duration Time column',\n            tooltip: 'Column for the duration time',\n          },\n          tags: {\n            label: 'Tags column',\n            tooltip: 'Column for the trace tags',\n          },\n          serviceTags: {\n            label: 'Service Tags column',\n            tooltip: 'Column for the service tags',\n          },\n          flattenNested: {\n            label: 'Use Flatten Nested',\n            tooltip: 'Enable if your traces table was created with flatten_nested=1',\n          },\n          eventsPrefix: {\n            label: 'Events prefix',\n            tooltip: 'Prefix for the events column (Events.Timestamp, Events.Name, etc.)',\n          },\n          linksPrefix: {\n            label: 'Links prefix',\n            tooltip: 'Prefix for the trace references column (Links.TraceId, Links.TraceState, etc.)',\n          },\n          kind: {\n            label: 'Kind column',\n            tooltip: 'Column for the trace kind',\n          },\n          statusCode: {\n            label: 'Status Code column',\n            tooltip: 'Column for the trace status code',\n          },\n          statusMessage: {\n            label: 'Status Message column',\n            tooltip: 'Column for the trace status message',\n          },\n          instrumentationLibraryName: {\n            label: 'Library Name column',\n            tooltip: 'Column for the instrumentation library name',\n          },\n          instrumentationLibraryVersion: {\n            label: 'Library Version column',\n            tooltip: 'Column for the instrumentation library version',\n          },\n          state: {\n            label: 'State column',\n            tooltip: 'Column for the trace state',\n          },\n        },\n      },\n      LogsConfig: {\n        title: 'Logs configuration',\n        description: '(Optional) default settings for log queries',\n        defaultDatabase: {\n          label: 'Default log database',\n          description: 'the default database used by the logs query builder',\n          name: 'defaultDatabase',\n          placeholder: 'default',\n        },\n        defaultTable: {\n          label: 'Default log table',\n          description: 'the default table used by the logs query builder',\n          name: 'defaultTable',\n        },\n        columns: {\n          title: 'Default columns',\n          description: 'Default columns for log queries. Leave empty to disable.',\n\n          time: {\n            label: 'Time column',\n            tooltip: 'Column for the log timestamp',\n          },\n          level: {\n            label: 'Log Level column',\n            tooltip: 'Column for the log level',\n          },\n          message: {\n            label: 'Log Message column',\n            tooltip: 'Column for log message',\n          },\n        },\n        contextColumns: {\n          title: 'Context columns',\n          description:\n            'These columns are used to narrow down a single log row to its original service/container/pod source. At least one is required for the log context feature to work.',\n\n          selectContextColumns: {\n            label: 'Auto-Select Columns',\n            tooltip: 'When enabled, will always include context columns in log queries',\n          },\n          columns: {\n            label: 'Context Columns',\n            tooltip: \"Comma separated list of column names to use for identifying a log's source\",\n            placeholder: 'Column name (enter key to add)',\n          },\n        },\n      },\n    },\n    EditorTypeSwitcher: {\n      label: 'Editor Type',\n      tooltip: 'Switches between the raw SQL Editor and the Query Builder.',\n      switcher: {\n        title: 'Are you sure?',\n        body: 'Queries that are too complex for the Query Builder will be altered.',\n        confirmText: 'Continue',\n        dismissText: 'Cancel',\n      },\n      cannotConvert: {\n        title: 'Cannot convert',\n        message: 'Do you want to delete your current query and use the query builder?',\n        confirmText: 'Yes',\n      },\n    },\n    expandBuilderButton: {\n      label: 'Show full query',\n      tooltip: 'Shows the full query builder',\n    },\n    QueryTypeSwitcher: {\n      label: 'Query Type',\n      tooltip: 'Sets the layout for the query builder',\n      sqlTooltip: 'Sets the panel type for explore view',\n    },\n    DatabaseSelect: {\n      label: 'Database',\n      tooltip: 'ClickHouse database to query from',\n      empty: '<select database>',\n    },\n    TableSelect: {\n      label: 'Table',\n      tooltip: 'ClickHouse table to query from',\n      empty: '<select table>',\n    },\n    ColumnsEditor: {\n      label: 'Columns',\n      tooltip: 'A list of columns to include in the query',\n    },\n    OtelVersionSelect: {\n      label: 'Use OTel',\n      tooltip: 'Enables Open Telemetry schema versioning',\n    },\n    LimitEditor: {\n      label: 'Limit',\n      tooltip: 'Limits the number of rows returned by the query',\n    },\n    SqlPreview: {\n      label: 'SQL Preview',\n      tooltip: 'Preview of the generated SQL. You can safely switch to SQL Editor to customize the generated query',\n    },\n    AggregatesEditor: {\n      label: 'Aggregates',\n      tooltip: 'Aggregate functions to use',\n      aliasLabel: 'as',\n      aliasTooltip: 'alias for this aggregate function',\n      addLabel: 'Aggregate',\n    },\n    OrderByEditor: {\n      label: 'Order By',\n      tooltip: 'Order by column',\n      addLabel: 'Order By',\n    },\n    FilterEditor: {\n      label: 'Filters',\n      tooltip: `List of filters`,\n      addLabel: 'Filter',\n      mapKeyPlaceholder: 'map key',\n    },\n    GroupByEditor: {\n      label: 'Group By',\n      tooltip: 'Group the results by specific column',\n    },\n    LogsQueryBuilder: {\n      logTimeColumn: {\n        label: 'Time',\n        tooltip: 'Column that contains the log timestamp',\n      },\n      logLevelColumn: {\n        label: 'Log Level',\n        tooltip: 'Column that contains the log level',\n      },\n      logMessageColumn: {\n        label: 'Message',\n        tooltip: 'Column that contains the log message',\n      },\n      logLabelsColumn: {\n        label: 'Labels',\n        tooltip: 'A column with a key/value structure for log labels',\n      },\n      liveView: {\n        label: 'Live View',\n        tooltip: 'Enable to update logs in real time',\n      },\n      logMessageFilter: {\n        label: 'Message Filter',\n        tooltip: 'Applies a LIKE filter to the log message body',\n        clearButton: 'Clear',\n      },\n      logLevelFilter: {\n        label: 'Level Filter',\n        tooltip: 'Applies a filter to the log level',\n      },\n    },\n    TimeSeriesQueryBuilder: {\n      simpleQueryModeLabel: 'Simple',\n      aggregateQueryModeLabel: 'Aggregate',\n      builderModeLabel: 'Builder Mode',\n      builderModeTooltip: 'Switches the query builder between the simple and aggregate modes',\n      timeColumn: {\n        label: 'Time',\n        tooltip: 'Column to use for the time series',\n      },\n    },\n    TableQueryBuilder: {\n      simpleQueryModeLabel: 'Simple',\n      aggregateQueryModeLabel: 'Aggregate',\n      builderModeLabel: 'Builder Mode',\n      builderModeTooltip: 'Switches the query builder between the simple and aggregate modes',\n    },\n    TraceQueryBuilder: {\n      traceIdModeLabel: 'Trace ID',\n      traceSearchModeLabel: 'Trace Search',\n      traceModeLabel: 'Trace Mode',\n      traceModeTooltip: 'Switches between trace ID and trace search mode',\n      columnsSection: 'Columns',\n      filtersSection: 'Filters',\n\n      columns: {\n        traceId: {\n          label: 'Trace ID Column',\n          tooltip: 'Column that contains the trace ID',\n        },\n        spanId: {\n          label: 'Span ID Column',\n          tooltip: 'Column that contains the span ID',\n        },\n        parentSpanId: {\n          label: 'Parent Span ID Column',\n          tooltip: 'Column that contains the parent span ID',\n        },\n        serviceName: {\n          label: 'Service Name Column',\n          tooltip: 'Column that contains the service name',\n        },\n        operationName: {\n          label: 'Operation Name Column',\n          tooltip: 'Column that contains the operation name',\n        },\n        startTime: {\n          label: 'Start Time Column',\n          tooltip: 'Column that contains the start time',\n        },\n        durationTime: {\n          label: 'Duration Time Column',\n          tooltip: 'Column that contains the duration time',\n        },\n        durationUnit: {\n          label: 'Duration Unit',\n          tooltip: 'The unit of time used for the duration time',\n        },\n        tags: {\n          label: 'Tags Column',\n          tooltip: 'Column that contains the trace tags',\n        },\n        serviceTags: {\n          label: 'Service Tags Column',\n          tooltip: 'Column that contains the service tags',\n        },\n        flattenNested: {\n          label: 'Use Flatten Nested',\n          tooltip: 'Enable if your traces table was created with flatten_nested=1',\n        },\n        eventsPrefix: {\n          label: 'Events Prefix',\n          tooltip: 'Prefix for the events column',\n        },\n        linksPrefix: {\n          label: 'Links Prefix',\n          tooltip: 'Prefix for the trace references column',\n        },\n        kind: {\n          label: 'Kind Column',\n          tooltip: 'Column that contains the trace kind',\n        },\n        statusCode: {\n          label: 'Status Code Column',\n          tooltip: 'Column that contains the trace status code',\n        },\n        statusMessage: {\n          label: 'Status Message Column',\n          tooltip: 'Column that contains the trace status message',\n        },\n        instrumentationLibraryName: {\n          label: 'Library Name Column',\n          tooltip: 'Column that contains the instrumentation library name (Optional)',\n        },\n        instrumentationLibraryVersion: {\n          label: 'Library Version Column',\n          tooltip: 'Column that contains the instrumentation library version (Optional)',\n        },\n        state: {\n          label: 'State Column',\n          tooltip: 'Column that contains the trace state',\n        },\n        traceIdFilter: {\n          label: 'Trace ID',\n          tooltip: 'filter by a specific trace ID',\n        },\n      },\n    },\n  },\n  types: {\n    EditorType: {\n      sql: 'SQL Editor',\n      builder: 'Query Builder',\n    },\n    QueryType: {\n      table: 'Table',\n      logs: 'Logs',\n      timeseries: 'Time Series',\n      traces: 'Traces',\n    },\n    ColumnHint: {\n      [ColumnHint.Time]: 'Time',\n\n      [ColumnHint.LogLevel]: 'Level',\n      [ColumnHint.LogMessage]: 'Message',\n      [ColumnHint.LogLabels]: 'Labels',\n\n      [ColumnHint.TraceId]: 'Trace ID',\n      [ColumnHint.TraceSpanId]: 'Span ID',\n      [ColumnHint.TraceParentSpanId]: 'Parent Span ID',\n      [ColumnHint.TraceServiceName]: 'Service Name',\n      [ColumnHint.TraceOperationName]: 'Operation Name',\n      [ColumnHint.TraceDurationTime]: 'Duration Time',\n      [ColumnHint.TraceTags]: 'Tags',\n      [ColumnHint.TraceServiceTags]: 'Service Tags',\n      [ColumnHint.TraceStatusCode]: 'Status Code',\n      [ColumnHint.TraceKind]: 'Kind',\n      [ColumnHint.TraceStatusMessage]: 'Status Message',\n      [ColumnHint.TraceInstrumentationLibraryName]: 'Instrumentation Library Name',\n      [ColumnHint.TraceInstrumentationLibraryVersion]: 'Instrumentation Library Version',\n      [ColumnHint.TraceState]: 'State',\n    },\n  },\n};\n","import React, { SyntheticEvent } from 'react';\nimport { ConfigSection } from 'components/experimental/ConfigSection';\nimport { Input, Field } from '@grafana/ui';\nimport allLabels from 'labels';\n\ninterface DefaultDatabaseTableConfigProps {\n  defaultDatabase?: string;\n  defaultTable?: string;\n  onDefaultDatabaseChange: (e: SyntheticEvent<HTMLInputElement | HTMLSelectElement, Event>) => void;\n  onDefaultTableChange: (e: SyntheticEvent<HTMLInputElement | HTMLSelectElement, Event>) => void;\n}\n\nexport const DefaultDatabaseTableConfig = (props: DefaultDatabaseTableConfigProps) => {\n  const { defaultDatabase, defaultTable, onDefaultDatabaseChange, onDefaultTableChange } = props;\n  const labels = allLabels.components.Config.DefaultDatabaseTableConfig;\n\n  return (\n    <ConfigSection title={labels.title}>\n      <Field label={labels.database.label} description={labels.database.description}>\n        <Input\n          name={labels.database.name}\n          width={40}\n          value={defaultDatabase || ''}\n          onChange={onDefaultDatabaseChange}\n          label={labels.database.label}\n          aria-label={labels.database.label}\n          placeholder={labels.database.placeholder}\n          type=\"text\"\n        />\n      </Field>\n      <Field label={labels.table.label} description={labels.table.description}>\n        <Input\n          name={labels.table.name}\n          width={40}\n          value={defaultTable || ''}\n          onChange={onDefaultTableChange}\n          label={labels.table.label}\n          aria-label={labels.table.label}\n          placeholder={labels.table.placeholder}\n          type=\"text\"\n        />\n      </Field>\n    </ConfigSection>\n  );\n};\n","import React, { FormEvent } from 'react';\nimport { Switch, Input, Field } from '@grafana/ui';\nimport { ConfigSection } from 'components/experimental/ConfigSection';\nimport allLabels from 'labels';\n\ninterface QuerySettingsConfigProps {\n  connMaxLifetime?: string;\n  dialTimeout?: string;\n  maxIdleConns?: string;\n  maxOpenConns?: string;\n  queryTimeout?: string;\n  validateSql?: boolean;\n  onConnMaxIdleConnsChange: (e: FormEvent<HTMLInputElement>) => void;\n  onConnMaxLifetimeChange: (e: FormEvent<HTMLInputElement>) => void;\n  onConnMaxOpenConnsChange: (e: FormEvent<HTMLInputElement>) => void;\n  onDialTimeoutChange: (e: FormEvent<HTMLInputElement>) => void;\n  onQueryTimeoutChange: (e: FormEvent<HTMLInputElement>) => void;\n  onValidateSqlChange: (e: FormEvent<HTMLInputElement>) => void;\n}\n\nexport const QuerySettingsConfig = (props: QuerySettingsConfigProps) => {\n  const {\n    connMaxLifetime,\n    dialTimeout,\n    maxIdleConns,\n    maxOpenConns,\n    queryTimeout,\n    validateSql,\n    onConnMaxIdleConnsChange,\n    onConnMaxLifetimeChange,\n    onConnMaxOpenConnsChange,\n    onDialTimeoutChange,\n    onQueryTimeoutChange,\n    onValidateSqlChange,\n  } = props;\n\n  const labels = allLabels.components.Config.QuerySettingsConfig;\n\n  return (\n    <ConfigSection title={labels.title}>\n      <Field label={labels.dialTimeout.label} description={labels.dialTimeout.tooltip}>\n        <Input\n          name={labels.dialTimeout.name}\n          width={40}\n          value={dialTimeout || ''}\n          onChange={onDialTimeoutChange}\n          label={labels.dialTimeout.label}\n          aria-label={labels.dialTimeout.label}\n          placeholder={labels.dialTimeout.placeholder}\n          type=\"number\"\n        />\n      </Field>\n      <Field label={labels.queryTimeout.label} description={labels.queryTimeout.tooltip}>\n        <Input\n          name={labels.queryTimeout.name}\n          width={40}\n          value={queryTimeout || ''}\n          onChange={onQueryTimeoutChange}\n          label={labels.queryTimeout.label}\n          aria-label={labels.queryTimeout.label}\n          placeholder={labels.queryTimeout.placeholder}\n          type=\"number\"\n        />\n      </Field>\n      <Field label={labels.connMaxLifetime.label} description={labels.connMaxLifetime.tooltip}>\n        <Input\n          name={labels.connMaxLifetime.name}\n          width={40}\n          value={connMaxLifetime || ''}\n          onChange={onConnMaxLifetimeChange}\n          label={labels.connMaxLifetime.label}\n          aria-label={labels.connMaxLifetime.label}\n          placeholder={labels.connMaxLifetime.placeholder}\n          type=\"number\"\n        />\n      </Field>\n      <Field label={labels.maxIdleConns.label} description={labels.maxIdleConns.tooltip}>\n        <Input\n          name={labels.maxIdleConns.name}\n          width={40}\n          value={maxIdleConns || ''}\n          onChange={onConnMaxIdleConnsChange}\n          label={labels.maxIdleConns.label}\n          aria-label={labels.maxIdleConns.label}\n          placeholder={labels.maxIdleConns.placeholder}\n          type=\"number\"\n        />\n      </Field>\n      <Field label={labels.maxOpenConns.label} description={labels.maxOpenConns.tooltip}>\n        <Input\n          name={labels.maxOpenConns.name}\n          width={40}\n          value={maxOpenConns || ''}\n          onChange={onConnMaxOpenConnsChange}\n          label={labels.maxOpenConns.label}\n          aria-label={labels.maxOpenConns.label}\n          placeholder={labels.maxOpenConns.placeholder}\n          type=\"number\"\n        />\n      </Field>\n\n      <Field label={labels.validateSql.label} description={labels.validateSql.tooltip}>\n        <Switch className=\"gf-form\" value={validateSql || false} onChange={onValidateSqlChange} role=\"checkbox\" />\n      </Field>\n    </ConfigSection>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { InlineFormLabel, Select, Switch as GrafanaSwitch, useTheme } from '@grafana/ui';\nimport otel from 'otel';\nimport selectors from 'labels';\n\ninterface OtelVersionSelectProps {\n  enabled: boolean;\n  onEnabledChange: (enabled: boolean) => void;\n  selectedVersion: string;\n  onVersionChange: (version: string) => void;\n  wide?: boolean;\n}\n\nexport const OtelVersionSelect = (props: OtelVersionSelectProps) => {\n  const { enabled, onEnabledChange, selectedVersion, onVersionChange, wide } = props;\n  const { label, tooltip } = selectors.components.OtelVersionSelect;\n  const options: SelectableValue[] = otel.versions.map((v) => ({\n    label: v.name,\n    value: v.version,\n  }));\n\n  useEffect(() => {\n    // Use latest version if not set or doesn't exist (which may happen if config is broken)\n    if (selectedVersion === '' || !otel.getVersion(selectedVersion)) {\n      onVersionChange(otel.getLatestVersion().version);\n    }\n  }, [selectedVersion, onVersionChange]);\n\n  const theme = useTheme();\n  const switchContainerStyle: React.CSSProperties = {\n    padding: `0 ${theme.spacing.sm}`,\n    height: `${theme.spacing.formInputHeight}px`,\n    display: 'flex',\n    alignItems: 'center',\n  };\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={wide ? 12 : 8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <div style={switchContainerStyle}>\n        <GrafanaSwitch\n          className=\"gf-form\"\n          value={enabled}\n          onChange={(e) => onEnabledChange(e.currentTarget.checked)}\n          role=\"checkbox\"\n        />\n      </div>\n      <Select\n        disabled={!enabled}\n        options={options}\n        width={20}\n        onChange={(e) => onVersionChange(e.value)}\n        value={selectedVersion}\n        menuPlacement={'bottom'}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Input, InlineFormLabel } from '@grafana/ui';\n\ninterface LabeledInputProps {\n  label: string;\n  tooltip?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  value: string;\n  onChange: (value: string) => void;\n}\n\nexport function LabeledInput(props: LabeledInputProps) {\n  const { label, tooltip, placeholder, disabled, value, onChange } = props;\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={12} className=\"query-keyword\" tooltip={tooltip || label}>\n        {label}\n      </InlineFormLabel>\n      <Input\n        disabled={disabled}\n        width={30}\n        value={value}\n        onChange={(e) => onChange(e.currentTarget.value)}\n        placeholder={placeholder}\n      />\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\n\nexport const styles = {\n  Common: {\n    check: css`\n      margin-top: 5px;\n    `,\n    wrapper: css`\n      position: relative;\n      width: 100%;\n    `,\n    smallBtn: css`\n      margin-top: 5px;\n      margin-inline: 5px;\n    `,\n    selectWrapper: css`\n      width: 100%;\n    `,\n    inlineSelect: css`\n      margin-right: 5px;\n    `,\n    firstLabel: css`\n      margin-right: 5px;\n    `,\n    expand: css`\n      position: absolute;\n      top: 2px;\n      left: 6px;\n      z-index: 100;\n      color: gray;\n    `,\n  },\n  ConfigEditor: {\n    container: css`\n      justify-content: space-between;\n      h5 {\n        line-height: 34px;\n        margin-bottom: 5px;\n      }\n      button {\n        margin-right: 5px;\n      }\n    `,\n    wide: css`\n      width: 75%;\n    `,\n    subHeader: css`\n      padding: 5px 0 5px 0;\n    `,\n  },\n  QueryEditor: {\n    queryType: css`\n      justify-content: space-between;\n      span {\n        display: flex;\n      }\n    `,\n    inlineField: css`\n      margin-left: 7px;\n    `,\n  },\n  FormatSelector: {\n    formatSelector: css`\n      display: flex;\n    `,\n  },\n  VariablesEditor: {},\n};\n","import React from 'react';\nimport { InlineFormLabel, Switch as GrafanaSwitch, useTheme } from '@grafana/ui';\nimport { styles } from 'styles';\n\ninterface SwitchProps {\n  value: boolean;\n  onChange: (value: boolean) => void;\n  label: string;\n  tooltip: string;\n  disabled?: boolean;\n  inline?: boolean;\n  wide?: boolean;\n}\n\nexport const Switch = (props: SwitchProps) => {\n  const { value, onChange, label, tooltip, disabled, inline, wide } = props;\n\n  const theme = useTheme();\n  const switchContainerStyle: React.CSSProperties = {\n    padding: `0 ${theme.spacing.sm}`,\n    height: `${theme.spacing.formInputHeight}px`,\n    display: 'flex',\n    alignItems: 'center',\n  };\n\n  const labelStyle = 'query-keyword ' + (inline ? styles.QueryEditor.inlineField : '');\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={wide ? 12 : 8} className={labelStyle} tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <div style={switchContainerStyle}>\n        <GrafanaSwitch\n          disabled={disabled}\n          className=\"gf-form\"\n          value={value}\n          onChange={(e) => onChange(e.currentTarget.checked)}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ConfigSection, ConfigSubSection } from 'components/experimental/ConfigSection';\nimport { Input, Field, InlineFormLabel, TagsInput } from '@grafana/ui';\nimport { OtelVersionSelect } from 'components/queryBuilder/OtelVersionSelect';\nimport { ColumnHint } from 'types/queryBuilder';\nimport otel, { defaultLogsTable } from 'otel';\nimport { LabeledInput } from './LabeledInput';\nimport { CHLogsConfig } from 'types/config';\nimport allLabels from 'labels';\nimport { columnLabelToPlaceholder } from 'data/utils';\nimport { Switch } from 'components/queryBuilder/Switch';\n\ninterface LogsConfigProps {\n  logsConfig?: CHLogsConfig;\n  onDefaultDatabaseChange: (v: string) => void;\n  onDefaultTableChange: (v: string) => void;\n  onOtelEnabledChange: (v: boolean) => void;\n  onOtelVersionChange: (v: string) => void;\n  onTimeColumnChange: (v: string) => void;\n  onLevelColumnChange: (v: string) => void;\n  onMessageColumnChange: (v: string) => void;\n  onSelectContextColumnsChange: (v: boolean) => void;\n  onContextColumnsChange: (v: string[]) => void;\n}\n\nexport const LogsConfig = (props: LogsConfigProps) => {\n  const {\n    onDefaultDatabaseChange,\n    onDefaultTableChange,\n    onOtelEnabledChange,\n    onOtelVersionChange,\n    onTimeColumnChange,\n    onLevelColumnChange,\n    onMessageColumnChange,\n    onSelectContextColumnsChange,\n    onContextColumnsChange,\n  } = props;\n  let {\n    defaultDatabase,\n    defaultTable,\n    otelEnabled,\n    otelVersion,\n    timeColumn,\n    levelColumn,\n    messageColumn,\n    selectContextColumns,\n    contextColumns,\n  } = props.logsConfig || {};\n  const labels = allLabels.components.Config.LogsConfig;\n\n  const otelConfig = otel.getVersion(otelVersion);\n  if (otelEnabled && otelConfig) {\n    timeColumn = otelConfig.logColumnMap.get(ColumnHint.Time);\n    levelColumn = otelConfig.logColumnMap.get(ColumnHint.LogLevel);\n    messageColumn = otelConfig.logColumnMap.get(ColumnHint.LogMessage);\n  }\n\n  const onContextColumnsChangeTrimmed = (columns: string[]) =>\n    onContextColumnsChange(columns.map((c) => c.trim()).filter((c) => c));\n\n  return (\n    <ConfigSection title={labels.title} description={labels.description}>\n      <div id=\"logs-config\" />\n      <Field label={labels.defaultDatabase.label} description={labels.defaultDatabase.description}>\n        <Input\n          name={labels.defaultDatabase.name}\n          width={40}\n          value={defaultDatabase || ''}\n          onChange={(e) => onDefaultDatabaseChange(e.currentTarget.value)}\n          label={labels.defaultDatabase.label}\n          aria-label={labels.defaultDatabase.label}\n          placeholder={labels.defaultDatabase.placeholder}\n        />\n      </Field>\n      <Field label={labels.defaultTable.label} description={labels.defaultTable.description}>\n        <Input\n          name={labels.defaultTable.name}\n          width={40}\n          value={defaultTable || ''}\n          onChange={(e) => onDefaultTableChange(e.currentTarget.value)}\n          label={labels.defaultTable.label}\n          aria-label={labels.defaultTable.label}\n          placeholder={defaultLogsTable}\n        />\n      </Field>\n      <ConfigSubSection title={labels.columns.title} description={labels.columns.description}>\n        <OtelVersionSelect\n          enabled={otelEnabled || false}\n          selectedVersion={otelVersion || ''}\n          onEnabledChange={onOtelEnabledChange}\n          onVersionChange={onOtelVersionChange}\n          wide\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.time.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.time.label)}\n          tooltip={labels.columns.time.tooltip}\n          value={timeColumn || ''}\n          onChange={onTimeColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.level.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.level.label)}\n          tooltip={labels.columns.level.tooltip}\n          value={levelColumn || ''}\n          onChange={onLevelColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.message.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.message.label)}\n          tooltip={labels.columns.message.tooltip}\n          value={messageColumn || ''}\n          onChange={onMessageColumnChange}\n        />\n      </ConfigSubSection>\n      <br />\n      <ConfigSubSection title={labels.contextColumns.title} description={labels.contextColumns.description}>\n        <Switch\n          label={labels.contextColumns.selectContextColumns.label}\n          tooltip={labels.contextColumns.selectContextColumns.tooltip}\n          value={selectContextColumns || false}\n          onChange={onSelectContextColumnsChange}\n          wide\n        />\n        <div className=\"gf-form\">\n          <InlineFormLabel width={12} className=\"query-keyword\" tooltip={labels.contextColumns.columns.tooltip}>\n            {labels.contextColumns.columns.label}\n          </InlineFormLabel>\n          <TagsInput\n            placeholder={labels.contextColumns.columns.placeholder}\n            tags={contextColumns || []}\n            onChange={onContextColumnsChangeTrimmed}\n            width={60}\n          />\n        </div>\n      </ConfigSubSection>\n    </ConfigSection>\n  );\n};\n","import React from 'react';\nimport { TimeUnit } from 'types/queryBuilder';\nimport allLabels from 'labels';\nimport { InlineFormLabel, Select } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { styles } from 'styles';\n\ninterface DurationUnitSelectProps {\n  unit: TimeUnit;\n  onChange: (u: TimeUnit) => void;\n  disabled?: boolean;\n  inline?: boolean;\n}\n\nconst durationUnitOptions: ReadonlyArray<SelectableValue<TimeUnit>> = [\n  { label: TimeUnit.Seconds, value: TimeUnit.Seconds },\n  { label: TimeUnit.Milliseconds, value: TimeUnit.Milliseconds },\n  { label: TimeUnit.Microseconds, value: TimeUnit.Microseconds },\n  { label: TimeUnit.Nanoseconds, value: TimeUnit.Nanoseconds },\n];\n\nexport const DurationUnitSelect = (props: DurationUnitSelectProps) => {\n  const { unit, onChange, disabled, inline } = props;\n  const { label, tooltip } = allLabels.components.TraceQueryBuilder.columns.durationUnit;\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel\n        width={12}\n        className={`query-keyword ${inline ? styles.QueryEditor.inlineField : ''}`}\n        tooltip={tooltip}\n      >\n        {label}\n      </InlineFormLabel>\n      <Select<TimeUnit>\n        disabled={disabled}\n        options={durationUnitOptions as Array<SelectableValue<TimeUnit>>}\n        value={unit}\n        onChange={(v) => onChange(v.value!)}\n        width={inline ? 25 : 30}\n        menuPlacement={'bottom'}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { ConfigSection, ConfigSubSection } from 'components/experimental/ConfigSection';\nimport { Input, Field } from '@grafana/ui';\nimport { OtelVersionSelect } from 'components/queryBuilder/OtelVersionSelect';\nimport { ColumnHint, TimeUnit } from 'types/queryBuilder';\nimport otel, { defaultTraceTable } from 'otel';\nimport { LabeledInput } from './LabeledInput';\nimport { DurationUnitSelect } from 'components/queryBuilder/DurationUnitSelect';\nimport { CHTracesConfig } from 'types/config';\nimport allLabels from 'labels';\nimport { columnLabelToPlaceholder } from 'data/utils';\nimport { Switch } from 'components/queryBuilder/Switch';\n\nexport interface TraceConfigProps {\n  tracesConfig?: CHTracesConfig;\n  onDefaultDatabaseChange: (v: string) => void;\n  onDefaultTableChange: (v: string) => void;\n  onOtelEnabledChange: (v: boolean) => void;\n  onOtelVersionChange: (v: string) => void;\n  onTraceIdColumnChange: (v: string) => void;\n  onSpanIdColumnChange: (v: string) => void;\n  onOperationNameColumnChange: (v: string) => void;\n  onParentSpanIdColumnChange: (v: string) => void;\n  onServiceNameColumnChange: (v: string) => void;\n  onDurationColumnChange: (v: string) => void;\n  onDurationUnitChange: (v: TimeUnit) => void;\n  onStartTimeColumnChange: (v: string) => void;\n  onTagsColumnChange: (v: string) => void;\n  onServiceTagsColumnChange: (v: string) => void;\n  onKindColumnChange: (v: string) => void;\n  onStatusCodeColumnChange: (v: string) => void;\n  onStatusMessageColumnChange: (v: string) => void;\n  onStateColumnChange: (v: string) => void;\n  onInstrumentationLibraryNameColumnChange: (v: string) => void;\n  onInstrumentationLibraryVersionColumnChange: (v: string) => void;\n  onFlattenNestedChange: (v: boolean) => void;\n  onEventsColumnPrefixChange: (v: string) => void;\n  onLinksColumnPrefixChange: (v: string) => void;\n}\n\nexport const TracesConfig = (props: TraceConfigProps) => {\n  const {\n    onDefaultDatabaseChange,\n    onDefaultTableChange,\n    onOtelEnabledChange,\n    onOtelVersionChange,\n    onTraceIdColumnChange,\n    onSpanIdColumnChange,\n    onOperationNameColumnChange,\n    onParentSpanIdColumnChange,\n    onServiceNameColumnChange,\n    onDurationColumnChange,\n    onDurationUnitChange,\n    onStartTimeColumnChange,\n    onTagsColumnChange,\n    onServiceTagsColumnChange,\n    onKindColumnChange,\n    onStatusCodeColumnChange,\n    onStatusMessageColumnChange,\n    onStateColumnChange,\n    onInstrumentationLibraryNameColumnChange,\n    onInstrumentationLibraryVersionColumnChange,\n    onFlattenNestedChange,\n    onEventsColumnPrefixChange,\n    onLinksColumnPrefixChange,\n  } = props;\n  let {\n    defaultDatabase,\n    defaultTable,\n    otelEnabled,\n    otelVersion,\n    traceIdColumn,\n    spanIdColumn,\n    operationNameColumn,\n    parentSpanIdColumn,\n    serviceNameColumn,\n    durationColumn,\n    durationUnit,\n    startTimeColumn,\n    tagsColumn,\n    serviceTagsColumn,\n    kindColumn,\n    statusCodeColumn,\n    statusMessageColumn,\n    stateColumn,\n    instrumentationLibraryNameColumn,\n    instrumentationLibraryVersionColumn,\n    flattenNested,\n    traceEventsColumnPrefix,\n    traceLinksColumnPrefix,\n  } = (props.tracesConfig || {}) as CHTracesConfig;\n  const labels = allLabels.components.Config.TracesConfig;\n\n  const otelConfig = otel.getVersion(otelVersion);\n  if (otelEnabled && otelConfig) {\n    startTimeColumn = otelConfig.traceColumnMap.get(ColumnHint.Time);\n    traceIdColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceId);\n    spanIdColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceSpanId);\n    parentSpanIdColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceParentSpanId);\n    serviceNameColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceServiceName);\n    operationNameColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceOperationName);\n    durationColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceDurationTime);\n    tagsColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceTags);\n    serviceTagsColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceServiceTags);\n    kindColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceKind);\n    statusCodeColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceStatusCode);\n    statusMessageColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceStatusMessage);\n    stateColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceState);\n    instrumentationLibraryNameColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceInstrumentationLibraryName);\n    instrumentationLibraryVersionColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceInstrumentationLibraryVersion);\n    durationUnit = otelConfig.traceDurationUnit.toString();\n    flattenNested = otelConfig.flattenNested;\n    traceEventsColumnPrefix = otelConfig.traceEventsColumnPrefix;\n    traceLinksColumnPrefix = otelConfig.traceLinksColumnPrefix;\n  }\n\n  return (\n    <ConfigSection title={labels.title} description={labels.description}>\n      <div id=\"traces-config\" />\n      <Field label={labels.defaultDatabase.label} description={labels.defaultDatabase.description}>\n        <Input\n          name={labels.defaultDatabase.name}\n          width={40}\n          value={defaultDatabase || ''}\n          onChange={(e) => onDefaultDatabaseChange(e.currentTarget.value)}\n          label={labels.defaultDatabase.label}\n          aria-label={labels.defaultDatabase.label}\n          placeholder={labels.defaultDatabase.placeholder}\n        />\n      </Field>\n      <Field label={labels.defaultTable.label} description={labels.defaultTable.description}>\n        <Input\n          name={labels.defaultTable.name}\n          width={40}\n          value={defaultTable || ''}\n          onChange={(e) => onDefaultTableChange(e.currentTarget.value)}\n          label={labels.defaultTable.label}\n          aria-label={labels.defaultTable.label}\n          placeholder={defaultTraceTable}\n        />\n      </Field>\n      <ConfigSubSection title={labels.columns.title} description={labels.columns.description}>\n        <OtelVersionSelect\n          enabled={otelEnabled || false}\n          selectedVersion={otelVersion || ''}\n          onEnabledChange={onOtelEnabledChange}\n          onVersionChange={onOtelVersionChange}\n          wide\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.traceId.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.traceId.label)}\n          tooltip={labels.columns.traceId.tooltip}\n          value={traceIdColumn || ''}\n          onChange={onTraceIdColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.spanId.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.spanId.label)}\n          tooltip={labels.columns.spanId.tooltip}\n          value={spanIdColumn || ''}\n          onChange={onSpanIdColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.operationName.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.operationName.label)}\n          tooltip={labels.columns.operationName.tooltip}\n          value={operationNameColumn || ''}\n          onChange={onOperationNameColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.parentSpanId.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.parentSpanId.label)}\n          tooltip={labels.columns.parentSpanId.tooltip}\n          value={parentSpanIdColumn || ''}\n          onChange={onParentSpanIdColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.serviceName.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.serviceName.label)}\n          tooltip={labels.columns.serviceName.tooltip}\n          value={serviceNameColumn || ''}\n          onChange={onServiceNameColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.durationTime.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.durationTime.label)}\n          tooltip={labels.columns.durationTime.tooltip}\n          value={durationColumn || ''}\n          onChange={onDurationColumnChange}\n        />\n        <DurationUnitSelect\n          disabled={otelEnabled}\n          unit={(durationUnit as TimeUnit) || TimeUnit.Nanoseconds}\n          onChange={onDurationUnitChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.startTime.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.startTime.label)}\n          tooltip={labels.columns.startTime.tooltip}\n          value={startTimeColumn || ''}\n          onChange={onStartTimeColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.tags.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.tags.label)}\n          tooltip={labels.columns.tags.tooltip}\n          value={tagsColumn || ''}\n          onChange={onTagsColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.serviceTags.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.serviceTags.label)}\n          tooltip={labels.columns.serviceTags.tooltip}\n          value={serviceTagsColumn || ''}\n          onChange={onServiceTagsColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.kind.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.kind.label)}\n          tooltip={labels.columns.kind.tooltip}\n          value={kindColumn || ''}\n          onChange={onKindColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.statusCode.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.statusCode.label)}\n          tooltip={labels.columns.statusCode.tooltip}\n          value={statusCodeColumn || ''}\n          onChange={onStatusCodeColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.statusMessage.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.statusMessage.label)}\n          tooltip={labels.columns.statusMessage.tooltip}\n          value={statusMessageColumn || ''}\n          onChange={onStatusMessageColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.state.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.state.label)}\n          tooltip={labels.columns.state.tooltip}\n          value={stateColumn || ''}\n          onChange={onStateColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.instrumentationLibraryName.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.instrumentationLibraryName.label)}\n          tooltip={labels.columns.instrumentationLibraryName.tooltip}\n          value={instrumentationLibraryNameColumn || ''}\n          onChange={onInstrumentationLibraryNameColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.instrumentationLibraryVersion.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.instrumentationLibraryVersion.label)}\n          tooltip={labels.columns.instrumentationLibraryVersion.tooltip}\n          value={instrumentationLibraryVersionColumn || ''}\n          onChange={onInstrumentationLibraryVersionColumnChange}\n        />\n        <Switch\n          disabled={otelEnabled}\n          label={labels.columns.flattenNested.label}\n          tooltip={labels.columns.flattenNested.tooltip}\n          value={flattenNested || false}\n          onChange={onFlattenNestedChange}\n          wide\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.eventsPrefix.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.eventsPrefix.label)}\n          tooltip={labels.columns.eventsPrefix.tooltip}\n          value={traceEventsColumnPrefix || ''}\n          onChange={onEventsColumnPrefixChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.linksPrefix.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.linksPrefix.label)}\n          tooltip={labels.columns.linksPrefix.tooltip}\n          value={traceLinksColumnPrefix || ''}\n          onChange={onLinksColumnPrefixChange}\n        />\n      </ConfigSubSection>\n    </ConfigSection>\n  );\n};\n","import React, { ChangeEvent, useMemo, useState } from 'react';\nimport { ConfigSection } from 'components/experimental/ConfigSection';\nimport { Input, Field, Stack, Switch, SecretInput, Button } from '@grafana/ui';\nimport { CHHttpHeader } from 'types/config';\nimport allLabels from 'labels';\nimport { styles } from 'styles';\nimport { selectors as allSelectors } from 'selectors';\nimport { KeyValue } from '@grafana/data';\n\ninterface HttpHeadersConfigProps {\n  headers?: CHHttpHeader[];\n  forwardGrafanaHeaders?: boolean;\n  secureFields: KeyValue<boolean>;\n  onHttpHeadersChange: (v: CHHttpHeader[]) => void;\n  onForwardGrafanaHeadersChange: (v: boolean) => void;\n}\n\nexport const HttpHeadersConfig = (props: HttpHeadersConfigProps) => {\n  const { secureFields, onHttpHeadersChange } = props;\n  const configuredSecureHeaders = useConfiguredSecureHttpHeaders(secureFields);\n  const [headers, setHeaders] = useState<CHHttpHeader[]>(props.headers || []);\n  const [forwardGrafanaHeaders, setForwardGrafanaHeaders] = useState<boolean>(props.forwardGrafanaHeaders || false);\n  const labels = allLabels.components.Config.HttpHeadersConfig;\n  const selectors = allSelectors.components.Config.HttpHeaderConfig;\n\n  const addHeader = () => setHeaders([...headers, { name: '', value: '', secure: false }]);\n  const removeHeader = (index: number) => {\n    const nextHeaders: CHHttpHeader[] = headers.slice();\n    nextHeaders.splice(index, 1);\n    setHeaders(nextHeaders);\n    onHttpHeadersChange(nextHeaders);\n  };\n  const updateHeader = (index: number, header: CHHttpHeader) => {\n    const nextHeaders: CHHttpHeader[] = headers.slice();\n    header.name = header.name.trim();\n    nextHeaders[index] = header;\n    setHeaders(nextHeaders);\n    onHttpHeadersChange(nextHeaders);\n  };\n  const updateForwardGrafanaHeaders = (value: boolean) => {\n    setForwardGrafanaHeaders(value);\n    props.onForwardGrafanaHeadersChange(value);\n  };\n\n  return (\n    <ConfigSection title={labels.title}>\n      <Field label={labels.label} description={labels.description}>\n        <>\n          {headers.map((header, index) => (\n            <HttpHeaderEditor\n              key={header.name + index}\n              name={header.name}\n              value={header.value}\n              secure={header.secure}\n              isSecureConfigured={configuredSecureHeaders.has(header.name)}\n              onHeaderChange={(header) => updateHeader(index, header)}\n              onRemove={() => removeHeader(index)}\n            />\n          ))}\n          <Button\n            data-testid={selectors.addHeaderButton}\n            icon=\"plus-circle\"\n            variant=\"secondary\"\n            size=\"sm\"\n            onClick={addHeader}\n            className={styles.Common.smallBtn}\n          >\n            {labels.addHeaderLabel}\n          </Button>\n        </>\n      </Field>\n      <Field label={labels.forwardGrafanaHeaders.label} description={labels.forwardGrafanaHeaders.tooltip}>\n        <Switch\n          data-testid={selectors.forwardGrafanaHeadersSwitch}\n          className={'gf-form'}\n          value={forwardGrafanaHeaders}\n          onChange={(e) => updateForwardGrafanaHeaders(e.currentTarget.checked)}\n        />\n      </Field>\n    </ConfigSection>\n  );\n};\n\ninterface HttpHeaderEditorProps {\n  name: string;\n  value: string;\n  secure: boolean;\n  isSecureConfigured: boolean;\n  onHeaderChange: (v: CHHttpHeader) => void;\n  onRemove?: () => void;\n}\n\nconst HttpHeaderEditor = (props: HttpHeaderEditorProps) => {\n  const { onHeaderChange, onRemove } = props;\n  const [name, setName] = useState<string>(props.name);\n  const [value, setValue] = useState<string>(props.value);\n  const [secure, setSecure] = useState<boolean>(props.secure);\n  const [isSecureConfigured, setSecureConfigured] = useState<boolean>(props.isSecureConfigured);\n  const labels = allLabels.components.Config.HttpHeadersConfig;\n  const selectors = allSelectors.components.Config.HttpHeaderConfig;\n\n  const onUpdate = () => {\n    onHeaderChange({\n      name,\n      value,\n      secure,\n    });\n  };\n\n  let valueInput;\n  if (secure) {\n    valueInput = (\n      <SecretInput\n        data-testid={selectors.headerValueInput}\n        width={65}\n        placeholder={labels.secureHeaderValueLabel}\n        value={value}\n        isConfigured={isSecureConfigured}\n        onReset={() => setSecureConfigured(false)}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => setValue(e.target.value)}\n        onBlur={() => onUpdate()}\n      />\n    );\n  } else {\n    valueInput = (\n      <Input\n        data-testid={selectors.headerValueInput}\n        width={65}\n        value={value}\n        placeholder={labels.insecureHeaderValueLabel}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => setValue(e.target.value)}\n        onBlur={() => onUpdate()}\n      />\n    );\n  }\n\n  const headerValueLabel = secure ? labels.secureHeaderValueLabel : labels.insecureHeaderValueLabel;\n  return (\n    <div data-testid={selectors.headerEditor}>\n      <Stack>\n        <Field label={labels.headerNameLabel} aria-label={labels.headerNameLabel}>\n          <Input\n            data-testid={selectors.headerNameInput}\n            value={name}\n            disabled={isSecureConfigured}\n            placeholder={labels.headerNamePlaceholder}\n            onChange={(e: ChangeEvent<HTMLInputElement>) => setName(e.target.value)}\n            onBlur={() => onUpdate()}\n          />\n        </Field>\n        <Field label={headerValueLabel} aria-label={headerValueLabel}>\n          {valueInput}\n        </Field>\n        {!isSecureConfigured && (\n          <Field label={labels.secureLabel}>\n            <Switch\n              data-testid={selectors.headerSecureSwitch}\n              className=\"gf-form\"\n              value={secure}\n              onChange={(e) => setSecure(e.currentTarget.checked)}\n              onBlur={() => onUpdate()}\n            />\n          </Field>\n        )}\n        {onRemove && (\n          <Button\n            data-testid={selectors.removeHeaderButton}\n            className={styles.Common.smallBtn}\n            variant=\"destructive\"\n            size=\"sm\"\n            icon=\"trash-alt\"\n            onClick={onRemove}\n          />\n        )}\n      </Stack>\n    </div>\n  );\n};\n\n/**\n * Returns a Set of all secured headers that are configured\n */\nexport const useConfiguredSecureHttpHeaders = (secureJsonFields: KeyValue<boolean>): Set<string> => {\n  return useMemo(() => {\n    const secureHeaders = new Set<string>();\n    for (let key in secureJsonFields) {\n      if (key.startsWith('secureHttpHeaders.') && secureJsonFields[key]) {\n        secureHeaders.add(key.substring(key.indexOf('.') + 1));\n      }\n    }\n    return secureHeaders;\n  }, [secureJsonFields]);\n};\n","import { DataSourceSettings, KeyValue } from '@grafana/data';\nimport { defaultLogsTable, defaultTraceTable } from 'otel';\nimport { useEffect, useRef } from 'react';\nimport { CHConfig, CHHttpHeader, CHSecureConfig, Protocol } from 'types/config';\nimport { pluginVersion } from 'utils/version';\n\n/**\n * Handles saving HTTP headers to Grafana config.\n *\n * All header keys go to the unsecure config.\n * If the header is marked as secure, its value goes to the\n * secure json config where it is hidden.\n */\nexport const onHttpHeadersChange = (\n  headers: CHHttpHeader[],\n  options: DataSourceSettings<CHConfig, CHSecureConfig>,\n  onOptionsChange: (opts: DataSourceSettings<CHConfig, CHSecureConfig>) => void\n) => {\n  const httpHeaders: CHHttpHeader[] = [];\n  const secureHttpHeaderKeys: KeyValue<boolean> = {};\n  const secureHttpHeaderValues: KeyValue<string> = {};\n\n  for (let header of headers) {\n    if (!header.name) {\n      continue;\n    }\n\n    if (header.secure) {\n      const key = `secureHttpHeaders.${header.name}`;\n      secureHttpHeaderKeys[key] = true;\n\n      if (header.value) {\n        secureHttpHeaderValues[key] = header.value;\n        header.value = '';\n      }\n    }\n\n    httpHeaders.push(header);\n  }\n\n  const currentSecureJsonFields: KeyValue<boolean> = { ...options.secureJsonFields };\n  for (let key in currentSecureJsonFields) {\n    if (!secureHttpHeaderKeys[key] && key.startsWith('secureHttpHeaders.')) {\n      // Remove key from secureJsonData when it is no longer present in header config\n      secureHttpHeaderKeys[key] = false;\n      secureHttpHeaderValues[key] = '';\n    }\n  }\n\n  onOptionsChange({\n    ...options,\n    jsonData: {\n      ...options.jsonData,\n      httpHeaders,\n    },\n    secureJsonFields: {\n      ...options.secureJsonFields,\n      ...secureHttpHeaderKeys,\n    },\n    secureJsonData: {\n      ...options.secureJsonData,\n      ...secureHttpHeaderValues,\n    },\n  });\n};\n\n/**\n * Applies default settings and migrations to config options.\n */\nexport const useConfigDefaults = (\n  options: DataSourceSettings<CHConfig>,\n  onOptionsChange: (opts: DataSourceSettings<CHConfig>) => void\n) => {\n  const appliedDefaults = useRef<boolean>(false);\n  useEffect(() => {\n    if (appliedDefaults.current) {\n      return;\n    }\n\n    const jsonData = { ...options.jsonData };\n    jsonData.version = pluginVersion; // Always overwrite version\n\n    // v3 Migration\n\n    const v3ServerField = (jsonData as any)['server'];\n    if (v3ServerField && !jsonData.host) {\n      jsonData.host = v3ServerField;\n    }\n    delete (jsonData as any)['server'];\n\n    const v3TimeoutField = (jsonData as any)['timeout'];\n    if (v3TimeoutField && !jsonData.dialTimeout) {\n      jsonData.dialTimeout = v3TimeoutField;\n    }\n    delete (jsonData as any)['timeout'];\n\n    // Defaults\n\n    if (!jsonData.protocol) {\n      jsonData.protocol = Protocol.Native;\n    }\n\n    if (!jsonData.logs || jsonData.logs.defaultTable === undefined) {\n      jsonData.logs = {\n        ...jsonData.logs,\n        defaultTable: defaultLogsTable,\n        selectContextColumns: true,\n        contextColumns: [],\n      };\n    }\n\n    if (!jsonData.traces || jsonData.traces.defaultTable === undefined) {\n      jsonData.traces = {\n        ...jsonData.traces,\n        defaultTable: defaultTraceTable,\n      };\n    }\n\n    onOptionsChange({\n      ...options,\n      jsonData,\n    });\n    appliedDefaults.current = true;\n  }, [options, onOptionsChange]);\n};\n","import { reportInteraction } from '@grafana/runtime';\nimport { TimeUnit } from 'types/queryBuilder';\n\n// Feedback form\nexport const trackInfluxDBConfigV2FeedbackButtonClicked = () => {\n  reportInteraction('clickhouse_config_v2_feedback_button_clicked');\n};\n\n// Server and encryption section\nexport const trackClickhouseConfigV2HostInput = () => {\n  reportInteraction('clickhouse_config_v2_host_input');\n};\n\nexport const trackClickhouseConfigV2PortInput = (props: { port: string }) => {\n  reportInteraction('clickhouse_config_v2_port_input', props);\n};\n\nexport const trackClickhouseConfigV2NativeHttpToggleClicked = (props: { nativeHttpToggle: string }) => {\n  reportInteraction('clickhouse_config_v2_native_http_toggle_clicked', props);\n};\n\nexport const trackClickhouseConfigV2SecureConnectionChecked = (props: { secureConnection: boolean }) => {\n  reportInteraction('clickhouse_config_v2_secure_connection_checked', props);\n};\n\n// Database credentials section\nexport const trackClickhouseConfigV2DatabaseCredentialsUserInput = () => {\n  reportInteraction('clickhouse_config_v2_database_credentials_user_input');\n};\n\nexport const trackClickhouseConfigV2DatabaseCredentialsPasswordInput = () => {\n  reportInteraction('clickhouse_config_v2_database_credentials_password_input');\n};\n\n// TLS/SSL Settings section\nexport const trackClickhouseConfigV2SkipTLSVerifyToggleClicked = (props: { skipTlsVerifyToggle: boolean }) => {\n  reportInteraction('clickhouse_config_v2_skip_tls_verify_toggle_clicked', props);\n};\n\nexport const trackClickhouseConfigV2TLSClientAuthToggleClicked = (props: { clientAuthToggle: boolean }) => {\n  reportInteraction('clickhouse_config_v2_tls_client_auth_toggle_clicked', props);\n};\n\nexport const trackClickhouseConfigV2WithCACertToggleClicked = (props: { caCertToggle: boolean }) => {\n  reportInteraction('clickhouse_config_v2_with_ca_cert_toggle_clicked', props);\n};\n\n// Additional settings\n// Default DB and Table section\nexport const trackClickhouseConfigV2DefaultDbInput = () => {\n  reportInteraction('clickhouse_config_v2_default_db_input');\n};\n\nexport const trackClickhouseConfigV2DefaultTableInput = () => {\n  reportInteraction('clickhouse_config_v2_default_table_input');\n};\n\n// Query settings section\nexport const trackClickhouseConfigV2QuerySettings = (props: {\n  queryTimeout?: number;\n  dialTimeout?: number;\n  maxIdleConns?: number;\n  maxOpenConns?: number;\n  connMaxLifetime?: number;\n  validateSql?: boolean;\n}) => {\n  reportInteraction('clickhouse_config_v2_query_settings', props);\n};\n\n// Logs config section\nexport const trackClickhouseConfigV2LogsConfig = (props: {\n  defaultDatabase?: string;\n  defaultTable?: string;\n  otelEnabled?: boolean;\n  version?: string;\n  timeColumn?: string;\n  levelColumn?: string;\n  messageColumn?: string;\n  selectContextColumns?: boolean;\n  contextColumns?: string[];\n}) => {\n  reportInteraction('clickhouse_config_v2_logs_config', props);\n};\n\n// Traces config section\nexport const trackClickhouseConfigV2TracesConfig = (props: {\n  defaultDatabase?: string;\n  defaultTable?: string;\n  otelEnabled?: boolean;\n  version?: string;\n  traceIdColumn?: string;\n  spanIdColumn?: string;\n  operationNameColumn?: string;\n  parentSpanIdColumn?: string;\n  serviceNameColumn?: string;\n  durationColumn?: string;\n  durationUnit?: TimeUnit;\n  startTimeColumn?: string;\n  tagsColumn?: string;\n  serviceTagsColumn?: string;\n  kindColumn?: string;\n  statusCodeColumn?: string;\n  statusMessageColumn?: string;\n  stateColumn?: string;\n  instrumentationLibraryNameColumn?: string;\n  instrumentationLibraryVersionColumn?: string;\n  flattenNested?: boolean;\n  traceEventsColumnPrefix?: string;\n  traceLinksColumnPrefix?: string;\n}) => {\n  reportInteraction('clickhouse_config_v2_traces_config', props);\n};\n\n// Column Alias Tables section\nexport const trackClickhouseConfigV2ColumnAliasTableAdded = () => {\n  reportInteraction('clickhouse_config_v2_column_alias_table_added');\n};\n\n// Row limit section\nexport const trackClickhouseConfigV2EnableRowLimitToggle = (props: { rowLimitEnabled: boolean }) => {\n  reportInteraction('clickhouse_config_v2_enable_row_limit_toggle', props);\n};\n\n// Custom Settings section\nexport const trackClickhouseConfigV2CustomSettingClicked = () => {\n  reportInteraction('clickhouse_config_v2_custom_setting_clicked');\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport { ConfigSection } from 'components/experimental/ConfigSection';\nimport { Input, Field, Stack, Button } from '@grafana/ui';\nimport { AliasTableEntry } from 'types/config';\nimport allLabels from 'labels';\nimport { styles } from 'styles';\nimport { selectors as allSelectors } from 'selectors';\nimport { trackClickhouseConfigV2ColumnAliasTableAdded } from 'views/config-v2/tracking';\n\ninterface AliasTablesConfigProps {\n  aliasTables?: AliasTableEntry[];\n  onAliasTablesChange: (v: AliasTableEntry[]) => void;\n}\n\nexport const AliasTableConfig = (props: AliasTablesConfigProps) => {\n  const { onAliasTablesChange } = props;\n  const [entries, setEntries] = useState<AliasTableEntry[]>(props.aliasTables || []);\n  const labels = allLabels.components.Config.AliasTableConfig;\n  const selectors = allSelectors.components.Config.AliasTableConfig;\n\n  const entryToUniqueKey = (entry: AliasTableEntry) =>\n    `\"${entry.targetDatabase}\".\"${entry.targetTable}\":\"${entry.aliasDatabase}\".\"${entry.aliasTable}\"`;\n  const removeDuplicateEntries = (entries: AliasTableEntry[]): AliasTableEntry[] => {\n    const duplicateKeys = new Set();\n    return entries.filter((entry) => {\n      const key = entryToUniqueKey(entry);\n      if (duplicateKeys.has(key)) {\n        return false;\n      }\n\n      duplicateKeys.add(key);\n      return true;\n    });\n  };\n\n  const addEntry = () => {\n    setEntries(\n      removeDuplicateEntries([\n        ...entries,\n        {\n          targetDatabase: '',\n          targetTable: '',\n          aliasDatabase: '',\n          aliasTable: '',\n        },\n      ])\n    );\n  };\n  const removeEntry = (index: number) => {\n    let nextEntries: AliasTableEntry[] = entries.slice();\n    nextEntries.splice(index, 1);\n    nextEntries = removeDuplicateEntries(nextEntries);\n    setEntries(nextEntries);\n    onAliasTablesChange(nextEntries);\n  };\n  const updateEntry = (index: number, entry: AliasTableEntry) => {\n    let nextEntries: AliasTableEntry[] = entries.slice();\n    entry.targetDatabase = entry.targetDatabase.trim();\n    entry.targetTable = entry.targetTable.trim();\n    entry.aliasDatabase = entry.aliasDatabase.trim();\n    entry.aliasTable = entry.aliasTable.trim();\n    nextEntries[index] = entry;\n\n    nextEntries = removeDuplicateEntries(nextEntries);\n    setEntries(nextEntries);\n    onAliasTablesChange(nextEntries);\n  };\n\n  return (\n    <ConfigSection title={labels.title}>\n      <div>\n        <span>{labels.descriptionParts[0]}</span>\n        <code>{labels.descriptionParts[1]}</code>\n        <span>{labels.descriptionParts[2]}</span>\n      </div>\n      <br />\n\n      {entries.map((entry, index) => (\n        <AliasTableEditor\n          key={entryToUniqueKey(entry)}\n          targetDatabase={entry.targetDatabase}\n          targetTable={entry.targetTable}\n          aliasDatabase={entry.aliasDatabase}\n          aliasTable={entry.aliasTable}\n          onEntryChange={(e) => updateEntry(index, e)}\n          onRemove={() => removeEntry(index)}\n        />\n      ))}\n      <Button\n        data-testid={selectors.addEntryButton}\n        icon=\"plus-circle\"\n        variant=\"secondary\"\n        size=\"sm\"\n        onClick={() => {\n          addEntry();\n          trackClickhouseConfigV2ColumnAliasTableAdded();\n        }}\n        className={styles.Common.smallBtn}\n      >\n        {labels.addTableLabel}\n      </Button>\n    </ConfigSection>\n  );\n};\n\ninterface AliasTableEditorProps {\n  targetDatabase: string;\n  targetTable: string;\n  aliasDatabase: string;\n  aliasTable: string;\n  onEntryChange: (v: AliasTableEntry) => void;\n  onRemove?: () => void;\n}\n\nconst AliasTableEditor = (props: AliasTableEditorProps) => {\n  const { onEntryChange, onRemove } = props;\n  const [targetDatabase, setTargetDatabase] = useState<string>(props.targetDatabase);\n  const [targetTable, setTargetTable] = useState<string>(props.targetTable);\n  const [aliasDatabase, setAliasDatabase] = useState<string>(props.aliasDatabase);\n  const [aliasTable, setAliasTable] = useState<string>(props.aliasTable);\n  const labels = allLabels.components.Config.AliasTableConfig;\n  const selectors = allSelectors.components.Config.AliasTableConfig;\n\n  const onUpdate = () => {\n    onEntryChange({ targetDatabase, targetTable, aliasDatabase, aliasTable });\n  };\n\n  return (\n    <div data-testid={selectors.aliasEditor}>\n      <Stack>\n        <Field label={labels.targetDatabaseLabel} aria-label={labels.targetDatabaseLabel}>\n          <Input\n            data-testid={selectors.targetDatabaseInput}\n            value={targetDatabase}\n            placeholder={labels.targetDatabasePlaceholder}\n            onChange={(e: ChangeEvent<HTMLInputElement>) => setTargetDatabase(e.target.value)}\n            onBlur={() => onUpdate()}\n          />\n        </Field>\n        <Field label={labels.targetTableLabel} aria-label={labels.targetTableLabel}>\n          <Input\n            data-testid={selectors.targetTableInput}\n            value={targetTable}\n            placeholder={labels.targetTableLabel}\n            onChange={(e: ChangeEvent<HTMLInputElement>) => setTargetTable(e.target.value)}\n            onBlur={() => onUpdate()}\n          />\n        </Field>\n        <Field label={labels.aliasDatabaseLabel} aria-label={labels.aliasDatabaseLabel}>\n          <Input\n            data-testid={selectors.aliasDatabaseInput}\n            value={aliasDatabase}\n            placeholder={labels.aliasDatabasePlaceholder}\n            onChange={(e: ChangeEvent<HTMLInputElement>) => setAliasDatabase(e.target.value)}\n            onBlur={() => onUpdate()}\n          />\n        </Field>\n        <Field label={labels.aliasTableLabel} aria-label={labels.aliasTableLabel}>\n          <Input\n            data-testid={selectors.aliasTableInput}\n            value={aliasTable}\n            placeholder={labels.aliasTableLabel}\n            onChange={(e: ChangeEvent<HTMLInputElement>) => setAliasTable(e.target.value)}\n            onBlur={() => onUpdate()}\n          />\n        </Field>\n        {onRemove && (\n          <Button\n            data-testid={selectors.removeEntryButton}\n            className={styles.Common.smallBtn}\n            variant=\"destructive\"\n            size=\"sm\"\n            icon=\"trash-alt\"\n            onClick={onRemove}\n          />\n        )}\n      </Stack>\n    </div>\n  );\n};\n","import { reportInteraction } from '@grafana/runtime';\nimport { TimeUnit } from 'types/queryBuilder';\n\n// Server section\nexport const trackClickhouseConfigV1HostInput = () => {\n  reportInteraction('clickhouse_config_v1_host_input');\n};\n\nexport const trackClickhouseConfigV1PortInput = (props: { port: string }) => {\n  reportInteraction('clickhouse_config_v1_port_input', props);\n};\n\nexport const trackClickhouseConfigV1NativeHttpToggleClicked = (props: { nativeHttpToggle: string }) => {\n  reportInteraction('clickhouse_config_v1_native_http_toggle_clicked', props);\n};\n\nexport const trackClickhouseConfigV1SecureConnectionToggleClicked = (props: { secureConnection: boolean }) => {\n  reportInteraction('clickhouse_config_v1_secure_connection_toggle_clicked', props);\n};\n\n// TLS/SSL Settings section\nexport const trackClickhouseConfigV1SkipTLSVerifyToggleClicked = (props: { skipTlsVerifyToggle: boolean }) => {\n  reportInteraction('clickhouse_config_v1_skip_tls_verify_toggle_clicked', props);\n};\n\nexport const trackClickhouseConfigV1TLSClientAuthToggleClicked = (props: { clientAuthToggle: boolean }) => {\n  reportInteraction('clickhouse_config_v1_tls_client_auth_toggle_clicked', props);\n};\n\nexport const trackClickhouseConfigV1WithCACertToggleClicked = (props: { caCertToggle: boolean }) => {\n  reportInteraction('clickhouse_config_v1_with_ca_cert_toggle_clicked', props);\n};\n\n// Default DB and Table section\nexport const trackClickhouseConfigV1DefaultDbInput = () => {\n  reportInteraction('clickhouse_config_v1_default_db_input');\n};\n\nexport const trackClickhouseConfigV1DefaultTableInput = () => {\n  reportInteraction('clickhouse_config_v1_default_table_input');\n};\n\n// Query settings section\nexport const trackClickhouseConfigV1QuerySettings = (props: {\n  queryTimeout?: number;\n  dialTimeout?: number;\n  maxIdleConns?: number;\n  maxOpenConns?: number;\n  connMaxLifetime?: number;\n  validateSql?: boolean;\n}) => {\n  reportInteraction('clickhouse_config_v1_query_settings', props);\n};\n\n// Logs config section\nexport const trackClickhouseConfigV1LogsConfig = (props: {\n  defaultDatabase?: string;\n  defaultTable?: string;\n  otelEnabled?: boolean;\n  version?: string;\n  timeColumn?: string;\n  levelColumn?: string;\n  messageColumn?: string;\n  selectContextColumns?: boolean;\n  contextColumns?: string[];\n}) => {\n  reportInteraction('clickhouse_config_v1_logs_config', props);\n};\n\n// Traces config section\nexport const trackClickhouseConfigV1TracesConfig = (props: {\n  defaultDatabase?: string;\n  defaultTable?: string;\n  otelEnabled?: boolean;\n  version?: string;\n  traceIdColumn?: string;\n  spanIdColumn?: string;\n  operationNameColumn?: string;\n  parentSpanIdColumn?: string;\n  serviceNameColumn?: string;\n  durationColumn?: string;\n  durationUnit?: TimeUnit;\n  startTimeColumn?: string;\n  tagsColumn?: string;\n  serviceTagsColumn?: string;\n  kindColumn?: string;\n  statusCodeColumn?: string;\n  statusMessageColumn?: string;\n  stateColumn?: string;\n  instrumentationLibraryNameColumn?: string;\n  instrumentationLibraryVersionColumn?: string;\n  flattenNested?: boolean;\n  traceEventsColumnPrefix?: string;\n  traceLinksColumnPrefix?: string;\n}) => {\n  reportInteraction('clickhouse_config_v1_traces_config', props);\n};\n\n// Column Alias Tables section\nexport const trackClickhouseConfigV1ColumnAliasTableAdded = () => {\n  reportInteraction('clickhouse_config_v1_column_alias_table_added');\n};\n\n// Row limit section\nexport const trackClickhouseConfigV1EnableRowLimitToggle = (props: { rowLimitEnabled: boolean }) => {\n  reportInteraction('clickhouse_config_v1_enable_row_limit_toggle', props);\n};\n\n// Custom Settings section\nexport const trackClickhouseConfigV1CustomSettingAdded = () => {\n  reportInteraction('clickhouse_config_v1_custom_setting_added');\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport {\n  DataSourcePluginOptionsEditorProps,\n  onUpdateDatasourceJsonDataOption,\n  onUpdateDatasourceSecureJsonDataOption,\n} from '@grafana/data';\nimport { RadioButtonGroup, Switch, Input, SecretInput, Button, Field, Alert, Stack } from '@grafana/ui';\nimport { CertificationKey } from '../components/ui/CertificationKey';\nimport {\n  CHConfig,\n  CHCustomSetting,\n  CHSecureConfig,\n  CHLogsConfig,\n  Protocol,\n  CHTracesConfig,\n  AliasTableEntry,\n} from 'types/config';\nimport { gte as versionGte } from 'semver';\nimport { ConfigSection, ConfigSubSection, DataSourceDescription } from 'components/experimental/ConfigSection';\nimport { config } from '@grafana/runtime';\nimport { Divider } from 'components/Divider';\nimport { TimeUnit } from 'types/queryBuilder';\nimport { DefaultDatabaseTableConfig } from 'components/configEditor/DefaultDatabaseTableConfig';\nimport { QuerySettingsConfig } from 'components/configEditor/QuerySettingsConfig';\nimport { LogsConfig } from 'components/configEditor/LogsConfig';\nimport { TracesConfig } from 'components/configEditor/TracesConfig';\nimport { HttpHeadersConfig } from 'components/configEditor/HttpHeadersConfig';\nimport allLabels from '../labels';\nimport { onHttpHeadersChange, useConfigDefaults } from './CHConfigEditorHooks';\nimport { AliasTableConfig } from '../components/configEditor/AliasTableConfig';\nimport * as trackingV1 from './trackingV1';\n\nexport interface ConfigEditorProps extends DataSourcePluginOptionsEditorProps<CHConfig, CHSecureConfig> {}\n\nexport const ConfigEditor: React.FC<ConfigEditorProps> = (props) => {\n  const { options, onOptionsChange } = props;\n  const { jsonData, secureJsonFields } = options;\n  const labels = allLabels.components.Config.ConfigEditor;\n  const secureJsonData = (options.secureJsonData || {}) as CHSecureConfig;\n  const hasTLSCACert = secureJsonFields && secureJsonFields.tlsCACert;\n  const hasTLSClientCert = secureJsonFields && secureJsonFields.tlsClientCert;\n  const hasTLSClientKey = secureJsonFields && secureJsonFields.tlsClientKey;\n  const protocolOptions = [\n    { label: 'Native', value: Protocol.Native },\n    { label: 'HTTP', value: Protocol.Http },\n  ];\n\n  useConfigDefaults(options, onOptionsChange);\n\n  const onPortChange = (port: string) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        port: +port,\n      },\n    });\n  };\n  const onTLSSettingsChange = (\n    key: keyof Pick<CHConfig, 'tlsSkipVerify' | 'tlsAuth' | 'tlsAuthWithCACert'>,\n    value: boolean\n  ) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        [key]: value,\n      },\n    });\n  };\n  const onSwitchToggle = (\n    key: keyof Pick<\n      CHConfig,\n      'secure' | 'validateSql' | 'enableSecureSocksProxy' | 'forwardGrafanaHeaders' | 'enableRowLimit'\n    >,\n    value: boolean\n  ) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        [key]: value,\n      },\n    });\n  };\n\n  const onProtocolToggle = (protocol: Protocol) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        protocol: protocol,\n      },\n    });\n  };\n\n  const onCertificateChangeFactory = (key: keyof Omit<CHSecureConfig, 'password'>, value: string) => {\n    onOptionsChange({\n      ...options,\n      secureJsonData: {\n        ...secureJsonData,\n        [key]: value,\n      },\n    });\n  };\n  const onResetClickFactory = (key: keyof Omit<CHSecureConfig, 'password'>) => {\n    onOptionsChange({\n      ...options,\n      secureJsonFields: {\n        ...secureJsonFields,\n        [key]: false,\n      },\n      secureJsonData: {\n        ...secureJsonData,\n        [key]: '',\n      },\n    });\n  };\n  const onResetPassword = () => {\n    onOptionsChange({\n      ...options,\n      secureJsonFields: {\n        ...options.secureJsonFields,\n        password: false,\n      },\n      secureJsonData: {\n        ...options.secureJsonData,\n        password: '',\n      },\n    });\n  };\n  const onCustomSettingsChange = (customSettings: CHCustomSetting[]) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        customSettings: customSettings.filter((s) => !!s.setting && !!s.value),\n      },\n    });\n  };\n  const onLogsConfigChange = (key: keyof CHLogsConfig, value: string | boolean | string[]) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        logs: {\n          ...options.jsonData.logs,\n          [key]: value,\n        },\n      },\n    });\n  };\n  const onTracesConfigChange = (key: keyof CHTracesConfig, value: string | boolean) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        traces: {\n          ...options.jsonData.traces,\n          durationUnit: options.jsonData.traces?.durationUnit || TimeUnit.Nanoseconds,\n          [key]: value,\n        },\n      },\n    });\n  };\n  const onAliasTableConfigChange = (aliasTables: AliasTableEntry[]) => {\n    // track events when both a target table and alias table has a value\n    if (aliasTables.length > 0 && aliasTables[0].targetTable && aliasTables[0].aliasTable) {\n      trackingV1.trackClickhouseConfigV1ColumnAliasTableAdded();\n    }\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        aliasTables,\n      },\n    });\n  };\n\n  const [customSettings, setCustomSettings] = useState(jsonData.customSettings || []);\n\n  const hasAdditionalSettings = Boolean(\n    window.location.hash || // if trying to link to section on page, open all settings (React breaks this?)\n      options.jsonData.defaultDatabase ||\n      options.jsonData.defaultTable ||\n      options.jsonData.dialTimeout ||\n      options.jsonData.queryTimeout ||\n      options.jsonData.validateSql ||\n      options.jsonData.enableSecureSocksProxy ||\n      options.jsonData.customSettings ||\n      options.jsonData.logs ||\n      options.jsonData.traces\n  );\n\n  const defaultPort = jsonData.secure\n    ? jsonData.protocol === Protocol.Native\n      ? labels.serverPort.secureNativePort\n      : labels.serverPort.secureHttpPort\n    : jsonData.protocol === Protocol.Native\n      ? labels.serverPort.insecureNativePort\n      : labels.serverPort.insecureHttpPort;\n  const portDescription = `${labels.serverPort.tooltip} (default for ${jsonData.secure ? 'secure' : ''} ${jsonData.protocol}: ${defaultPort})`;\n\n  const uidWarning = !options.uid && (\n    <Alert title=\"\" severity=\"warning\" buttonContent=\"Close\">\n      <Stack>\n        <div>\n          {'This datasource is missing the'}\n          <code>uid</code>\n          {'field in its configuration. If your datasource is '}\n          <a\n            style={{ textDecoration: 'underline' }}\n            href=\"https://grafana.com/docs/grafana/latest/administration/provisioning/#data-sources\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            provisioned via YAML\n          </a>\n          {', please verify the UID is set. This is required to enable data linking between logs and traces.'}\n        </div>\n      </Stack>\n    </Alert>\n  );\n\n  return (\n    <>\n      {uidWarning}\n      <DataSourceDescription\n        dataSourceName=\"Clickhouse\"\n        docsLink=\"https://grafana.com/grafana/plugins/grafana-clickhouse-datasource/\"\n        hasRequiredFields\n      />\n      <Divider />\n      <ConfigSection title=\"Server\">\n        <Field\n          required\n          label={labels.serverAddress.label}\n          description={labels.serverAddress.tooltip}\n          invalid={!jsonData.host}\n          error={labels.serverAddress.error}\n        >\n          <Input\n            name=\"host\"\n            width={80}\n            value={jsonData.host || ''}\n            onChange={(e) => onUpdateDatasourceJsonDataOption(props, 'host')(e)}\n            label={labels.serverAddress.label}\n            aria-label={labels.serverAddress.label}\n            placeholder={labels.serverAddress.placeholder}\n            onBlur={trackingV1.trackClickhouseConfigV1HostInput}\n          />\n        </Field>\n        <Field\n          required\n          label={labels.serverPort.label}\n          description={portDescription}\n          invalid={!jsonData.port}\n          error={labels.serverPort.error}\n        >\n          <Input\n            name=\"port\"\n            width={40}\n            type=\"number\"\n            value={jsonData.port || ''}\n            onChange={(e) => onPortChange(e.currentTarget.value)}\n            label={labels.serverPort.label}\n            aria-label={labels.serverPort.label}\n            placeholder={defaultPort}\n            onBlur={(e) => trackingV1.trackClickhouseConfigV1PortInput({ port: e.currentTarget.value })}\n          />\n        </Field>\n\n        <Field label={labels.protocol.label} description={labels.protocol.tooltip}>\n          <RadioButtonGroup<Protocol>\n            options={protocolOptions}\n            disabledOptions={[]}\n            value={jsonData.protocol || Protocol.Native}\n            onChange={(e) => {\n              trackingV1.trackClickhouseConfigV1NativeHttpToggleClicked({ nativeHttpToggle: e });\n              onProtocolToggle(e!);\n            }}\n          />\n        </Field>\n        <Field label={labels.secure.label} description={labels.secure.tooltip}>\n          <Switch\n            id=\"secure\"\n            className=\"gf-form\"\n            value={jsonData.secure || false}\n            onChange={(e) => {\n              trackingV1.trackClickhouseConfigV1SecureConnectionToggleClicked({\n                secureConnection: e.currentTarget.checked,\n              });\n              onSwitchToggle('secure', e.currentTarget.checked);\n            }}\n          />\n        </Field>\n\n        {jsonData.protocol === Protocol.Http && (\n          <Field label={labels.path.label} description={labels.path.tooltip}>\n            <Input\n              value={jsonData.path || ''}\n              name=\"path\"\n              width={80}\n              onChange={onUpdateDatasourceJsonDataOption(props, 'path')}\n              label={labels.path.label}\n              aria-label={labels.path.label}\n              placeholder={labels.path.placeholder}\n            />\n          </Field>\n        )}\n      </ConfigSection>\n\n      {jsonData.protocol === Protocol.Http && (\n        <HttpHeadersConfig\n          headers={options.jsonData.httpHeaders}\n          forwardGrafanaHeaders={options.jsonData.forwardGrafanaHeaders}\n          secureFields={options.secureJsonFields}\n          onHttpHeadersChange={(headers) => onHttpHeadersChange(headers, options, onOptionsChange)}\n          onForwardGrafanaHeadersChange={(forwardGrafanaHeaders) =>\n            onSwitchToggle('forwardGrafanaHeaders', forwardGrafanaHeaders)\n          }\n        />\n      )}\n\n      <Divider />\n      <ConfigSection title=\"TLS / SSL Settings\">\n        <Field label={labels.tlsSkipVerify.label} description={labels.tlsSkipVerify.tooltip}>\n          <Switch\n            className=\"gf-form\"\n            value={jsonData.tlsSkipVerify || false}\n            onChange={(e) => {\n              trackingV1.trackClickhouseConfigV1SkipTLSVerifyToggleClicked({\n                skipTlsVerifyToggle: e.currentTarget.checked,\n              });\n              onTLSSettingsChange('tlsSkipVerify', e.currentTarget.checked);\n            }}\n          />\n        </Field>\n        <Field label={labels.tlsClientAuth.label} description={labels.tlsClientAuth.tooltip}>\n          <Switch\n            className=\"gf-form\"\n            value={jsonData.tlsAuth || false}\n            onChange={(e) => {\n              trackingV1.trackClickhouseConfigV1TLSClientAuthToggleClicked({\n                clientAuthToggle: e.currentTarget.checked,\n              });\n              onTLSSettingsChange('tlsAuth', e.currentTarget.checked);\n            }}\n          />\n        </Field>\n        <Field label={labels.tlsAuthWithCACert.label} description={labels.tlsAuthWithCACert.tooltip}>\n          <Switch\n            className=\"gf-form\"\n            value={jsonData.tlsAuthWithCACert || false}\n            onChange={(e) => {\n              trackingV1.trackClickhouseConfigV1WithCACertToggleClicked({ caCertToggle: e.currentTarget.checked });\n              onTLSSettingsChange('tlsAuthWithCACert', e.currentTarget.checked);\n            }}\n          />\n        </Field>\n        {jsonData.tlsAuthWithCACert && (\n          <CertificationKey\n            hasCert={!!hasTLSCACert}\n            onChange={(e) => onCertificateChangeFactory('tlsCACert', e.currentTarget.value)}\n            placeholder={labels.tlsCACert.placeholder}\n            label={labels.tlsCACert.label}\n            onClick={() => onResetClickFactory('tlsCACert')}\n          />\n        )}\n        {jsonData.tlsAuth && (\n          <>\n            <CertificationKey\n              hasCert={!!hasTLSClientCert}\n              onChange={(e) => onCertificateChangeFactory('tlsClientCert', e.currentTarget.value)}\n              placeholder={labels.tlsClientCert.placeholder}\n              label={labels.tlsClientCert.label}\n              onClick={() => onResetClickFactory('tlsClientCert')}\n            />\n            <CertificationKey\n              hasCert={!!hasTLSClientKey}\n              placeholder={labels.tlsClientKey.placeholder}\n              label={labels.tlsClientKey.label}\n              onChange={(e) => onCertificateChangeFactory('tlsClientKey', e.currentTarget.value)}\n              onClick={() => onResetClickFactory('tlsClientKey')}\n            />\n          </>\n        )}\n      </ConfigSection>\n\n      <Divider />\n      <ConfigSection title=\"Credentials\">\n        <Field label={labels.username.label} description={labels.username.tooltip}>\n          <Input\n            name=\"user\"\n            width={40}\n            value={jsonData.username || ''}\n            onChange={onUpdateDatasourceJsonDataOption(props, 'username')}\n            label={labels.username.label}\n            aria-label={labels.username.label}\n            placeholder={labels.username.placeholder}\n          />\n        </Field>\n        <Field label={labels.password.label} description={labels.password.tooltip}>\n          <SecretInput\n            name=\"pwd\"\n            width={40}\n            label={labels.password.label}\n            aria-label={labels.password.label}\n            placeholder={labels.password.placeholder}\n            value={secureJsonData.password || ''}\n            isConfigured={(secureJsonFields && secureJsonFields.password) as boolean}\n            onReset={onResetPassword}\n            onChange={onUpdateDatasourceSecureJsonDataOption(props, 'password')}\n          />\n        </Field>\n      </ConfigSection>\n\n      <Divider />\n      <ConfigSection\n        title=\"Additional settings\"\n        description=\"Additional settings are optional settings that can be configured for more control over your data source. This includes the default database, dial and query timeouts, SQL validation, and custom ClickHouse settings.\"\n        isCollapsible\n        isInitiallyOpen={hasAdditionalSettings}\n      >\n        <Divider />\n        <DefaultDatabaseTableConfig\n          defaultDatabase={jsonData.defaultDatabase}\n          defaultTable={jsonData.defaultTable}\n          onDefaultDatabaseChange={(e) => {\n            trackingV1.trackClickhouseConfigV1DefaultDbInput();\n            onUpdateDatasourceJsonDataOption(props, 'defaultDatabase')(e);\n          }}\n          onDefaultTableChange={(e) => {\n            trackingV1.trackClickhouseConfigV1DefaultTableInput();\n            onUpdateDatasourceJsonDataOption(props, 'defaultTable')(e);\n          }}\n        />\n\n        <Divider />\n        <QuerySettingsConfig\n          connMaxLifetime={jsonData.connMaxLifetime}\n          dialTimeout={jsonData.dialTimeout}\n          maxIdleConns={jsonData.maxIdleConns}\n          maxOpenConns={jsonData.maxOpenConns}\n          queryTimeout={jsonData.queryTimeout}\n          validateSql={jsonData.validateSql}\n          onDialTimeoutChange={(e) => {\n            trackingV1.trackClickhouseConfigV1QuerySettings({ dialTimeout: Number(e.currentTarget.value) });\n            onUpdateDatasourceJsonDataOption(props, 'dialTimeout')(e);\n          }}\n          onQueryTimeoutChange={(e) => {\n            trackingV1.trackClickhouseConfigV1QuerySettings({ queryTimeout: Number(e.currentTarget.value) });\n            onUpdateDatasourceJsonDataOption(props, 'queryTimeout')(e);\n          }}\n          onConnMaxLifetimeChange={(e) => {\n            trackingV1.trackClickhouseConfigV1QuerySettings({ connMaxLifetime: Number(e.currentTarget.value) });\n            onUpdateDatasourceJsonDataOption(props, 'connMaxLifetime')(e);\n          }}\n          onConnMaxIdleConnsChange={(e) => {\n            trackingV1.trackClickhouseConfigV1QuerySettings({ maxIdleConns: Number(e.currentTarget.value) });\n            onUpdateDatasourceJsonDataOption(props, 'maxIdleConns')(e);\n          }}\n          onConnMaxOpenConnsChange={(e) => {\n            trackingV1.trackClickhouseConfigV1QuerySettings({ maxOpenConns: Number(e.currentTarget.value) });\n            onUpdateDatasourceJsonDataOption(props, 'maxOpenConns')(e);\n          }}\n          onValidateSqlChange={(e) => {\n            trackingV1.trackClickhouseConfigV1QuerySettings({ validateSql: e.currentTarget.checked });\n            onSwitchToggle('validateSql', e.currentTarget.checked);\n          }}\n        />\n\n        <Divider />\n        <LogsConfig\n          logsConfig={jsonData.logs}\n          onDefaultDatabaseChange={(db) => {\n            trackingV1.trackClickhouseConfigV1LogsConfig({ defaultDatabase: db });\n            onLogsConfigChange('defaultDatabase', db);\n          }}\n          onDefaultTableChange={(table) => {\n            trackingV1.trackClickhouseConfigV1LogsConfig({ defaultTable: table });\n            onLogsConfigChange('defaultTable', table);\n          }}\n          onOtelEnabledChange={(v) => {\n            trackingV1.trackClickhouseConfigV1LogsConfig({ otelEnabled: v });\n            onLogsConfigChange('otelEnabled', v);\n          }}\n          onOtelVersionChange={(v) => {\n            trackingV1.trackClickhouseConfigV1LogsConfig({ version: v });\n            onLogsConfigChange('otelVersion', v);\n          }}\n          onTimeColumnChange={(c) => {\n            trackingV1.trackClickhouseConfigV1LogsConfig({ timeColumn: c });\n            onLogsConfigChange('timeColumn', c);\n          }}\n          onLevelColumnChange={(c) => {\n            trackingV1.trackClickhouseConfigV1LogsConfig({ levelColumn: c });\n            onLogsConfigChange('levelColumn', c);\n          }}\n          onMessageColumnChange={(c) => {\n            trackingV1.trackClickhouseConfigV1LogsConfig({ messageColumn: c });\n            onLogsConfigChange('messageColumn', c);\n          }}\n          onSelectContextColumnsChange={(c) => {\n            trackingV1.trackClickhouseConfigV1LogsConfig({ selectContextColumns: c });\n            onLogsConfigChange('selectContextColumns', c);\n          }}\n          onContextColumnsChange={(c) => {\n            trackingV1.trackClickhouseConfigV1LogsConfig({ contextColumns: c });\n            onLogsConfigChange('contextColumns', c);\n          }}\n        />\n\n        <Divider />\n        <TracesConfig\n          tracesConfig={jsonData.traces}\n          onDefaultDatabaseChange={(db) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ defaultDatabase: db });\n            onTracesConfigChange('defaultDatabase', db);\n          }}\n          onDefaultTableChange={(table) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ defaultTable: table });\n            onTracesConfigChange('defaultTable', table);\n          }}\n          onOtelEnabledChange={(v) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ otelEnabled: v });\n            onTracesConfigChange('otelEnabled', v);\n          }}\n          onOtelVersionChange={(v) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ version: v });\n            onTracesConfigChange('otelVersion', v);\n          }}\n          onTraceIdColumnChange={(c) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ traceIdColumn: c });\n            onTracesConfigChange('traceIdColumn', c);\n          }}\n          onSpanIdColumnChange={(c) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ spanIdColumn: c });\n            onTracesConfigChange('spanIdColumn', c);\n          }}\n          onOperationNameColumnChange={(c) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ operationNameColumn: c });\n            onTracesConfigChange('operationNameColumn', c);\n          }}\n          onParentSpanIdColumnChange={(c) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ parentSpanIdColumn: c });\n            onTracesConfigChange('parentSpanIdColumn', c);\n          }}\n          onServiceNameColumnChange={(c) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ serviceNameColumn: c });\n            onTracesConfigChange('serviceNameColumn', c);\n          }}\n          onDurationColumnChange={(c) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ durationColumn: c });\n            onTracesConfigChange('durationColumn', c);\n          }}\n          onDurationUnitChange={(c) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ durationUnit: c });\n            onTracesConfigChange('durationUnit', c);\n          }}\n          onStartTimeColumnChange={(c) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ startTimeColumn: c });\n            onTracesConfigChange('startTimeColumn', c);\n          }}\n          onTagsColumnChange={(c) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ tagsColumn: c });\n            onTracesConfigChange('tagsColumn', c);\n          }}\n          onServiceTagsColumnChange={(c) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ serviceTagsColumn: c });\n            onTracesConfigChange('serviceTagsColumn', c);\n          }}\n          onKindColumnChange={(c) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ kindColumn: c });\n            onTracesConfigChange('kindColumn', c);\n          }}\n          onStatusCodeColumnChange={(c) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ statusCodeColumn: c });\n            onTracesConfigChange('statusCodeColumn', c);\n          }}\n          onStatusMessageColumnChange={(c) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ statusMessageColumn: c });\n            onTracesConfigChange('statusMessageColumn', c);\n          }}\n          onStateColumnChange={(c) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ stateColumn: c });\n            onTracesConfigChange('stateColumn', c);\n          }}\n          onInstrumentationLibraryNameColumnChange={(c) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ instrumentationLibraryNameColumn: c });\n            onTracesConfigChange('instrumentationLibraryNameColumn', c);\n          }}\n          onInstrumentationLibraryVersionColumnChange={(c) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ instrumentationLibraryVersionColumn: c });\n            onTracesConfigChange('instrumentationLibraryVersionColumn', c);\n          }}\n          onFlattenNestedChange={(c) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ flattenNested: c });\n            onTracesConfigChange('flattenNested', c);\n          }}\n          onEventsColumnPrefixChange={(c) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ traceEventsColumnPrefix: c });\n            onTracesConfigChange('traceEventsColumnPrefix', c);\n          }}\n          onLinksColumnPrefixChange={(c) => {\n            trackingV1.trackClickhouseConfigV1TracesConfig({ traceLinksColumnPrefix: c });\n            onTracesConfigChange('traceLinksColumnPrefix', c);\n          }}\n        />\n\n        <Divider />\n        <AliasTableConfig aliasTables={jsonData.aliasTables} onAliasTablesChange={onAliasTableConfigChange} />\n        <Divider />\n        <Field label={labels.enableRowLimit.label} description={labels.enableRowLimit.tooltip}>\n          <Switch\n            className=\"gf-form\"\n            value={jsonData.enableRowLimit || false}\n            data-testid={labels.enableRowLimit.testid}\n            onChange={(e) => {\n              trackingV1.trackClickhouseConfigV1EnableRowLimitToggle({ rowLimitEnabled: e.currentTarget.checked });\n              onSwitchToggle('enableRowLimit', e.currentTarget.checked);\n            }}\n          />\n        </Field>\n        {config.secureSocksDSProxyEnabled && versionGte(config.buildInfo.version, '10.0.0') && (\n          <Field label={labels.secureSocksProxy.label} description={labels.secureSocksProxy.tooltip}>\n            <Switch\n              className=\"gf-form\"\n              value={jsonData.enableSecureSocksProxy || false}\n              onChange={(e) => onSwitchToggle('enableSecureSocksProxy', e.currentTarget.checked)}\n            />\n          </Field>\n        )}\n        <ConfigSubSection title=\"Custom Settings\">\n          {customSettings.map(({ setting, value }, i) => {\n            return (\n              <Stack key={i} direction=\"row\">\n                <Field label={`Setting`} aria-label={`Setting`}>\n                  <Input\n                    value={setting}\n                    placeholder={'Setting'}\n                    onChange={(changeEvent: ChangeEvent<HTMLInputElement>) => {\n                      let newSettings = customSettings.concat();\n                      newSettings[i] = { setting: changeEvent.target.value, value };\n                      setCustomSettings(newSettings);\n                    }}\n                    onBlur={() => {\n                      trackingV1.trackClickhouseConfigV1CustomSettingAdded();\n                      onCustomSettingsChange(customSettings);\n                    }}\n                  ></Input>\n                </Field>\n                <Field label={'Value'} aria-label={`Value`}>\n                  <Input\n                    value={value}\n                    placeholder={'Value'}\n                    onChange={(changeEvent: ChangeEvent<HTMLInputElement>) => {\n                      let newSettings = customSettings.concat();\n                      newSettings[i] = { setting, value: changeEvent.target.value };\n                      setCustomSettings(newSettings);\n                    }}\n                    onBlur={() => {\n                      onCustomSettingsChange(customSettings);\n                    }}\n                  ></Input>\n                </Field>\n              </Stack>\n            );\n          })}\n          <Button\n            variant=\"secondary\"\n            icon=\"plus\"\n            type=\"button\"\n            onClick={() => {\n              setCustomSettings([...customSettings, { setting: '', value: '' }]);\n            }}\n          >\n            Add custom setting\n          </Button>\n        </ConfigSubSection>\n      </ConfigSection>\n    </>\n  );\n};\n","import { ColumnHint } from 'types/queryBuilder';\n\nexport default {\n  components: {\n    Config: {\n      ConfigEditor: {\n        serverAddress: {\n          label: 'Server address',\n          placeholder: 'Server address',\n          tooltip: 'ClickHouse host address',\n          error: 'Server address required',\n        },\n        serverPort: {\n          label: 'Server port',\n          insecureNativePort: '9000',\n          insecureHttpPort: '8123',\n          secureNativePort: '9440',\n          secureHttpPort: '8443',\n          tooltip: 'ClickHouse server port',\n          error: 'Port is required',\n        },\n        path: {\n          label: 'HTTP URL Path',\n          tooltip: 'Additional URL path for HTTP requests. Default: /',\n          placeholder: 'additional-path',\n        },\n        protocol: {\n          label: 'Protocol',\n          tooltip: 'Native is the default protocol',\n        },\n        username: {\n          label: 'Username',\n          placeholder: 'default',\n          tooltip: 'We recommend configuring',\n        },\n        password: {\n          label: 'Password',\n          placeholder: 'password',\n          tooltip: 'ClickHouse password',\n        },\n        tlsSkipVerify: {\n          label: 'Skip TLS Verify',\n          tooltip: 'Skip TLS Verify',\n        },\n        tlsClientAuth: {\n          label: 'TLS Client Auth',\n          tooltip: 'TLS Client Auth',\n        },\n        tlsAuthWithCACert: {\n          label: 'With CA Cert',\n          tooltip: 'Needed for verifying self-signed TLS Certs',\n        },\n        tlsCACert: {\n          label: 'CA Cert',\n          placeholder: 'CA Cert. Begins with -----BEGIN CERTIFICATE-----',\n        },\n        tlsClientCert: {\n          label: 'Client Cert',\n          placeholder: 'Client Cert. Begins with -----BEGIN CERTIFICATE-----',\n        },\n        tlsClientKey: {\n          label: 'Client Key',\n          placeholder: 'Client Key. Begins with -----BEGIN RSA PRIVATE KEY-----',\n        },\n        secure: {\n          label: 'Secure Connection',\n          tooltip: 'Check to connect securely with TLS',\n        },\n        secureSocksProxy: {\n          label: 'Enable Secure Socks Proxy',\n          tooltip: 'Enable proxying the datasource connection through the secure socks proxy to a different network.',\n        },\n        enableRowLimit: {\n          label: 'Enable row limit',\n          testid: 'data-testid enable-row-limit-switch',\n          tooltip:\n            'Enable using the Grafana row limit setting to limit the number of rows returned from Clickhouse. Ensure the appropriate permissions are set for your user. Only supported for Grafana >= 11.0.0. Defaults to false.',\n        },\n      },\n      HttpHeadersConfig: {\n        title: 'HTTP Headers',\n        label: 'Custom HTTP Headers',\n        description: 'Add Custom HTTP headers when querying the database',\n        headerNameLabel: 'Header Name',\n        headerNamePlaceholder: 'X-Custom-Header',\n        insecureHeaderValueLabel: 'Header Value',\n        secureHeaderValueLabel: 'Secure Header Value',\n        secureLabel: 'Secure',\n        addHeaderLabel: 'Add Header',\n        forwardGrafanaHeaders: {\n          label: 'Forward Grafana HTTP Headers to data source',\n          tooltip: 'Forward Grafana HTTP Headers to data source.',\n        },\n      },\n      AliasTableConfig: {\n        title: 'Column Alias Tables',\n        descriptionParts: [\n          'Provide alias tables with a',\n          '(`alias` String, `select` String, `type` String)',\n          'schema to use as a source for column selection.',\n        ],\n        addTableLabel: 'Add Table',\n        targetDatabaseLabel: 'Target Database',\n        targetDatabasePlaceholder: '(optional)',\n        targetTableLabel: 'Target Table',\n        aliasDatabaseLabel: 'Alias Database',\n        aliasDatabasePlaceholder: '(optional)',\n        aliasTableLabel: 'Alias Table',\n      },\n\n      DefaultDatabaseTableConfig: {\n        title: 'Default DB and table',\n        database: {\n          label: 'Default database',\n          description: 'the default database used by the query builder',\n          name: 'defaultDatabase',\n          placeholder: 'default',\n        },\n        table: {\n          label: 'Default table',\n          description: 'the default table used by the query builder',\n          name: 'defaultTable',\n          placeholder: 'table',\n        },\n      },\n      QuerySettingsConfig: {\n        title: 'Query settings',\n        connMaxLifetime: {\n          label: 'Connection Max Lifetime (minutes)',\n          name: 'connMaxLifetime',\n          placeholder: '5',\n          tooltip: 'Maximum lifetime of a connection in minutes',\n        },\n        dialTimeout: {\n          label: 'Dial Timeout (seconds)',\n          name: 'dialTimeout',\n          placeholder: '10',\n          tooltip: 'Timeout in seconds for connection',\n        },\n        maxIdleConns: {\n          label: 'Max Idle Connections',\n          name: 'maxIdleConns',\n          placeholder: '25',\n          tooltip: 'Maximum number of idle connections',\n        },\n        maxOpenConns: {\n          label: 'Max Open Connections',\n          name: 'maxOpenConns',\n          placeholder: '50',\n          tooltip: 'Maximum number of open connections',\n        },\n        queryTimeout: {\n          label: 'Query Timeout (seconds)',\n          name: 'queryTimeout',\n          placeholder: '60',\n          tooltip: 'Timeout in seconds for read queries',\n        },\n        validateSql: {\n          label: 'Validate SQL',\n          tooltip: 'Validate SQL in the editor.',\n        },\n      },\n      TracesConfig: {\n        title: 'Traces configuration',\n        description: '(Optional) Default settings for trace queries',\n        defaultDatabase: {\n          label: 'Default trace database',\n          description: 'the default database used by the trace query builder',\n          name: 'defaultDatabase',\n          placeholder: 'default',\n        },\n        defaultTable: {\n          label: 'Default trace table',\n          description: 'the default table used by the trace query builder',\n          name: 'defaultTable',\n        },\n        columns: {\n          title: 'Default columns',\n          description: 'Default columns for trace queries. Leave empty to disable.',\n\n          traceId: {\n            label: 'Trace ID column',\n            tooltip: 'Column for the trace ID',\n          },\n          spanId: {\n            label: 'Span ID column',\n            tooltip: 'Column for the span ID',\n          },\n          parentSpanId: {\n            label: 'Parent Span ID column',\n            tooltip: 'Column for the parent span ID',\n          },\n          serviceName: {\n            label: 'Service Name column',\n            tooltip: 'Column for the service name',\n          },\n          operationName: {\n            label: 'Operation Name column',\n            tooltip: 'Column for the operation name',\n          },\n          startTime: {\n            label: 'Start Time column',\n            tooltip: 'Column for the start time',\n          },\n          durationTime: {\n            label: 'Duration Time column',\n            tooltip: 'Column for the duration time',\n          },\n          tags: {\n            label: 'Tags column',\n            tooltip: 'Column for the trace tags',\n          },\n          serviceTags: {\n            label: 'Service Tags column',\n            tooltip: 'Column for the service tags',\n          },\n          flattenNested: {\n            label: 'Use Flatten Nested',\n            tooltip: 'Enable if your traces table was created with flatten_nested=1',\n          },\n          eventsPrefix: {\n            label: 'Events prefix',\n            tooltip: 'Prefix for the events column (Events.Timestamp, Events.Name, etc.)',\n          },\n          linksPrefix: {\n            label: 'Links prefix',\n            tooltip: 'Prefix for the trace references column (Links.TraceId, Links.TraceState, etc.)',\n          },\n          kind: {\n            label: 'Kind column',\n            tooltip: 'Column for the trace kind',\n          },\n          statusCode: {\n            label: 'Status Code column',\n            tooltip: 'Column for the trace status code',\n          },\n          statusMessage: {\n            label: 'Status Message column',\n            tooltip: 'Column for the trace status message',\n          },\n          instrumentationLibraryName: {\n            label: 'Library Name column',\n            tooltip: 'Column for the instrumentation library name',\n          },\n          instrumentationLibraryVersion: {\n            label: 'Library Version column',\n            tooltip: 'Column for the instrumentation library version',\n          },\n          state: {\n            label: 'State column',\n            tooltip: 'Column for the trace state',\n          },\n        },\n      },\n      LogsConfig: {\n        title: 'Logs configuration',\n        description: '(Optional) default settings for log queries',\n        defaultDatabase: {\n          label: 'Default log database',\n          description: 'the default database used by the logs query builder',\n          name: 'defaultDatabase',\n          placeholder: 'default',\n        },\n        defaultTable: {\n          label: 'Default log table',\n          description: 'the default table used by the logs query builder',\n          name: 'defaultTable',\n        },\n        columns: {\n          title: 'Default columns',\n          description: 'Default columns for log queries. Leave empty to disable.',\n\n          time: {\n            label: 'Time column',\n            tooltip: 'Column for the log timestamp',\n          },\n          level: {\n            label: 'Log Level column',\n            tooltip: 'Column for the log level',\n          },\n          message: {\n            label: 'Log Message column',\n            tooltip: 'Column for log message',\n          },\n        },\n        contextColumns: {\n          title: 'Context columns',\n          description:\n            'These columns are used to narrow down a single log row to its original service/container/pod source. At least one is required for the log context feature to work.',\n\n          selectContextColumns: {\n            label: 'Auto-Select Columns',\n            tooltip: 'When enabled, will always include context columns in log queries',\n          },\n          columns: {\n            label: 'Context Columns',\n            tooltip: \"Comma separated list of column names to use for identifying a log's source\",\n            placeholder: 'Column name (enter key to add)',\n          },\n        },\n      },\n    },\n    EditorTypeSwitcher: {\n      label: 'Editor Type',\n      tooltip: 'Switches between the raw SQL Editor and the Query Builder.',\n      switcher: {\n        title: 'Are you sure?',\n        body: 'Queries that are too complex for the Query Builder will be altered.',\n        confirmText: 'Continue',\n        dismissText: 'Cancel',\n      },\n      cannotConvert: {\n        title: 'Cannot convert',\n        message: 'Do you want to delete your current query and use the query builder?',\n        confirmText: 'Yes',\n      },\n    },\n    expandBuilderButton: {\n      label: 'Show full query',\n      tooltip: 'Shows the full query builder',\n    },\n    QueryTypeSwitcher: {\n      label: 'Query Type',\n      tooltip: 'Sets the layout for the query builder',\n      sqlTooltip: 'Sets the panel type for explore view',\n    },\n    DatabaseSelect: {\n      label: 'Database',\n      tooltip: 'ClickHouse database to query from',\n      empty: '<select database>',\n    },\n    TableSelect: {\n      label: 'Table',\n      tooltip: 'ClickHouse table to query from',\n      empty: '<select table>',\n    },\n    ColumnsEditor: {\n      label: 'Columns',\n      tooltip: 'A list of columns to include in the query',\n    },\n    OtelVersionSelect: {\n      label: 'Use OTel',\n      tooltip: 'Enables Open Telemetry schema versioning',\n    },\n    LimitEditor: {\n      label: 'Limit',\n      tooltip: 'Limits the number of rows returned by the query',\n    },\n    SqlPreview: {\n      label: 'SQL Preview',\n      tooltip: 'Preview of the generated SQL. You can safely switch to SQL Editor to customize the generated query',\n    },\n    AggregatesEditor: {\n      label: 'Aggregates',\n      tooltip: 'Aggregate functions to use',\n      aliasLabel: 'as',\n      aliasTooltip: 'alias for this aggregate function',\n      addLabel: 'Aggregate',\n    },\n    OrderByEditor: {\n      label: 'Order By',\n      tooltip: 'Order by column',\n      addLabel: 'Order By',\n    },\n    FilterEditor: {\n      label: 'Filters',\n      tooltip: `List of filters`,\n      addLabel: 'Filter',\n      mapKeyPlaceholder: 'map key',\n    },\n    GroupByEditor: {\n      label: 'Group By',\n      tooltip: 'Group the results by specific column',\n    },\n    LogsQueryBuilder: {\n      logTimeColumn: {\n        label: 'Time',\n        tooltip: 'Column that contains the log timestamp',\n      },\n      logLevelColumn: {\n        label: 'Log Level',\n        tooltip: 'Column that contains the log level',\n      },\n      logMessageColumn: {\n        label: 'Message',\n        tooltip: 'Column that contains the log message',\n      },\n      logLabelsColumn: {\n        label: 'Labels',\n        tooltip: 'A column with a key/value structure for log labels',\n      },\n      liveView: {\n        label: 'Live View',\n        tooltip: 'Enable to update logs in real time',\n      },\n      logMessageFilter: {\n        label: 'Message Filter',\n        tooltip: 'Applies a LIKE filter to the log message body',\n        clearButton: 'Clear',\n      },\n      logLevelFilter: {\n        label: 'Level Filter',\n        tooltip: 'Applies a filter to the log level',\n      },\n    },\n    TimeSeriesQueryBuilder: {\n      simpleQueryModeLabel: 'Simple',\n      aggregateQueryModeLabel: 'Aggregate',\n      builderModeLabel: 'Builder Mode',\n      builderModeTooltip: 'Switches the query builder between the simple and aggregate modes',\n      timeColumn: {\n        label: 'Time',\n        tooltip: 'Column to use for the time series',\n      },\n    },\n    TableQueryBuilder: {\n      simpleQueryModeLabel: 'Simple',\n      aggregateQueryModeLabel: 'Aggregate',\n      builderModeLabel: 'Builder Mode',\n      builderModeTooltip: 'Switches the query builder between the simple and aggregate modes',\n    },\n    TraceQueryBuilder: {\n      traceIdModeLabel: 'Trace ID',\n      traceSearchModeLabel: 'Trace Search',\n      traceModeLabel: 'Trace Mode',\n      traceModeTooltip: 'Switches between trace ID and trace search mode',\n      columnsSection: 'Columns',\n      filtersSection: 'Filters',\n\n      columns: {\n        traceId: {\n          label: 'Trace ID Column',\n          tooltip: 'Column that contains the trace ID',\n        },\n        spanId: {\n          label: 'Span ID Column',\n          tooltip: 'Column that contains the span ID',\n        },\n        parentSpanId: {\n          label: 'Parent Span ID Column',\n          tooltip: 'Column that contains the parent span ID',\n        },\n        serviceName: {\n          label: 'Service Name Column',\n          tooltip: 'Column that contains the service name',\n        },\n        operationName: {\n          label: 'Operation Name Column',\n          tooltip: 'Column that contains the operation name',\n        },\n        startTime: {\n          label: 'Start Time Column',\n          tooltip: 'Column that contains the start time',\n        },\n        durationTime: {\n          label: 'Duration Time Column',\n          tooltip: 'Column that contains the duration time',\n        },\n        durationUnit: {\n          label: 'Duration Unit',\n          tooltip: 'The unit of time used for the duration time',\n        },\n        tags: {\n          label: 'Tags Column',\n          tooltip: 'Column that contains the trace tags',\n        },\n        serviceTags: {\n          label: 'Service Tags Column',\n          tooltip: 'Column that contains the service tags',\n        },\n        flattenNested: {\n          label: 'Use Flatten Nested',\n          tooltip: 'Enable if your traces table was created with flatten_nested=1',\n        },\n        eventsPrefix: {\n          label: 'Events Prefix',\n          tooltip: 'Prefix for the events column',\n        },\n        linksPrefix: {\n          label: 'Links Prefix',\n          tooltip: 'Prefix for the trace references column',\n        },\n        kind: {\n          label: 'Kind Column',\n          tooltip: 'Column that contains the trace kind',\n        },\n        statusCode: {\n          label: 'Status Code Column',\n          tooltip: 'Column that contains the trace status code',\n        },\n        statusMessage: {\n          label: 'Status Message Column',\n          tooltip: 'Column that contains the trace status message',\n        },\n        instrumentationLibraryName: {\n          label: 'Library Name Column',\n          tooltip: 'Column that contains the instrumentation library name (Optional)',\n        },\n        instrumentationLibraryVersion: {\n          label: 'Library Version Column',\n          tooltip: 'Column that contains the instrumentation library version (Optional)',\n        },\n        state: {\n          label: 'State Column',\n          tooltip: 'Column that contains the trace state',\n        },\n        traceIdFilter: {\n          label: 'Trace ID',\n          tooltip: 'filter by a specific trace ID',\n        },\n      },\n    },\n  },\n  types: {\n    EditorType: {\n      sql: 'SQL Editor',\n      builder: 'Query Builder',\n    },\n    QueryType: {\n      table: 'Table',\n      logs: 'Logs',\n      timeseries: 'Time Series',\n      traces: 'Traces',\n    },\n    ColumnHint: {\n      [ColumnHint.Time]: 'Time',\n\n      [ColumnHint.LogLevel]: 'Level',\n      [ColumnHint.LogMessage]: 'Message',\n      [ColumnHint.LogLabels]: 'Labels',\n\n      [ColumnHint.TraceId]: 'Trace ID',\n      [ColumnHint.TraceSpanId]: 'Span ID',\n      [ColumnHint.TraceParentSpanId]: 'Parent Span ID',\n      [ColumnHint.TraceServiceName]: 'Service Name',\n      [ColumnHint.TraceOperationName]: 'Operation Name',\n      [ColumnHint.TraceDurationTime]: 'Duration Time',\n      [ColumnHint.TraceTags]: 'Tags',\n      [ColumnHint.TraceServiceTags]: 'Service Tags',\n      [ColumnHint.TraceStatusCode]: 'Status Code',\n      [ColumnHint.TraceKind]: 'Kind',\n      [ColumnHint.TraceStatusMessage]: 'Status Message',\n      [ColumnHint.TraceInstrumentationLibraryName]: 'Instrumentation Library Name',\n      [ColumnHint.TraceInstrumentationLibraryVersion]: 'Instrumentation Library Version',\n      [ColumnHint.TraceState]: 'State',\n    },\n  },\n};\n","import { valid, compare, gte } from 'semver';\n\n\"use strict\";\nfunction resolveSelectors(versionedSelectors, grafanaVersion = \"latest\") {\n  const version = grafanaVersion.replace(/\\-.*/, \"\");\n  return resolveSelectorGroup(versionedSelectors, version);\n}\nfunction resolveSelectorGroup(group, grafanaVersion) {\n  const result = {};\n  for (const [key, value] of Object.entries(group)) {\n    if (isVersionedSelectorGroup(value)) {\n      result[key] = resolveSelectorGroup(value, grafanaVersion);\n    } else {\n      assertIsSemverValid(value, key);\n      result[key] = resolveSelector(value, grafanaVersion);\n    }\n  }\n  return result;\n}\nfunction isVersionedSelectorGroup(target) {\n  if (typeof target === \"object\") {\n    const [first] = Object.keys(target);\n    return !valid(first);\n  }\n  return false;\n}\nfunction resolveSelector(versionedSelector, grafanaVersion) {\n  let versionToUse;\n  let versions = Object.keys(versionedSelector).sort(compare);\n  if (grafanaVersion === \"latest\") {\n    return versionedSelector[versions[versions.length - 1]];\n  }\n  for (const version of versions) {\n    if (gte(grafanaVersion, version)) {\n      versionToUse = version;\n    }\n  }\n  if (!versionToUse) {\n    versionToUse = versions[versions.length - 1];\n  }\n  return versionedSelector[versionToUse];\n}\nfunction assertIsSemverValid(versionedSelector, selectorName) {\n  if (!Object.keys(versionedSelector).every((version) => valid(version))) {\n    throw new Error(`Invalid semver version: '${selectorName}'`);\n  }\n}\n\nexport { resolveSelectors };\n//# sourceMappingURL=resolver.mjs.map\n","\"use strict\";\nconst MIN_GRAFANA_VERSION = \"8.5.0\";\n\nexport { MIN_GRAFANA_VERSION };\n//# sourceMappingURL=constants.mjs.map\n","import { MIN_GRAFANA_VERSION } from './constants.mjs';\n\n\"use strict\";\nconst versionedComponents = {\n  RadioButton: {\n    container: {\n      \"10.2.3\": \"data-testid radio-button\"\n    }\n  },\n  Breadcrumbs: {\n    breadcrumb: {\n      \"9.4.0\": (title) => `data-testid ${title} breadcrumb`\n    }\n  },\n  CanvasGridAddActions: {\n    addPanel: {\n      \"12.1.0\": \"data-testid CanvasGridAddActions add-panel\"\n    },\n    groupPanels: {\n      \"12.1.0\": \"data-testid CanvasGridAddActions group-panels\"\n    },\n    ungroup: {\n      \"12.1.0\": \"data-testid CanvasGridAddActions ungroup\"\n    },\n    addRow: {\n      \"12.1.0\": \"data-testid CanvasGridAddActions add-row\"\n    },\n    pasteRow: {\n      \"12.1.0\": \"data-testid CanvasGridAddActions paste-row\"\n    },\n    addTab: {\n      \"12.1.0\": \"data-testid CanvasGridAddActions add-tab\"\n    },\n    pasteTab: {\n      \"12.1.0\": \"data-testid CanvasGridAddActions paste-tab\"\n    }\n  },\n  DashboardEditPaneSplitter: {\n    primaryBody: {\n      \"12.1.0\": \"data-testid DashboardEditPaneSplitter primary body\"\n    }\n  },\n  EditPaneHeader: {\n    deleteButton: {\n      \"12.1.0\": \"data-testid EditPaneHeader delete panel\"\n    },\n    copyDropdown: {\n      \"12.1.0\": \"data-testid EditPaneHeader copy dropdown\"\n    },\n    copy: {\n      \"12.1.0\": \"data-testid EditPaneHeader copy\"\n    },\n    duplicate: {\n      \"12.1.0\": \"data-testid EditPaneHeader duplicate\"\n    },\n    backButton: {\n      \"12.1.0\": \"data-testid EditPaneHeader back\"\n    }\n  },\n  TimePicker: {\n    openButton: {\n      [MIN_GRAFANA_VERSION]: \"data-testid TimePicker Open Button\"\n    },\n    overlayContent: {\n      \"10.2.3\": \"data-testid TimePicker Overlay Content\"\n    },\n    fromField: {\n      \"10.2.3\": \"data-testid Time Range from field\",\n      [MIN_GRAFANA_VERSION]: \"Time Range from field\"\n    },\n    toField: {\n      \"10.2.3\": \"data-testid Time Range to field\",\n      [MIN_GRAFANA_VERSION]: \"Time Range to field\"\n    },\n    applyTimeRange: {\n      [MIN_GRAFANA_VERSION]: \"data-testid TimePicker submit button\"\n    },\n    copyTimeRange: {\n      \"10.4.0\": \"data-testid TimePicker copy button\"\n    },\n    pasteTimeRange: {\n      \"10.4.0\": \"data-testid TimePicker paste button\"\n    },\n    calendar: {\n      label: {\n        \"10.2.3\": \"data-testid Time Range calendar\",\n        [MIN_GRAFANA_VERSION]: \"Time Range calendar\"\n      },\n      openButton: {\n        \"10.2.3\": \"data-testid Open time range calendar\",\n        [MIN_GRAFANA_VERSION]: \"Open time range calendar\"\n      },\n      closeButton: {\n        \"10.2.3\": \"data-testid Close time range Calendar\",\n        [MIN_GRAFANA_VERSION]: \"Close time range Calendar\"\n      }\n    },\n    absoluteTimeRangeTitle: {\n      [MIN_GRAFANA_VERSION]: \"data-testid-absolute-time-range-narrow\"\n    }\n  },\n  DataSourcePermissions: {\n    form: { \"9.5.0\": () => 'form[name=\"addPermission\"]' },\n    roleType: {\n      \"9.5.0\": \"Role to add new permission to\"\n    },\n    rolePicker: {\n      \"9.5.0\": \"Built-in role picker\"\n    },\n    permissionLevel: {\n      \"12.0.0\": \"Permission level\",\n      \"9.5.0\": \"Permission Level\"\n    }\n  },\n  DateTimePicker: {\n    input: {\n      \"10.2.3\": \"data-testid date-time-input\"\n    }\n  },\n  DataSource: {\n    TestData: {\n      QueryTab: {\n        scenarioSelectContainer: {\n          [MIN_GRAFANA_VERSION]: \"Test Data Query scenario select container\"\n        },\n        scenarioSelect: {\n          [MIN_GRAFANA_VERSION]: \"Test Data Query scenario select\"\n        },\n        max: {\n          [MIN_GRAFANA_VERSION]: \"TestData max\"\n        },\n        min: {\n          [MIN_GRAFANA_VERSION]: \"TestData min\"\n        },\n        noise: {\n          [MIN_GRAFANA_VERSION]: \"TestData noise\"\n        },\n        seriesCount: {\n          [MIN_GRAFANA_VERSION]: \"TestData series count\"\n        },\n        spread: {\n          [MIN_GRAFANA_VERSION]: \"TestData spread\"\n        },\n        startValue: {\n          [MIN_GRAFANA_VERSION]: \"TestData start value\"\n        },\n        drop: {\n          [MIN_GRAFANA_VERSION]: \"TestData drop values\"\n        }\n      }\n    },\n    DataSourceHttpSettings: {\n      urlInput: {\n        \"10.4.0\": \"data-testid Datasource HTTP settings url\",\n        [MIN_GRAFANA_VERSION]: \"Datasource HTTP settings url\"\n      }\n    },\n    Jaeger: {\n      traceIDInput: {\n        [MIN_GRAFANA_VERSION]: \"Trace ID\"\n      }\n    },\n    Prometheus: {\n      configPage: {\n        connectionSettings: {\n          [MIN_GRAFANA_VERSION]: \"Data source connection URL\"\n          // aria-label in grafana experimental\n        },\n        manageAlerts: {\n          \"10.4.0\": \"prometheus-alerts-manager\"\n          // id for switch component\n        },\n        allowAsRecordingRulesTarget: {\n          \"12.1.0\": \"prometheus-recording-rules-target\"\n        },\n        scrapeInterval: {\n          \"10.4.0\": \"data-testid scrape interval\"\n        },\n        queryTimeout: {\n          \"10.4.0\": \"data-testid query timeout\"\n        },\n        defaultEditor: {\n          \"10.4.0\": \"data-testid default editor\"\n        },\n        disableMetricLookup: {\n          \"10.4.0\": \"disable-metric-lookup\"\n          // id for switch component\n        },\n        prometheusType: {\n          \"10.4.0\": \"data-testid prometheus type\"\n        },\n        prometheusVersion: {\n          \"10.4.0\": \"data-testid prometheus version\"\n        },\n        cacheLevel: {\n          \"10.4.0\": \"data-testid cache level\"\n        },\n        incrementalQuerying: {\n          \"10.4.0\": \"prometheus-incremental-querying\"\n          // id for switch component\n        },\n        queryOverlapWindow: {\n          \"10.4.0\": \"data-testid query overlap window\"\n        },\n        disableRecordingRules: {\n          \"10.4.0\": \"disable-recording-rules\"\n          // id for switch component\n        },\n        customQueryParameters: {\n          \"10.4.0\": \"data-testid custom query parameters\"\n        },\n        httpMethod: {\n          \"10.4.0\": \"data-testid http method\"\n        },\n        exemplarsAddButton: {\n          \"10.3.0\": \"data-testid Add exemplar config button\",\n          [MIN_GRAFANA_VERSION]: \"Add exemplar config button\"\n        },\n        internalLinkSwitch: {\n          \"10.3.0\": \"data-testid Internal link switch\",\n          [MIN_GRAFANA_VERSION]: \"Internal link switch\"\n        },\n        codeModeMetricNamesSuggestionLimit: {\n          \"11.1.0\": \"data-testid code mode metric names suggestion limit\"\n        },\n        seriesLimit: {\n          \"12.0.2\": \"data-testid maximum series limit\"\n        }\n      },\n      queryEditor: {\n        explain: {\n          \"10.4.0\": \"data-testid prometheus explain switch wrapper\"\n        },\n        editorToggle: {\n          \"10.4.0\": \"data-testid QueryEditorModeToggle\"\n          // wrapper for toggle\n        },\n        options: {\n          \"10.4.0\": \"data-testid prometheus options\"\n          // wrapper for options group\n        },\n        legend: {\n          \"10.4.0\": \"data-testid prometheus legend wrapper\"\n          // wrapper for multiple compomnents\n        },\n        format: {\n          \"10.4.0\": \"data-testid prometheus format\"\n        },\n        step: {\n          \"10.4.0\": \"data-testid prometheus-step\"\n          // id for autosize component\n        },\n        type: {\n          \"10.4.0\": \"data-testid prometheus type\"\n          //wrapper for radio button group\n        },\n        exemplars: {\n          \"10.4.0\": \"data-testid prometheus-exemplars\"\n          // id for editor switch component\n        },\n        builder: {\n          // see QueryBuilder below for commented selectors\n          metricSelect: {\n            \"10.4.0\": \"data-testid metric select\"\n          },\n          hints: {\n            \"10.4.0\": \"data-testid prometheus hints\"\n            // wrapper for hints component\n          },\n          metricsExplorer: {\n            \"10.4.0\": \"data-testid metrics explorer\"\n          },\n          queryAdvisor: {\n            \"10.4.0\": \"data-testid query advisor\"\n          }\n        },\n        code: {\n          queryField: {\n            \"10.4.0\": \"data-testid prometheus query field\"\n          },\n          metricsCountInfo: {\n            \"11.1.0\": \"data-testid metrics count disclaimer\"\n          },\n          metricsBrowser: {\n            openButton: {\n              \"10.4.0\": \"data-testid open metrics browser\"\n            },\n            selectMetric: {\n              \"10.4.0\": \"data-testid select a metric\"\n            },\n            seriesLimit: {\n              \"10.3.1\": \"data-testid series limit\"\n            },\n            metricList: {\n              \"10.4.0\": \"data-testid metric list\"\n            },\n            labelNamesFilter: {\n              \"10.4.0\": \"data-testid label names filter\"\n            },\n            labelValuesFilter: {\n              \"10.4.0\": \"data-testid label values filter\"\n            },\n            useQuery: {\n              \"10.4.0\": \"data-testid use query\"\n            },\n            useAsRateQuery: {\n              \"10.4.0\": \"data-testid use as rate query\"\n            },\n            validateSelector: {\n              \"10.4.0\": \"data-testid validate selector\"\n            },\n            clear: {\n              \"10.4.0\": \"data-testid clear\"\n            }\n          }\n        }\n      },\n      exemplarMarker: {\n        \"10.3.0\": \"data-testid Exemplar marker\",\n        [MIN_GRAFANA_VERSION]: \"Exemplar marker\"\n      },\n      variableQueryEditor: {\n        queryType: {\n          \"10.4.0\": \"data-testid query type\"\n        },\n        labelnames: {\n          metricRegex: {\n            \"10.4.0\": \"data-testid label names metric regex\"\n          }\n        },\n        labelValues: {\n          labelSelect: {\n            \"10.4.0\": \"data-testid label values label select\"\n          }\n        },\n        metricNames: {\n          metricRegex: {\n            \"10.4.0\": \"data-testid metric names metric regex\"\n          }\n        },\n        varQueryResult: {\n          \"10.4.0\": \"data-testid variable query result\"\n        },\n        seriesQuery: {\n          \"10.4.0\": \"data-testid prometheus series query\"\n        },\n        classicQuery: {\n          \"10.4.0\": \"data-testid prometheus classic query\"\n        }\n      },\n      annotations: {\n        minStep: {\n          \"10.4.0\": \"data-testid prometheus-annotation-min-step\"\n          // id for autosize input\n        },\n        title: {\n          \"10.4.0\": \"data-testid prometheus annotation title\"\n        },\n        tags: {\n          \"10.4.0\": \"data-testid prometheus annotation tags\"\n        },\n        text: {\n          \"10.4.0\": \"data-testid prometheus annotation text\"\n        },\n        seriesValueAsTimestamp: {\n          \"10.4.0\": \"data-testid prometheus annotation series value as timestamp\"\n        }\n      }\n    }\n  },\n  Menu: {\n    MenuComponent: {\n      [MIN_GRAFANA_VERSION]: (title) => `${title} menu`\n    },\n    MenuGroup: {\n      [MIN_GRAFANA_VERSION]: (title) => `${title} menu group`\n    },\n    MenuItem: {\n      [MIN_GRAFANA_VERSION]: (title) => `${title} menu item`\n    },\n    SubMenu: {\n      container: {\n        \"10.3.0\": \"data-testid SubMenu container\",\n        [MIN_GRAFANA_VERSION]: \"SubMenu container\"\n      },\n      icon: {\n        \"10.3.0\": \"data-testid SubMenu icon\",\n        [MIN_GRAFANA_VERSION]: \"SubMenu icon\"\n      }\n    }\n  },\n  Panels: {\n    Panel: {\n      title: {\n        [MIN_GRAFANA_VERSION]: (title) => `data-testid Panel header ${title}`\n      },\n      content: {\n        \"11.1.0\": \"data-testid panel content\"\n      },\n      headerContainer: {\n        \"9.5.0\": \"data-testid header-container\"\n      },\n      headerItems: {\n        \"10.2.0\": (item) => `data-testid Panel header item ${item}`\n      },\n      menuItems: {\n        \"9.5.0\": (item) => `data-testid Panel menu item ${item}`\n      },\n      menu: {\n        \"9.5.0\": (title) => `data-testid Panel menu ${title}`\n      },\n      containerByTitle: {\n        [MIN_GRAFANA_VERSION]: (title) => `${title} panel`\n      },\n      headerCornerInfo: {\n        [MIN_GRAFANA_VERSION]: (mode) => `Panel header ${mode}`\n      },\n      status: {\n        \"10.2.0\": (status) => `data-testid Panel status ${status}`,\n        [MIN_GRAFANA_VERSION]: (_) => \"Panel status\"\n      },\n      loadingBar: {\n        \"10.0.0\": () => `Panel loading bar`\n      },\n      HoverWidget: {\n        container: {\n          \"10.1.0\": \"data-testid hover-header-container\",\n          [MIN_GRAFANA_VERSION]: \"hover-header-container\"\n        },\n        dragIcon: {\n          \"10.0.0\": \"data-testid drag-icon\"\n        }\n      },\n      PanelDataErrorMessage: {\n        \"10.4.0\": \"data-testid Panel data error message\"\n      }\n    },\n    Visualization: {\n      Graph: {\n        container: {\n          \"9.5.0\": \"Graph container\"\n        },\n        VisualizationTab: {\n          legendSection: {\n            [MIN_GRAFANA_VERSION]: \"Legend section\"\n          }\n        },\n        Legend: {\n          legendItemAlias: {\n            [MIN_GRAFANA_VERSION]: (name) => `gpl alias ${name}`\n          },\n          showLegendSwitch: {\n            [MIN_GRAFANA_VERSION]: \"gpl show legend\"\n          }\n        },\n        xAxis: {\n          labels: {\n            [MIN_GRAFANA_VERSION]: () => \"div.flot-x-axis > div.flot-tick-label\"\n          }\n        }\n      },\n      BarGauge: {\n        valueV2: {\n          [MIN_GRAFANA_VERSION]: \"data-testid Bar gauge value\"\n        }\n      },\n      PieChart: {\n        svgSlice: {\n          \"10.3.0\": \"data testid Pie Chart Slice\"\n        }\n      },\n      Text: {\n        container: { [MIN_GRAFANA_VERSION]: () => \".markdown-html\" }\n      },\n      Table: {\n        header: {\n          [MIN_GRAFANA_VERSION]: \"table header\"\n        },\n        footer: {\n          [MIN_GRAFANA_VERSION]: \"table-footer\"\n        },\n        body: {\n          \"10.2.0\": \"data-testid table body\"\n        }\n      },\n      TableNG: {\n        Filters: {\n          HeaderButton: {\n            \"12.1.0\": \"data-testid tableng header filter\"\n          },\n          Container: {\n            \"12.1.0\": \"data-testid tablenf filter container\"\n          },\n          SelectAll: {\n            \"12.1.0\": \"data-testid tableng filter select-all\"\n          }\n        },\n        Tooltip: {\n          Wrapper: {\n            \"12.2.0\": \"data-testid tableng tooltip wrapper\"\n          },\n          Caret: {\n            \"12.2.0\": \"data-testid tableng tooltip caret\"\n          }\n        },\n        Footer: {\n          ReducerLabel: {\n            \"12.2.0\": \"data-testid tableng footer reducer-label\"\n          },\n          Value: {\n            \"12.2.0\": \"data-testid tableng footer value\"\n          }\n        }\n      }\n    }\n  },\n  VizLegend: {\n    seriesName: {\n      \"10.3.0\": (name) => `data-testid VizLegend series ${name}`\n    }\n  },\n  Drawer: {\n    General: {\n      title: {\n        [MIN_GRAFANA_VERSION]: (title) => `Drawer title ${title}`\n      },\n      expand: {\n        [MIN_GRAFANA_VERSION]: \"Drawer expand\"\n      },\n      contract: {\n        [MIN_GRAFANA_VERSION]: \"Drawer contract\"\n      },\n      close: {\n        \"10.3.0\": \"data-testid Drawer close\",\n        [MIN_GRAFANA_VERSION]: \"Drawer close\"\n      },\n      rcContentWrapper: { \"9.4.0\": () => \".rc-drawer-content-wrapper\" },\n      subtitle: {\n        \"10.4.0\": \"data-testid drawer subtitle\"\n      }\n    },\n    DashboardSaveDrawer: {\n      saveButton: {\n        \"11.1.0\": \"data-testid Save dashboard drawer button\"\n      },\n      saveAsButton: {\n        \"11.1.0\": \"data-testid Save as dashboard drawer button\"\n      },\n      saveAsTitleInput: {\n        \"11.1.0\": \"Save dashboard title field\"\n      }\n    }\n  },\n  PanelEditor: {\n    General: {\n      content: {\n        \"11.1.0\": \"data-testid Panel editor content\",\n        \"8.0.0\": \"Panel editor content\"\n      }\n    },\n    OptionsPane: {\n      content: {\n        \"11.1.0\": \"data-testid Panel editor option pane content\",\n        [MIN_GRAFANA_VERSION]: \"Panel editor option pane content\"\n      },\n      select: {\n        [MIN_GRAFANA_VERSION]: \"Panel editor option pane select\"\n      },\n      fieldLabel: {\n        [MIN_GRAFANA_VERSION]: (type) => `${type} field property editor`\n      },\n      fieldInput: {\n        \"11.0.0\": (title) => `data-testid Panel editor option pane field input ${title}`\n      }\n    },\n    DataPane: {\n      content: {\n        \"11.1.0\": \"data-testid Panel editor data pane content\",\n        [MIN_GRAFANA_VERSION]: \"Panel editor data pane content\"\n      }\n    },\n    applyButton: {\n      \"9.2.0\": \"data-testid Apply changes and go back to dashboard\",\n      \"9.1.0\": \"Apply changes and go back to dashboard\",\n      \"8.0.0\": \"panel editor apply\"\n    },\n    toggleVizPicker: {\n      \"10.0.0\": \"data-testid toggle-viz-picker\",\n      \"8.0.0\": \"toggle-viz-picker\"\n    },\n    toggleVizOptions: {\n      \"10.1.0\": \"data-testid toggle-viz-options\",\n      [MIN_GRAFANA_VERSION]: \"toggle-viz-options\"\n    },\n    toggleTableView: {\n      \"11.1.0\": \"data-testid toggle-table-view\",\n      [MIN_GRAFANA_VERSION]: \"toggle-table-view\"\n    },\n    // [Geomap] Map controls\n    showZoomField: {\n      \"10.2.0\": \"Map controls Show zoom control field property editor\"\n    },\n    showAttributionField: {\n      \"10.2.0\": \"Map controls Show attribution field property editor\"\n    },\n    showScaleField: {\n      \"10.2.0\": \"Map controls Show scale field property editor\"\n    },\n    showMeasureField: {\n      \"10.2.0\": \"Map controls Show measure tools field property editor\"\n    },\n    showDebugField: {\n      \"10.2.0\": \"Map controls Show debug field property editor\"\n    },\n    measureButton: {\n      \"12.1.0\": \"data-testid panel-editor-measure-button\",\n      \"9.2.0\": \"show measure tools\"\n    },\n    Outline: {\n      section: {\n        \"12.0.0\": \"data-testid Outline section\"\n      },\n      node: {\n        \"12.0.0\": (type) => `data-testid outline node ${type}`\n      },\n      item: {\n        \"12.0.0\": (type) => `data-testid outline item ${type}`\n      }\n    },\n    ElementEditPane: {\n      variableType: {\n        \"12.0.0\": (type) => `data-testid variable type ${type}`\n      },\n      addVariableButton: {\n        \"12.0.0\": \"data-testid add variable button\"\n      },\n      variableNameInput: {\n        \"12.0.0\": \"data-testid variable name input\"\n      },\n      variableLabelInput: {\n        \"12.0.0\": \"data-testid variable label input\"\n      },\n      AutoGridLayout: {\n        minColumnWidth: {\n          \"12.1.0\": \"data-testid min column width selector\"\n        },\n        customMinColumnWidth: {\n          \"12.1.0\": \"data-testid custom min column width input\"\n        },\n        clearCustomMinColumnWidth: {\n          \"12.1.0\": \"data-testid clear custom min column width input\"\n        },\n        maxColumns: {\n          \"12.1.0\": \"data-testid max columns selector\"\n        },\n        rowHeight: {\n          \"12.1.0\": \"data-testid row height selector\"\n        },\n        customRowHeight: {\n          \"12.1.0\": \"data-testid custom row height input\"\n        },\n        clearCustomRowHeight: {\n          \"12.1.0\": \"data-testid clear custom row height input\"\n        },\n        fillScreen: {\n          \"12.1.0\": \"data-testid fill screen switch\"\n        }\n      }\n    }\n  },\n  PanelInspector: {\n    Data: {\n      content: {\n        [MIN_GRAFANA_VERSION]: \"Panel inspector Data content\"\n      }\n    },\n    Stats: {\n      content: {\n        [MIN_GRAFANA_VERSION]: \"Panel inspector Stats content\"\n      }\n    },\n    Json: {\n      content: {\n        \"11.1.0\": \"data-testid Panel inspector Json content\",\n        [MIN_GRAFANA_VERSION]: \"Panel inspector Json content\"\n      }\n    },\n    Query: {\n      content: {\n        [MIN_GRAFANA_VERSION]: \"Panel inspector Query content\"\n      },\n      refreshButton: {\n        [MIN_GRAFANA_VERSION]: \"Panel inspector Query refresh button\"\n      },\n      jsonObjectKeys: {\n        [MIN_GRAFANA_VERSION]: () => \".json-formatter-key\"\n      }\n    }\n  },\n  Tab: {\n    title: {\n      \"11.2.0\": (title) => `data-testid Tab ${title}`\n    },\n    active: { [MIN_GRAFANA_VERSION]: () => '[class*=\"-activeTabStyle\"]' }\n  },\n  RefreshPicker: {\n    runButtonV2: {\n      [MIN_GRAFANA_VERSION]: \"data-testid RefreshPicker run button\"\n    },\n    intervalButtonV2: {\n      [MIN_GRAFANA_VERSION]: \"data-testid RefreshPicker interval button\"\n    }\n  },\n  QueryTab: {\n    content: {\n      [MIN_GRAFANA_VERSION]: \"Query editor tab content\"\n    },\n    queryInspectorButton: {\n      [MIN_GRAFANA_VERSION]: \"Query inspector button\"\n    },\n    queryHistoryButton: {\n      \"10.2.0\": \"data-testid query-history-button\",\n      [MIN_GRAFANA_VERSION]: \"query-history-button\"\n    },\n    addQuery: {\n      \"10.2.0\": \"data-testid query-tab-add-query\",\n      [MIN_GRAFANA_VERSION]: \"Query editor add query button\"\n    },\n    addQueryFromLibrary: {\n      \"11.5.0\": \"data-testid query-tab-add-query-from-library\"\n    },\n    queryGroupTopSection: {\n      \"11.2.0\": \"data-testid query group top section\"\n    },\n    addExpression: {\n      \"11.2.0\": \"data-testid query-tab-add-expression\"\n    }\n  },\n  QueryHistory: {\n    queryText: {\n      \"9.0.0\": \"Query text\"\n    }\n  },\n  QueryEditorRows: {\n    rows: {\n      [MIN_GRAFANA_VERSION]: \"Query editor row\"\n    }\n  },\n  QueryEditorRow: {\n    actionButton: {\n      \"10.4.0\": (title) => `data-testid ${title}`\n    },\n    title: {\n      [MIN_GRAFANA_VERSION]: (refId) => `Query editor row title ${refId}`\n    },\n    container: {\n      [MIN_GRAFANA_VERSION]: (refId) => `Query editor row ${refId}`\n    }\n  },\n  AlertTab: {\n    content: {\n      \"10.2.3\": \"data-testid Alert editor tab content\",\n      [MIN_GRAFANA_VERSION]: \"Alert editor tab content\"\n    }\n  },\n  AlertRules: {\n    groupToggle: {\n      \"11.0.0\": \"data-testid group-collapse-toggle\"\n    },\n    toggle: {\n      \"11.0.0\": \"data-testid collapse-toggle\"\n    },\n    expandedContent: {\n      \"11.0.0\": \"data-testid expanded-content\"\n    },\n    previewButton: {\n      \"11.1.0\": \"data-testid alert-rule preview-button\"\n    },\n    ruleNameField: {\n      \"11.1.0\": \"data-testid alert-rule name-field\"\n    },\n    newFolderButton: {\n      \"11.1.0\": \"data-testid alert-rule new-folder-button\"\n    },\n    newFolderNameField: {\n      \"11.1.0\": \"data-testid alert-rule name-folder-name-field\"\n    },\n    newFolderNameCreateButton: {\n      \"11.1.0\": \"data-testid alert-rule name-folder-name-create-button\"\n    },\n    newEvaluationGroupButton: {\n      \"11.1.0\": \"data-testid alert-rule new-evaluation-group-button\"\n    },\n    newEvaluationGroupName: {\n      \"11.1.0\": \"data-testid alert-rule new-evaluation-group-name\"\n    },\n    newEvaluationGroupInterval: {\n      \"11.1.0\": \"data-testid alert-rule new-evaluation-group-interval\"\n    },\n    newEvaluationGroupCreate: {\n      \"11.1.0\": \"data-testid alert-rule new-evaluation-group-create-button\"\n    },\n    step: {\n      \"11.5.0\": (stepNo) => `data-testid alert-rule step-${stepNo}`\n    },\n    stepAdvancedModeSwitch: {\n      \"11.5.0\": (stepNo) => `data-testid advanced-mode-switch step-${stepNo}`\n    }\n  },\n  Alert: {\n    alertV2: {\n      [MIN_GRAFANA_VERSION]: (severity) => `data-testid Alert ${severity}`\n    }\n  },\n  TransformTab: {\n    content: {\n      \"10.1.0\": \"data-testid Transform editor tab content\",\n      [MIN_GRAFANA_VERSION]: \"Transform editor tab content\"\n    },\n    newTransform: {\n      \"10.1.0\": (name) => `data-testid New transform ${name}`\n    },\n    transformationEditor: {\n      \"10.1.0\": (name) => `data-testid Transformation editor ${name}`\n    },\n    transformationEditorDebugger: {\n      \"10.1.0\": (name) => `data-testid Transformation editor debugger ${name}`\n    }\n  },\n  Transforms: {\n    card: {\n      \"10.1.0\": (name) => `data-testid New transform ${name}`\n    },\n    disableTransformationButton: {\n      \"10.4.0\": \"data-testid Disable transformation button\"\n    },\n    Reduce: {\n      modeLabel: {\n        \"10.2.3\": \"data-testid Transform mode label\",\n        [MIN_GRAFANA_VERSION]: \"Transform mode label\"\n      },\n      calculationsLabel: {\n        \"10.2.3\": \"data-testid Transform calculations label\",\n        [MIN_GRAFANA_VERSION]: \"Transform calculations label\"\n      }\n    },\n    SpatialOperations: {\n      actionLabel: {\n        \"9.1.2\": \"root Action field property editor\"\n      },\n      locationLabel: {\n        \"10.2.0\": \"root Location Mode field property editor\"\n      },\n      location: {\n        autoOption: {\n          \"9.1.2\": \"Auto location option\"\n        },\n        coords: {\n          option: {\n            \"9.1.2\": \"Coords location option\"\n          },\n          latitudeFieldLabel: {\n            \"9.1.2\": \"root Latitude field field property editor\"\n          },\n          longitudeFieldLabel: {\n            \"9.1.2\": \"root Longitude field field property editor\"\n          }\n        },\n        geohash: {\n          option: {\n            \"9.1.2\": \"Geohash location option\"\n          },\n          geohashFieldLabel: {\n            \"9.1.2\": \"root Geohash field field property editor\"\n          }\n        },\n        lookup: {\n          option: {\n            \"9.1.2\": \"Lookup location option\"\n          },\n          lookupFieldLabel: {\n            \"9.1.2\": \"root Lookup field field property editor\"\n          },\n          gazetteerFieldLabel: {\n            \"9.1.2\": \"root Gazetteer field property editor\"\n          }\n        }\n      }\n    },\n    searchInput: {\n      \"10.2.3\": \"data-testid search transformations\",\n      [MIN_GRAFANA_VERSION]: \"search transformations\"\n    },\n    noTransformationsMessage: {\n      \"10.2.3\": \"data-testid no transformations message\"\n    },\n    addTransformationButton: {\n      \"10.1.0\": \"data-testid add transformation button\",\n      [MIN_GRAFANA_VERSION]: \"add transformation button\"\n    },\n    removeAllTransformationsButton: {\n      \"10.4.0\": \"data-testid remove all transformations button\"\n    }\n  },\n  NavBar: {\n    Configuration: {\n      button: {\n        \"9.5.0\": \"Configuration\"\n      }\n    },\n    Toggle: {\n      button: {\n        \"10.2.3\": \"data-testid Toggle menu\",\n        [MIN_GRAFANA_VERSION]: \"Toggle menu\"\n      }\n    },\n    Reporting: {\n      button: {\n        \"9.5.0\": \"Reporting\"\n      }\n    }\n  },\n  NavMenu: {\n    Menu: {\n      \"10.2.3\": \"data-testid navigation mega-menu\"\n    },\n    item: {\n      \"9.5.0\": \"data-testid Nav menu item\"\n    }\n  },\n  NavToolbar: {\n    container: {\n      \"9.4.0\": \"data-testid Nav toolbar\"\n    },\n    commandPaletteTrigger: {\n      \"11.5.0\": \"data-testid Command palette trigger\"\n    },\n    shareDashboard: {\n      \"11.1.0\": \"data-testid Share dashboard\"\n    },\n    markAsFavorite: {\n      \"11.1.0\": \"data-testid Mark as favorite\"\n    },\n    editDashboard: {\n      editButton: {\n        \"11.1.0\": \"data-testid Edit dashboard button\"\n      },\n      saveButton: {\n        \"11.1.0\": \"data-testid Save dashboard button\"\n      },\n      exitButton: {\n        \"11.1.0\": \"data-testid Exit edit mode button\"\n      },\n      settingsButton: {\n        \"11.1.0\": \"data-testid Dashboard settings\"\n      },\n      addRowButton: {\n        \"11.1.0\": \"data-testid Add row button\"\n      },\n      addLibraryPanelButton: {\n        \"11.1.0\": \"data-testid Add a panel from the panel library button\"\n      },\n      addVisualizationButton: {\n        \"11.1.0\": \"data-testid Add new visualization menu item\"\n      },\n      pastePanelButton: {\n        \"11.1.0\": \"data-testid Paste panel button\"\n      },\n      discardChangesButton: {\n        \"11.1.0\": \"data-testid Discard changes button\"\n      },\n      discardLibraryPanelButton: {\n        \"11.1.0\": \"data-testid Discard library panel button\"\n      },\n      unlinkLibraryPanelButton: {\n        \"11.1.0\": \"data-testid Unlink library panel button\"\n      },\n      saveLibraryPanelButton: {\n        \"11.1.0\": \"data-testid Save library panel button\"\n      },\n      backToDashboardButton: {\n        \"11.1.0\": \"data-testid Back to dashboard button\"\n      }\n    }\n  },\n  PageToolbar: {\n    container: { [MIN_GRAFANA_VERSION]: () => \".page-toolbar\" },\n    item: {\n      [MIN_GRAFANA_VERSION]: (tooltip) => `${tooltip}`\n    },\n    itemButton: {\n      \"9.5.0\": (title) => `data-testid ${title}`\n    }\n  },\n  QueryEditorToolbarItem: {\n    button: {\n      [MIN_GRAFANA_VERSION]: (title) => `QueryEditor toolbar item button ${title}`\n    }\n  },\n  BackButton: {\n    backArrow: {\n      \"10.3.0\": \"data-testid Go Back\",\n      [MIN_GRAFANA_VERSION]: \"Go Back\"\n    }\n  },\n  OptionsGroup: {\n    group: {\n      \"11.1.0\": (title) => title ? `data-testid Options group ${title}` : \"data-testid Options group\",\n      [MIN_GRAFANA_VERSION]: (title) => title ? `Options group ${title}` : \"Options group\"\n    },\n    toggle: {\n      \"11.1.0\": (title) => title ? `data-testid Options group ${title} toggle` : \"data-testid Options group toggle\",\n      [MIN_GRAFANA_VERSION]: (title) => title ? `Options group ${title} toggle` : \"Options group toggle\"\n    }\n  },\n  PluginVisualization: {\n    item: {\n      [MIN_GRAFANA_VERSION]: (title) => `Plugin visualization item ${title}`\n    },\n    current: {\n      [MIN_GRAFANA_VERSION]: () => '[class*=\"-currentVisualizationItem\"]'\n    }\n  },\n  Select: {\n    menu: {\n      \"11.5.0\": \"data-testid Select menu\",\n      [MIN_GRAFANA_VERSION]: \"Select options menu\"\n    },\n    option: {\n      \"11.1.0\": \"data-testid Select option\",\n      [MIN_GRAFANA_VERSION]: \"Select option\"\n    },\n    toggleAllOptions: {\n      \"11.3.0\": \"data-testid toggle all options\"\n    },\n    input: {\n      [MIN_GRAFANA_VERSION]: () => 'input[id*=\"time-options-input\"]'\n    },\n    singleValue: {\n      [MIN_GRAFANA_VERSION]: () => 'div[class*=\"-singleValue\"]'\n    }\n  },\n  FieldConfigEditor: {\n    content: {\n      [MIN_GRAFANA_VERSION]: \"Field config editor content\"\n    }\n  },\n  OverridesConfigEditor: {\n    content: {\n      [MIN_GRAFANA_VERSION]: \"Field overrides editor content\"\n    }\n  },\n  FolderPicker: {\n    containerV2: {\n      [MIN_GRAFANA_VERSION]: \"data-testid Folder picker select container\"\n    },\n    input: {\n      \"10.4.0\": \"data-testid folder-picker-input\"\n    }\n  },\n  ReadonlyFolderPicker: {\n    container: {\n      [MIN_GRAFANA_VERSION]: \"data-testid Readonly folder picker select container\"\n    }\n  },\n  DataSourcePicker: {\n    container: {\n      \"10.0.0\": \"data-testid Data source picker select container\",\n      \"8.0.0\": \"Data source picker select container\"\n    },\n    inputV2: {\n      \"10.1.0\": \"data-testid Select a data source\",\n      [MIN_GRAFANA_VERSION]: \"Select a data source\"\n    },\n    dataSourceList: {\n      \"10.4.0\": \"data-testid Data source list dropdown\"\n    },\n    advancedModal: {\n      dataSourceList: {\n        \"10.4.0\": \"data-testid Data source list\"\n      },\n      builtInDataSourceList: {\n        \"10.4.0\": \"data-testid Built in data source list\"\n      }\n    }\n  },\n  TimeZonePicker: {\n    containerV2: {\n      [MIN_GRAFANA_VERSION]: \"data-testid Time zone picker select container\"\n    },\n    changeTimeSettingsButton: {\n      \"11.0.0\": \"data-testid Time zone picker Change time settings button\"\n    }\n  },\n  WeekStartPicker: {\n    containerV2: {\n      [MIN_GRAFANA_VERSION]: \"data-testid Choose starting day of the week\"\n    },\n    placeholder: {\n      [MIN_GRAFANA_VERSION]: \"Choose starting day of the week\"\n    }\n  },\n  TraceViewer: {\n    spanBar: {\n      \"9.0.0\": \"data-testid SpanBar--wrapper\"\n    }\n  },\n  QueryField: {\n    container: {\n      \"10.3.0\": \"data-testid Query field\",\n      [MIN_GRAFANA_VERSION]: \"Query field\"\n    }\n  },\n  QueryBuilder: {\n    queryPatterns: {\n      \"10.3.0\": \"data-testid Query patterns\",\n      [MIN_GRAFANA_VERSION]: \"Query patterns\"\n    },\n    labelSelect: {\n      \"10.3.0\": \"data-testid Select label\",\n      [MIN_GRAFANA_VERSION]: \"Select label\"\n    },\n    inputSelect: {\n      \"11.1.0\": \"data-testid Select label-input\"\n    },\n    valueSelect: {\n      \"10.3.0\": \"data-testid Select value\",\n      [MIN_GRAFANA_VERSION]: \"Select value\"\n    },\n    matchOperatorSelect: {\n      \"10.3.0\": \"data-testid Select match operator\",\n      [MIN_GRAFANA_VERSION]: \"Select match operator\"\n    }\n  },\n  ValuePicker: {\n    button: {\n      \"10.3.0\": (name) => `data-testid Value picker button ${name}`\n    },\n    select: {\n      \"10.3.0\": (name) => `data-testid Value picker select ${name}`\n    }\n  },\n  Search: {\n    sectionV2: {\n      [MIN_GRAFANA_VERSION]: \"data-testid Search section\"\n    },\n    itemsV2: {\n      [MIN_GRAFANA_VERSION]: \"data-testid Search items\"\n    },\n    cards: {\n      [MIN_GRAFANA_VERSION]: \"data-testid Search cards\"\n    },\n    collapseFolder: {\n      [MIN_GRAFANA_VERSION]: (sectionId) => `data-testid Collapse folder ${sectionId}`\n    },\n    expandFolder: {\n      [MIN_GRAFANA_VERSION]: (sectionId) => `data-testid Expand folder ${sectionId}`\n    },\n    dashboardItem: {\n      [MIN_GRAFANA_VERSION]: (item) => `data-testid Dashboard search item ${item}`\n    },\n    dashboardCard: {\n      [MIN_GRAFANA_VERSION]: (item) => `data-testid Search card ${item}`\n    },\n    folderHeader: {\n      \"9.3.0\": (folderName) => `data-testid Folder header ${folderName}`\n    },\n    folderContent: {\n      \"9.3.0\": (folderName) => `data-testid Folder content ${folderName}`\n    },\n    dashboardItems: {\n      [MIN_GRAFANA_VERSION]: \"data-testid Dashboard search item\"\n    }\n  },\n  DashboardLinks: {\n    container: {\n      [MIN_GRAFANA_VERSION]: \"data-testid Dashboard link container\"\n    },\n    dropDown: {\n      [MIN_GRAFANA_VERSION]: \"data-testid Dashboard link dropdown\"\n    },\n    link: {\n      [MIN_GRAFANA_VERSION]: \"data-testid Dashboard link\"\n    }\n  },\n  LoadingIndicator: {\n    icon: {\n      \"10.4.0\": \"data-testid Loading indicator\",\n      [MIN_GRAFANA_VERSION]: \"Loading indicator\"\n    }\n  },\n  CallToActionCard: {\n    buttonV2: {\n      [MIN_GRAFANA_VERSION]: (name) => `data-testid Call to action button ${name}`\n    }\n  },\n  DataLinksContextMenu: {\n    singleLink: {\n      \"10.3.0\": \"data-testid Data link\",\n      [MIN_GRAFANA_VERSION]: \"Data link\"\n    }\n  },\n  DataLinksActionsTooltip: {\n    tooltipWrapper: {\n      \"12.1.0\": \"data-testid Data links actions tooltip wrapper\"\n    }\n  },\n  CodeEditor: {\n    container: {\n      \"10.2.3\": \"data-testid Code editor container\",\n      [MIN_GRAFANA_VERSION]: \"Code editor container\"\n    }\n  },\n  ReactMonacoEditor: {\n    editorLazy: {\n      \"11.1.0\": \"data-testid ReactMonacoEditor editorLazy\"\n    }\n  },\n  DashboardImportPage: {\n    textarea: {\n      [MIN_GRAFANA_VERSION]: \"data-testid-import-dashboard-textarea\"\n    },\n    submit: {\n      [MIN_GRAFANA_VERSION]: \"data-testid-load-dashboard\"\n    }\n  },\n  ImportDashboardForm: {\n    name: {\n      [MIN_GRAFANA_VERSION]: \"data-testid-import-dashboard-title\"\n    },\n    submit: {\n      [MIN_GRAFANA_VERSION]: \"data-testid-import-dashboard-submit\"\n    }\n  },\n  PanelAlertTabContent: {\n    content: {\n      \"10.2.3\": \"data-testid Unified alert editor tab content\",\n      [MIN_GRAFANA_VERSION]: \"Unified alert editor tab content\"\n    }\n  },\n  VisualizationPreview: {\n    card: {\n      [MIN_GRAFANA_VERSION]: (name) => `data-testid suggestion-${name}`\n    }\n  },\n  ColorSwatch: {\n    name: {\n      [MIN_GRAFANA_VERSION]: \"data-testid-colorswatch\"\n    }\n  },\n  DashboardRow: {\n    title: {\n      [MIN_GRAFANA_VERSION]: (title) => `data-testid dashboard-row-title-${title}`\n    },\n    wrapper: {\n      \"12.1.0\": (title) => `data-testid dashboard-row-wrapper-for-${title}`\n    }\n  },\n  UserProfile: {\n    profileSaveButton: {\n      [MIN_GRAFANA_VERSION]: \"data-testid-user-profile-save\"\n    },\n    preferencesSaveButton: {\n      [MIN_GRAFANA_VERSION]: \"data-testid-shared-prefs-save\"\n    },\n    orgsTable: {\n      [MIN_GRAFANA_VERSION]: \"data-testid-user-orgs-table\"\n    },\n    sessionsTable: {\n      [MIN_GRAFANA_VERSION]: \"data-testid-user-sessions-table\"\n    },\n    extensionPointTabs: {\n      \"10.2.3\": \"data-testid-extension-point-tabs\"\n    },\n    extensionPointTab: {\n      \"10.2.3\": (tabId) => `data-testid-extension-point-tab-${tabId}`\n    }\n  },\n  FileUpload: {\n    inputField: {\n      \"9.0.0\": \"data-testid-file-upload-input-field\"\n    },\n    fileNameSpan: {\n      \"9.0.0\": \"data-testid-file-upload-file-name\"\n    }\n  },\n  DebugOverlay: {\n    wrapper: {\n      \"9.2.0\": \"debug-overlay\"\n    }\n  },\n  OrgRolePicker: {\n    input: {\n      \"9.5.0\": \"Role\"\n    }\n  },\n  AnalyticsToolbarButton: {\n    button: {\n      \"9.5.0\": \"Dashboard insights\"\n    }\n  },\n  Variables: {\n    variableOption: {\n      \"9.5.0\": \"data-testid variable-option\"\n    },\n    variableLinkWrapper: {\n      \"11.1.1\": \"data-testid variable-link-wrapper\"\n    }\n  },\n  Annotations: {\n    annotationsTypeInput: {\n      \"11.1.0\": \"data-testid annotations-type-input\",\n      [MIN_GRAFANA_VERSION]: \"annotations-type-input\"\n    },\n    annotationsChoosePanelInput: {\n      \"11.1.0\": \"data-testid choose-panels-input\",\n      [MIN_GRAFANA_VERSION]: \"choose-panels-input\"\n    },\n    editor: {\n      testButton: {\n        \"11.0.0\": \"data-testid annotations-test-button\"\n      },\n      resultContainer: {\n        \"11.0.0\": \"data-testid annotations-query-result-container\"\n      }\n    }\n  },\n  Tooltip: {\n    container: {\n      \"10.2.0\": \"data-testid tooltip\"\n    }\n  },\n  ReturnToPrevious: {\n    buttonGroup: {\n      \"11.0.0\": \"data-testid dismissable button group\"\n    },\n    backButton: {\n      \"11.0.0\": \"data-testid back\"\n    },\n    dismissButton: {\n      \"11.0.0\": \"data-testid dismiss\"\n    }\n  },\n  SQLQueryEditor: {\n    selectColumn: {\n      \"11.0.0\": \"data-testid select-column\"\n    },\n    selectColumnInput: { \"11.0.0\": \"data-testid select-column-input\" },\n    selectFunctionParameter: { \"11.0.0\": (name) => `data-testid select-function-parameter-${name}` },\n    selectAggregation: {\n      \"11.0.0\": \"data-testid select-aggregation\"\n    },\n    selectAggregationInput: { \"11.0.0\": \"data-testid select-aggregation-input\" },\n    selectAlias: {\n      \"11.0.0\": \"data-testid select-alias\"\n    },\n    selectAliasInput: { \"11.0.0\": \"data-testid select-alias-input\" },\n    selectInputParameter: { \"11.0.0\": \"data-testid select-input-parameter\" },\n    filterConjunction: {\n      \"11.0.0\": \"data-testid filter-conjunction\"\n    },\n    filterField: {\n      \"11.0.0\": \"data-testid filter-field\"\n    },\n    filterOperator: {\n      \"11.0.0\": \"data-testid filter-operator\"\n    },\n    headerTableSelector: {\n      \"11.0.0\": \"data-testid header-table-selector\"\n    },\n    headerFilterSwitch: {\n      \"11.0.0\": \"data-testid header-filter-switch\"\n    },\n    headerGroupSwitch: {\n      \"11.0.0\": \"data-testid header-group-switch\"\n    },\n    headerOrderSwitch: {\n      \"11.0.0\": \"data-testid header-order-switch\"\n    },\n    headerPreviewSwitch: {\n      \"11.0.0\": \"data-testid header-preview-switch\"\n    }\n  },\n  EntityNotFound: {\n    container: {\n      \"11.2.0\": \"data-testid entity-not-found\"\n    }\n  },\n  Portal: {\n    container: {\n      \"11.5.0\": \"data-testid portal-container\"\n    }\n  },\n  ExportImage: {\n    formatOptions: {\n      container: {\n        [\"12.1.0\"]: \"data-testid export-image-format-options\"\n      },\n      png: {\n        [\"12.1.0\"]: \"data-testid export-image-format-png\"\n      },\n      jpg: {\n        [\"12.1.0\"]: \"data-testid export-image-format-jpg\"\n      }\n    },\n    rendererAlert: {\n      container: {\n        [\"12.1.0\"]: \"data-testid export-image-renderer-alert\"\n      },\n      title: {\n        [\"12.1.0\"]: \"data-testid export-image-renderer-alert-title\"\n      },\n      description: {\n        [\"12.1.0\"]: \"data-testid export-image-renderer-alert-description\"\n      }\n    },\n    buttons: {\n      generate: {\n        [\"12.1.0\"]: \"data-testid export-image-generate-button\"\n      },\n      download: {\n        [\"12.1.0\"]: \"data-testid export-image-download-button\"\n      },\n      cancel: {\n        [\"12.1.0\"]: \"data-testid export-image-cancel-button\"\n      }\n    },\n    preview: {\n      container: {\n        [\"12.1.0\"]: \"data-testid export-image-preview-container\"\n      },\n      loading: {\n        [\"12.1.0\"]: \"data-testid export-image-preview-loading\"\n      },\n      image: {\n        [\"12.1.0\"]: \"data-testid export-image-preview\"\n      },\n      error: {\n        container: {\n          [\"12.1.0\"]: \"data-testid export-image-error\"\n        },\n        title: {\n          [\"12.1.0\"]: \"data-testid export-image-error-title\"\n        },\n        message: {\n          [\"12.1.0\"]: \"data-testid export-image-error-message\"\n        }\n      }\n    }\n  }\n};\n\nexport { versionedComponents };\n//# sourceMappingURL=components.mjs.map\n","import { resolveSelectors } from '../resolver.mjs';\nimport { versionedComponents } from './components.mjs';\nimport { versionedPages } from './pages.mjs';\n\n\"use strict\";\nconst Pages = resolveSelectors(versionedPages);\nconst Components = resolveSelectors(versionedComponents);\nconst selectors = { pages: Pages, components: Components };\n\nexport { Components, Pages, resolveSelectors, selectors, versionedComponents, versionedPages };\n//# sourceMappingURL=index.mjs.map\n","import { MIN_GRAFANA_VERSION } from './constants.mjs';\n\n\"use strict\";\nconst versionedPages = {\n  Alerting: {\n    AddAlertRule: {\n      url: {\n        \"10.1.0\": \"/alerting/new/alerting\",\n        [MIN_GRAFANA_VERSION]: \"/alerting/new\"\n      }\n    },\n    EditAlertRule: {\n      url: {\n        [MIN_GRAFANA_VERSION]: (alertRuleUid) => `alerting/${alertRuleUid}/edit`\n      }\n    }\n  },\n  Login: {\n    url: {\n      [MIN_GRAFANA_VERSION]: \"/login\"\n    },\n    username: {\n      \"10.2.3\": \"data-testid Username input field\",\n      [MIN_GRAFANA_VERSION]: \"Username input field\"\n    },\n    password: {\n      \"10.2.3\": \"data-testid Password input field\",\n      [MIN_GRAFANA_VERSION]: \"Password input field\"\n    },\n    submit: {\n      \"10.2.3\": \"data-testid Login button\",\n      [MIN_GRAFANA_VERSION]: \"Login button\"\n    },\n    skip: {\n      \"10.2.3\": \"data-testid Skip change password button\"\n    }\n  },\n  PasswordlessLogin: {\n    url: {\n      [MIN_GRAFANA_VERSION]: \"/login/passwordless/authenticate\"\n    },\n    email: {\n      \"10.2.3\": \"data-testid Email input field\",\n      [MIN_GRAFANA_VERSION]: \"Email input field\"\n    },\n    submit: {\n      \"10.2.3\": \"data-testid PasswordlessLogin button\",\n      [MIN_GRAFANA_VERSION]: \"PasswordlessLogin button\"\n    }\n  },\n  Home: {\n    url: {\n      [MIN_GRAFANA_VERSION]: \"/\"\n    }\n  },\n  DataSource: {\n    name: {\n      \"10.3.0\": \"data-testid Data source settings page name input field\",\n      [MIN_GRAFANA_VERSION]: \"Data source settings page name input field\"\n    },\n    delete: {\n      [MIN_GRAFANA_VERSION]: \"Data source settings page Delete button\"\n    },\n    readOnly: {\n      \"10.3.0\": \"data-testid Data source settings page read only message\",\n      [MIN_GRAFANA_VERSION]: \"Data source settings page read only message\"\n    },\n    saveAndTest: {\n      \"10.0.0\": \"data-testid Data source settings page Save and Test button\",\n      [MIN_GRAFANA_VERSION]: \"Data source settings page Save and Test button\"\n    },\n    alert: {\n      \"10.3.0\": \"data-testid Data source settings page Alert\",\n      [MIN_GRAFANA_VERSION]: \"Data source settings page Alert\"\n    }\n  },\n  DataSources: {\n    url: {\n      [MIN_GRAFANA_VERSION]: \"/datasources\"\n    },\n    dataSources: {\n      [MIN_GRAFANA_VERSION]: (dataSourceName) => `Data source list item ${dataSourceName}`\n    }\n  },\n  EditDataSource: {\n    url: {\n      \"9.5.0\": (dataSourceUid) => `/datasources/edit/${dataSourceUid}`\n    },\n    settings: {\n      \"9.5.0\": \"Datasource settings page basic settings\"\n    }\n  },\n  AddDataSource: {\n    url: {\n      [MIN_GRAFANA_VERSION]: \"/datasources/new\"\n    },\n    dataSourcePluginsV2: {\n      \"9.3.1\": (pluginName) => `Add new data source ${pluginName}`,\n      [MIN_GRAFANA_VERSION]: (pluginName) => `Data source plugin item ${pluginName}`\n    }\n  },\n  ConfirmModal: {\n    delete: {\n      \"10.0.0\": \"data-testid Confirm Modal Danger Button\",\n      [MIN_GRAFANA_VERSION]: \"Confirm Modal Danger Button\"\n    },\n    input: {\n      \"12.2.0\": \"data-testid Confirm Modal Input\"\n    }\n  },\n  SecretsManagement: {\n    SecretForm: {\n      \"12.2.0\": \"data-testid Secret Form\"\n    }\n  },\n  AddDashboard: {\n    url: {\n      [MIN_GRAFANA_VERSION]: \"/dashboard/new\"\n    },\n    itemButton: {\n      \"9.5.0\": (title) => `data-testid ${title}`\n    },\n    addNewPanel: {\n      \"11.1.0\": \"data-testid Add new panel\",\n      \"8.0.0\": \"Add new panel\",\n      [MIN_GRAFANA_VERSION]: \"Add new panel\"\n    },\n    itemButtonAddViz: {\n      [MIN_GRAFANA_VERSION]: \"Add new visualization menu item\"\n    },\n    addNewRow: {\n      \"11.1.0\": \"data-testid Add new row\",\n      [MIN_GRAFANA_VERSION]: \"Add new row\"\n    },\n    addNewPanelLibrary: {\n      \"11.1.0\": \"data-testid Add new panel from panel library\",\n      [MIN_GRAFANA_VERSION]: \"Add new panel from panel library\"\n    },\n    Settings: {\n      Annotations: {\n        List: {\n          url: {\n            [MIN_GRAFANA_VERSION]: \"/dashboard/new?orgId=1&editview=annotations\"\n          }\n        },\n        Edit: {\n          url: {\n            [MIN_GRAFANA_VERSION]: (annotationIndex) => `/dashboard/new?editview=annotations&editIndex=${annotationIndex}`\n          }\n        }\n      },\n      Variables: {\n        List: {\n          url: {\n            \"11.3.0\": \"/dashboard/new?orgId=1&editview=variables\",\n            [MIN_GRAFANA_VERSION]: \"/dashboard/new?orgId=1&editview=templating\"\n          }\n        },\n        Edit: {\n          url: {\n            \"11.3.0\": (editIndex) => `/dashboard/new?orgId=1&editview=variables&editIndex=${editIndex}`,\n            [MIN_GRAFANA_VERSION]: (editIndex) => `/dashboard/new?orgId=1&editview=templating&editIndex=${editIndex}`\n          }\n        }\n      }\n    }\n  },\n  ImportDashboard: {\n    url: {\n      [MIN_GRAFANA_VERSION]: \"/dashboard/import\"\n    }\n  },\n  Dashboard: {\n    url: {\n      [MIN_GRAFANA_VERSION]: (uid) => `/d/${uid}`\n    },\n    DashNav: {\n      nav: {\n        [MIN_GRAFANA_VERSION]: \"Dashboard navigation\"\n      },\n      navV2: {\n        [MIN_GRAFANA_VERSION]: \"data-testid Dashboard navigation\"\n      },\n      publicDashboardTag: {\n        \"9.1.0\": \"data-testid public dashboard tag\"\n      },\n      shareButton: {\n        \"10.4.0\": \"data-testid share-button\"\n      },\n      scrollContainer: {\n        \"11.1.0\": \"data-testid Dashboard canvas scroll container\"\n      },\n      newShareButton: {\n        container: {\n          \"11.1.0\": \"data-testid new share button\"\n        },\n        shareLink: {\n          \"11.1.0\": \"data-testid new share link-button\"\n        },\n        arrowMenu: {\n          \"11.1.0\": \"data-testid new share button arrow menu\"\n        },\n        menu: {\n          container: {\n            \"11.1.0\": \"data-testid new share button menu\"\n          },\n          shareInternally: {\n            \"11.1.0\": \"data-testid new share button share internally\"\n          },\n          shareExternally: {\n            \"11.1.1\": \"data-testid new share button share externally\"\n          },\n          shareSnapshot: {\n            \"11.2.0\": \"data-testid new share button share snapshot\"\n          }\n        }\n      },\n      NewExportButton: {\n        container: {\n          \"11.2.0\": \"data-testid new export button\"\n        },\n        arrowMenu: {\n          \"11.2.0\": \"data-testid new export button arrow menu\"\n        },\n        Menu: {\n          container: {\n            \"11.2.0\": \"data-testid new export button menu\"\n          },\n          exportAsJson: {\n            \"11.2.0\": \"data-testid new export button export as json\"\n          },\n          exportAsImage: {\n            \"12.1.0\": \"data-testid new export button export as image\"\n          }\n        }\n      },\n      playlistControls: {\n        prev: {\n          \"11.0.0\": \"data-testid playlist previous dashboard button\"\n        },\n        stop: {\n          \"11.0.0\": \"data-testid playlist stop dashboard button\"\n        },\n        next: {\n          \"11.0.0\": \"data-testid playlist next dashboard button\"\n        }\n      }\n    },\n    Controls: {\n      \"11.1.0\": \"data-testid dashboard controls\"\n    },\n    SubMenu: {\n      submenu: {\n        [MIN_GRAFANA_VERSION]: \"Dashboard submenu\"\n      },\n      submenuItem: {\n        [MIN_GRAFANA_VERSION]: \"data-testid template variable\"\n      },\n      submenuItemLabels: {\n        [MIN_GRAFANA_VERSION]: (item) => `data-testid Dashboard template variables submenu Label ${item}`\n      },\n      submenuItemValueDropDownValueLinkTexts: {\n        [MIN_GRAFANA_VERSION]: (item) => `data-testid Dashboard template variables Variable Value DropDown value link text ${item}`\n      },\n      submenuItemValueDropDownDropDown: {\n        [MIN_GRAFANA_VERSION]: \"Variable options\"\n      },\n      submenuItemValueDropDownOptionTexts: {\n        [MIN_GRAFANA_VERSION]: (item) => `data-testid Dashboard template variables Variable Value DropDown option text ${item}`\n      },\n      Annotations: {\n        annotationsWrapper: {\n          \"10.0.0\": \"data-testid annotation-wrapper\"\n        },\n        annotationLabel: {\n          \"10.0.0\": (label) => `data-testid Dashboard annotations submenu Label ${label}`\n        },\n        annotationToggle: {\n          \"10.0.0\": (label) => `data-testid Dashboard annotations submenu Toggle ${label}`\n        }\n      }\n    },\n    Settings: {\n      Actions: {\n        close: {\n          \"9.5.0\": \"data-testid dashboard-settings-close\"\n        }\n      },\n      General: {\n        deleteDashBoard: {\n          \"11.1.0\": \"data-testid Dashboard settings page delete dashboard button\"\n        },\n        sectionItems: {\n          [MIN_GRAFANA_VERSION]: (item) => `Dashboard settings section item ${item}`\n        },\n        saveDashBoard: {\n          [MIN_GRAFANA_VERSION]: \"Dashboard settings aside actions Save button\"\n        },\n        saveAsDashBoard: {\n          [MIN_GRAFANA_VERSION]: \"Dashboard settings aside actions Save As button\"\n        },\n        title: {\n          \"11.2.0\": \"General\"\n        }\n      },\n      Annotations: {\n        Edit: {\n          urlParams: {\n            [MIN_GRAFANA_VERSION]: (annotationIndex) => `editview=annotations&editIndex=${annotationIndex}`\n          }\n        },\n        List: {\n          url: {\n            [MIN_GRAFANA_VERSION]: (dashboardUid) => `/d/${dashboardUid}?editview=annotations`\n          },\n          addAnnotationCTAV2: {\n            [MIN_GRAFANA_VERSION]: \"data-testid Call to action button Add annotation query\"\n          },\n          annotations: {\n            \"10.4.0\": \"data-testid list-annotations\"\n          }\n        },\n        Settings: {\n          name: {\n            \"11.1.0\": \"data-testid Annotations settings name input\",\n            [MIN_GRAFANA_VERSION]: \"Annotations settings name input\"\n          }\n        },\n        NewAnnotation: {\n          panelFilterSelect: {\n            \"10.0.0\": \"data-testid annotations-panel-filter\"\n          },\n          showInLabel: {\n            \"11.1.0\": \"data-testid show-in-label\"\n          },\n          previewInDashboard: {\n            \"10.0.0\": \"data-testid annotations-preview\"\n          },\n          delete: {\n            \"10.4.0\": \"data-testid annotations-delete\"\n          },\n          apply: {\n            \"10.4.0\": \"data-testid annotations-apply\"\n          },\n          enable: {\n            \"10.4.0\": \"data-testid annotation-enable\"\n          },\n          hide: {\n            \"10.4.0\": \"data-testid annotation-hide\"\n          }\n        }\n      },\n      Variables: {\n        List: {\n          url: {\n            \"11.3.0\": (dashboardUid) => `/d/${dashboardUid}?editview=variables`,\n            [MIN_GRAFANA_VERSION]: (dashboardUid) => `/d/${dashboardUid}?editview=templating`\n          },\n          addVariableCTAV2: {\n            [MIN_GRAFANA_VERSION]: \"data-testid Call to action button Add variable\"\n          },\n          newButton: {\n            [MIN_GRAFANA_VERSION]: \"Variable editor New variable button\"\n          },\n          table: {\n            [MIN_GRAFANA_VERSION]: \"Variable editor Table\"\n          },\n          tableRowNameFields: {\n            [MIN_GRAFANA_VERSION]: (variableName) => `Variable editor Table Name field ${variableName}`\n          },\n          tableRowDefinitionFields: {\n            \"10.1.0\": (variableName) => `Variable editor Table Definition field ${variableName}`\n          },\n          tableRowArrowUpButtons: {\n            [MIN_GRAFANA_VERSION]: (variableName) => `Variable editor Table ArrowUp button ${variableName}`\n          },\n          tableRowArrowDownButtons: {\n            [MIN_GRAFANA_VERSION]: (variableName) => `Variable editor Table ArrowDown button ${variableName}`\n          },\n          tableRowDuplicateButtons: {\n            [MIN_GRAFANA_VERSION]: (variableName) => `Variable editor Table Duplicate button ${variableName}`\n          },\n          tableRowRemoveButtons: {\n            [MIN_GRAFANA_VERSION]: (variableName) => `Variable editor Table Remove button ${variableName}`\n          }\n        },\n        Edit: {\n          urlParams: {\n            \"11.3.0\": (editIndex) => `editview=variables&editIndex=${editIndex}`,\n            [MIN_GRAFANA_VERSION]: (editIndex) => `editview=templating&editIndex=${editIndex}`\n          },\n          General: {\n            headerLink: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Header link\"\n            },\n            modeLabelNew: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Header mode New\"\n            },\n            /**\n             * @deprecated\n             */\n            modeLabelEdit: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Header mode Edit\"\n            },\n            generalNameInput: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form Name field\"\n            },\n            generalNameInputV2: {\n              [MIN_GRAFANA_VERSION]: \"data-testid Variable editor Form Name field\"\n            },\n            generalTypeSelect: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form Type select\"\n            },\n            generalTypeSelectV2: {\n              [MIN_GRAFANA_VERSION]: \"data-testid Variable editor Form Type select\"\n            },\n            generalLabelInput: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form Label field\"\n            },\n            generalLabelInputV2: {\n              [MIN_GRAFANA_VERSION]: \"data-testid Variable editor Form Label field\"\n            },\n            generalHideSelect: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form Hide select\"\n            },\n            generalHideSelectV2: {\n              [MIN_GRAFANA_VERSION]: \"data-testid Variable editor Form Hide select\"\n            },\n            selectionOptionsAllowCustomValueSwitch: {\n              [MIN_GRAFANA_VERSION]: \"data-testid Variable editor Form Allow Custom Value switch\"\n            },\n            selectionOptionsMultiSwitch: {\n              \"10.4.0\": \"data-testid Variable editor Form Multi switch\",\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form Multi switch\"\n            },\n            selectionOptionsIncludeAllSwitch: {\n              \"10.4.0\": \"data-testid Variable editor Form IncludeAll switch\",\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form IncludeAll switch\"\n            },\n            selectionOptionsCustomAllInput: {\n              \"10.4.0\": \"data-testid Variable editor Form IncludeAll field\",\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form IncludeAll field\"\n            },\n            previewOfValuesOption: {\n              \"10.4.0\": \"data-testid Variable editor Preview of Values option\",\n              [MIN_GRAFANA_VERSION]: \"Variable editor Preview of Values option\"\n            },\n            submitButton: {\n              \"10.4.0\": \"data-testid Variable editor Run Query button\",\n              [MIN_GRAFANA_VERSION]: \"Variable editor Submit button\"\n            },\n            applyButton: {\n              \"9.3.0\": \"data-testid Variable editor Apply button\"\n            }\n          },\n          QueryVariable: {\n            closeButton: {\n              [MIN_GRAFANA_VERSION]: \"data-testid Query Variable editor close button\"\n            },\n            editor: {\n              [MIN_GRAFANA_VERSION]: \"data-testid Query Variable editor\"\n            },\n            previewButton: {\n              [MIN_GRAFANA_VERSION]: \"data-testid Query Variable editor preview button\"\n            },\n            queryOptionsDataSourceSelect: {\n              \"10.4.0\": \"data-testid Select a data source\",\n              \"10.0.0\": \"data-testid Data source picker select container\",\n              [MIN_GRAFANA_VERSION]: \"Data source picker select container\"\n            },\n            queryOptionsOpenButton: {\n              [MIN_GRAFANA_VERSION]: \"data-testid Query Variable editor open button\"\n            },\n            queryOptionsRefreshSelect: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form Query Refresh select\"\n            },\n            queryOptionsRefreshSelectV2: {\n              [MIN_GRAFANA_VERSION]: \"data-testid Variable editor Form Query Refresh select\"\n            },\n            queryOptionsRegExInput: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form Query RegEx field\"\n            },\n            queryOptionsRegExInputV2: {\n              [MIN_GRAFANA_VERSION]: \"data-testid Variable editor Form Query RegEx field\"\n            },\n            queryOptionsSortSelect: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form Query Sort select\"\n            },\n            queryOptionsSortSelectV2: {\n              [MIN_GRAFANA_VERSION]: \"data-testid Variable editor Form Query Sort select\"\n            },\n            queryOptionsQueryInput: {\n              \"10.4.0\": \"data-testid Variable editor Form Default Variable Query Editor textarea\"\n            },\n            queryOptionsStaticOptionsRow: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form Query Static Options row\"\n            },\n            queryOptionsStaticOptionsToggle: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form Query Static Options toggle\"\n            },\n            queryOptionsStaticOptionsLabelInput: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form Query Static Options Label input\"\n            },\n            queryOptionsStaticOptionsValueInput: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form Query Static Options Value input\"\n            },\n            queryOptionsStaticOptionsDeleteButton: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form Query Static Options Delete button\"\n            },\n            queryOptionsStaticOptionsAddButton: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form Query Static Options Add button\"\n            },\n            queryOptionsStaticOptionsOrderDropdown: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form Query Static Options Order dropdown\"\n            },\n            valueGroupsTagsEnabledSwitch: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form Query UseTags switch\"\n            },\n            valueGroupsTagsTagsQueryInput: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form Query TagsQuery field\"\n            },\n            valueGroupsTagsTagsValuesQueryInput: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form Query TagsValuesQuery field\"\n            }\n          },\n          ConstantVariable: {\n            constantOptionsQueryInput: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form Constant Query field\"\n            },\n            constantOptionsQueryInputV2: {\n              [MIN_GRAFANA_VERSION]: \"data-testid Variable editor Form Constant Query field\"\n            }\n          },\n          DatasourceVariable: {\n            datasourceSelect: {\n              [MIN_GRAFANA_VERSION]: \"data-testid datasource variable datasource type\"\n            },\n            nameFilter: {\n              [MIN_GRAFANA_VERSION]: \"data-testid datasource variable datasource name filter\"\n            }\n          },\n          TextBoxVariable: {\n            textBoxOptionsQueryInput: {\n              [MIN_GRAFANA_VERSION]: \"Variable editor Form TextBox Query field\"\n            },\n            textBoxOptionsQueryInputV2: {\n              [MIN_GRAFANA_VERSION]: \"data-testid Variable editor Form TextBox Query field\"\n            }\n          },\n          CustomVariable: {\n            customValueInput: {\n              [MIN_GRAFANA_VERSION]: \"data-testid custom-variable-input\"\n            }\n          },\n          IntervalVariable: {\n            intervalsValueInput: {\n              [MIN_GRAFANA_VERSION]: \"data-testid interval variable intervals input\"\n            },\n            autoEnabledCheckbox: {\n              \"10.4.0\": \"data-testid interval variable auto value checkbox\"\n            },\n            stepCountIntervalSelect: {\n              \"10.4.0\": \"data-testid interval variable step count input\"\n            },\n            minIntervalInput: {\n              \"10.4.0\": \"data-testid interval variable mininum interval input\"\n            }\n          },\n          GroupByVariable: {\n            dataSourceSelect: {\n              \"10.4.0\": \"data-testid Select a data source\"\n            },\n            infoText: {\n              \"10.4.0\": \"data-testid group by variable info text\"\n            },\n            modeToggle: {\n              \"10.4.0\": \"data-testid group by variable mode toggle\"\n            }\n          },\n          AdHocFiltersVariable: {\n            datasourceSelect: {\n              \"10.4.0\": \"data-testid Select a data source\"\n            },\n            infoText: {\n              \"10.4.0\": \"data-testid ad-hoc filters variable info text\"\n            },\n            modeToggle: {\n              \"11.0.0\": \"data-testid ad-hoc filters variable mode toggle\"\n            }\n          }\n        }\n      }\n    },\n    Annotations: {\n      marker: {\n        \"10.0.0\": \"data-testid annotation-marker\"\n      }\n    },\n    Rows: {\n      Repeated: {\n        ConfigSection: {\n          warningMessage: {\n            \"10.2.0\": \"data-testid Repeated rows warning message\"\n          }\n        }\n      }\n    }\n  },\n  Dashboards: {\n    url: {\n      [MIN_GRAFANA_VERSION]: \"/dashboards\"\n    },\n    dashboards: {\n      \"10.2.0\": (title) => `Dashboard search item ${title}`\n    },\n    toggleView: {\n      [MIN_GRAFANA_VERSION]: \"data-testid radio-button\"\n    }\n  },\n  SaveDashboardAsModal: {\n    newName: {\n      \"10.2.0\": \"Save dashboard title field\"\n    },\n    save: {\n      \"10.2.0\": \"Save dashboard button\"\n    }\n  },\n  SaveDashboardModal: {\n    save: {\n      \"10.2.0\": \"Dashboard settings Save Dashboard Modal Save button\"\n    },\n    saveVariables: {\n      \"10.2.0\": \"Dashboard settings Save Dashboard Modal Save variables checkbox\"\n    },\n    saveTimerange: {\n      \"10.2.0\": \"Dashboard settings Save Dashboard Modal Save timerange checkbox\"\n    },\n    saveRefresh: {\n      \"11.1.0\": \"Dashboard settings Save Dashboard Modal Save refresh checkbox\"\n    },\n    variablesWarningAlert: {\n      \"12.2.0\": \"Dashboard settings Save Dashboard Modal Save variables Variables With Errors Warning Alert\"\n    }\n  },\n  SharePanelModal: {\n    linkToRenderedImage: {\n      [MIN_GRAFANA_VERSION]: \"Link to rendered image\"\n    }\n  },\n  ShareDashboardModal: {\n    PublicDashboard: {\n      WillBePublicCheckbox: {\n        \"9.1.0\": \"data-testid public dashboard will be public checkbox\"\n      },\n      LimitedDSCheckbox: {\n        \"9.1.0\": \"data-testid public dashboard limited datasources checkbox\"\n      },\n      CostIncreaseCheckbox: {\n        \"9.1.0\": \"data-testid public dashboard cost may increase checkbox\"\n      },\n      PauseSwitch: {\n        \"9.5.0\": \"data-testid public dashboard pause switch\"\n      },\n      EnableAnnotationsSwitch: {\n        \"9.3.0\": \"data-testid public dashboard on off switch for annotations\"\n      },\n      CreateButton: {\n        \"9.5.0\": \"data-testid public dashboard create button\"\n      },\n      DeleteButton: {\n        \"9.3.0\": \"data-testid public dashboard delete button\"\n      },\n      CopyUrlInput: {\n        \"9.1.0\": \"data-testid public dashboard copy url input\"\n      },\n      CopyUrlButton: {\n        \"9.1.0\": \"data-testid public dashboard copy url button\"\n      },\n      SettingsDropdown: {\n        \"10.1.0\": \"data-testid public dashboard settings dropdown\"\n      },\n      TemplateVariablesWarningAlert: {\n        \"9.1.0\": \"data-testid public dashboard disabled template variables alert\"\n      },\n      UnsupportedDataSourcesWarningAlert: {\n        \"9.5.0\": \"data-testid public dashboard unsupported data sources alert\"\n      },\n      NoUpsertPermissionsWarningAlert: {\n        \"9.5.0\": \"data-testid public dashboard no upsert permissions alert\"\n      },\n      EnableTimeRangeSwitch: {\n        \"9.4.0\": \"data-testid public dashboard on off switch for time range\"\n      },\n      EmailSharingConfiguration: {\n        Container: {\n          \"9.5.0\": \"data-testid email sharing config container\"\n        },\n        ShareType: {\n          \"9.5.0\": \"data-testid public dashboard share type\"\n        },\n        EmailSharingInput: {\n          \"9.5.0\": \"data-testid public dashboard email sharing input\"\n        },\n        EmailSharingInviteButton: {\n          \"9.5.0\": \"data-testid public dashboard email sharing invite button\"\n        },\n        EmailSharingList: {\n          \"9.5.0\": \"data-testid public dashboard email sharing list\"\n        },\n        DeleteEmail: {\n          \"9.5.0\": \"data-testid public dashboard delete email button\"\n        },\n        ReshareLink: {\n          \"9.5.0\": \"data-testid public dashboard reshare link button\"\n        }\n      }\n    },\n    SnapshotScene: {\n      url: {\n        \"11.1.0\": (key) => `/dashboard/snapshot/${key}`\n      },\n      PublishSnapshot: {\n        \"11.1.0\": \"data-testid publish snapshot button\"\n      },\n      CopyUrlButton: {\n        \"11.1.0\": \"data-testid snapshot copy url button\"\n      },\n      CopyUrlInput: {\n        \"11.1.0\": \"data-testid snapshot copy url input\"\n      }\n    }\n  },\n  ShareDashboardDrawer: {\n    ShareInternally: {\n      container: {\n        \"11.3.0\": \"data-testid share internally drawer container\"\n      },\n      lockTimeRangeSwitch: {\n        \"11.3.0\": \"data-testid share internally lock time range switch\"\n      },\n      shortenUrlSwitch: {\n        \"11.3.0\": \"data-testid share internally shorten url switch\"\n      },\n      copyUrlButton: {\n        \"11.3.0\": \"data-testid share internally copy url button\"\n      },\n      SharePanel: {\n        preview: {\n          \"11.5.0\": \"data-testid share panel internally image generation preview\"\n        },\n        widthInput: {\n          \"11.5.0\": \"data-testid share panel internally width input\"\n        },\n        heightInput: {\n          \"11.5.0\": \"data-testid share panel internally height input\"\n        },\n        scaleFactorInput: {\n          \"11.5.0\": \"data-testid share panel internally scale factor input\"\n        },\n        generateImageButton: {\n          \"11.5.0\": \"data-testid share panel internally generate image button\"\n        },\n        downloadImageButton: {\n          \"11.5.0\": \"data-testid share panel internally download image button\"\n        }\n      }\n    },\n    ShareExternally: {\n      container: {\n        \"11.3.0\": \"data-testid share externally drawer container\"\n      },\n      publicAlert: {\n        \"11.3.0\": \"data-testid public share alert\"\n      },\n      emailSharingAlert: {\n        \"11.3.0\": \"data-testid email share alert\"\n      },\n      shareTypeSelect: {\n        \"11.3.0\": \"data-testid share externally share type select\"\n      },\n      Creation: {\n        PublicShare: {\n          createButton: {\n            \"11.3.0\": \"data-testid public share dashboard create button\"\n          },\n          cancelButton: {\n            \"11.3.0\": \"data-testid public share dashboard cancel button\"\n          }\n        },\n        EmailShare: {\n          createButton: {\n            \"11.3.0\": \"data-testid email share dashboard create button\"\n          },\n          cancelButton: {\n            \"11.3.0\": \"data-testid email share dashboard cancel button\"\n          }\n        },\n        willBePublicCheckbox: {\n          \"11.3.0\": \"data-testid share dashboard will be public checkbox\"\n        }\n      },\n      Configuration: {\n        enableTimeRangeSwitch: {\n          \"11.3.0\": \"data-testid share externally enable time range switch\"\n        },\n        enableAnnotationsSwitch: {\n          \"11.3.0\": \"data-testid share externally enable annotations switch\"\n        },\n        copyUrlButton: {\n          \"11.3.0\": \"data-testid share externally copy url button\"\n        },\n        revokeAccessButton: {\n          \"11.3.0\": \"data-testid share externally revoke access button\"\n        },\n        toggleAccessButton: {\n          \"11.3.0\": \"data-testid share externally pause or resume access button\"\n        }\n      }\n    },\n    ShareSnapshot: {\n      url: {\n        \"11.3.0\": (key) => `/dashboard/snapshot/${key}`\n      },\n      container: {\n        \"11.3.0\": \"data-testid share snapshot drawer container\"\n      },\n      publishSnapshot: {\n        \"11.3.0\": \"data-testid share snapshot publish button\"\n      },\n      copyUrlButton: {\n        \"11.3.0\": \"data-testid share snapshot copy url button\"\n      }\n    }\n  },\n  ExportDashboardDrawer: {\n    ExportAsJson: {\n      container: {\n        \"11.3.0\": \"data-testid export as json drawer container\"\n      },\n      codeEditor: {\n        \"11.3.0\": \"data-testid export as json code editor\"\n      },\n      exportExternallyToggle: {\n        \"11.3.0\": \"data-testid export as json externally switch\"\n      },\n      saveToFileButton: {\n        \"11.3.0\": \"data-testid export as json save to file button\"\n      },\n      copyToClipboardButton: {\n        \"11.3.0\": \"data-testid export as json copy to clipboard button\"\n      },\n      cancelButton: {\n        \"11.3.0\": \"data-testid export as json cancel button\"\n      }\n    }\n  },\n  PublicDashboard: {\n    page: {\n      \"9.5.0\": \"public-dashboard-page\"\n    },\n    NotAvailable: {\n      container: {\n        \"9.5.0\": \"public-dashboard-not-available\"\n      },\n      title: {\n        \"9.5.0\": \"public-dashboard-title\"\n      },\n      pausedDescription: {\n        \"9.5.0\": \"public-dashboard-paused-description\"\n      }\n    },\n    footer: {\n      \"11.0.0\": \"public-dashboard-footer\"\n    }\n  },\n  PublicDashboardScene: {\n    loadingPage: {\n      \"11.0.0\": \"public-dashboard-scene-loading-page\"\n    },\n    page: {\n      \"11.0.0\": \"public-dashboard-scene-page\"\n    },\n    controls: {\n      \"11.0.0\": \"public-dashboard-controls\"\n    }\n  },\n  RequestViewAccess: {\n    form: {\n      \"9.5.0\": \"request-view-access-form\"\n    },\n    recipientInput: {\n      \"9.5.0\": \"request-view-access-recipient-input\"\n    },\n    submitButton: {\n      \"9.5.0\": \"request-view-access-submit-button\"\n    }\n  },\n  PublicDashboardConfirmAccess: {\n    submitButton: {\n      \"10.2.0\": \"data-testid confirm-access-submit-button\"\n    }\n  },\n  Explore: {\n    url: {\n      [MIN_GRAFANA_VERSION]: \"/explore\"\n    },\n    General: {\n      container: {\n        [MIN_GRAFANA_VERSION]: \"data-testid Explore\"\n      },\n      graph: {\n        [MIN_GRAFANA_VERSION]: \"Explore Graph\"\n      },\n      table: {\n        [MIN_GRAFANA_VERSION]: \"Explore Table\"\n      },\n      scrollView: {\n        \"9.0.0\": \"data-testid explorer scroll view\"\n      },\n      addFromQueryLibrary: {\n        \"11.5.0\": \"data-testid explore add from query library button\"\n      }\n    },\n    QueryHistory: {\n      container: {\n        \"11.1.0\": \"data-testid QueryHistory\"\n      }\n    }\n  },\n  SoloPanel: {\n    url: {\n      [MIN_GRAFANA_VERSION]: (page) => `/d-solo/${page}`\n    }\n  },\n  PluginsList: {\n    page: {\n      [MIN_GRAFANA_VERSION]: \"Plugins list page\"\n    },\n    list: {\n      [MIN_GRAFANA_VERSION]: \"Plugins list\"\n    },\n    listItem: {\n      [MIN_GRAFANA_VERSION]: \"Plugins list item\"\n    },\n    signatureErrorNotice: {\n      \"10.3.0\": \"data-testid Unsigned plugins notice\",\n      [MIN_GRAFANA_VERSION]: \"Unsigned plugins notice\"\n    }\n  },\n  PluginPage: {\n    page: {\n      [MIN_GRAFANA_VERSION]: \"Plugin page\"\n    },\n    signatureInfo: {\n      \"10.3.0\": \"data-testid Plugin signature info\",\n      [MIN_GRAFANA_VERSION]: \"Plugin signature info\"\n    },\n    disabledInfo: {\n      \"10.3.0\": \"data-testid Plugin disabled info\",\n      [MIN_GRAFANA_VERSION]: \"Plugin disabled info\"\n    }\n  },\n  PlaylistForm: {\n    name: {\n      [MIN_GRAFANA_VERSION]: \"Playlist name\"\n    },\n    interval: {\n      [MIN_GRAFANA_VERSION]: \"Playlist interval\"\n    },\n    itemDelete: {\n      \"10.2.0\": \"data-testid playlist-form-delete-item\"\n    }\n  },\n  BrowseDashboards: {\n    table: {\n      body: {\n        \"10.2.0\": \"data-testid browse-dashboards-table\"\n      },\n      row: {\n        \"10.2.0\": (name) => `data-testid browse dashboards row ${name}`\n      },\n      checkbox: {\n        \"10.0.0\": (uid) => `data-testid ${uid} checkbox`\n      }\n    },\n    NewFolderForm: {\n      form: {\n        \"10.2.0\": \"data-testid new folder form\"\n      },\n      nameInput: {\n        \"10.2.0\": \"data-testid new-folder-name-input\"\n      },\n      createButton: {\n        \"10.2.0\": \"data-testid new-folder-create-button\"\n      }\n    }\n  },\n  SearchDashboards: {\n    table: {\n      \"10.2.0\": \"Search results table\"\n    }\n  },\n  Search: {\n    url: {\n      \"9.3.0\": \"/?search=openn\"\n    },\n    FolderView: {\n      url: {\n        \"9.3.0\": \"/?search=open&layout=folders\"\n      }\n    }\n  },\n  PublicDashboards: {\n    ListItem: {\n      linkButton: {\n        \"9.3.0\": \"public-dashboard-link-button\"\n      },\n      configButton: {\n        \"9.3.0\": \"public-dashboard-configuration-button\"\n      },\n      trashcanButton: {\n        \"9.3.0\": \"public-dashboard-remove-button\"\n      },\n      pauseSwitch: {\n        \"10.1.0\": \"data-testid public dashboard pause switch\"\n      }\n    }\n  },\n  UserListPage: {\n    tabs: {\n      allUsers: {\n        \"10.0.0\": \"data-testid all-users-tab\"\n      },\n      orgUsers: {\n        \"10.0.0\": \"data-testid org-users-tab\"\n      },\n      anonUserDevices: {\n        \"10.2.3\": \"data-testid anon-user-devices-tab\"\n      },\n      publicDashboardsUsers: {\n        \"10.0.0\": \"data-testid public-dashboards-users-tab\"\n      },\n      users: {\n        \"10.0.0\": \"data-testid users-tab\"\n      }\n    },\n    org: {\n      url: {\n        \"10.2.0\": \"/admin/users\",\n        \"9.5.0\": \"/org/users\"\n      }\n    },\n    admin: {\n      url: {\n        \"9.5.0\": \"/admin/users\"\n      }\n    },\n    publicDashboards: {\n      container: {\n        \"11.1.0\": \"data-testid public-dashboards-users-list\"\n      }\n    },\n    UserListAdminPage: {\n      container: {\n        \"10.0.0\": \"data-testid user-list-admin-page\"\n      }\n    },\n    UsersListPage: {\n      container: {\n        \"10.0.0\": \"data-testid users-list-page\"\n      }\n    },\n    UserAnonListPage: {\n      container: {\n        \"10.4.0\": \"data-testid user-anon-list-page\"\n      }\n    },\n    UsersListPublicDashboardsPage: {\n      container: {\n        \"10.0.0\": \"data-testid users-list-public-dashboards-page\"\n      },\n      DashboardsListModal: {\n        listItem: {\n          \"10.0.0\": (uid) => `data-testid dashboards-list-item-${uid}`\n        }\n      }\n    }\n  },\n  ProfilePage: {\n    url: {\n      \"10.2.0\": \"/profile\"\n    }\n  },\n  Plugin: {\n    url: {\n      [MIN_GRAFANA_VERSION]: (pluginId) => `/plugins/${pluginId}`\n    }\n  },\n  MigrateToCloud: {\n    url: {\n      \"11.2.0\": \"/admin/migrate-to-cloud\"\n    }\n  }\n};\n\nexport { versionedPages };\n//# sourceMappingURL=pages.mjs.map\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Protocol } from 'types/config';\n\nexport const DB_SETTINGS_LABEL_WIDTH = 18;\nexport const CONTAINER_MIN_WIDTH = '450px';\n\nexport const CONFIG_SECTION_HEADERS = [\n  { label: 'Server and encryption', id: 'server', isOpen: true, isOptional: false },\n  { label: 'Database credentials', id: 'credentials', isOpen: true, isOptional: false },\n  { label: 'TLS/SSL settings', id: 'tls', isOpen: false, isOptional: true },\n  { label: 'Additional settings', id: 'additional', isOpen: false, isOptional: true },\n  { label: 'Save & test', id: `${selectors.pages.DataSource.saveAndTest}`, isOpen: undefined, isOptional: null },\n];\n\nexport const CONFIG_SECTION_HEADERS_WITH_PDC = [\n  { label: 'Server and encryption', id: 'server', isOpen: true, isOptional: false },\n  { label: 'Database credentials', id: 'credentials', isOpen: true, isOptional: false },\n  { label: 'TLS/SSL settings', id: 'tls', isOpen: false, isOptional: true },\n  { label: 'Additional settings', id: 'additional', isOpen: false, isOptional: true },\n  { label: 'Private data source connect', id: 'pdc', isOpen: false, isOptional: true },\n  { label: 'Save & test', id: `${selectors.pages.DataSource.saveAndTest}`, isOpen: undefined, isOptional: null },\n];\n\nexport const PROTOCOL_OPTIONS = [\n  { label: 'Native', value: Protocol.Native },\n  { label: 'HTTP', value: Protocol.Http },\n];\n\nexport const getInlineLabelStyles = (theme: GrafanaTheme2, transparent = false, width?: number | 'auto') => {\n  return {\n    label: css({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      flexShrink: 0,\n      padding: theme.spacing(0, 1),\n      backgroundColor: transparent ? 'transparent' : theme.colors.background.secondary,\n      height: theme.spacing(theme.components.height.md),\n      lineHeight: theme.spacing(theme.components.height.md),\n      marginRight: theme.spacing(0.5),\n      borderRadius: theme.shape.radius.default,\n      border: 'none',\n      width: '220px',\n      color: theme.colors.text.primary,\n    }),\n  };\n};\n","import React, { ChangeEvent, useMemo, useState } from 'react';\nimport { Input, Field, SecretInput, Button, Stack, Checkbox, Box } from '@grafana/ui';\nimport { CHHttpHeader } from 'types/config';\nimport allLabels from './labelsV2';\nimport { styles } from 'styles';\nimport { selectors as allSelectors } from 'selectors';\nimport { KeyValue } from '@grafana/data';\n\ninterface HttpHeadersConfigProps {\n  headers?: CHHttpHeader[];\n  forwardGrafanaHeaders?: boolean;\n  secureFields: KeyValue<boolean>;\n  onHttpHeadersChange: (v: CHHttpHeader[]) => void;\n  onForwardGrafanaHeadersChange: (v: boolean) => void;\n}\n\nexport const HttpHeadersConfigV2 = (props: HttpHeadersConfigProps) => {\n  const { secureFields, onHttpHeadersChange } = props;\n  const configuredSecureHeaders = useConfiguredSecureHttpHeaders(secureFields);\n  const [headers, setHeaders] = useState<CHHttpHeader[]>(props.headers || []);\n  const [forwardGrafanaHeaders, setForwardGrafanaHeaders] = useState<boolean>(props.forwardGrafanaHeaders || false);\n  const labels = allLabels.components.Config.HttpHeadersConfig;\n  const selectors = allSelectors.components.Config.HttpHeaderConfig;\n\n  const addHeader = () => setHeaders([...headers, { name: '', value: '', secure: false }]);\n\n  const removeHeader = (index: number) => {\n    const nextHeaders: CHHttpHeader[] = [...headers.slice(0, index), ...headers.slice(index + 1)];\n    setHeaders(nextHeaders);\n    onHttpHeadersChange(nextHeaders);\n  };\n\n  const updateHeader = (index: number, header: CHHttpHeader) => {\n    const nextHeaders: CHHttpHeader[] = [\n      ...headers.slice(0, index),\n      { ...header, name: header.name.trim() },\n      ...headers.slice(index + 1),\n    ];\n    setHeaders(nextHeaders);\n    onHttpHeadersChange(nextHeaders);\n  };\n\n  const updateForwardGrafanaHeaders = (value: boolean) => {\n    setForwardGrafanaHeaders(value);\n    props.onForwardGrafanaHeadersChange(value);\n  };\n\n  return (\n    <div style={{ marginLeft: '30px' }}>\n      <Field label={labels.label}>\n        <>\n          {headers.map((header, index) => (\n            <HttpHeaderEditorV2\n              key={header.name + index}\n              name={header.name}\n              value={header.value}\n              secure={header.secure}\n              isSecureConfigured={configuredSecureHeaders.has(header.name)}\n              onHeaderChange={(h) => updateHeader(index, h)}\n              onRemove={() => removeHeader(index)}\n            />\n          ))}\n          <Button\n            data-testid={selectors.addHeaderButton}\n            icon=\"plus\"\n            variant=\"secondary\"\n            size=\"sm\"\n            onClick={addHeader}\n            className={styles.Common.smallBtn}\n          >\n            {labels.addHeaderLabel}\n          </Button>\n        </>\n      </Field>\n\n      {/* Use 'checked' instead of 'value' */}\n      <Checkbox\n        label={labels.forwardGrafanaHeaders.label}\n        checked={forwardGrafanaHeaders}\n        onChange={(e) => updateForwardGrafanaHeaders(e.currentTarget.checked)}\n      />\n    </div>\n  );\n};\n\ninterface HttpHeaderEditorProps {\n  name: string;\n  value: string;\n  secure: boolean;\n  isSecureConfigured: boolean;\n  onHeaderChange: (v: CHHttpHeader) => void;\n  onRemove?: () => void;\n}\n\nconst HttpHeaderEditorV2 = (props: HttpHeaderEditorProps) => {\n  const { onHeaderChange, onRemove } = props;\n  const [name, setName] = useState<string>(props.name);\n  const [value, setValue] = useState<string>(props.value);\n  const [secure, setSecure] = useState<boolean>(props.secure);\n  const [isSecureConfigured, setSecureConfigured] = useState<boolean>(props.isSecureConfigured);\n\n  const labels = allLabels.components.Config.HttpHeadersConfig;\n  const selectors = allSelectors.components.Config.HttpHeaderConfig;\n\n  const onUpdate = () => {\n    onHeaderChange({ name, value, secure });\n  };\n\n  const headerValueLabel = secure ? labels.secureHeaderValueLabel : labels.insecureHeaderValueLabel;\n\n  return (\n    <div data-testid={selectors.headerEditor} style={{ marginTop: '10px' }}>\n      <Stack direction=\"row\" alignItems=\"center\" gap={1}>\n        <Field label={labels.headerNameLabel} aria-label={labels.headerNameLabel}>\n          <Input\n            data-testid={selectors.headerNameInput}\n            value={name}\n            disabled={isSecureConfigured}\n            placeholder={labels.headerNamePlaceholder}\n            onChange={(e: ChangeEvent<HTMLInputElement>) => setName(e.target.value)}\n            onBlur={onUpdate}\n          />\n        </Field>\n\n        {/* Avoid 'grow'; use flex prop that Box supports */}\n        <Box flex=\"1 1 auto\">\n          <Field label={headerValueLabel} aria-label={headerValueLabel}>\n            {secure ? (\n              <SecretInput\n                data-testid={selectors.headerValueInput}\n                placeholder={labels.secureHeaderValueLabel}\n                value={value}\n                isConfigured={isSecureConfigured}\n                onReset={() => setSecureConfigured(false)}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => setValue(e.target.value)}\n                onBlur={onUpdate}\n              />\n            ) : (\n              <Input\n                data-testid={selectors.headerValueInput}\n                value={value}\n                placeholder={labels.insecureHeaderValueLabel}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => setValue(e.target.value)}\n                onBlur={onUpdate}\n              />\n            )}\n          </Field>\n        </Box>\n\n        {!isSecureConfigured && (\n          // Use 'checked' instead of 'value'\n          <Checkbox\n            label={labels.secureLabel}\n            checked={secure}\n            onChange={(e) => setSecure(e.currentTarget.checked)}\n            data-testid={selectors.forwardGrafanaHeadersSwitch}\n          />\n        )}\n\n        {onRemove && (\n          <Button\n            data-testid={selectors.removeHeaderButton}\n            className={styles.Common.smallBtn}\n            variant=\"destructive\"\n            size=\"sm\"\n            icon=\"trash-alt\"\n            onClick={onRemove}\n          />\n        )}\n      </Stack>\n    </div>\n  );\n};\n\n/**\n * Returns a Set of all secured headers that are configured\n */\nexport const useConfiguredSecureHttpHeaders = (secureJsonFields: KeyValue<boolean>): Set<string> => {\n  return useMemo(() => {\n    const secureHeaders = new Set<string>();\n    for (const key in secureJsonFields) {\n      if (key.startsWith('secureHttpHeaders.') && secureJsonFields[key]) {\n        secureHeaders.add(key.substring(key.indexOf('.') + 1));\n      }\n    }\n    return secureHeaders;\n  }, [secureJsonFields]);\n};\n","import React, { useState } from 'react';\nimport { DataSourcePluginOptionsEditorProps, onUpdateDatasourceJsonDataOption } from '@grafana/data';\nimport { Field, Input, Button, useTheme2 } from '@grafana/ui';\nimport allLabels from './labelsV2';\nimport { CHConfig, CHSecureConfig, Protocol } from 'types/config';\nimport { css } from '@emotion/css';\nimport { onHttpHeadersChange } from 'views/CHConfigEditorHooks';\nimport { HttpHeadersConfigV2 } from './HttpHeadersConfigV2';\n\nexport interface HttpProtocolSettingsSectionProps extends DataSourcePluginOptionsEditorProps<CHConfig, CHSecureConfig> {\n  onSwitchToggle: (\n    key: keyof Pick<\n      CHConfig,\n      'secure' | 'validateSql' | 'enableSecureSocksProxy' | 'forwardGrafanaHeaders' | 'enableRowLimit'\n    >,\n    value: boolean\n  ) => void;\n}\n\nexport const HttpProtocolSettingsSection = (props: HttpProtocolSettingsSectionProps) => {\n  const { options, onOptionsChange, onSwitchToggle } = props;\n  const { jsonData, secureJsonFields } = options;\n  const labels = allLabels.components.Config.ConfigEditor;\n\n  const [optionalHttpIsOpen, setOptionalHttpIsOpen] = useState(\n    Boolean(jsonData.httpHeaders?.length || jsonData.forwardGrafanaHeaders)\n  );\n\n  const theme = useTheme2();\n  const styles = {\n    httpSettingsSection: css({ marginTop: theme.spacing(2) }),\n    httpSettingsButton: css({ marginBottom: theme.spacing(2) }),\n  };\n\n  return jsonData.protocol === Protocol.Http ? (\n    <div className={styles.httpSettingsSection}>\n      <Field label={labels.path.label} description={labels.path.tooltip}>\n        <Input\n          value={jsonData.path ?? '/'}\n          name=\"path\"\n          onChange={onUpdateDatasourceJsonDataOption(props, 'path')}\n          aria-label={labels.path.label}\n          placeholder={labels.path.placeholder}\n        />\n      </Field>\n      <Button\n        icon={optionalHttpIsOpen ? 'angle-down' : 'angle-right'}\n        size=\"sm\"\n        variant=\"secondary\"\n        onClick={() => setOptionalHttpIsOpen(!optionalHttpIsOpen)}\n        className={styles.httpSettingsButton}\n      >\n        Optional HTTP settings\n      </Button>\n      {optionalHttpIsOpen && (\n        <HttpHeadersConfigV2\n          headers={jsonData.httpHeaders}\n          forwardGrafanaHeaders={jsonData.forwardGrafanaHeaders}\n          secureFields={secureJsonFields}\n          onHttpHeadersChange={(headers) => onHttpHeadersChange(headers, options, onOptionsChange)}\n          onForwardGrafanaHeadersChange={(forward) => onSwitchToggle('forwardGrafanaHeaders', forward)}\n        />\n      )}\n    </div>\n  ) : null;\n};\n","import React from 'react';\nimport { DataSourcePluginOptionsEditorProps, GrafanaTheme2, onUpdateDatasourceJsonDataOption } from '@grafana/data';\nimport {\n  Box,\n  CollapsableSection,\n  TextLink,\n  Field,\n  Input,\n  Toggletip,\n  IconButton,\n  RadioButtonGroup,\n  Text,\n  useStyles2,\n  Checkbox,\n} from '@grafana/ui';\nimport allLabels from './labelsV2';\nimport { CHConfig, CHSecureConfig, Protocol } from 'types/config';\nimport { CONFIG_SECTION_HEADERS, CONTAINER_MIN_WIDTH, PROTOCOL_OPTIONS } from './constants';\nimport { css } from '@emotion/css';\nimport {\n  trackClickhouseConfigV2HostInput,\n  trackClickhouseConfigV2NativeHttpToggleClicked,\n  trackClickhouseConfigV2PortInput,\n  trackClickhouseConfigV2SecureConnectionChecked,\n} from './tracking';\nimport { HttpProtocolSettingsSection } from './HttpProtocolSettingsSection';\n\nexport interface Props extends DataSourcePluginOptionsEditorProps<CHConfig, CHSecureConfig> {}\n\nexport const ServerAndEncryptionSection = (props: Props) => {\n  const { options, onOptionsChange } = props;\n  const { jsonData } = options;\n  const labels = allLabels.components.Config.ConfigEditor;\n  const defaultPort = jsonData.secure\n    ? jsonData.protocol === Protocol.Native\n      ? labels.serverPort.secureNativePort\n      : labels.serverPort.secureHttpPort\n    : jsonData.protocol === Protocol.Native\n      ? labels.serverPort.insecureNativePort\n      : labels.serverPort.insecureHttpPort;\n  const portDescription = `${labels.serverPort.tooltip} (default for ${jsonData.secure ? 'secure' : ''} ${jsonData.protocol}: ${defaultPort})`;\n  const styles = useStyles2(getStyles);\n\n  const onProtocolToggle = (protocol: Protocol) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        protocol: protocol,\n      },\n    });\n  };\n\n  const onPortChange = (port: string) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        port: +port,\n      },\n    });\n  };\n\n  const onSwitchToggle = (\n    key: keyof Pick<\n      CHConfig,\n      'secure' | 'validateSql' | 'enableSecureSocksProxy' | 'forwardGrafanaHeaders' | 'enableRowLimit'\n    >,\n    value: boolean\n  ) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        [key]: value,\n      },\n    });\n  };\n\n  return (\n    <Box\n      borderStyle=\"solid\"\n      borderColor=\"weak\"\n      padding={2}\n      marginBottom={4}\n      id={`${CONFIG_SECTION_HEADERS[0].id}`}\n      minWidth={CONTAINER_MIN_WIDTH}\n    >\n      <CollapsableSection\n        label={<Text variant=\"h3\">1. {CONFIG_SECTION_HEADERS[0].label}</Text>}\n        isOpen={!!CONFIG_SECTION_HEADERS[0].isOpen}\n      >\n        <Text variant=\"body\" color=\"secondary\">\n          Enter the server address of your Clickhouse instance. Then select your protocol, port and security options. If\n          you need further guidance, visit the{' '}\n          <TextLink\n            href=\"https://grafana.com/grafana/plugins/grafana-clickhouse-datasource/\"\n            icon=\"external-link-alt\"\n            external\n          >\n            Grafana docs\n          </TextLink>\n        </Text>\n        <Field required label={labels.serverAddress.label} style={{ marginTop: '30px' }}>\n          <Input\n            name=\"host\"\n            value={jsonData.host || ''}\n            onChange={(e) => onUpdateDatasourceJsonDataOption(props, 'host')(e)}\n            label={labels.serverAddress.label}\n            aria-label={labels.serverAddress.label}\n            data-testid=\"clickhouse-v2-config-host-input\"\n            placeholder={labels.serverAddress.placeholder}\n            onBlur={trackClickhouseConfigV2HostInput}\n          />\n        </Field>\n        <div className={styles.protocolPortRow}>\n          <div className={styles.protocolSection}>\n            <div className={styles.protocolLabel}>\n              <Text variant=\"bodySmall\" weight=\"bold\">\n                {labels.protocol.label}\n              </Text>\n              <Toggletip\n                theme=\"info\"\n                placement=\"top\"\n                content={\n                  <div className={styles.toggleTipText}>\n                    <Text>\n                      ClickHouse supports two server protocols: Native TCP and HTTP. Both protocols can be secured with\n                      TLS.\n                      <br />\n                      <br />\n                      <TextLink href=\"https://clickhouse.com/docs/interfaces/tcp\" variant=\"bodySmall\" external>\n                        Native TCP\n                      </TextLink>{' '}\n                      is the default and recommended option.\n                      <br />\n                      <TextLink href=\"https://clickhouse.com/docs/interfaces/http\" variant=\"bodySmall\" external>\n                        HTTP\n                      </TextLink>{' '}\n                      is for servers configured to accept HTTP connections.\n                    </Text>\n                  </div>\n                }\n              >\n                <IconButton\n                  name=\"question-circle\"\n                  aria-label=\"More info about Protocol\"\n                  size=\"xs\"\n                  className={styles.toggleTipIcon}\n                />\n              </Toggletip>\n            </div>\n            <Field label=\"\" description={<div className={styles.toggleTipText}>{labels.protocol.tooltip}</div>}>\n              <RadioButtonGroup<Protocol>\n                options={PROTOCOL_OPTIONS}\n                value={jsonData.protocol || Protocol.Native}\n                onChange={(e) => {\n                  trackClickhouseConfigV2NativeHttpToggleClicked({ nativeHttpToggle: e });\n                  onProtocolToggle(e!);\n                }}\n              />\n            </Field>\n          </div>\n          <div className={styles.portSection}>\n            <Field required label={labels.serverPort.label} description={portDescription}>\n              <Input\n                name=\"port\"\n                type=\"number\"\n                value={jsonData.port || ''}\n                onChange={(e) => onPortChange(e.currentTarget.value)}\n                label={labels.serverPort.label}\n                aria-label={labels.serverPort.label}\n                data-testid=\"clickhouse-v2-config-port-input\"\n                placeholder={defaultPort}\n                onBlur={(e) => trackClickhouseConfigV2PortInput({ port: e.currentTarget.value })}\n              />\n            </Field>\n          </div>\n        </div>\n        <div className={styles.secureToggle}>\n          <Checkbox\n            label={labels.secure.label}\n            description={labels.secure.tooltip}\n            checked={jsonData.secure || false}\n            onChange={(e) => {\n              trackClickhouseConfigV2SecureConnectionChecked({ secureConnection: e.currentTarget.checked });\n              onSwitchToggle('secure', e.currentTarget.checked);\n            }}\n          />\n        </div>\n        <HttpProtocolSettingsSection onSwitchToggle={onSwitchToggle} {...props} />\n      </CollapsableSection>\n    </Box>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  protocolPortRow: css({\n    display: 'flex',\n    alignItems: 'center',\n  }),\n  protocolLabel: css({\n    display: 'flex',\n    height: 15,\n    width: '205px',\n  }),\n  protocolSection: css({\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    gap: theme.spacing(0),\n    marginRight: theme.spacing(5),\n  }),\n  toggleTipIcon: css({\n    marginLeft: theme.spacing(0.5),\n    padding: 0,\n  }),\n  portSection: css({\n    width: '100%',\n  }),\n  toggleTipText: css({\n    whiteSpace: 'pre-line',\n  }),\n  secureToggle: css({\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1),\n  }),\n});\n","import React from 'react';\nimport { Box, InlineField, LinkButton, Space, Stack, Text, useStyles2 } from '@grafana/ui';\nimport { CONFIG_SECTION_HEADERS, CONFIG_SECTION_HEADERS_WITH_PDC } from './constants';\nimport { css } from '@emotion/css';\ninterface LeftSidebarProps {\n  pdcInjected: boolean;\n}\n\nexport const LeftSidebar = ({ pdcInjected }: LeftSidebarProps) => {\n  const headers = pdcInjected ? CONFIG_SECTION_HEADERS_WITH_PDC : CONFIG_SECTION_HEADERS;\n  const styles = useStyles2(getStyles);\n\n  return (\n    <Stack>\n      <Box flex={1} marginY={10}>\n        <Box height=\"75px\"></Box>\n        <Text element=\"h4\">Connect data source</Text>\n        <Box paddingTop={2}>\n          {headers.map((header, index) => (\n            <div key={index} data-testid={`${header.label}-sidebar`}>\n              <InlineField label={`${index + 1}`} className={styles.inlineField} labelWidth={3} grow>\n                <LinkButton\n                  variant=\"secondary\"\n                  fill=\"text\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    const target = document.getElementById(header.id);\n                    if (target) {\n                      const y = target.getBoundingClientRect().top + window.scrollY - 60;\n                      window.scrollTo({ top: y, behavior: 'smooth' });\n                    }\n                  }}\n                >\n                  <div className={styles.sidebarText}>\n                    <div className={styles.sidebarLabel}>{header.label}</div>\n                    {header.isOptional && (\n                      <div className={styles.sidebarOptional}>\n                        <Text color=\"secondary\" variant=\"bodySmall\">\n                          optional\n                        </Text>\n                      </div>\n                    )}\n                  </div>\n                </LinkButton>\n              </InlineField>\n              <Space v={1} />\n            </div>\n          ))}\n        </Box>\n      </Box>\n    </Stack>\n  );\n};\n\nconst getStyles = () => ({\n  inlineField: css({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  }),\n  sidebarText: css({\n    display: 'flex',\n    flexDirection: 'column',\n  }),\n  sidebarLabel: css({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 0,\n    lineHeight: 1,\n  }),\n  sidebarOptional: css({\n    marginTop: 0,\n    marginBottom: 0,\n    lineHeight: 1,\n  }),\n});\n","import { ConfigSubSection } from 'components/experimental/ConfigSection';\nimport allLabels from './labelsV2';\nimport React, { ChangeEvent, useState } from 'react';\nimport { DataSourcePluginOptionsEditorProps, onUpdateDatasourceJsonDataOption } from '@grafana/data';\nimport { AliasTableEntry, CHConfig, CHCustomSetting, CHLogsConfig, CHSecureConfig, CHTracesConfig } from 'types/config';\nimport { AliasTableConfig } from 'components/configEditor/AliasTableConfig';\nimport { DefaultDatabaseTableConfig } from 'components/configEditor/DefaultDatabaseTableConfig';\nimport { LogsConfig } from 'components/configEditor/LogsConfig';\nimport { QuerySettingsConfig } from 'components/configEditor/QuerySettingsConfig';\nimport { TracesConfig } from 'components/configEditor/TracesConfig';\nimport { config } from '@grafana/runtime';\nimport { TimeUnit } from 'types/queryBuilder';\nimport { useConfigDefaults } from 'views/CHConfigEditorHooks';\nimport { gte as versionGte } from 'semver';\nimport {\n  Field,\n  Divider,\n  Stack,\n  Input,\n  Button,\n  Switch,\n  Box,\n  CollapsableSection,\n  Text,\n  Badge,\n  useStyles2,\n} from '@grafana/ui';\nimport { CONFIG_SECTION_HEADERS, CONTAINER_MIN_WIDTH } from './constants';\nimport {\n  trackClickhouseConfigV2CustomSettingClicked,\n  trackClickhouseConfigV2DefaultDbInput,\n  trackClickhouseConfigV2DefaultTableInput,\n  trackClickhouseConfigV2EnableRowLimitToggle,\n  trackClickhouseConfigV2LogsConfig,\n  trackClickhouseConfigV2QuerySettings,\n  trackClickhouseConfigV2TracesConfig,\n} from './tracking';\nimport { css } from '@emotion/css';\n\nexport interface Props extends DataSourcePluginOptionsEditorProps<CHConfig, CHSecureConfig> {}\n\nexport const AdditionalSettingsSection = (props: Props) => {\n  const { options, onOptionsChange } = props;\n  const { jsonData } = options;\n  const labels = allLabels.components.Config.ConfigEditor;\n  const styles = useStyles2(getStyles);\n\n  useConfigDefaults(options, onOptionsChange);\n\n  const [customSettings, setCustomSettings] = useState(jsonData.customSettings || []);\n\n  const onLogsConfigChange = (key: keyof CHLogsConfig, value: string | boolean | string[]) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        logs: {\n          ...options.jsonData.logs,\n          [key]: value,\n        },\n      },\n    });\n  };\n\n  const onUpdateLogsConfig = (key: keyof CHLogsConfig, value: string | boolean | string[]) => {\n    trackClickhouseConfigV2LogsConfig({ [key]: value });\n    onLogsConfigChange(key, value);\n  };\n\n  const onTracesConfigChange = (key: keyof CHTracesConfig, value: string | boolean) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        traces: {\n          ...options.jsonData.traces,\n          durationUnit: options.jsonData.traces?.durationUnit || TimeUnit.Nanoseconds,\n          [key]: value,\n        },\n      },\n    });\n  };\n\n  const onUpdateTracesConfig = (key: keyof CHTracesConfig, value: string | boolean) => {\n    trackClickhouseConfigV2TracesConfig({ [key]: value });\n    onTracesConfigChange(key, value);\n  };\n\n  const onAliasTableConfigChange = (aliasTables: AliasTableEntry[]) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        aliasTables,\n      },\n    });\n  };\n\n  const onCustomSettingsChange = (customSettings: CHCustomSetting[]) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        customSettings: customSettings.filter((s) => !!s.setting && !!s.value),\n      },\n    });\n  };\n\n  return (\n    <Box\n      borderStyle=\"solid\"\n      borderColor=\"weak\"\n      padding={2}\n      marginBottom={4}\n      id={`${CONFIG_SECTION_HEADERS[3].id}`}\n      minWidth={CONTAINER_MIN_WIDTH}\n    >\n      <CollapsableSection\n        label={\n          <>\n            <Text variant=\"h3\">4. {CONFIG_SECTION_HEADERS[3].label}</Text>\n            <Badge text=\"optional\" color=\"blue\" className={styles.badge} />\n          </>\n        }\n        isOpen={!!CONFIG_SECTION_HEADERS[3].isOpen}\n      >\n        <DefaultDatabaseTableConfig\n          defaultDatabase={jsonData.defaultDatabase}\n          defaultTable={jsonData.defaultTable}\n          onDefaultDatabaseChange={(e) => {\n            trackClickhouseConfigV2DefaultDbInput();\n            onUpdateDatasourceJsonDataOption(props, 'defaultDatabase')(e);\n          }}\n          onDefaultTableChange={(e) => {\n            trackClickhouseConfigV2DefaultTableInput();\n            onUpdateDatasourceJsonDataOption(props, 'defaultTable')(e);\n          }}\n        />\n        <Divider />\n        <QuerySettingsConfig\n          connMaxLifetime={jsonData.connMaxLifetime}\n          dialTimeout={jsonData.dialTimeout}\n          maxIdleConns={jsonData.maxIdleConns}\n          maxOpenConns={jsonData.maxOpenConns}\n          queryTimeout={jsonData.queryTimeout}\n          validateSql={jsonData.validateSql}\n          onDialTimeoutChange={(e) => {\n            trackClickhouseConfigV2QuerySettings({ dialTimeout: Number(e.currentTarget.value) });\n            onUpdateDatasourceJsonDataOption(props, 'dialTimeout')(e);\n          }}\n          onQueryTimeoutChange={(e) => {\n            trackClickhouseConfigV2QuerySettings({ queryTimeout: Number(e.currentTarget.value) });\n            onUpdateDatasourceJsonDataOption(props, 'queryTimeout')(e);\n          }}\n          onConnMaxLifetimeChange={(e) => {\n            trackClickhouseConfigV2QuerySettings({ connMaxLifetime: Number(e.currentTarget.value) });\n            onUpdateDatasourceJsonDataOption(props, 'connMaxLifetime')(e);\n          }}\n          onConnMaxIdleConnsChange={(e) => {\n            trackClickhouseConfigV2QuerySettings({ maxIdleConns: Number(e.currentTarget.value) });\n            onUpdateDatasourceJsonDataOption(props, 'maxIdleConns')(e);\n          }}\n          onConnMaxOpenConnsChange={(e) => {\n            trackClickhouseConfigV2QuerySettings({ maxOpenConns: Number(e.currentTarget.value) });\n            onUpdateDatasourceJsonDataOption(props, 'maxOpenConns')(e);\n          }}\n          onValidateSqlChange={(e) => {\n            trackClickhouseConfigV2QuerySettings({ validateSql: e.currentTarget.checked });\n            onUpdateDatasourceJsonDataOption(props, 'validateSql')(e);\n          }}\n        />\n        <Divider />\n        <LogsConfig\n          logsConfig={jsonData.logs}\n          onDefaultDatabaseChange={(db) => onUpdateLogsConfig('defaultDatabase', db)}\n          onDefaultTableChange={(table) => onUpdateLogsConfig('defaultTable', table)}\n          onOtelEnabledChange={(v) => onUpdateLogsConfig('otelEnabled', v)}\n          onOtelVersionChange={(v) => onUpdateLogsConfig('otelVersion', v)}\n          onTimeColumnChange={(c) => onUpdateLogsConfig('timeColumn', c)}\n          onLevelColumnChange={(c) => onUpdateLogsConfig('levelColumn', c)}\n          onMessageColumnChange={(c) => onUpdateLogsConfig('messageColumn', c)}\n          onSelectContextColumnsChange={(c) => onUpdateLogsConfig('selectContextColumns', c)}\n          onContextColumnsChange={(c) => onUpdateLogsConfig('contextColumns', c)}\n        />\n\n        <Divider />\n        <TracesConfig\n          tracesConfig={jsonData.traces}\n          onDefaultDatabaseChange={(db) => onUpdateTracesConfig('defaultDatabase', db)}\n          onDefaultTableChange={(table) => onUpdateTracesConfig('defaultTable', table)}\n          onOtelEnabledChange={(v) => onUpdateTracesConfig('otelEnabled', v)}\n          onOtelVersionChange={(v) => onUpdateTracesConfig('otelVersion', v)}\n          onTraceIdColumnChange={(c) => onUpdateTracesConfig('traceIdColumn', c)}\n          onSpanIdColumnChange={(c) => onUpdateTracesConfig('spanIdColumn', c)}\n          onOperationNameColumnChange={(c) => onUpdateTracesConfig('operationNameColumn', c)}\n          onParentSpanIdColumnChange={(c) => onUpdateTracesConfig('parentSpanIdColumn', c)}\n          onServiceNameColumnChange={(c) => onUpdateTracesConfig('serviceNameColumn', c)}\n          onDurationColumnChange={(c) => onUpdateTracesConfig('durationColumn', c)}\n          onDurationUnitChange={(c) => onUpdateTracesConfig('durationUnit', c)}\n          onStartTimeColumnChange={(c) => onUpdateTracesConfig('startTimeColumn', c)}\n          onTagsColumnChange={(c) => onUpdateTracesConfig('tagsColumn', c)}\n          onServiceTagsColumnChange={(c) => onUpdateTracesConfig('serviceTagsColumn', c)}\n          onKindColumnChange={(c) => onUpdateTracesConfig('kindColumn', c)}\n          onStatusCodeColumnChange={(c) => onUpdateTracesConfig('statusCodeColumn', c)}\n          onStatusMessageColumnChange={(c) => onUpdateTracesConfig('statusMessageColumn', c)}\n          onStateColumnChange={(c) => onUpdateTracesConfig('stateColumn', c)}\n          onInstrumentationLibraryNameColumnChange={(c) => onUpdateTracesConfig('instrumentationLibraryNameColumn', c)}\n          onInstrumentationLibraryVersionColumnChange={(c) =>\n            onUpdateTracesConfig('instrumentationLibraryVersionColumn', c)\n          }\n          onFlattenNestedChange={(c) => onUpdateTracesConfig('flattenNested', c)}\n          onEventsColumnPrefixChange={(c) => onUpdateTracesConfig('traceEventsColumnPrefix', c)}\n          onLinksColumnPrefixChange={(c) => onUpdateTracesConfig('traceLinksColumnPrefix', c)}\n        />\n        <Divider />\n        <AliasTableConfig aliasTables={jsonData.aliasTables} onAliasTablesChange={onAliasTableConfigChange} />\n        <Divider />\n        <Field label={labels.enableRowLimit.label} description={labels.enableRowLimit.tooltip}>\n          <Switch\n            value={jsonData.enableRowLimit || false}\n            data-testid={labels.enableRowLimit.testid}\n            onChange={(e) => {\n              trackClickhouseConfigV2EnableRowLimitToggle({ rowLimitEnabled: e.currentTarget.checked });\n              onUpdateDatasourceJsonDataOption(props, 'enableRowLimit')(e);\n            }}\n          />\n        </Field>\n        {config.secureSocksDSProxyEnabled && versionGte(config.buildInfo.version, '10.0.0') && (\n          <Field label={labels.secureSocksProxy.label} description={labels.secureSocksProxy.tooltip}>\n            <Switch\n              value={jsonData.enableSecureSocksProxy || false}\n              onChange={(e) => onUpdateDatasourceJsonDataOption(props, 'enableSecureSocksProxy')(e)}\n            />\n          </Field>\n        )}\n        <ConfigSubSection title=\"Custom Settings\">\n          {customSettings.map(({ setting, value }, i) => {\n            return (\n              <Stack key={i} direction=\"row\">\n                <Field label={`Setting`} aria-label={`Setting`}>\n                  <Input\n                    value={setting}\n                    placeholder={'Setting'}\n                    onChange={(changeEvent: ChangeEvent<HTMLInputElement>) => {\n                      let newSettings = customSettings.concat();\n                      newSettings[i] = { setting: changeEvent.target.value, value };\n                      setCustomSettings(newSettings);\n                    }}\n                    onBlur={() => onCustomSettingsChange(customSettings)}\n                  ></Input>\n                </Field>\n                <Field label={'Value'} aria-label={`Value`}>\n                  <Input\n                    value={value}\n                    placeholder={'Value'}\n                    onChange={(changeEvent: ChangeEvent<HTMLInputElement>) => {\n                      let newSettings = customSettings.concat();\n                      newSettings[i] = { setting, value: changeEvent.target.value };\n                      setCustomSettings(newSettings);\n                    }}\n                    onBlur={() => {\n                      onCustomSettingsChange(customSettings);\n                    }}\n                  ></Input>\n                </Field>\n              </Stack>\n            );\n          })}\n          <Button\n            variant=\"secondary\"\n            icon=\"plus\"\n            type=\"button\"\n            onClick={() => {\n              trackClickhouseConfigV2CustomSettingClicked();\n              setCustomSettings([...customSettings, { setting: '', value: '' }]);\n            }}\n          >\n            Add custom setting\n          </Button>\n        </ConfigSubSection>\n      </CollapsableSection>\n    </Box>\n  );\n};\n\nconst getStyles = () => ({\n  badge: css({\n    marginLeft: 'auto',\n  }),\n});\n","import { Box, CollapsableSection, Field, Input, SecretInput, Text, TextLink, useStyles2 } from '@grafana/ui';\nimport React from 'react';\nimport { CONFIG_SECTION_HEADERS, CONTAINER_MIN_WIDTH } from './constants';\nimport {\n  DataSourcePluginOptionsEditorProps,\n  onUpdateDatasourceJsonDataOption,\n  onUpdateDatasourceSecureJsonDataOption,\n} from '@grafana/data';\nimport allLabels from './labelsV2';\nimport { CHConfig, CHSecureConfig } from 'types/config';\nimport { css } from '@emotion/css';\nimport {\n  trackClickhouseConfigV2DatabaseCredentialsPasswordInput,\n  trackClickhouseConfigV2DatabaseCredentialsUserInput,\n} from './tracking';\n\nexport interface Props extends DataSourcePluginOptionsEditorProps<CHConfig, CHSecureConfig> {}\n\nexport const DatabaseCredentialsSection = (props: Props) => {\n  const { options, onOptionsChange } = props;\n  const { jsonData, secureJsonFields } = options;\n  const secureJsonData = (options.secureJsonData || {}) as CHSecureConfig;\n  const labels = allLabels.components.Config.ConfigEditor;\n  const styles = useStyles2(getStyles);\n\n  const onResetPassword = () => {\n    onOptionsChange({\n      ...options,\n      secureJsonFields: {\n        ...options.secureJsonFields,\n        password: false,\n      },\n      secureJsonData: {\n        ...options.secureJsonData,\n        password: '',\n      },\n    });\n  };\n\n  return (\n    <Box\n      borderStyle=\"solid\"\n      borderColor=\"weak\"\n      padding={2}\n      marginBottom={4}\n      id={`${CONFIG_SECTION_HEADERS[1].id}`}\n      minWidth={CONTAINER_MIN_WIDTH}\n    >\n      <CollapsableSection\n        label={<Text variant=\"h3\">2. {CONFIG_SECTION_HEADERS[1].label}</Text>}\n        isOpen={!!CONFIG_SECTION_HEADERS[1].isOpen}\n      >\n        <div className={styles.credentialsSection}>\n          <Field\n            label={labels.username.label}\n            description={\n              <>\n                {labels.username.tooltip}{' '}\n                <TextLink\n                  variant=\"bodySmall\"\n                  href=\"https://clickhouse.com/docs/en/operations/settings/permissions-for-queries#readonly\"\n                  external\n                >\n                  a read-only user\n                </TextLink>\n              </>\n            }\n            required\n          >\n            <Input\n              name=\"user\"\n              value={jsonData.username || ''}\n              onChange={onUpdateDatasourceJsonDataOption(props, 'username')}\n              label={labels.username.label}\n              aria-label={labels.username.label}\n              placeholder={labels.username.placeholder}\n              onBlur={trackClickhouseConfigV2DatabaseCredentialsUserInput}\n            />\n          </Field>\n          <Field label={labels.password.label} description={labels.password.tooltip}>\n            <SecretInput\n              name=\"pwd\"\n              label={labels.password.label}\n              aria-label={labels.password.label}\n              placeholder={labels.password.placeholder}\n              value={secureJsonData.password || ''}\n              isConfigured={(secureJsonFields && secureJsonFields.password) as boolean}\n              onReset={onResetPassword}\n              onChange={onUpdateDatasourceSecureJsonDataOption(props, 'password')}\n              onBlur={trackClickhouseConfigV2DatabaseCredentialsPasswordInput}\n            />\n          </Field>\n        </div>\n      </CollapsableSection>\n    </Box>\n  );\n};\n\nconst getStyles = () => ({\n  credentialsSection: css({\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: '8px',\n\n    '& > div': {\n      flex: '1 1 300px',\n      minWidth: 0,\n    },\n  }),\n});\n","import { DataSourcePluginOptionsEditorProps, onUpdateDatasourceJsonDataOption } from '@grafana/data';\nimport { Box, CollapsableSection, CertificationKey, Text, useStyles2, Checkbox, Stack, Badge } from '@grafana/ui';\nimport React from 'react';\nimport { CHConfig, CHSecureConfig } from 'types/config';\nimport { CONFIG_SECTION_HEADERS, CONTAINER_MIN_WIDTH } from './constants';\nimport allLabels from './labelsV2';\nimport { css } from '@emotion/css';\nimport {\n  trackClickhouseConfigV2SkipTLSVerifyToggleClicked,\n  trackClickhouseConfigV2TLSClientAuthToggleClicked,\n  trackClickhouseConfigV2WithCACertToggleClicked,\n} from './tracking';\n\nexport interface Props extends DataSourcePluginOptionsEditorProps<CHConfig, CHSecureConfig> {}\n\nexport const TLSSSLSettingsSection = (props: Props) => {\n  const { options, onOptionsChange } = props;\n  const { jsonData, secureJsonFields } = options;\n  const secureJsonData = (options.secureJsonData || {}) as CHSecureConfig;\n  const labels = allLabels.components.Config.ConfigEditor;\n  const hasTLSCACert = secureJsonFields && secureJsonFields.tlsCACert;\n  const hasTLSClientCert = secureJsonFields && secureJsonFields.tlsClientCert;\n  const hasTLSClientKey = secureJsonFields && secureJsonFields.tlsClientKey;\n  const styles = useStyles2(getStyles);\n\n  const onCertificateChangeFactory = (key: keyof Omit<CHSecureConfig, 'password'>, value: string) => {\n    onOptionsChange({\n      ...options,\n      secureJsonData: {\n        ...secureJsonData,\n        [key]: value,\n      },\n    });\n  };\n  const onResetClickFactory = (key: keyof Omit<CHSecureConfig, 'password'>) => {\n    onOptionsChange({\n      ...options,\n      secureJsonFields: {\n        ...secureJsonFields,\n        [key]: false,\n      },\n      secureJsonData: {\n        ...secureJsonData,\n        [key]: '',\n      },\n    });\n  };\n\n  return (\n    <Box\n      borderStyle=\"solid\"\n      borderColor=\"weak\"\n      padding={2}\n      marginBottom={4}\n      id={`${CONFIG_SECTION_HEADERS[2].id}`}\n      minWidth={CONTAINER_MIN_WIDTH}\n    >\n      <CollapsableSection\n        label={\n          <>\n            <Text variant=\"h3\">3. {CONFIG_SECTION_HEADERS[2].label}</Text>\n            <Badge text=\"optional\" color=\"blue\" className={styles.badge} />\n          </>\n        }\n        isOpen={!!(jsonData.tlsSkipVerify || jsonData.tlsAuth || jsonData.tlsAuthWithCACert)}\n      >\n        <Text variant=\"body\" color=\"secondary\">\n          TLS/SSL certificates are used to prove identity and encrypt traffic between Grafana and ClickHouse.\n        </Text>\n        <div className={styles.contentSection}>\n          <Stack\n            direction={jsonData.tlsAuth || jsonData.tlsAuthWithCACert ? 'column' : 'row'}\n            gap={3}\n            alignItems=\"flex-start\"\n          >\n            <Checkbox\n              className={css({ margin: 0 })}\n              label={labels.tlsSkipVerify.label}\n              value={jsonData.tlsSkipVerify || false}\n              onChange={(e) => {\n                trackClickhouseConfigV2SkipTLSVerifyToggleClicked({ skipTlsVerifyToggle: e.currentTarget.checked });\n                onUpdateDatasourceJsonDataOption(props, 'tlsSkipVerify')(e);\n              }}\n            />\n            <Checkbox\n              className={css({ margin: 0 })}\n              label={labels.tlsClientAuth.label}\n              value={jsonData.tlsAuth || false}\n              onChange={(e) => {\n                trackClickhouseConfigV2TLSClientAuthToggleClicked({ clientAuthToggle: e.currentTarget.checked });\n                onUpdateDatasourceJsonDataOption(props, 'tlsAuth')(e);\n              }}\n            />\n            {jsonData.tlsAuth && (\n              <div className={styles.certsSection}>\n                <CertificationKey\n                  hasCert={!!hasTLSClientCert}\n                  onChange={(e) => onCertificateChangeFactory('tlsClientCert', e.currentTarget.value)}\n                  placeholder={labels.tlsClientCert.placeholder}\n                  label={labels.tlsClientCert.label}\n                  onClick={() => onResetClickFactory('tlsClientCert')}\n                  data-testid=\"tls-client-cert\"\n                />\n                <CertificationKey\n                  hasCert={!!hasTLSClientKey}\n                  placeholder={labels.tlsClientKey.placeholder}\n                  label={labels.tlsClientKey.label}\n                  onChange={(e) => onCertificateChangeFactory('tlsClientKey', e.currentTarget.value)}\n                  onClick={() => onResetClickFactory('tlsClientKey')}\n                  data-testid=\"tls-client-key\"\n                />\n              </div>\n            )}\n            <Checkbox\n              label={labels.tlsAuthWithCACert.label}\n              value={jsonData.tlsAuthWithCACert || false}\n              onChange={(e) => {\n                trackClickhouseConfigV2WithCACertToggleClicked({ caCertToggle: e.currentTarget.checked });\n                onUpdateDatasourceJsonDataOption(props, 'tlsAuthWithCACert')(e);\n              }}\n            />\n            <div className={styles.certsSection}>\n              {jsonData.tlsAuthWithCACert && (\n                <CertificationKey\n                  hasCert={!!hasTLSCACert}\n                  onChange={(e) => onCertificateChangeFactory('tlsCACert', e.currentTarget.value)}\n                  placeholder={labels.tlsCACert.placeholder}\n                  label={labels.tlsCACert.label}\n                  onClick={() => onResetClickFactory('tlsCACert')}\n                  data-testid=\"tls-ca-cert\"\n                />\n              )}\n            </div>\n          </Stack>\n        </div>\n      </CollapsableSection>\n    </Box>\n  );\n};\n\nconst getStyles = () => ({\n  contentSection: css({\n    marginTop: '30px',\n  }),\n  optionsRow: css({\n    display: 'flex',\n    gap: '50px',\n  }),\n  certsSection: css({\n    marginTop: '10px',\n  }),\n  badge: css({\n    marginLeft: 'auto',\n  }),\n});\n","import React from 'react';\nimport { DataSourcePluginOptionsEditorProps, GrafanaTheme2 } from '@grafana/data';\nimport { Alert, Box, Stack, Text, TextLink, useStyles2 } from '@grafana/ui';\nimport { CHConfig, CHSecureConfig } from 'types/config';\nimport { ServerAndEncryptionSection } from './ServerAndEncryptionSection';\nimport { css } from '@emotion/css';\nimport { LeftSidebar } from './LeftSidebar';\nimport { CONTAINER_MIN_WIDTH } from './constants';\nimport { trackInfluxDBConfigV2FeedbackButtonClicked } from './tracking';\nimport { AdditionalSettingsSection } from './AdditionalSettingsSection';\nimport { DatabaseCredentialsSection } from './DatabaseCredentialsSection';\nimport { TLSSSLSettingsSection } from './TLSSSLSettingsSection';\n\nexport interface ConfigEditorProps extends DataSourcePluginOptionsEditorProps<CHConfig, CHSecureConfig> {}\n\nexport const ConfigEditor: React.FC<ConfigEditorProps> = (props) => {\n  const { options, onOptionsChange } = props;\n  const styles = useStyles2(getStyles);\n\n  return (\n    <Stack justifyContent=\"space-between\">\n      <div className={`${styles.hideOnSmallScreen} ${styles.leftSticky}`}>\n        <Box width=\"100%\" flex=\"1 1 auto\">\n          <LeftSidebar pdcInjected={Boolean(options?.jsonData?.pdcInjected)} />\n        </Box>\n      </div>\n      <Box width=\"60%\" flex=\"1 1 auto\" minWidth={CONTAINER_MIN_WIDTH}>\n        <div className={styles.requiredFields}>\n          <Alert\n            severity=\"info\"\n            title=\"You are viewing a new design for the Clickhouse configuration settings.\"\n            className={styles.alertHeight}\n          >\n            <>\n              <TextLink\n                href=\"https://docs.google.com/forms/d/e/1FAIpQLSd5YOYxfW-CU0tQnfFA08fkymGlmZ8XcFRMniE5lScIsmdt5w/viewform\"\n                external\n                onClick={trackInfluxDBConfigV2FeedbackButtonClicked}\n              >\n                Share your thoughts\n              </TextLink>{' '}\n              to help us make it even better.\n            </>\n          </Alert>\n          <Text variant=\"bodySmall\" color=\"secondary\">\n            Fields marked with * are required\n          </Text>\n        </div>\n        <ServerAndEncryptionSection onOptionsChange={onOptionsChange} options={options} />\n        <DatabaseCredentialsSection onOptionsChange={onOptionsChange} options={options} />\n        <TLSSSLSettingsSection onOptionsChange={onOptionsChange} options={options} />\n        <AdditionalSettingsSection onOptionsChange={onOptionsChange} options={options} />\n      </Box>\n      <Box width=\"20%\" flex=\"0 0 20%\">\n        {/* TODO: Right sidebar */}\n      </Box>\n    </Stack>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  hideOnSmallScreen: css({\n    width: '250px',\n    flex: '0 0 250px',\n    [theme.breakpoints.down('sm')]: {\n      display: 'none',\n    },\n  }),\n  leftSticky: css({\n    position: 'sticky',\n    top: '100px',\n    alignSelf: 'flex-start',\n    maxHeight: 'calc(100vh - 100px)',\n    overflowY: 'auto',\n  }),\n  requiredFields: css({\n    marginBottom: theme.spacing(2),\n  }),\n  alertHeight: css({\n    height: '100px',\n  }),\n});\n","import {\n  astVisitor,\n  Expr,\n  ExprBinary,\n  ExprCall,\n  ExprInteger,\n  ExprList,\n  ExprRef,\n  ExprString,\n  ExprUnary,\n  FromTable,\n  SelectedColumn,\n} from 'pgsql-ast-parser';\nimport { isString } from 'lodash';\nimport {\n  BooleanFilter,\n  AggregateColumn,\n  AggregateType,\n  BuilderMode,\n  DateFilter,\n  DateFilterWithoutValue,\n  Filter,\n  FilterOperator,\n  MultiFilter,\n  NullFilter,\n  NumberFilter,\n  OrderBy,\n  QueryBuilderOptions,\n  ColumnHint,\n  SelectedColumn as CHSelectedColumn,\n  StringFilter,\n  QueryType,\n} from 'types/queryBuilder';\nimport { sqlToStatement } from 'data/ast';\nimport { getColumnByHint, logColumnHintsToAlias } from 'data/sqlGenerator';\nimport { Datasource } from 'data/CHDatasource';\nimport { tryApplyColumnHints } from 'data/utils';\n\nexport const isBooleanType = (type: string): boolean => {\n  return ['boolean'].includes(type?.toLowerCase());\n};\n\nexport const isNumberType = (type: string): boolean => {\n  return ['int', 'float', 'decimal'].some((t) => type?.toLowerCase().includes(t));\n};\n\nexport const isDateType = (type: string): boolean => {\n  const normalizedName = type?.toLowerCase();\n  return normalizedName?.startsWith('date') || normalizedName?.startsWith('nullable(date');\n};\nexport const isDateTimeType = (type: string): boolean => {\n  const normalizedName = type?.toLowerCase();\n  return normalizedName?.startsWith('datetime') || normalizedName?.startsWith('nullable(datetime');\n};\nexport const isStringType = (type: string): boolean => {\n  return !(isBooleanType(type) || isNumberType(type) || isDateType(type));\n};\nexport const isNullFilter = (filter: Filter): filter is NullFilter => {\n  return [FilterOperator.IsNull, FilterOperator.IsNotNull].includes(filter.operator);\n};\nexport const isBooleanFilter = (filter: Filter): filter is BooleanFilter => {\n  return isBooleanType(filter.type);\n};\nexport const isNumberFilter = (filter: Filter): filter is NumberFilter => {\n  return isNumberType(filter.type);\n};\nexport const isDateFilterWithOutValue = (filter: Filter): filter is DateFilterWithoutValue => {\n  return (\n    isDateType(filter.type) &&\n    [FilterOperator.WithInGrafanaTimeRange, FilterOperator.OutsideGrafanaTimeRange].includes(filter.operator)\n  );\n};\nexport const isDateFilter = (filter: Filter): filter is DateFilter => {\n  return isDateType(filter.type);\n};\nexport const isStringFilter = (filter: Filter): filter is StringFilter => {\n  return isStringType(filter.type) && ![FilterOperator.In, FilterOperator.NotIn].includes(filter.operator);\n};\nexport const isMultiFilter = (filter: Filter): filter is MultiFilter => {\n  return isStringType(filter.type) && [FilterOperator.In, FilterOperator.NotIn].includes(filter.operator);\n};\n\nexport function getQueryOptionsFromSql(\n  sql: string,\n  queryType?: QueryType,\n  datasource?: Datasource\n): QueryBuilderOptions {\n  const ast = sqlToStatement(sql);\n  if (!ast) {\n    throw new Error('The query is not valid SQL.');\n  }\n  if (ast.type !== 'select') {\n    throw new Error('The query is not a select statement.');\n  }\n  if (!ast.from || ast.from.length !== 1) {\n    throw new Error(`The query has too many 'FROM' clauses.`);\n  }\n  if (ast.from[0].type !== 'table') {\n    throw new Error(`The 'FROM' clause is not a table.`);\n  }\n  const fromTable = ast.from[0] as FromTable;\n\n  const columnsAndAggregates = getAggregatesFromAst(ast.columns || null);\n\n  const builderOptions = {\n    database: fromTable.name.schema || '',\n    table: fromTable.name.name || '',\n    queryType: queryType || QueryType.Table,\n    mode: BuilderMode.List,\n    columns: [],\n    aggregates: [],\n  } as QueryBuilderOptions;\n\n  if (columnsAndAggregates.columns.length > 0) {\n    builderOptions.columns = columnsAndAggregates.columns || [];\n  }\n\n  // Reconstruct column hints based off of known column names / aliases\n  if (queryType === QueryType.Logs) {\n    tryApplyColumnHints(builderOptions.columns!, datasource?.getDefaultLogsColumns()); // Try match default log columns\n    tryApplyColumnHints(builderOptions.columns!, logColumnHintsToAlias); // Try match Grafana aliases\n  } else if (queryType === QueryType.Traces) {\n    tryApplyColumnHints(builderOptions.columns!, datasource?.getDefaultTraceColumns());\n  }\n\n  if (columnsAndAggregates.aggregates.length > 0) {\n    builderOptions.mode = BuilderMode.Aggregate;\n    builderOptions.aggregates = columnsAndAggregates.aggregates;\n  }\n\n  const timeColumn = getColumnByHint(builderOptions, ColumnHint.Time);\n  if (!queryType && timeColumn) {\n    builderOptions.queryType = QueryType.TimeSeries;\n    if (builderOptions.aggregates?.length || 0) {\n      builderOptions.mode = BuilderMode.Trend;\n    }\n  }\n\n  if (ast.where) {\n    builderOptions.filters = getFiltersFromAst(ast.where, timeColumn?.name || '');\n  }\n\n  const orderBy = ast.orderBy\n    ?.map<OrderBy>((ob) => {\n      if (ob.by.type !== 'ref') {\n        return {} as OrderBy;\n      }\n      return { name: ob.by.name, dir: ob.order } as OrderBy;\n    })\n    .filter((x) => x.name);\n\n  if (orderBy && orderBy.length > 0) {\n    builderOptions.orderBy = orderBy!;\n  }\n\n  builderOptions.limit = ast.limit?.limit?.type === 'integer' ? ast.limit?.limit.value : undefined;\n\n  const groupBy = ast.groupBy\n    ?.map((gb) => {\n      if (gb.type !== 'ref') {\n        return '';\n      }\n      return gb.name;\n    })\n    .filter((x) => x !== '');\n  if (groupBy && groupBy.length > 0) {\n    builderOptions.groupBy = groupBy;\n  }\n\n  return builderOptions;\n}\n\nfunction getFiltersFromAst(expr: Expr, timeField: string): Filter[] {\n  const filters: Filter[] = [];\n  let i = 0;\n  let notFlag = false;\n  const visitor = astVisitor((map) => ({\n    expr: (e) => {\n      switch (e?.type) {\n        case 'binary':\n          notFlag = getBinaryFilter(e, filters, i, notFlag);\n          map.super().expr(e);\n          break;\n        case 'ref':\n          ({ i, notFlag } = getRefFilter(e, filters, i, notFlag));\n          break;\n        case 'string':\n          i = getStringFilter(filters, i, e);\n          break;\n        case 'integer':\n          i = getIntFilter(filters, i, e);\n          break;\n        case 'unary':\n          notFlag = getUnaryFilter(e, notFlag, i, filters);\n          map.super().expr(e);\n          break;\n        case 'call':\n          i = getCallFilter(e, timeField, filters, i);\n          break;\n        case 'list':\n          i = getListFilter(filters, i, e);\n          break;\n        default:\n          console.error(`${e?.type} is not supported. This is likely a bug.`);\n          break;\n      }\n    },\n  }));\n  visitor.expr(expr);\n  return filters;\n}\n\nfunction getRefFilter(e: ExprRef, filters: Filter[], i: number, notFlag: boolean): { i: number; notFlag: boolean } {\n  if (e.name?.toLowerCase() === '$__fromtime' && filters[i].operator === FilterOperator.GreaterThanOrEqual) {\n    if (notFlag) {\n      filters[i].operator = FilterOperator.OutsideGrafanaTimeRange;\n      notFlag = false;\n    } else {\n      filters[i].operator = FilterOperator.WithInGrafanaTimeRange;\n    }\n    filters[i].type = 'datetime';\n    i++;\n    return { i, notFlag };\n  }\n  if (e.name?.toLowerCase() === '$__totime') {\n    filters.splice(i, 1);\n    return { i, notFlag };\n  }\n  if (!filters[i].key) {\n    filters[i].key = e.name;\n    if (filters[i].operator === FilterOperator.IsNotNull) {\n      i++;\n    }\n    return { i, notFlag };\n  }\n  filters[i] = { ...filters[i], value: [e.name], type: 'string' } as Filter;\n  i++;\n  return { i, notFlag };\n}\n\nfunction getListFilter(filters: Filter[], i: number, e: ExprList): number {\n  filters[i] = {\n    ...filters[i],\n    value: e.expressions.map((x) => {\n      const k = x as ExprString;\n      return k.value;\n    }),\n    type: 'string',\n  } as Filter;\n  i++;\n  return i;\n}\n\nfunction getCallFilter(e: ExprCall, timeField: string, filters: Filter[], i: number): number {\n  const val = `${e.function.name}(${e.args.map<string>((x) => (x as ExprRef).name).join(',')})`;\n  //do not add the timeFilter that is used when using time series and remove the condition\n  if (val === `$__timefilter(${timeField})`) {\n    filters.splice(i, 1);\n    return i;\n  }\n  if (val.startsWith('$__timefilter(')) {\n    filters[i] = {\n      ...filters[i],\n      key: (e.args[0] as ExprRef).name,\n      operator: FilterOperator.WithInGrafanaTimeRange,\n      type: 'datetime',\n    } as Filter;\n    i++;\n    return i;\n  }\n  filters[i] = { ...filters[i], value: val, type: 'datetime' } as Filter;\n  if (!val) {\n    i++;\n  }\n  return i;\n}\n\nfunction getUnaryFilter(e: ExprUnary, notFlag: boolean, i: number, filters: Filter[]): boolean {\n  if (e.op === 'NOT') {\n    return true;\n  }\n  if (i === 0) {\n    filters.unshift({} as Filter);\n  }\n  filters[i].operator = e.op as FilterOperator;\n  return notFlag;\n}\n\nfunction getStringFilter(filters: Filter[], i: number, e: ExprString): number {\n  if (!filters[i].key) {\n    filters[i] = { ...filters[i], key: e.value } as Filter;\n    return i;\n  }\n  filters[i] = { ...filters[i], value: e.value, type: 'string' } as Filter;\n  i++;\n  return i;\n}\n\nfunction getIntFilter(filters: Filter[], i: number, e: ExprInteger): number {\n  if (!filters[i].key) {\n    filters[i] = { ...filters[i], key: e.value.toString() } as Filter;\n    return i;\n  }\n  filters[i] = { ...filters[i], value: e.value, type: 'int' } as Filter;\n  i++;\n  return i;\n}\n\nfunction getBinaryFilter(e: ExprBinary, filters: Filter[], i: number, notFlag: boolean): boolean {\n  if (e.op === 'AND' || e.op === 'OR') {\n    filters.unshift({\n      condition: e.op,\n    } as Filter);\n  } else if (Object.values(FilterOperator).find((x) => e.op === x)) {\n    if (i === 0) {\n      filters.unshift({} as Filter);\n    } else if (!filters[i]) {\n      filters.push({ condition: 'AND' } as Filter);\n    }\n\n    filters[i].operator = e.op as FilterOperator;\n    if (notFlag && filters[i].operator === FilterOperator.Like) {\n      filters[i].operator = FilterOperator.NotLike;\n      notFlag = false;\n    }\n  }\n  return notFlag;\n}\n\nfunction selectCallFunc(s: SelectedColumn): [AggregateColumn | string, string | undefined] {\n  if (s.expr.type !== 'call') {\n    return [{} as AggregateColumn, undefined];\n  }\n  let fields = s.expr.args.map((x) => {\n    if (x.type !== 'ref') {\n      return '';\n    }\n    return x.name;\n  });\n  if (fields.length > 1) {\n    return ['', undefined];\n  }\n  if (Object.values(AggregateType).includes(s.expr.function.name.toLowerCase() as AggregateType)) {\n    return [\n      {\n        aggregateType: s.expr.function.name as AggregateType,\n        column: fields[0],\n        alias: s.alias?.name,\n      } as AggregateColumn,\n      s.alias?.name,\n    ];\n  }\n  return [fields[0], s.alias?.name];\n}\n\nfunction getAggregatesFromAst(selectClauses: SelectedColumn[] | null): {\n  columns: CHSelectedColumn[];\n  aggregates: AggregateColumn[];\n} {\n  if (!selectClauses) {\n    return { columns: [], aggregates: [] };\n  }\n\n  const columns: CHSelectedColumn[] = [];\n  const aggregates: AggregateColumn[] = [];\n\n  for (let s of selectClauses) {\n    switch (s.expr.type) {\n      case 'ref':\n        columns.push({ name: s.expr.name, alias: s.alias?.name });\n        break;\n      case 'call':\n        const [columnOrAggregate, alias] = selectCallFunc(s);\n        if (!columnOrAggregate) {\n          break;\n        }\n\n        if (isString(columnOrAggregate)) {\n          columns.push({ name: columnOrAggregate, type: 'datetime', alias, hint: ColumnHint.Time });\n        } else {\n          aggregates.push(columnOrAggregate);\n        }\n        break;\n    }\n  }\n\n  return { columns, aggregates };\n}\n\nexport const operMap = new Map<string, FilterOperator>([\n  ['equals', FilterOperator.Equals],\n  ['contains', FilterOperator.Like],\n]);\n\nexport function getOper(v: string): FilterOperator {\n  return operMap.get(v) || FilterOperator.Equals;\n}\n","import React, { useState } from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { RadioButtonGroup, ConfirmModal, InlineFormLabel } from '@grafana/ui';\nimport { getQueryOptionsFromSql } from '../queryBuilder/utils';\nimport { generateSql } from 'data/sqlGenerator';\nimport labels from 'labels';\nimport { EditorType, CHQuery, defaultCHBuilderQuery } from 'types/sql';\nimport { QueryBuilderOptions } from 'types/queryBuilder';\nimport { mapQueryTypeToGrafanaFormat } from 'data/utils';\nimport { Datasource } from 'data/CHDatasource';\n\ninterface CHEditorTypeSwitcherProps {\n  query: CHQuery;\n  onChange: (query: CHQuery) => void;\n  onRunQuery: () => void;\n  datasource?: Datasource;\n}\n\nconst options: Array<SelectableValue<EditorType>> = [\n  { label: labels.types.EditorType.sql, value: EditorType.SQL },\n  { label: labels.types.EditorType.builder, value: EditorType.Builder },\n];\n\n/**\n * Component for switching between the SQL and Query Builder editors.\n */\nexport const EditorTypeSwitcher = (props: CHEditorTypeSwitcherProps) => {\n  const { datasource, query, onChange } = props;\n  const { label, tooltip, switcher, cannotConvert } = labels.components.EditorTypeSwitcher;\n  const editorType: EditorType = query.editorType || EditorType.Builder;\n  const [confirmModalState, setConfirmModalState] = useState<boolean>(false);\n  const [cannotConvertModalState, setCannotConvertModalState] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const onEditorTypeChange = (editorType: EditorType, confirmed = false) => {\n    // TODO: component state has updated, but not local state.\n    if (query.editorType === EditorType.SQL && editorType === EditorType.Builder && !confirmed) {\n      try {\n        getQueryOptionsFromSql(query.rawSql, query.queryType, datasource);\n        setConfirmModalState(true);\n      } catch (err) {\n        setCannotConvertModalState(true);\n        setErrorMessage((err as Error).message);\n      }\n    } else {\n      let builderOptions: QueryBuilderOptions;\n      switch (query.editorType) {\n        case EditorType.Builder:\n          builderOptions = query.builderOptions;\n          break;\n        case EditorType.SQL:\n          try {\n            builderOptions = getQueryOptionsFromSql(query.rawSql, query.queryType, datasource) as QueryBuilderOptions;\n          } catch (err) {\n            builderOptions = defaultCHBuilderQuery.builderOptions;\n          }\n          break;\n        default:\n          builderOptions = defaultCHBuilderQuery.builderOptions;\n          break;\n      }\n\n      if (editorType === EditorType.SQL) {\n        onChange({\n          ...query,\n          editorType: EditorType.SQL,\n          queryType: builderOptions.queryType,\n          rawSql: generateSql(builderOptions),\n          format: mapQueryTypeToGrafanaFormat(builderOptions.queryType),\n          meta: { builderOptions },\n        });\n      } else if (editorType === EditorType.Builder) {\n        onChange({\n          ...query,\n          editorType: EditorType.Builder,\n          queryType: builderOptions.queryType,\n          rawSql: generateSql(builderOptions),\n          builderOptions,\n        });\n      }\n    }\n  };\n  const onConfirmEditorTypeChange = () => {\n    onEditorTypeChange(EditorType.Builder, true);\n    setConfirmModalState(false);\n    setCannotConvertModalState(false);\n  };\n  return (\n    <span>\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <RadioButtonGroup options={options} value={editorType} onChange={(e) => onEditorTypeChange(e)} />\n      <ConfirmModal\n        isOpen={confirmModalState}\n        title={switcher.title}\n        body={switcher.body}\n        confirmText={switcher.confirmText}\n        dismissText={switcher.dismissText}\n        icon=\"exclamation-triangle\"\n        onConfirm={onConfirmEditorTypeChange}\n        onDismiss={() => setConfirmModalState(false)}\n      />\n      <ConfirmModal\n        title={cannotConvert.title}\n        body={`${errorMessage}\\n${cannotConvert.message}`}\n        isOpen={cannotConvertModalState}\n        icon=\"exclamation-triangle\"\n        onConfirm={onConfirmEditorTypeChange}\n        confirmText={switcher.confirmText}\n        onDismiss={() => setCannotConvertModalState(false)}\n      />\n    </span>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { InlineFormLabel, MultiSelect } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { TableColumn, SelectedColumn } from 'types/queryBuilder';\nimport labels from 'labels';\nimport { selectors } from 'selectors';\nimport { styles } from 'styles';\n\ninterface ColumnsEditorProps {\n  allColumns: readonly TableColumn[];\n  selectedColumns: SelectedColumn[];\n  onSelectedColumnsChange: (selectedColumns: SelectedColumn[]) => void;\n  disabled?: boolean;\n  showAllOption?: boolean;\n}\n\nfunction getCustomColumns(columnNames: string[], allColumns: readonly TableColumn[]): Array<SelectableValue<string>> {\n  const columnNamesSet = new Set(columnNames);\n  return allColumns.filter((c) => columnNamesSet.has(c.name)).map((c) => ({ label: c.label || c.name, value: c.name }));\n}\n\nconst allColumnName = '*';\n\nexport const ColumnsEditor = (props: ColumnsEditorProps) => {\n  const { allColumns, selectedColumns, onSelectedColumnsChange, disabled, showAllOption } = props;\n  const [customColumns, setCustomColumns] = useState<Array<SelectableValue<string>>>([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const allColumnNames = allColumns.map((c) => ({ label: c.label || c.name, value: c.name }));\n  if (showAllOption) {\n    allColumnNames.push({ label: allColumnName, value: allColumnName });\n  }\n  const selectedColumnNames = (selectedColumns || []).map((c) => ({ label: c.alias || c.name, value: c.name }));\n  const { label, tooltip } = labels.components.ColumnsEditor;\n\n  const options = [...allColumnNames, ...customColumns];\n\n  useEffect(() => {\n    if (allColumns.length === 0) {\n      return;\n    }\n\n    const columnNames = selectedColumns.map((c) => c.name);\n    const customColumns = getCustomColumns(columnNames, allColumns);\n    setCustomColumns(customColumns);\n  }, [allColumns, selectedColumns]);\n\n  const onChange = (selected: Array<SelectableValue<string>>): void => {\n    setIsOpen(false);\n    const selectedColumnNames = new Set<string>(selected.map((s) => s.value!));\n    const customColumnNames = new Set<string>(customColumns.map((c) => c.value!));\n    const columnMap = new Map<string, TableColumn>();\n    const currentColumnMap = new Map<string, SelectedColumn>();\n    allColumns.forEach((c) => columnMap.set(c.name, c));\n    selectedColumns.forEach((c) => currentColumnMap.set(c.name, c));\n\n    const excludeAllColumn = selectedColumnNames.size > 1;\n    const nextSelectedColumns: SelectedColumn[] = [];\n    for (let columnName of selectedColumnNames) {\n      if (excludeAllColumn && columnName === allColumnName) {\n        continue;\n      }\n\n      const tableColumn = columnMap.get(columnName);\n      const existingColumn = currentColumnMap.get(columnName);\n\n      if (existingColumn) {\n        nextSelectedColumns.push(existingColumn);\n      } else {\n        nextSelectedColumns.push({\n          name: columnName,\n          type: tableColumn?.type || 'String',\n          custom: customColumnNames.has(columnName),\n          alias: tableColumn?.label || columnName,\n        });\n      }\n    }\n\n    onSelectedColumnsChange(nextSelectedColumns);\n  };\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <div\n        data-testid={selectors.components.QueryBuilder.ColumnsEditor.multiSelectWrapper}\n        className={styles.Common.selectWrapper}\n      >\n        <MultiSelect<string>\n          disabled={disabled}\n          options={options}\n          value={selectedColumnNames}\n          isOpen={isOpen}\n          onOpenMenu={() => setIsOpen(true)}\n          onCloseMenu={() => setIsOpen(false)}\n          onChange={onChange}\n          allowCustomValue={true}\n          menuPlacement={'bottom'}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { InlineFormLabel, Select } from '@grafana/ui';\nimport { ColumnHint, SelectedColumn, TableColumn } from 'types/queryBuilder';\nimport { styles } from 'styles';\n\ninterface ColumnSelectProps {\n  allColumns: readonly TableColumn[];\n  selectedColumn: SelectedColumn | undefined;\n  onColumnChange: (c: SelectedColumn | undefined) => void;\n  columnFilterFn?: (c: TableColumn) => boolean;\n  columnHint?: ColumnHint;\n  label: string;\n  tooltip: string;\n  disabled?: boolean;\n  invalid?: boolean;\n  wide?: boolean;\n  inline?: boolean;\n  clearable?: boolean;\n}\n\nconst defaultFilterFn = () => true;\n\nexport const ColumnSelect = (props: ColumnSelectProps) => {\n  const {\n    allColumns,\n    selectedColumn,\n    onColumnChange,\n    columnFilterFn,\n    columnHint,\n    label,\n    tooltip,\n    disabled,\n    invalid,\n    wide,\n    inline,\n    clearable,\n  } = props;\n  const selectedColumnName = selectedColumn?.name;\n  const columns: Array<SelectableValue<string>> = allColumns\n    .filter(columnFilterFn || defaultFilterFn)\n    .map((c) => ({ label: c.label || c.name, value: c.name }));\n\n  // Select component WILL NOT display the value if it isn't present in the options.\n  let staleOption = false;\n  if (selectedColumn && !columns.find((c) => c.value === selectedColumn.name)) {\n    columns.push({ label: selectedColumn.alias || selectedColumn.name, value: selectedColumn.name });\n    staleOption = true;\n  }\n\n  const onChange = (selected: SelectableValue<string | undefined>) => {\n    if (!selected || !selected.value) {\n      onColumnChange(undefined);\n      return;\n    }\n\n    const column = allColumns.find((c) => c.name === selected!.value)!;\n    const nextColumn: SelectedColumn = {\n      name: column?.name || selected!.value,\n      type: column?.type,\n      hint: columnHint,\n    };\n\n    if (column && column.label !== undefined) {\n      nextColumn.alias = column.label;\n    }\n\n    onColumnChange(nextColumn);\n  };\n\n  const labelStyle = 'query-keyword ' + (inline ? styles.QueryEditor.inlineField : '');\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={wide ? 12 : 8} className={labelStyle} tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Select<string | undefined>\n        disabled={disabled}\n        invalid={invalid || staleOption}\n        options={columns}\n        value={selectedColumnName}\n        placeholder={selectedColumnName || undefined}\n        onChange={onChange}\n        width={wide ? 25 : 20}\n        menuPlacement={'bottom'}\n        isClearable={clearable === undefined || clearable}\n        allowCustomValue\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { Button, InlineFormLabel, Select } from '@grafana/ui';\nimport { OrderBy, OrderByDirection, QueryBuilderOptions, TableColumn } from 'types/queryBuilder';\nimport allLabels from 'labels';\nimport { styles } from 'styles';\nimport { isAggregateQuery } from 'data/sqlGenerator';\n\ninterface OrderByItemProps {\n  columnOptions: Array<SelectableValue<string>>;\n  index: number;\n  orderByItem: OrderBy;\n  updateOrderByItem: (index: number, orderByItem: OrderBy) => void;\n  removeOrderByItem: (index: number) => void;\n}\n\nconst sortOptions = [\n  { label: 'ASC', value: OrderByDirection.ASC },\n  { label: 'DESC', value: OrderByDirection.DESC },\n];\n\nconst OrderByItem = (props: OrderByItemProps) => {\n  const { columnOptions, index, orderByItem, updateOrderByItem, removeOrderByItem } = props;\n\n  return (\n    <>\n      <Select\n        disabled={Boolean(orderByItem.hint)}\n        placeholder={orderByItem.hint ? allLabels.types.ColumnHint[orderByItem.hint] : undefined}\n        value={orderByItem.hint ? undefined : orderByItem.name}\n        className={styles.Common.inlineSelect}\n        width={36}\n        options={columnOptions}\n        onChange={(e) => updateOrderByItem(index, { ...orderByItem, name: e.value! })}\n        allowCustomValue\n        menuPlacement={'bottom'}\n      />\n      <Select<OrderByDirection>\n        value={orderByItem.dir}\n        className={styles.Common.inlineSelect}\n        width={12}\n        options={sortOptions}\n        onChange={(e) => updateOrderByItem(index, { ...orderByItem, dir: e.value! })}\n        menuPlacement={'bottom'}\n      />\n      <Button\n        data-testid=\"query-builder-orderby-remove-button\"\n        className={styles.Common.smallBtn}\n        variant=\"destructive\"\n        size=\"sm\"\n        icon=\"trash-alt\"\n        onClick={() => removeOrderByItem(index)}\n      />\n    </>\n  );\n};\n\ninterface OrderByEditorProps {\n  orderByOptions: Array<SelectableValue<string>>;\n  orderBy: OrderBy[];\n  onOrderByChange: (orderBy: OrderBy[]) => void;\n}\nexport const OrderByEditor = (props: OrderByEditorProps) => {\n  const { orderByOptions, orderBy, onOrderByChange } = props;\n  const { label, tooltip, addLabel } = allLabels.components.OrderByEditor;\n\n  const addOrderByItem = () => {\n    const nextOrderBy: OrderBy[] = orderBy.slice();\n    nextOrderBy.push({ name: orderByOptions[0]?.value!, dir: OrderByDirection.ASC });\n    onOrderByChange(nextOrderBy);\n  };\n  const removeOrderByItem = (index: number) => {\n    const nextOrderBy: OrderBy[] = orderBy.slice();\n    nextOrderBy.splice(index, 1);\n    onOrderByChange(nextOrderBy);\n  };\n  const updateOrderByItem = (index: number, orderByItem: OrderBy) => {\n    const nextOrderBy: OrderBy[] = orderBy.slice();\n    nextOrderBy[index] = orderByItem;\n    onOrderByChange(nextOrderBy);\n  };\n\n  if (orderByOptions.length === 0) {\n    return null;\n  }\n\n  const fieldLabel = (\n    <InlineFormLabel\n      width={8}\n      className=\"query-keyword\"\n      data-testid=\"query-builder-orderby-item-label\"\n      tooltip={tooltip}\n    >\n      {label}\n    </InlineFormLabel>\n  );\n  const fieldSpacer = <div className={`width-8 ${styles.Common.firstLabel}`}></div>;\n\n  return (\n    <>\n      {orderBy.map((orderByItem, index) => {\n        const key = `${index}-${orderByItem.name}-${orderByItem.hint || ''}-${orderByItem.dir}`;\n        return (\n          <div className=\"gf-form\" key={key} data-testid=\"query-builder-orderby-item-wrapper\">\n            {index === 0 ? fieldLabel : fieldSpacer}\n            <OrderByItem\n              columnOptions={orderByOptions}\n              index={index}\n              orderByItem={orderByItem}\n              updateOrderByItem={updateOrderByItem}\n              removeOrderByItem={removeOrderByItem}\n            />\n          </div>\n        );\n      })}\n\n      <div className=\"gf-form\">\n        {orderBy.length === 0 ? fieldLabel : fieldSpacer}\n        <Button\n          data-testid=\"query-builder-orderby-add-button\"\n          icon=\"plus-circle\"\n          variant=\"secondary\"\n          size=\"sm\"\n          onClick={addOrderByItem}\n          className={styles.Common.smallBtn}\n        >\n          {addLabel}\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport const getOrderByOptions = (\n  builder: QueryBuilderOptions,\n  allColumns: readonly TableColumn[]\n): Array<SelectableValue<string>> => {\n  let allOptions: Array<SelectableValue<string>> = [];\n\n  if (isAggregateQuery(builder)) {\n    builder.columns?.forEach((c) => {\n      allOptions.push({ label: c.alias || c.name, value: c.name });\n    });\n\n    builder.aggregates!.forEach((a) => {\n      let label = `${a.aggregateType}(${a.column})`;\n      let value = label;\n\n      if (a.alias) {\n        label += ` as ${a.alias}`;\n        value = a.alias;\n      }\n\n      allOptions.push({ label, value });\n    });\n\n    if (builder.groupBy && builder.groupBy.length > 0) {\n      builder.groupBy.forEach((g) => allOptions.push({ label: g, value: g }));\n    }\n  } else {\n    allColumns.forEach((c) => allOptions.push({ label: c.label || c.name, value: c.name }));\n  }\n\n  // Add selected value to the list if it does not exist.\n  const allValues = new Set(allOptions.map((o) => o.value));\n  const customValues = builder.orderBy?.filter((o) => !allValues.has(o.name));\n  customValues?.forEach((o) => allOptions.push({ label: o.name, value: o.name }));\n\n  return allOptions;\n};\n","import React, { useState } from 'react';\nimport { InlineFormLabel, Input } from '@grafana/ui';\nimport labels from 'labels';\nimport { selectors } from 'selectors';\n\ninterface LimitEditorProps {\n  limit: number;\n  onLimitChange: (limit: number) => void;\n}\n\nexport const LimitEditor = (props: LimitEditorProps) => {\n  const [limit, setLimit] = useState<number>(props.limit || 0);\n  const { label, tooltip } = labels.components.LimitEditor;\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Input\n        data-testid={selectors.components.QueryBuilder.LimitEditor.input}\n        width={10}\n        value={limit}\n        type=\"number\"\n        min={0}\n        onChange={(e) => setLimit(e.currentTarget.valueAsNumber)}\n        onBlur={() => props.onLimitChange(limit)}\n      />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { Button, HorizontalGroup, InlineFormLabel, Input, MultiSelect, RadioButtonGroup, Select } from '@grafana/ui';\nimport { Filter, FilterOperator, TableColumn, NullFilter } from 'types/queryBuilder';\nimport * as utils from 'components/queryBuilder/utils';\nimport labels from 'labels';\nimport { styles } from 'styles';\nimport { Datasource } from 'data/CHDatasource';\nimport useUniqueMapKeys from 'hooks/useUniqueMapKeys';\n\nconst boolValues: Array<SelectableValue<boolean>> = [\n  { value: true, label: 'True' },\n  { value: false, label: 'False' },\n];\nconst conditions: Array<SelectableValue<'AND' | 'OR'>> = [\n  { value: 'AND', label: 'AND' },\n  { value: 'OR', label: 'OR' },\n];\nconst filterOperators: Array<SelectableValue<FilterOperator>> = [\n  { value: FilterOperator.WithInGrafanaTimeRange, label: 'Within dashboard time range' },\n  { value: FilterOperator.OutsideGrafanaTimeRange, label: 'Outside dashboard time range' },\n  { value: FilterOperator.IsAnything, label: 'IS ANYTHING' },\n  { value: FilterOperator.Equals, label: '=' },\n  { value: FilterOperator.NotEquals, label: '!=' },\n  { value: FilterOperator.LessThan, label: '<' },\n  { value: FilterOperator.LessThanOrEqual, label: '<=' },\n  { value: FilterOperator.GreaterThan, label: '>' },\n  { value: FilterOperator.GreaterThanOrEqual, label: '>=' },\n  { value: FilterOperator.Like, label: 'LIKE' },\n  { value: FilterOperator.NotLike, label: 'NOT LIKE' },\n  { value: FilterOperator.IsEmpty, label: 'IS EMPTY' },\n  { value: FilterOperator.IsNotEmpty, label: 'IS NOT EMPTY' },\n  { value: FilterOperator.In, label: 'IN' },\n  { value: FilterOperator.NotIn, label: 'NOT IN' },\n  { value: FilterOperator.IsNull, label: 'IS NULL' },\n  { value: FilterOperator.IsNotNull, label: 'IS NOT NULL' },\n];\nconst standardTimeOptions: Array<SelectableValue<string>> = [\n  { value: 'today()', label: 'TODAY' },\n  { value: 'yesterday()', label: 'YESTERDAY' },\n  { value: 'now()', label: 'NOW' },\n  { value: 'GRAFANA_START_TIME', label: 'DASHBOARD START TIME' },\n  { value: 'GRAFANA_END_TIME', label: 'DASHBOARD END TIME' },\n];\nexport const defaultNewFilter: NullFilter = {\n  filterType: 'custom',\n  condition: 'AND',\n  key: '',\n  type: '',\n  operator: FilterOperator.IsAnything,\n};\nexport interface PredefinedFilter {\n  restrictToFields?: readonly TableColumn[];\n}\n\nconst FilterValueNumberItem = (props: { value: number; onChange: (value: number) => void }) => {\n  const [value, setValue] = useState(props.value || 0);\n  return (\n    <div data-testid=\"query-builder-filters-number-value-container\">\n      <Input\n        data-testid=\"query-builder-filters-number-value-input\"\n        type=\"number\"\n        value={value}\n        onChange={(e) => setValue(e.currentTarget.valueAsNumber || 0)}\n        onBlur={() => props.onChange(value)}\n      />\n    </div>\n  );\n};\n\nconst FilterValueSingleStringItem = (props: { value: string; onChange: (value: string) => void }) => {\n  return (\n    <div data-testid=\"query-builder-filters-single-string-value-container\">\n      <Input\n        data-testid=\"query-builder-filters-single-string-value-input\"\n        type=\"text\"\n        defaultValue={props.value}\n        width={70}\n        onBlur={(e) => props.onChange(e.currentTarget.value)}\n      />\n    </div>\n  );\n};\n\nconst FilterValueMultiStringItem = (props: { value: string[]; onChange: (value: string[]) => void }) => {\n  const [value, setValue] = useState(props.value || []);\n  return (\n    <div data-testid=\"query-builder-filters-multi-string-value-container\">\n      <Input\n        type=\"text\"\n        value={value.join(',')}\n        placeholder=\"comma separated values\"\n        onChange={(e) => setValue((e.currentTarget.value || '').split(','))}\n        onBlur={() => props.onChange(value)}\n      />\n    </div>\n  );\n};\n\nexport const FilterValueEditor = (props: {\n  allColumns: readonly TableColumn[];\n  filter: Filter;\n  onFilterChange: (filter: Filter) => void;\n}) => {\n  const { filter, onFilterChange, allColumns: fieldsList } = props;\n  const getOptions = () => {\n    const matchedFilter = fieldsList.find((f) => f.name === filter.key);\n    return matchedFilter?.picklistValues || [];\n  };\n  if (utils.isNullFilter(filter)) {\n    return <></>;\n  } else if ([FilterOperator.IsAnything, FilterOperator.IsEmpty, FilterOperator.IsNotEmpty].includes(filter.operator)) {\n    return <></>;\n  } else if (utils.isBooleanFilter(filter)) {\n    const onBoolFilterValueChange = (value: boolean) => {\n      onFilterChange({ ...filter, value });\n    };\n    return (\n      <div data-testid=\"query-builder-filters-boolean-value-container\">\n        <RadioButtonGroup options={boolValues} value={filter.value} onChange={(e) => onBoolFilterValueChange(e!)} />\n      </div>\n    );\n  } else if (utils.isNumberFilter(filter)) {\n    return <FilterValueNumberItem value={filter.value} onChange={(value) => onFilterChange({ ...filter, value })} />;\n  } else if (utils.isDateFilter(filter)) {\n    if (utils.isDateFilterWithOutValue(filter)) {\n      return null;\n    }\n\n    const onDateFilterValueChange = (value: string) => {\n      onFilterChange({ ...filter, value });\n    };\n    const dateOptions = [...standardTimeOptions];\n    if (filter.value && !standardTimeOptions.find((o) => o.value === filter.value)) {\n      dateOptions.push({ label: filter.value, value: filter.value });\n    }\n\n    return (\n      <div data-testid=\"query-builder-filters-date-value-container\">\n        <Select\n          value={filter.value || 'TODAY'}\n          onChange={(e) => onDateFilterValueChange(e.value!)}\n          options={dateOptions}\n          width={40}\n          allowCustomValue\n        />\n      </div>\n    );\n  } else if (utils.isStringFilter(filter)) {\n    const onStringFilterValueChange = (value: string) => {\n      onFilterChange({ ...filter, value });\n    };\n    if (\n      filter.type === 'picklist' &&\n      (filter.operator === FilterOperator.Equals || filter.operator === FilterOperator.NotEquals)\n    ) {\n      return (\n        <div data-testid=\"query-builder-filters-single-picklist-value-container\">\n          <Select value={filter.value} onChange={(e) => onStringFilterValueChange(e.value!)} options={getOptions()} />\n        </div>\n      );\n    }\n\n    return (\n      <FilterValueSingleStringItem\n        value={filter.value}\n        onChange={onStringFilterValueChange}\n        // enforce input re-render when filter changes to avoid stale input value\n        key={filter.value}\n      />\n    );\n  } else if (utils.isMultiFilter(filter)) {\n    const onMultiFilterValueChange = (value: string[]) => {\n      onFilterChange({ ...filter, value });\n    };\n    if (filter.type === 'picklist') {\n      return (\n        <div data-testid=\"query-builder-filters-multi-picklist-value-container\">\n          <MultiSelect\n            value={filter.value}\n            options={getOptions()}\n            onChange={(e) => onMultiFilterValueChange(e.map((v) => v.value!))}\n          />\n        </div>\n      );\n    }\n    return <FilterValueMultiStringItem value={filter.value} onChange={onMultiFilterValueChange} />;\n  } else {\n    return <></>;\n  }\n};\n\nexport const FilterEditor = (props: {\n  allColumns: readonly TableColumn[];\n  index: number;\n  filter: Filter & PredefinedFilter;\n  onFilterChange: (index: number, filter: Filter) => void;\n  removeFilter: (index: number) => void;\n  datasource: Datasource;\n  database: string;\n  table: string;\n}) => {\n  const { index, filter, allColumns: fieldsList, onFilterChange, removeFilter } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const isMapType = filter.type.startsWith('Map');\n  const isJSONType = filter.type.startsWith('JSON');\n  const mapKeys = useUniqueMapKeys(props.datasource, isMapType ? filter.key : '', props.database, props.table);\n  const mapKeyOptions = mapKeys.map((k) => ({ label: k, value: k }));\n  if (filter.mapKey && !mapKeys.includes(filter.mapKey)) {\n    mapKeyOptions.push({ label: filter.mapKey, value: filter.mapKey });\n  }\n\n  const getFields = () => {\n    const values = (filter.restrictToFields || fieldsList).map((f) => {\n      let label = f.label || f.name;\n      if (f.type.startsWith('Map')) {\n        label += '[]';\n      } else if (f.type.startsWith('JSON')) {\n        label += '{}';\n      }\n\n      return { label, value: f.name };\n    });\n    // Add selected value to the list if it does not exist.\n    if (filter?.key && !values.find((x) => x.value === filter.key)) {\n      values.push({ label: filter.label || filter.key!, value: filter.key! });\n    }\n    return values;\n  };\n  const getFilterOperatorsByType = (type = 'string'): Array<SelectableValue<FilterOperator>> => {\n    if (utils.isBooleanType(type)) {\n      return filterOperators.filter((f) => [FilterOperator.Equals, FilterOperator.NotEquals].includes(f.value!));\n    } else if (utils.isNumberType(type)) {\n      return filterOperators.filter((f) =>\n        [\n          FilterOperator.IsAnything,\n          FilterOperator.IsNull,\n          FilterOperator.IsNotNull,\n          FilterOperator.Equals,\n          FilterOperator.NotEquals,\n          FilterOperator.LessThan,\n          FilterOperator.LessThanOrEqual,\n          FilterOperator.GreaterThan,\n          FilterOperator.GreaterThanOrEqual,\n        ].includes(f.value!)\n      );\n    } else if (utils.isDateType(type)) {\n      return filterOperators.filter((f) =>\n        [\n          FilterOperator.IsAnything,\n          FilterOperator.IsNull,\n          FilterOperator.IsNotNull,\n          FilterOperator.Equals,\n          FilterOperator.NotEquals,\n          FilterOperator.LessThan,\n          FilterOperator.LessThanOrEqual,\n          FilterOperator.GreaterThan,\n          FilterOperator.GreaterThanOrEqual,\n          FilterOperator.WithInGrafanaTimeRange,\n          FilterOperator.OutsideGrafanaTimeRange,\n        ].includes(f.value!)\n      );\n    } else {\n      return filterOperators.filter((f) =>\n        [\n          FilterOperator.IsAnything,\n          FilterOperator.Like,\n          FilterOperator.NotLike,\n          FilterOperator.In,\n          FilterOperator.NotIn,\n          FilterOperator.IsNull,\n          FilterOperator.IsNotNull,\n          FilterOperator.Equals,\n          FilterOperator.NotEquals,\n          FilterOperator.IsEmpty,\n          FilterOperator.IsNotEmpty,\n          FilterOperator.LessThan,\n          FilterOperator.LessThanOrEqual,\n          FilterOperator.GreaterThan,\n          FilterOperator.GreaterThanOrEqual,\n        ].includes(f.value!)\n      );\n    }\n  };\n  const onFilterNameChange = (fieldName: string) => {\n    setIsOpen(false);\n    const matchingField = fieldsList.find((f) => f.name === fieldName);\n    const filterData = {\n      key: matchingField?.name || fieldName,\n      type: matchingField?.type || 'String',\n      label: matchingField?.label,\n    };\n\n    let newFilter: Filter & PredefinedFilter;\n    // this is an auto-generated TimeRange filter\n    if (filter.restrictToFields) {\n      newFilter = {\n        filterType: 'custom',\n        key: filterData.key || filter.key,\n        type: 'datetime',\n        condition: filter.condition || 'AND',\n        operator: FilterOperator.WithInGrafanaTimeRange,\n        restrictToFields: filter.restrictToFields,\n        label: filterData.label,\n      };\n    } else if (utils.isBooleanType(filterData.type)) {\n      newFilter = {\n        filterType: 'custom',\n        key: filterData.key,\n        type: 'boolean',\n        condition: filter.condition || 'AND',\n        operator: FilterOperator.Equals,\n        value: false,\n        label: filterData.label,\n      };\n    } else if (utils.isDateType(filterData.type)) {\n      newFilter = {\n        filterType: 'custom',\n        key: filterData.key,\n        type: filterData.type as 'date',\n        condition: filter.condition || 'AND',\n        operator: FilterOperator.Equals,\n        value: 'TODAY',\n        label: filterData.label,\n      };\n    } else {\n      newFilter = {\n        filterType: 'custom',\n        key: filterData.key,\n        type: filterData.type,\n        condition: filter.condition || 'AND',\n        operator: FilterOperator.IsNotNull,\n        label: filterData.label,\n      };\n    }\n    onFilterChange(index, newFilter);\n  };\n  const onFilterMapKeyChange = (mapKey: string) => {\n    const newFilter: Filter = { ...filter };\n    newFilter.mapKey = mapKey;\n    onFilterChange(index, newFilter);\n  };\n  const onFilterOperatorChange = (operator: FilterOperator) => {\n    const newFilter: Filter = { ...filter };\n    newFilter.operator = operator;\n    if (utils.isMultiFilter(newFilter)) {\n      if (!Array.isArray(newFilter.value)) {\n        newFilter.value = [newFilter.value || ''];\n      }\n    }\n    onFilterChange(index, newFilter);\n  };\n  const onFilterConditionChange = (condition: 'AND' | 'OR') => {\n    const newFilter: Filter = { ...filter };\n    newFilter.condition = condition;\n    onFilterChange(index, newFilter);\n  };\n  const onFilterValueChange = (filter: Filter) => {\n    onFilterChange(index, filter);\n  };\n\n  return (\n    <HorizontalGroup wrap align=\"flex-start\" justify=\"flex-start\">\n      {index !== 0 && (\n        <RadioButtonGroup options={conditions} value={filter.condition} onChange={(e) => onFilterConditionChange(e!)} />\n      )}\n      <Select\n        disabled={Boolean(filter.hint)}\n        placeholder={filter.hint ? labels.types.ColumnHint[filter.hint] : undefined}\n        value={filter.key}\n        width={40}\n        className={styles.Common.inlineSelect}\n        options={getFields()}\n        isOpen={isOpen}\n        onOpenMenu={() => setIsOpen(true)}\n        onCloseMenu={() => setIsOpen(false)}\n        onChange={(e) => onFilterNameChange(e.value!)}\n        allowCustomValue\n        menuPlacement={'bottom'}\n      />\n      {(isMapType || isJSONType) && (\n        <Select\n          value={filter.mapKey}\n          placeholder={labels.components.FilterEditor.mapKeyPlaceholder}\n          width={40}\n          className={styles.Common.inlineSelect}\n          options={mapKeyOptions}\n          onChange={(e) => onFilterMapKeyChange(e.value!)}\n          allowCustomValue\n          menuPlacement={'bottom'}\n        />\n      )}\n      <Select\n        value={filter.operator}\n        width={40}\n        className={styles.Common.inlineSelect}\n        options={getFilterOperatorsByType(filter.type)}\n        onChange={(e) => onFilterOperatorChange(e.value!)}\n        menuPlacement={'bottom'}\n      />\n      <FilterValueEditor filter={filter} onFilterChange={onFilterValueChange} allColumns={fieldsList} />\n      <Button\n        data-testid=\"query-builder-filters-remove-button\"\n        icon=\"trash-alt\"\n        variant=\"destructive\"\n        size=\"sm\"\n        className={styles.Common.smallBtn}\n        onClick={() => removeFilter(index)}\n      />\n    </HorizontalGroup>\n  );\n};\n\nexport const FiltersEditor = (props: {\n  allColumns: readonly TableColumn[];\n  filters: Filter[];\n  onFiltersChange: (filters: Filter[]) => void;\n  datasource: Datasource;\n  database: string;\n  table: string;\n}) => {\n  const { filters = [], onFiltersChange, allColumns: fieldsList = [], datasource, database, table } = props;\n  const { label, tooltip, addLabel } = labels.components.FilterEditor;\n  const addFilter = () => {\n    onFiltersChange([...filters, { ...defaultNewFilter }]);\n  };\n  const removeFilter = (index: number) => {\n    const newFilters = [...filters];\n    newFilters.splice(index, 1);\n    onFiltersChange(newFilters);\n  };\n  const onFilterChange = (index: number, filter: Filter) => {\n    const newFilters = [...filters];\n    newFilters[index] = filter;\n    onFiltersChange(newFilters);\n  };\n\n  return (\n    <>\n      {filters.length === 0 && (\n        <div className=\"gf-form\">\n          <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n            {label}\n          </InlineFormLabel>\n          <Button\n            data-testid=\"query-builder-filters-add-button\"\n            icon=\"plus-circle\"\n            variant=\"secondary\"\n            size=\"sm\"\n            className={styles.Common.smallBtn}\n            onClick={addFilter}\n          >\n            {addLabel}\n          </Button>\n        </div>\n      )}\n      {filters.map((filter, index) => {\n        return (\n          <div className=\"gf-form\" key={index}>\n            {index === 0 ? (\n              <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n                {label}\n              </InlineFormLabel>\n            ) : (\n              <div className={`width-8 ${styles.Common.firstLabel}`}></div>\n            )}\n            <FilterEditor\n              allColumns={fieldsList}\n              filter={filter}\n              onFilterChange={onFilterChange}\n              removeFilter={removeFilter}\n              index={index}\n              datasource={datasource}\n              database={database}\n              table={table}\n            />\n          </div>\n        );\n      })}\n      {filters.length !== 0 && (\n        <div className=\"gf-form\">\n          <div className={`width-8 ${styles.Common.firstLabel}`}></div>\n          <Button\n            data-testid=\"query-builder-filters-inline-add-button\"\n            icon=\"plus-circle\"\n            variant=\"secondary\"\n            size=\"sm\"\n            className={styles.Common.smallBtn}\n            onClick={addFilter}\n          >\n            {addLabel}\n          </Button>\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { Datasource } from 'data/CHDatasource';\n\nexport default (datasource: Datasource, mapColumn: string, database: string, table: string): readonly string[] => {\n  const [keys, setKeys] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (!datasource || !mapColumn || !database || !table) {\n      return;\n    }\n\n    let ignore = false;\n    datasource\n      .fetchUniqueMapKeys(mapColumn, database, table)\n      .then((tables) => {\n        if (ignore) {\n          return;\n        }\n        setKeys(tables);\n      })\n      .catch((ex: any) => {\n        console.error('Failed to fetch map keys for column:', mapColumn, database, table, ex);\n      });\n\n    return () => {\n      ignore = true;\n    };\n  }, [datasource, mapColumn, database, table]);\n\n  // Immediately return empty array on change so keys aren't stale\n  const lastDatabase = useRef<string>('');\n  const lastTable = useRef<string>('');\n  if (database !== lastDatabase.current || table !== lastTable.current) {\n    lastDatabase.current = database;\n    lastTable.current = table;\n    setKeys([]);\n    return [];\n  }\n\n  return keys;\n};\n","import { SelectedColumn } from 'types/queryBuilder';\n\nexport const columnFilterDateTime = (s: SelectedColumn): boolean => (s.type || '').toLowerCase().includes('date');\nexport const columnFilterString = (s: SelectedColumn): boolean =>\n  (s.type || '').toLowerCase().includes('string') || (s.type || '').toLowerCase().includes('enum');\nexport const columnFilterOr = (\n  s: SelectedColumn,\n  ...filterFuncs: ReadonlyArray<(s: SelectedColumn) => boolean>\n): boolean => {\n  for (let filterFn of filterFuncs) {\n    if (filterFn(s)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n","import React from 'react';\n\ntype onOptionChangeFn<T> = (key: keyof T) => (nextValue: React.SetStateAction<any>) => void;\n\n/**\n * Returns a function that can apply changes with an object or a specific key in an object. When called\n * will run another function with the changes applied.\n *\n * Does not deep clone the object. This is used for top level fields on the QueryBuilderOptions type.\n *\n * @param onChange a function that receives the updated state from the change function\n * @param prevState the current (previous) state object\n * @returns a function used to apply changes to individual fields\n */\nexport function useBuilderOptionChanges<T>(onChange: (nextState: T) => void, prevState: T): onOptionChangeFn<T> {\n  return (key: keyof T) => (nextValue: React.SetStateAction<any>) => {\n    const nextState: T = {\n      ...prevState,\n      [key]: nextValue,\n    };\n\n    onChange(nextState);\n  };\n}\n","import { useState, useEffect, useRef } from 'react';\nimport { TableColumn } from 'types/queryBuilder';\nimport { Datasource } from 'data/CHDatasource';\n\nexport default (datasource: Datasource, database: string, table: string): readonly TableColumn[] => {\n  const [columns, setColumns] = useState<readonly TableColumn[]>([]);\n\n  useEffect(() => {\n    if (!datasource || !database || !table) {\n      return;\n    }\n\n    let ignore = false;\n    datasource\n      .fetchColumns(database, table)\n      .then((columns) => {\n        if (ignore) {\n          return;\n        }\n        setColumns(columns);\n      })\n      .catch((ex: any) => {\n        console.error(ex);\n      });\n\n    return () => {\n      ignore = true;\n    };\n  }, [datasource, database, table]);\n\n  // Immediately return empty array on change so columns aren't stale\n  const lastDbTable = useRef<string>('');\n  const dbTable = database + table;\n  if (dbTable !== lastDbTable.current) {\n    lastDbTable.current = dbTable;\n    setColumns([]);\n    return [];\n  }\n\n  return columns;\n};\n","import { Reducer, useReducer } from 'react';\nimport { QueryBuilderOptions, QueryType, SelectedColumn } from 'types/queryBuilder';\nimport { defaultCHBuilderQuery } from 'types/sql';\n\nenum BuilderOptionsActionType {\n  SetOptions = 'set_options',\n  SetAllOptions = 'set_all_options',\n  SetQueryType = 'set_query_type',\n  SetDatabase = 'set_database',\n  SetTable = 'set_table',\n  SetOtelEnabled = 'set_otel_enabled',\n  SetOtelVersion = 'set_otel_version',\n  SetColumnByHint = 'set_column_by_hint',\n  SetBuilderMinimized = 'set_builder_minimized',\n}\n\ntype QueryBuilderOptionsReducerAction = {\n  type: BuilderOptionsActionType;\n  payload: Partial<QueryBuilderOptions>;\n};\n\ntype GenericReducerAction = {\n  type: BuilderOptionsActionType;\n  payload: any;\n};\n\nexport type BuilderOptionsReducerAction = QueryBuilderOptionsReducerAction | GenericReducerAction;\n\nconst createAction = (\n  type: BuilderOptionsActionType,\n  payload: Partial<QueryBuilderOptions>\n): BuilderOptionsReducerAction => ({ type, payload });\nconst createGenericAction = (type: BuilderOptionsActionType, payload: any): GenericReducerAction => ({ type, payload });\nexport const setOptions = (options: Partial<QueryBuilderOptions>): BuilderOptionsReducerAction =>\n  createAction(BuilderOptionsActionType.SetOptions, options);\nexport const setAllOptions = (options: QueryBuilderOptions): BuilderOptionsReducerAction =>\n  createAction(BuilderOptionsActionType.SetAllOptions, options);\nexport const setQueryType = (queryType: QueryType): BuilderOptionsReducerAction =>\n  createAction(BuilderOptionsActionType.SetQueryType, { queryType });\nexport const setDatabase = (database: string): BuilderOptionsReducerAction =>\n  createAction(BuilderOptionsActionType.SetDatabase, { database });\nexport const setTable = (table: string): BuilderOptionsReducerAction =>\n  createAction(BuilderOptionsActionType.SetTable, { table });\nexport const setOtelEnabled = (otelEnabled: boolean): BuilderOptionsReducerAction =>\n  createAction(BuilderOptionsActionType.SetOtelEnabled, { meta: { otelEnabled } });\nexport const setOtelVersion = (otelVersion: string): BuilderOptionsReducerAction =>\n  createAction(BuilderOptionsActionType.SetOtelVersion, { meta: { otelVersion } });\nexport const setColumnByHint = (column: SelectedColumn): GenericReducerAction =>\n  createGenericAction(BuilderOptionsActionType.SetColumnByHint, { column });\nexport const setBuilderMinimized = (minimized: boolean): GenericReducerAction =>\n  createGenericAction(BuilderOptionsActionType.SetBuilderMinimized, { minimized });\n\nconst reducer = (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n  const actionFn = actions.get(action.type);\n  if (!actionFn) {\n    throw Error('missing function for BuilderOptionsActionType: ' + action.type);\n  }\n\n  const nextState = actionFn(state, action);\n  // console.log('ACTION:', action.type, 'PAYLOAD:', action.payload, 'PREV STATE:', state, 'NEXT STATE:', nextState);\n  return nextState;\n};\n\n/**\n * A mapping between action type and reducer function, used in reducer to apply action changes.\n */\nconst actions = new Map<BuilderOptionsActionType, Reducer<QueryBuilderOptions, BuilderOptionsReducerAction>>([\n  [\n    BuilderOptionsActionType.SetOptions,\n    (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n      // A catch-all action for applying option changes.\n      const nextOptions = action.payload as Partial<QueryBuilderOptions>;\n      return mergeBuilderOptionsState(state, nextOptions);\n    },\n  ],\n  [\n    BuilderOptionsActionType.SetAllOptions,\n    (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n      // Resets existing state with provided options.\n      const nextOptions = action.payload as Partial<QueryBuilderOptions>;\n      return buildInitialState(nextOptions);\n    },\n  ],\n  [\n    BuilderOptionsActionType.SetQueryType,\n    (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n      // If switching query type, reset the editor.\n      const nextQueryType = action.payload.queryType;\n      if (state.queryType !== nextQueryType) {\n        return buildInitialState({\n          database: state.database,\n          table: state.table,\n          queryType: nextQueryType,\n        });\n      }\n\n      return state;\n    },\n  ],\n  [\n    BuilderOptionsActionType.SetDatabase,\n    (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n      // Clear table and reset editor when database changes\n      return buildInitialState({\n        database: action.payload.database,\n        table: '',\n        queryType: state.queryType,\n      });\n    },\n  ],\n  [\n    BuilderOptionsActionType.SetTable,\n    (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n      // Reset editor when table changes\n      return buildInitialState({\n        database: state.database,\n        table: action.payload.table,\n        queryType: state.queryType,\n      });\n    },\n  ],\n  [\n    BuilderOptionsActionType.SetOtelEnabled,\n    (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n      return mergeBuilderOptionsState(state, {\n        meta: {\n          otelEnabled: Boolean(action.payload.meta?.otelEnabled),\n        },\n      });\n    },\n  ],\n  [\n    BuilderOptionsActionType.SetOtelVersion,\n    (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n      return mergeBuilderOptionsState(state, {\n        meta: {\n          otelVersion: action.payload.meta?.otelVersion,\n        },\n      });\n    },\n  ],\n  [\n    BuilderOptionsActionType.SetColumnByHint,\n    (state: QueryBuilderOptions, action: GenericReducerAction): QueryBuilderOptions => {\n      const col = action.payload.column as SelectedColumn;\n      const nextColumns = (state.columns || []).filter((c) => c.hint !== col.hint);\n      nextColumns.push(col);\n\n      return mergeBuilderOptionsState(state, {\n        columns: nextColumns,\n      });\n    },\n  ],\n  [\n    BuilderOptionsActionType.SetBuilderMinimized,\n    (state: QueryBuilderOptions, action: GenericReducerAction): QueryBuilderOptions => {\n      const minimized = action.payload.minimized as boolean;\n      return mergeBuilderOptionsState(state, {\n        meta: { minimized },\n      });\n    },\n  ],\n]);\n\nconst buildInitialState = (savedOptions?: Partial<QueryBuilderOptions>): QueryBuilderOptions => {\n  const defaultOptions = defaultCHBuilderQuery.builderOptions;\n  const initialState = {\n    ...defaultOptions,\n    ...savedOptions,\n    meta: {\n      ...defaultOptions.meta,\n      ...savedOptions?.meta,\n    },\n  };\n\n  return initialState;\n};\n\nconst mergeBuilderOptionsState = (\n  prevState: QueryBuilderOptions,\n  nextState: Partial<QueryBuilderOptions>\n): QueryBuilderOptions => {\n  return {\n    ...prevState,\n    ...nextState,\n    meta: {\n      ...prevState.meta,\n      ...nextState.meta,\n    },\n  };\n};\n\nexport const useBuilderOptionsState = (\n  savedOptions: QueryBuilderOptions\n): [QueryBuilderOptions, React.Dispatch<BuilderOptionsReducerAction>] => {\n  const [state, dispatch] = useReducer(reducer, savedOptions, buildInitialState);\n  return [state, dispatch];\n};\n\nexport const testFuncs = {\n  reducer,\n  buildInitialState,\n};\n","import { isBuilderOptionsRunnable } from 'data/utils';\nimport { useRef } from 'react';\nimport { QueryBuilderOptions } from 'types/queryBuilder';\n\n/**\n * Returns true if the initial builderOptions represent a new query.\n * Returns false if the query was loaded from a saved URL or dashboard.\n *\n * Does not update on re-renders\n */\nexport default (builderOptions: QueryBuilderOptions): boolean => {\n  const isNewQuery = useRef<boolean>(!isBuilderOptionsRunnable(builderOptions));\n  return isNewQuery.current;\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { ColumnsEditor } from '../ColumnsEditor';\nimport { Filter, OrderBy, QueryBuilderOptions, SelectedColumn, ColumnHint } from 'types/queryBuilder';\nimport { ColumnSelect } from '../ColumnSelect';\nimport { OtelVersionSelect } from '../OtelVersionSelect';\nimport { OrderByEditor, getOrderByOptions } from '../OrderByEditor';\nimport { LimitEditor } from '../LimitEditor';\nimport { FiltersEditor } from '../FilterEditor';\nimport allLabels from 'labels';\nimport { getColumnByHint } from 'data/sqlGenerator';\nimport { columnFilterDateTime, columnFilterString } from 'data/columnFilters';\nimport { Datasource } from 'data/CHDatasource';\nimport { useBuilderOptionChanges } from 'hooks/useBuilderOptionChanges';\nimport { Alert, Button, InlineFormLabel, Input, VerticalGroup } from '@grafana/ui';\nimport useColumns from 'hooks/useColumns';\nimport { BuilderOptionsReducerAction, setOptions, setOtelEnabled, setOtelVersion } from 'hooks/useBuilderOptionsState';\nimport useIsNewQuery from 'hooks/useIsNewQuery';\nimport {\n  useDefaultFilters,\n  useDefaultTimeColumn,\n  useLogDefaultsOnMount,\n  useOtelColumns,\n} from './logsQueryBuilderHooks';\nimport { styles } from 'styles';\nimport { Components as allSelectors } from 'selectors';\n\ninterface LogsQueryBuilderProps {\n  datasource: Datasource;\n  builderOptions: QueryBuilderOptions;\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>;\n}\n\ninterface LogsQueryBuilderState {\n  otelEnabled: boolean;\n  otelVersion: string;\n  selectedColumns: SelectedColumn[];\n  timeColumn?: SelectedColumn;\n  logLevelColumn?: SelectedColumn;\n  messageColumn?: SelectedColumn;\n  labelsColumn?: SelectedColumn;\n  // liveView: boolean;\n  orderBy: OrderBy[];\n  limit: number;\n  filters: Filter[];\n  logMessageLike: string;\n}\n\nexport const LogsQueryBuilder = (props: LogsQueryBuilderProps) => {\n  const { datasource, builderOptions, builderOptionsDispatch } = props;\n  const labels = allLabels.components.LogsQueryBuilder;\n  const allColumns = useColumns(datasource, builderOptions.database, builderOptions.table);\n  const isNewQuery = useIsNewQuery(builderOptions);\n  const builderState: LogsQueryBuilderState = useMemo(\n    () => ({\n      otelEnabled: builderOptions.meta?.otelEnabled || false,\n      otelVersion: builderOptions.meta?.otelVersion || '',\n      timeColumn: getColumnByHint(builderOptions, ColumnHint.Time),\n      logLevelColumn: getColumnByHint(builderOptions, ColumnHint.LogLevel),\n      messageColumn: getColumnByHint(builderOptions, ColumnHint.LogMessage),\n      labelsColumn: getColumnByHint(builderOptions, ColumnHint.LogLabels),\n      selectedColumns:\n        builderOptions.columns?.filter(\n          (c) =>\n            // Only select columns that don't have their own box\n            c.hint !== ColumnHint.Time &&\n            c.hint !== ColumnHint.LogLevel &&\n            c.hint !== ColumnHint.LogMessage &&\n            c.hint !== ColumnHint.LogLabels\n        ) || [],\n      // liveView: builderOptions.meta?.liveView || false,\n      filters: builderOptions.filters || [],\n      orderBy: builderOptions.orderBy || [],\n      limit: builderOptions.limit || 0,\n      logMessageLike: builderOptions.meta?.logMessageLike || '',\n    }),\n    [builderOptions]\n  );\n  const [showConfigWarning, setConfigWarningOpen] = useState(\n    datasource.getDefaultLogsColumns().size === 0 && builderOptions.columns?.length === 0\n  );\n\n  const onOptionChange = useBuilderOptionChanges<LogsQueryBuilderState>((next) => {\n    const nextColumns = next.selectedColumns.slice();\n    if (next.timeColumn) {\n      nextColumns.push(next.timeColumn);\n    }\n    if (next.logLevelColumn) {\n      nextColumns.push(next.logLevelColumn);\n    }\n    if (next.messageColumn) {\n      nextColumns.push(next.messageColumn);\n    }\n    if (next.labelsColumn) {\n      nextColumns.push(next.labelsColumn);\n    }\n\n    builderOptionsDispatch(\n      setOptions({\n        columns: nextColumns,\n        filters: next.filters,\n        orderBy: next.orderBy,\n        limit: next.limit,\n        meta: {\n          logMessageLike: next.logMessageLike,\n        },\n      })\n    );\n  }, builderState);\n\n  useLogDefaultsOnMount(datasource, isNewQuery, builderOptions, builderOptionsDispatch);\n  useOtelColumns(datasource, builderState.otelEnabled, builderState.otelVersion, builderOptionsDispatch);\n  useDefaultTimeColumn(\n    datasource,\n    allColumns,\n    builderOptions.table,\n    builderState.timeColumn,\n    builderState.otelEnabled,\n    builderOptionsDispatch\n  );\n  useDefaultFilters(builderOptions.table, isNewQuery, builderOptionsDispatch);\n\n  const configWarning = showConfigWarning && (\n    <Alert title=\"\" severity=\"warning\" buttonContent=\"Close\" onRemove={() => setConfigWarningOpen(false)}>\n      <VerticalGroup>\n        <div>\n          {'To speed up your query building, enter your default logs configuration in your '}\n          <a\n            style={{ textDecoration: 'underline' }}\n            href={`/connections/datasources/edit/${encodeURIComponent(datasource.uid)}#logs-config`}\n          >\n            ClickHouse Data Source settings\n          </a>\n        </div>\n      </VerticalGroup>\n    </Alert>\n  );\n\n  return (\n    <div>\n      {configWarning}\n      <OtelVersionSelect\n        enabled={builderState.otelEnabled}\n        onEnabledChange={(e) => builderOptionsDispatch(setOtelEnabled(e))}\n        selectedVersion={builderState.otelVersion}\n        onVersionChange={(v) => builderOptionsDispatch(setOtelVersion(v))}\n      />\n      <ColumnsEditor\n        disabled={builderState.otelEnabled}\n        allColumns={allColumns}\n        selectedColumns={builderState.selectedColumns}\n        onSelectedColumnsChange={onOptionChange('selectedColumns')}\n      />\n      <div className=\"gf-form\">\n        <ColumnSelect\n          disabled={builderState.otelEnabled}\n          allColumns={allColumns}\n          selectedColumn={builderState.timeColumn}\n          invalid={!builderState.timeColumn}\n          onColumnChange={onOptionChange('timeColumn')}\n          columnFilterFn={columnFilterDateTime}\n          columnHint={ColumnHint.Time}\n          label={labels.logTimeColumn.label}\n          tooltip={labels.logTimeColumn.tooltip}\n        />\n        <ColumnSelect\n          disabled={builderState.otelEnabled}\n          allColumns={allColumns}\n          selectedColumn={builderState.logLevelColumn}\n          invalid={!builderState.logLevelColumn}\n          onColumnChange={onOptionChange('logLevelColumn')}\n          columnFilterFn={columnFilterString}\n          columnHint={ColumnHint.LogLevel}\n          label={labels.logLevelColumn.label}\n          tooltip={labels.logLevelColumn.tooltip}\n          inline\n        />\n      </div>\n      <div className=\"gf-form\">\n        <ColumnSelect\n          disabled={builderState.otelEnabled}\n          allColumns={allColumns}\n          selectedColumn={builderState.messageColumn}\n          invalid={!builderState.messageColumn}\n          onColumnChange={onOptionChange('messageColumn')}\n          columnFilterFn={columnFilterString}\n          columnHint={ColumnHint.LogMessage}\n          label={labels.logMessageColumn.label}\n          tooltip={labels.logMessageColumn.tooltip}\n        />\n        <ColumnSelect\n          disabled={builderState.otelEnabled}\n          allColumns={allColumns}\n          selectedColumn={builderState.labelsColumn}\n          invalid={!builderState.labelsColumn}\n          onColumnChange={onOptionChange('labelsColumn')}\n          columnHint={ColumnHint.LogLabels}\n          label={labels.logLabelsColumn.label}\n          tooltip={labels.logLabelsColumn.tooltip}\n          inline\n        />\n        {/* <Switch\n          value={builderState.liveView}\n          onChange={onOptionChange('liveView')}\n          label={labels.liveView.label}\n          tooltip={labels.liveView.tooltip}\n          inline\n        /> */}\n      </div>\n      <OrderByEditor\n        orderByOptions={getOrderByOptions(builderOptions, allColumns)}\n        orderBy={builderState.orderBy}\n        onOrderByChange={onOptionChange('orderBy')}\n      />\n      <LimitEditor limit={builderState.limit} onLimitChange={onOptionChange('limit')} />\n      <FiltersEditor\n        filters={builderState.filters}\n        onFiltersChange={onOptionChange('filters')}\n        allColumns={allColumns}\n        datasource={datasource}\n        database={builderOptions.database}\n        table={builderOptions.table}\n      />\n      <LogMessageLikeInput logMessageLike={builderState.logMessageLike} onChange={onOptionChange('logMessageLike')} />\n    </div>\n  );\n};\n\ninterface LogMessageLikeInputProps {\n  logMessageLike: string;\n  onChange: (logMessageLike: string) => void;\n}\n\nconst LogMessageLikeInput = (props: LogMessageLikeInputProps) => {\n  const [input, setInput] = useState<string>('');\n  const { logMessageLike, onChange } = props;\n  const { label, tooltip, clearButton } = allLabels.components.LogsQueryBuilder.logMessageFilter;\n\n  useEffect(() => {\n    setInput(logMessageLike);\n  }, [logMessageLike]);\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Input\n        width={200}\n        value={input}\n        type=\"string\"\n        onChange={(e) => setInput(e.currentTarget.value)}\n        onBlur={() => onChange(input)}\n      />\n      {logMessageLike && (\n        <Button\n          data-testid={allSelectors.QueryBuilder.LogsQueryBuilder.LogMessageLikeInput.input}\n          variant=\"secondary\"\n          size=\"md\"\n          onClick={() => onChange('')}\n          className={styles.Common.smallBtn}\n          tooltip={allLabels.components.expandBuilderButton.tooltip}\n        >\n          {clearButton}\n        </Button>\n      )}\n    </div>\n  );\n};\n","import { Datasource } from 'data/CHDatasource';\nimport { columnFilterDateTime } from 'data/columnFilters';\nimport { BuilderOptionsReducerAction, setColumnByHint, setOptions } from 'hooks/useBuilderOptionsState';\nimport { useEffect, useMemo, useRef } from 'react';\nimport {\n  ColumnHint,\n  DateFilterWithoutValue,\n  Filter,\n  FilterOperator,\n  OrderBy,\n  OrderByDirection,\n  QueryBuilderOptions,\n  SelectedColumn,\n  StringFilter,\n  TableColumn,\n} from 'types/queryBuilder';\nimport otel from 'otel';\n\n/**\n * Loads the default configuration for new queries. (Only runs on new queries)\n */\nexport const useLogDefaultsOnMount = (\n  datasource: Datasource,\n  isNewQuery: boolean,\n  builderOptions: QueryBuilderOptions,\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>\n) => {\n  const didSetDefaults = useRef<boolean>(false);\n  useEffect(() => {\n    if (!isNewQuery || didSetDefaults.current) {\n      return;\n    }\n\n    const defaultDb = datasource.getDefaultLogsDatabase() || datasource.getDefaultDatabase();\n    const defaultTable = datasource.getDefaultLogsTable() || datasource.getDefaultTable();\n    const otelVersion = datasource.getLogsOtelVersion();\n    const defaultColumns = datasource.getDefaultLogsColumns();\n\n    const nextColumns: SelectedColumn[] = [];\n    const includedColumns = new Set<string>();\n    for (let [hint, colName] of defaultColumns) {\n      nextColumns.push({ name: colName, hint });\n      includedColumns.add(colName);\n    }\n\n    if (datasource.shouldSelectLogContextColumns()) {\n      const contextColumnNames = datasource.getLogContextColumnNames();\n\n      for (let columnName of contextColumnNames) {\n        if (includedColumns.has(columnName)) {\n          continue;\n        }\n\n        nextColumns.push({ name: columnName });\n        includedColumns.add(columnName);\n      }\n    }\n\n    builderOptionsDispatch(\n      setOptions({\n        database: defaultDb,\n        table: defaultTable || builderOptions.table,\n        columns: nextColumns,\n        meta: {\n          otelEnabled: Boolean(otelVersion),\n          otelVersion,\n        },\n      })\n    );\n    didSetDefaults.current = true;\n  }, [\n    builderOptions.columns,\n    builderOptions.orderBy,\n    builderOptions.table,\n    builderOptionsDispatch,\n    datasource,\n    isNewQuery,\n  ]);\n};\n\n/**\n * Sets OTEL Logs columns automatically when OTEL is enabled.\n * Does not run if OTEL is already enabled, only when it's changed.\n */\nexport const useOtelColumns = (\n  datasource: Datasource,\n  otelEnabled: boolean,\n  otelVersion: string,\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>\n) => {\n  const didSetColumns = useRef<boolean>(otelEnabled);\n  if (!otelEnabled) {\n    didSetColumns.current = false;\n  }\n\n  useEffect(() => {\n    if (!otelEnabled || didSetColumns.current) {\n      return;\n    }\n\n    const otelConfig = otel.getVersion(otelVersion);\n    const logColumnMap = otelConfig?.logColumnMap;\n    if (!logColumnMap) {\n      return;\n    }\n\n    const columns: SelectedColumn[] = [];\n    const includedColumns = new Set<string>();\n    logColumnMap.forEach((name, hint) => {\n      columns.push({ name, hint });\n      includedColumns.add(name);\n    });\n\n    if (datasource.shouldSelectLogContextColumns()) {\n      const contextColumnNames = datasource.getLogContextColumnNames();\n\n      for (let columnName of contextColumnNames) {\n        if (includedColumns.has(columnName)) {\n          continue;\n        }\n\n        columns.push({ name: columnName });\n        includedColumns.add(columnName);\n      }\n    }\n\n    builderOptionsDispatch(setOptions({ columns }));\n    didSetColumns.current = true;\n  }, [datasource, otelEnabled, otelVersion, builderOptionsDispatch]);\n};\n\n// Finds and selects a default log time column, updates when table changes\nexport const useDefaultTimeColumn = (\n  datasource: Datasource,\n  allColumns: readonly TableColumn[],\n  table: string,\n  timeColumn: SelectedColumn | undefined,\n  otelEnabled: boolean,\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>\n) => {\n  const hasDefaultColumnConfigured = useMemo(\n    () => Boolean(datasource.getDefaultLogsTable()) && datasource.getDefaultLogsColumns().has(ColumnHint.Time),\n    [datasource]\n  );\n  const didSetDefaultTime = useRef<boolean>(Boolean(timeColumn) || hasDefaultColumnConfigured);\n  const lastTable = useRef<string>(table || '');\n  if (table !== lastTable.current) {\n    didSetDefaultTime.current = false;\n  }\n\n  if (Boolean(timeColumn) || otelEnabled) {\n    lastTable.current = table;\n    didSetDefaultTime.current = true;\n  }\n\n  useEffect(() => {\n    if (didSetDefaultTime.current || allColumns.length === 0 || !table) {\n      return;\n    }\n\n    const col = allColumns.filter(columnFilterDateTime)[0];\n    if (!col) {\n      return;\n    }\n\n    const timeColumn: SelectedColumn = {\n      name: col.name,\n      type: col.type,\n      hint: ColumnHint.Time,\n    };\n\n    builderOptionsDispatch(setColumnByHint(timeColumn));\n    lastTable.current = table;\n    didSetDefaultTime.current = true;\n  }, [datasource, allColumns, table, builderOptionsDispatch]);\n};\n\n// Apply default filters/orderBy on table change\nexport const useDefaultFilters = (\n  table: string,\n  isNewQuery: boolean,\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>\n) => {\n  const appliedDefaultFilters = useRef<boolean>(!isNewQuery);\n  const lastTable = useRef<string>(table || '');\n  if (table !== lastTable.current) {\n    appliedDefaultFilters.current = false;\n  }\n\n  useEffect(() => {\n    if (!table || appliedDefaultFilters.current) {\n      return;\n    }\n\n    const defaultFilters: Filter[] = [\n      {\n        type: 'datetime',\n        operator: FilterOperator.WithInGrafanaTimeRange,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.Time,\n        condition: 'AND',\n      } as DateFilterWithoutValue,\n      {\n        type: 'string',\n        operator: FilterOperator.IsAnything,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.LogLevel,\n        condition: 'AND',\n      } as StringFilter,\n    ];\n\n    const defaultOrderBy: OrderBy[] = [{ name: '', hint: ColumnHint.Time, dir: OrderByDirection.DESC, default: true }];\n\n    lastTable.current = table;\n    appliedDefaultFilters.current = true;\n    builderOptionsDispatch(\n      setOptions({\n        filters: defaultFilters,\n        orderBy: defaultOrderBy,\n      })\n    );\n  }, [table, builderOptionsDispatch]);\n};\n","import React from 'react';\nimport { RadioButtonGroup, InlineFormLabel } from '@grafana/ui';\n\nexport interface ModeSwitchProps {\n  labelA: string;\n  labelB: string;\n  value: boolean;\n  onChange: (value: boolean) => void;\n  label: string;\n  tooltip: string;\n}\n\n/**\n * Component for switching between modes. Boxes are labeled unlike regular Switch.\n */\nexport const ModeSwitch = (props: ModeSwitchProps) => {\n  const { labelA, labelB, value, onChange, label, tooltip } = props;\n\n  const options = [\n    {\n      label: labelA,\n      value: false,\n    },\n    {\n      label: labelB,\n      value: true,\n    },\n  ];\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <RadioButtonGroup<boolean> options={options} value={value} onChange={(v) => onChange(v)} />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { InlineFormLabel, Select, Button, Input, HorizontalGroup } from '@grafana/ui';\nimport { AggregateColumn, AggregateType, TableColumn } from 'types/queryBuilder';\nimport labels from 'labels';\nimport { selectors } from 'selectors';\nimport { styles } from 'styles';\n\ninterface AggregateProps {\n  columnOptions: Array<SelectableValue<string>>;\n  index: number;\n  aggregate: AggregateColumn;\n  updateAggregate: (index: number, aggregate: AggregateColumn) => void;\n  removeAggregate: (index: number) => void;\n}\n\nconst allAggregateOptions: Array<SelectableValue<AggregateType>> = [\n  { label: 'Count', value: AggregateType.Count },\n  { label: 'Sum', value: AggregateType.Sum },\n  { label: 'Min', value: AggregateType.Min },\n  { label: 'Max', value: AggregateType.Max },\n  { label: 'Average', value: AggregateType.Average },\n  { label: 'Any', value: AggregateType.Any },\n  // { label: 'Distinct Count', value: AggregateType.Count_Distinct },\n];\n\nconst Aggregate = (props: AggregateProps) => {\n  const { index, aggregate, updateAggregate, removeAggregate } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const [alias, setAlias] = useState(aggregate.alias || '');\n  const { aliasLabel } = labels.components.AggregatesEditor;\n\n  // Add current value to aggregate functions\n  const aggregateOptions = allAggregateOptions.slice();\n  if (!aggregateOptions.find((a) => a.value === aggregate.aggregateType)) {\n    aggregateOptions.push({ label: aggregate.aggregateType, value: aggregate.aggregateType });\n  }\n\n  // Add current value to column options\n  const columnOptions = props.columnOptions.slice();\n  if (!columnOptions.find((c) => c.value === aggregate.column)) {\n    columnOptions.push({ label: aggregate.column, value: aggregate.column });\n  }\n\n  return (\n    <HorizontalGroup wrap align=\"flex-start\" justify=\"flex-start\">\n      <Select\n        width={20}\n        className={styles.Common.inlineSelect}\n        options={aggregateOptions}\n        value={aggregate.aggregateType}\n        onChange={(e) => updateAggregate(index, { ...aggregate, aggregateType: e.value! })}\n        menuPlacement={'bottom'}\n        allowCustomValue\n      />\n      <Select<string>\n        width={40}\n        className={styles.Common.inlineSelect}\n        options={columnOptions}\n        isOpen={isOpen}\n        onOpenMenu={() => setIsOpen(true)}\n        onCloseMenu={() => setIsOpen(false)}\n        onChange={(e) => updateAggregate(index, { ...aggregate, column: e.value! })}\n        value={aggregate.column}\n        menuPlacement={'bottom'}\n        allowCustomValue\n      />\n      <InlineFormLabel width={2} className=\"query-keyword\">\n        {aliasLabel}\n      </InlineFormLabel>\n      <Input\n        width={20}\n        value={alias}\n        onChange={(e) => setAlias(e.currentTarget.value)}\n        onBlur={(e) => updateAggregate(index, { ...aggregate, alias: e.currentTarget.value })}\n        placeholder=\"alias\"\n      />\n      <Button\n        data-testid={selectors.components.QueryBuilder.AggregateEditor.itemRemoveButton}\n        className={styles.Common.smallBtn}\n        variant=\"destructive\"\n        size=\"sm\"\n        icon=\"trash-alt\"\n        onClick={() => removeAggregate(index)}\n      />\n    </HorizontalGroup>\n  );\n};\n\ninterface AggregateEditorProps {\n  allColumns: readonly TableColumn[];\n  aggregates: AggregateColumn[];\n  onAggregatesChange: (aggregates: AggregateColumn[]) => void;\n}\n\nconst allColumnName = '*';\n\nexport const AggregateEditor = (props: AggregateEditorProps) => {\n  const { allColumns, aggregates, onAggregatesChange } = props;\n  const { label, tooltip, addLabel } = labels.components.AggregatesEditor;\n  const columnOptions: Array<SelectableValue<string>> = allColumns.map((c) => ({\n    label: c.label || c.name,\n    value: c.name,\n  }));\n  columnOptions.push({ label: allColumnName, value: allColumnName });\n\n  const addAggregate = () => {\n    const nextAggregates: AggregateColumn[] = aggregates.slice();\n    nextAggregates.push({ column: '', aggregateType: AggregateType.Count });\n    onAggregatesChange(nextAggregates);\n  };\n  const removeAggregate = (index: number) => {\n    const nextAggregates: AggregateColumn[] = aggregates.slice();\n    nextAggregates.splice(index, 1);\n    onAggregatesChange(nextAggregates);\n  };\n  const updateAggregate = (index: number, aggregatesItem: AggregateColumn) => {\n    const nextAggregates: AggregateColumn[] = aggregates.slice();\n    nextAggregates[index] = aggregatesItem;\n    onAggregatesChange(nextAggregates);\n  };\n\n  const fieldLabel = (\n    <InlineFormLabel\n      width={8}\n      className=\"query-keyword\"\n      data-testid={selectors.components.QueryBuilder.AggregateEditor.sectionLabel}\n      tooltip={tooltip}\n    >\n      {label}\n    </InlineFormLabel>\n  );\n  const fieldSpacer = <div className={`width-8 ${styles.Common.firstLabel}`}></div>;\n\n  return (\n    <>\n      {aggregates.map((aggregate, index) => {\n        const key = `${index}-${aggregate.column}-${aggregate.aggregateType}-${aggregate.alias}`;\n        return (\n          <div\n            className=\"gf-form\"\n            key={key}\n            data-testid={selectors.components.QueryBuilder.AggregateEditor.itemWrapper}\n          >\n            {index === 0 ? fieldLabel : fieldSpacer}\n            <Aggregate\n              columnOptions={columnOptions}\n              index={index}\n              aggregate={aggregate}\n              updateAggregate={updateAggregate}\n              removeAggregate={removeAggregate}\n            />\n          </div>\n        );\n      })}\n\n      <div className=\"gf-form\">\n        {aggregates.length === 0 ? fieldLabel : fieldSpacer}\n        <Button\n          data-testid={selectors.components.QueryBuilder.AggregateEditor.addButton}\n          icon=\"plus-circle\"\n          variant=\"secondary\"\n          size=\"sm\"\n          onClick={addAggregate}\n          className={styles.Common.smallBtn}\n        >\n          {addLabel}\n        </Button>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { InlineFormLabel, MultiSelect } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { TableColumn } from 'types/queryBuilder';\nimport labels from 'labels';\nimport { styles } from 'styles';\nimport { selectors } from 'selectors';\n\ninterface GroupByEditorProps {\n  allColumns: readonly TableColumn[];\n  groupBy: string[];\n  onGroupByChange: (groupBy: string[]) => void;\n}\n\nexport const GroupByEditor = (props: GroupByEditorProps) => {\n  const { allColumns, groupBy, onGroupByChange } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const { label, tooltip } = labels.components.GroupByEditor;\n  const options: Array<SelectableValue<string>> = allColumns.map((c) => ({ label: c.name, value: c.name }));\n\n  const onChange = (selection: Array<SelectableValue<string>>) => {\n    setIsOpen(false);\n    onGroupByChange(selection.map((s) => s.value!));\n  };\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <div\n        data-testid={selectors.components.QueryBuilder.GroupByEditor.multiSelectWrapper}\n        className={styles.Common.selectWrapper}\n      >\n        <MultiSelect\n          options={options}\n          isOpen={isOpen}\n          onOpenMenu={() => setIsOpen(true)}\n          onCloseMenu={() => setIsOpen(false)}\n          value={groupBy}\n          onChange={onChange}\n          allowCustomValue={true}\n          menuPlacement={'bottom'}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { ColumnsEditor } from '../ColumnsEditor';\nimport {\n  AggregateColumn,\n  BuilderMode,\n  Filter,\n  OrderBy,\n  QueryBuilderOptions,\n  ColumnHint,\n  SelectedColumn,\n} from 'types/queryBuilder';\nimport { OrderByEditor, getOrderByOptions } from '../OrderByEditor';\nimport { LimitEditor } from '../LimitEditor';\nimport { FiltersEditor } from '../FilterEditor';\nimport allLabels from 'labels';\nimport { ModeSwitch } from '../ModeSwitch';\nimport { AggregateEditor } from '../AggregateEditor';\nimport { GroupByEditor } from '../GroupByEditor';\nimport { ColumnSelect } from '../ColumnSelect';\nimport { getColumnByHint } from 'data/sqlGenerator';\nimport { columnFilterDateTime } from 'data/columnFilters';\nimport { Datasource } from 'data/CHDatasource';\nimport { useBuilderOptionChanges } from 'hooks/useBuilderOptionChanges';\nimport useColumns from 'hooks/useColumns';\nimport { BuilderOptionsReducerAction, setOptions } from 'hooks/useBuilderOptionsState';\nimport { useDefaultFilters, useDefaultTimeColumn } from './timeSeriesQueryBuilderHooks';\nimport useIsNewQuery from 'hooks/useIsNewQuery';\n\ninterface TimeSeriesQueryBuilderProps {\n  datasource: Datasource;\n  builderOptions: QueryBuilderOptions;\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>;\n}\n\ninterface TimeSeriesQueryBuilderState {\n  isAggregateMode: boolean;\n  timeColumn?: SelectedColumn;\n  selectedColumns: SelectedColumn[];\n  aggregates: AggregateColumn[];\n  groupBy: string[];\n  orderBy: OrderBy[];\n  limit: number;\n  filters: Filter[];\n}\n\nexport const TimeSeriesQueryBuilder = (props: TimeSeriesQueryBuilderProps) => {\n  const { datasource, builderOptions, builderOptionsDispatch } = props;\n  const isNewQuery = useIsNewQuery(builderOptions);\n  const allColumns = useColumns(datasource, builderOptions.database, builderOptions.table);\n  const labels = allLabels.components.TimeSeriesQueryBuilder;\n  const builderState: TimeSeriesQueryBuilderState = useMemo(\n    () => ({\n      // TODO: do not depend on \"mode\"\n      isAggregateMode: builderOptions.mode === BuilderMode.Trend,\n      timeColumn: getColumnByHint(builderOptions, ColumnHint.Time),\n      selectedColumns: (builderOptions.columns || []).filter((c) => c.hint !== ColumnHint.Time),\n      aggregates: builderOptions.aggregates || [],\n      groupBy: builderOptions.groupBy || [],\n      orderBy: builderOptions.orderBy || [],\n      limit: builderOptions.limit || 0,\n      filters: builderOptions.filters || [],\n    }),\n    [builderOptions]\n  );\n\n  const onOptionChange = useBuilderOptionChanges<TimeSeriesQueryBuilderState>((next) => {\n    let nextColumns = next.selectedColumns.slice();\n    if (next.isAggregateMode) {\n      nextColumns = [];\n    }\n\n    if (next.timeColumn) {\n      nextColumns.push(next.timeColumn);\n    }\n\n    builderOptionsDispatch(\n      setOptions({\n        mode: next.isAggregateMode ? BuilderMode.Trend : BuilderMode.Aggregate,\n        columns: nextColumns,\n        aggregates: next.isAggregateMode ? next.aggregates : [],\n        groupBy: next.isAggregateMode ? next.groupBy : [],\n        filters: next.filters,\n        orderBy: next.orderBy,\n        limit: next.limit,\n      })\n    );\n  }, builderState);\n\n  useDefaultTimeColumn(allColumns, builderOptions.table, builderState.timeColumn, builderOptionsDispatch);\n  useDefaultFilters(builderOptions.table, isNewQuery, builderOptionsDispatch);\n\n  return (\n    <div>\n      <ModeSwitch\n        labelA={labels.simpleQueryModeLabel}\n        labelB={labels.aggregateQueryModeLabel}\n        value={builderState.isAggregateMode}\n        onChange={onOptionChange('isAggregateMode')}\n        label={labels.builderModeLabel}\n        tooltip={labels.builderModeTooltip}\n      />\n\n      <ColumnSelect\n        allColumns={allColumns}\n        selectedColumn={builderState.timeColumn}\n        invalid={!builderState.timeColumn}\n        onColumnChange={onOptionChange('timeColumn')}\n        columnFilterFn={columnFilterDateTime}\n        columnHint={ColumnHint.Time}\n        label={labels.timeColumn.label}\n        tooltip={labels.timeColumn.tooltip}\n        clearable={false}\n      />\n\n      {builderState.isAggregateMode ? (\n        <>\n          <AggregateEditor\n            allColumns={allColumns}\n            aggregates={builderState.aggregates}\n            onAggregatesChange={onOptionChange('aggregates')}\n          />\n          <GroupByEditor\n            groupBy={builderState.groupBy}\n            onGroupByChange={onOptionChange('groupBy')}\n            allColumns={allColumns}\n          />\n        </>\n      ) : (\n        <ColumnsEditor\n          allColumns={allColumns}\n          selectedColumns={builderState.selectedColumns}\n          onSelectedColumnsChange={onOptionChange('selectedColumns')}\n        />\n      )}\n\n      <OrderByEditor\n        orderByOptions={getOrderByOptions(builderOptions, allColumns)}\n        orderBy={builderState.orderBy}\n        onOrderByChange={onOptionChange('orderBy')}\n      />\n      <LimitEditor limit={builderState.limit} onLimitChange={onOptionChange('limit')} />\n      <FiltersEditor\n        filters={builderState.filters}\n        onFiltersChange={onOptionChange('filters')}\n        allColumns={allColumns}\n        datasource={datasource}\n        database={builderOptions.database}\n        table={builderOptions.table}\n      />\n    </div>\n  );\n};\n","import { columnFilterDateTime } from 'data/columnFilters';\nimport { BuilderOptionsReducerAction, setColumnByHint, setOptions } from 'hooks/useBuilderOptionsState';\nimport React, { useEffect, useRef } from 'react';\nimport {\n  ColumnHint,\n  DateFilterWithoutValue,\n  Filter,\n  FilterOperator,\n  OrderBy,\n  OrderByDirection,\n  SelectedColumn,\n  TableColumn,\n} from 'types/queryBuilder';\n\n// Finds and selects a default log time column, updates when table changes\nexport const useDefaultTimeColumn = (\n  allColumns: readonly TableColumn[],\n  table: string,\n  timeColumn: SelectedColumn | undefined,\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>\n) => {\n  const didSetDefaultTime = useRef<boolean>(Boolean(timeColumn));\n  const lastTable = useRef<string>(table || '');\n  if (table !== lastTable.current) {\n    didSetDefaultTime.current = false;\n  }\n\n  useEffect(() => {\n    if (didSetDefaultTime.current || allColumns.length === 0 || !table) {\n      return;\n    }\n\n    const col = allColumns.filter(columnFilterDateTime)[0];\n    if (!col) {\n      return;\n    }\n\n    const timeColumn: SelectedColumn = {\n      name: col.name,\n      type: col.type,\n      hint: ColumnHint.Time,\n    };\n\n    builderOptionsDispatch(setColumnByHint(timeColumn));\n    lastTable.current = table;\n    didSetDefaultTime.current = true;\n  }, [allColumns, table, builderOptionsDispatch]);\n};\n\n// Apply default filters on table change\nexport const useDefaultFilters = (\n  table: string,\n  isNewQuery: boolean,\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>\n) => {\n  const appliedDefaultFilters = useRef<boolean>(!isNewQuery);\n  const lastTable = useRef<string>(table || '');\n  if (table !== lastTable.current) {\n    appliedDefaultFilters.current = false;\n  }\n\n  useEffect(() => {\n    if (!table || appliedDefaultFilters.current) {\n      return;\n    }\n\n    const defaultFilters: Filter[] = [\n      {\n        type: 'datetime',\n        operator: FilterOperator.WithInGrafanaTimeRange,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.Time,\n        condition: 'AND',\n      } as DateFilterWithoutValue,\n    ];\n\n    const defaultOrderBy: OrderBy[] = [{ name: '', hint: ColumnHint.Time, dir: OrderByDirection.ASC, default: true }];\n\n    lastTable.current = table;\n    appliedDefaultFilters.current = true;\n    builderOptionsDispatch(\n      setOptions({\n        filters: defaultFilters,\n        orderBy: defaultOrderBy,\n      })\n    );\n  }, [table, builderOptionsDispatch]);\n};\n","import React, { useMemo } from 'react';\nimport { ColumnsEditor } from '../ColumnsEditor';\nimport { AggregateColumn, BuilderMode, Filter, OrderBy, QueryBuilderOptions, SelectedColumn } from 'types/queryBuilder';\nimport { OrderByEditor, getOrderByOptions } from '../OrderByEditor';\nimport { LimitEditor } from '../LimitEditor';\nimport { FiltersEditor } from '../FilterEditor';\nimport allLabels from 'labels';\nimport { ModeSwitch } from '../ModeSwitch';\nimport { AggregateEditor } from '../AggregateEditor';\nimport { GroupByEditor } from '../GroupByEditor';\nimport { Datasource } from 'data/CHDatasource';\nimport { useBuilderOptionChanges } from 'hooks/useBuilderOptionChanges';\nimport useColumns from 'hooks/useColumns';\nimport { BuilderOptionsReducerAction, setOptions } from 'hooks/useBuilderOptionsState';\n\ninterface TableQueryBuilderProps {\n  datasource: Datasource;\n  builderOptions: QueryBuilderOptions;\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>;\n}\n\ninterface TableQueryBuilderState {\n  isAggregateMode: boolean;\n  selectedColumns: SelectedColumn[];\n  aggregates: AggregateColumn[];\n  groupBy: string[];\n  orderBy: OrderBy[];\n  limit: number;\n  filters: Filter[];\n}\n\nexport const TableQueryBuilder = (props: TableQueryBuilderProps) => {\n  const { datasource, builderOptions, builderOptionsDispatch } = props;\n  const allColumns = useColumns(datasource, builderOptions.database, builderOptions.table);\n  const labels = allLabels.components.TableQueryBuilder;\n  const builderState: TableQueryBuilderState = useMemo(\n    () => ({\n      isAggregateMode: builderOptions.mode === BuilderMode.Aggregate,\n      selectedColumns: builderOptions.columns || [],\n      aggregates: builderOptions.aggregates || [],\n      groupBy: builderOptions.groupBy || [],\n      orderBy: builderOptions.orderBy || [],\n      limit: builderOptions.limit || 0,\n      filters: builderOptions.filters || [],\n    }),\n    [builderOptions]\n  );\n\n  const onOptionChange = useBuilderOptionChanges<TableQueryBuilderState>((next) => {\n    builderOptionsDispatch(\n      setOptions({\n        mode: next.isAggregateMode ? BuilderMode.Aggregate : BuilderMode.List,\n        columns: next.selectedColumns,\n        aggregates: next.aggregates,\n        groupBy: next.groupBy,\n        filters: next.filters,\n        orderBy: next.orderBy,\n        limit: next.limit,\n      })\n    );\n  }, builderState);\n\n  return (\n    <div>\n      <ModeSwitch\n        labelA={labels.simpleQueryModeLabel}\n        labelB={labels.aggregateQueryModeLabel}\n        value={builderState.isAggregateMode}\n        onChange={onOptionChange('isAggregateMode')}\n        label={labels.builderModeLabel}\n        tooltip={labels.builderModeTooltip}\n      />\n\n      <ColumnsEditor\n        allColumns={allColumns}\n        selectedColumns={builderState.selectedColumns}\n        onSelectedColumnsChange={onOptionChange('selectedColumns')}\n        showAllOption\n      />\n\n      {builderState.isAggregateMode && (\n        <>\n          <AggregateEditor\n            allColumns={allColumns}\n            aggregates={builderState.aggregates}\n            onAggregatesChange={onOptionChange('aggregates')}\n          />\n          <GroupByEditor\n            groupBy={builderState.groupBy}\n            onGroupByChange={onOptionChange('groupBy')}\n            allColumns={allColumns}\n          />\n        </>\n      )}\n\n      <OrderByEditor\n        orderByOptions={getOrderByOptions(builderOptions, allColumns)}\n        orderBy={builderState.orderBy}\n        onOrderByChange={onOptionChange('orderBy')}\n      />\n      <LimitEditor limit={builderState.limit} onLimitChange={onOptionChange('limit')} />\n      <FiltersEditor\n        filters={builderState.filters}\n        onFiltersChange={onOptionChange('filters')}\n        allColumns={allColumns}\n        datasource={datasource}\n        database={builderOptions.database}\n        table={builderOptions.table}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { InlineFormLabel } from '@grafana/ui';\nimport labels from 'labels';\n\ninterface SqlPreviewProps {\n  sql: string;\n}\n\nexport const SqlPreview = (props: SqlPreviewProps) => {\n  const { sql } = props;\n  const { label, tooltip } = labels.components.SqlPreview;\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <pre>{sql}</pre>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { InlineFormLabel, Select } from '@grafana/ui';\nimport { Datasource } from '../../data/CHDatasource';\nimport labels from 'labels';\nimport { styles } from '../../styles';\nimport useTables from 'hooks/useTables';\nimport useDatabases from 'hooks/useDatabases';\n\nexport type DatabaseSelectProps = {\n  datasource: Datasource;\n  database: string;\n  onDatabaseChange: (value: string) => void;\n};\n\nexport const DatabaseSelect = (props: DatabaseSelectProps) => {\n  const { datasource, onDatabaseChange, database } = props;\n  const databases = useDatabases(datasource);\n  const { label, tooltip, empty } = labels.components.DatabaseSelect;\n\n  const options = databases.map((d) => ({ label: d, value: d }));\n  options.push({ label: empty, value: '' }); // Allow a blank value\n\n  // Add selected value to the list if it does not exist.\n  // When loading an existing query, the saved value may no longer be in the list\n  if (database && !databases.includes(database)) {\n    options.push({ label: database, value: database });\n  }\n\n  useEffect(() => {\n    // Auto select default db\n    if (!database) {\n      onDatabaseChange(datasource.getDefaultDatabase());\n    }\n  }, [datasource, database, onDatabaseChange]);\n\n  return (\n    <>\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Select\n        className={`width-15 ${styles.Common.inlineSelect}`}\n        options={options}\n        value={database}\n        onChange={(e) => onDatabaseChange(e.value!)}\n        menuPlacement={'bottom'}\n        allowCustomValue\n      ></Select>\n    </>\n  );\n};\n\nexport type TableSelectProps = {\n  datasource: Datasource;\n  database: string;\n  table: string;\n  onTableChange: (value: string) => void;\n};\n\nexport const TableSelect = (props: TableSelectProps) => {\n  const { datasource, onTableChange, database, table } = props;\n  const tables = useTables(datasource, database);\n  const { label, tooltip, empty } = labels.components.TableSelect;\n\n  const options = tables.map((t) => ({ label: t, value: t }));\n  options.push({ label: empty, value: '' }); // Allow a blank value\n\n  // Include saved value in case it's no longer listed\n  if (table && !tables.includes(table)) {\n    options.push({ label: table, value: table });\n  }\n\n  useEffect(() => {\n    // Auto select first/default table\n    if (database && !table && tables.length > 0) {\n      onTableChange(datasource.getDefaultTable() || tables[0]);\n    }\n  }, [database, table, tables, datasource, onTableChange]);\n\n  return (\n    <>\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Select\n        className={`width-15 ${styles.Common.inlineSelect}`}\n        options={options}\n        value={table}\n        onChange={(e) => onTableChange(e.value!)}\n        menuPlacement={'bottom'}\n        allowCustomValue\n      ></Select>\n    </>\n  );\n};\n\nexport type DatabaseTableSelectProps = {\n  datasource: Datasource;\n  database: string;\n  onDatabaseChange: (value: string) => void;\n  table: string;\n  onTableChange: (value: string) => void;\n};\n\nexport const DatabaseTableSelect = (props: DatabaseTableSelectProps) => {\n  const { datasource, database, onDatabaseChange, table, onTableChange } = props;\n\n  return (\n    <div className=\"gf-form\">\n      <DatabaseSelect datasource={datasource} database={database} onDatabaseChange={onDatabaseChange} />\n      <TableSelect datasource={datasource} database={database} table={table} onTableChange={onTableChange} />\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Datasource } from 'data/CHDatasource';\n\nexport default (datasource: Datasource): readonly string[] => {\n  const [databases, setDatabases] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (!datasource) {\n      return;\n    }\n\n    datasource\n      .fetchDatabases()\n      .then((databases) => setDatabases(databases))\n      .catch((ex: any) => {\n        console.error('Failed to fetch databases', ex);\n      });\n  }, [datasource]);\n\n  return databases;\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { Datasource } from 'data/CHDatasource';\n\nexport default (datasource: Datasource, database: string): readonly string[] => {\n  const [tables, setTables] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (!datasource || !database) {\n      return;\n    }\n\n    let ignore = false;\n    datasource\n      .fetchTables(database)\n      .then((tables) => {\n        if (ignore) {\n          return;\n        }\n        setTables(tables);\n      })\n      .catch((ex: any) => {\n        console.error('Failed to fetch tables for database:', database, ex);\n      });\n\n    return () => {\n      ignore = true;\n    };\n  }, [datasource, database]);\n\n  // Immediately return empty array on change so tables aren't stale\n  const lastDatabase = useRef<string>('');\n  if (database !== lastDatabase.current) {\n    lastDatabase.current = database;\n    setTables([]);\n    return [];\n  }\n\n  return tables;\n};\n","import React from 'react';\nimport { RadioButtonGroup, InlineFormLabel } from '@grafana/ui';\nimport labels from 'labels';\nimport { QueryType } from 'types/queryBuilder';\n\nexport interface QueryTypeSwitcherProps {\n  queryType: QueryType;\n  onChange: (queryType: QueryType) => void;\n  sqlEditor?: boolean;\n}\n\nconst options = [\n  {\n    label: labels.types.QueryType.table,\n    value: QueryType.Table,\n  },\n  {\n    label: labels.types.QueryType.logs,\n    value: QueryType.Logs,\n  },\n  {\n    label: labels.types.QueryType.timeseries,\n    value: QueryType.TimeSeries,\n  },\n  {\n    label: labels.types.QueryType.traces,\n    value: QueryType.Traces,\n  },\n];\n\n/**\n * Component for switching between the different query builder interfaces\n */\nexport const QueryTypeSwitcher = (props: QueryTypeSwitcherProps) => {\n  const { queryType, onChange, sqlEditor } = props;\n  const { label, tooltip, sqlTooltip } = labels.components.QueryTypeSwitcher;\n\n  return (\n    <span>\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={sqlEditor ? sqlTooltip : tooltip}>\n        {label}\n      </InlineFormLabel>\n      <RadioButtonGroup options={options} value={queryType} onChange={onChange} />\n    </span>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport allLabels from 'labels';\nimport { InlineFormLabel, Input } from '@grafana/ui';\nimport { selectors } from 'selectors';\n\ninterface TraceIdInputProps {\n  traceId: string;\n  onChange: (traceId: string) => void;\n  disabled?: boolean;\n}\n\nconst TraceIdInput = (props: TraceIdInputProps) => {\n  const [inputId, setInputId] = useState<string>('');\n  const { traceId, onChange, disabled } = props;\n  const { label, tooltip } = allLabels.components.TraceQueryBuilder.columns.traceIdFilter;\n\n  useEffect(() => {\n    setInputId(traceId);\n  }, [traceId]);\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Input\n        data-testid={selectors.components.QueryBuilder.TraceIdInput.input}\n        width={40}\n        value={inputId}\n        disabled={disabled}\n        type=\"string\"\n        onChange={(e) => setInputId(e.currentTarget.value)}\n        onBlur={() => onChange(inputId)}\n      />\n    </div>\n  );\n};\n\nexport default TraceIdInput;\n","import React, { useMemo, useState } from 'react';\nimport { Filter, QueryBuilderOptions, SelectedColumn, ColumnHint, TimeUnit, OrderBy } from 'types/queryBuilder';\nimport { ColumnSelect } from '../ColumnSelect';\nimport { FiltersEditor } from '../FilterEditor';\nimport allLabels from 'labels';\nimport { ModeSwitch } from '../ModeSwitch';\nimport { getColumnByHint } from 'data/sqlGenerator';\nimport { Alert, Collapse, Stack } from '@grafana/ui';\nimport { DurationUnitSelect } from 'components/queryBuilder/DurationUnitSelect';\nimport { Datasource } from 'data/CHDatasource';\nimport { useBuilderOptionChanges } from 'hooks/useBuilderOptionChanges';\nimport useColumns from 'hooks/useColumns';\nimport { BuilderOptionsReducerAction, setOptions, setOtelEnabled, setOtelVersion } from 'hooks/useBuilderOptionsState';\nimport useIsNewQuery from 'hooks/useIsNewQuery';\nimport { OtelVersionSelect } from '../OtelVersionSelect';\nimport { useDefaultFilters, useOtelColumns, useTraceDefaultsOnMount } from './traceQueryBuilderHooks';\nimport TraceIdInput from '../TraceIdInput';\nimport { OrderByEditor, getOrderByOptions } from '../OrderByEditor';\nimport { LimitEditor } from '../LimitEditor';\nimport { LabeledInput } from 'components/configEditor/LabeledInput';\nimport { Switch } from '../Switch';\n\ninterface TraceQueryBuilderProps {\n  datasource: Datasource;\n  builderOptions: QueryBuilderOptions;\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>;\n}\n\ninterface TraceQueryBuilderState {\n  isTraceIdMode: boolean;\n  otelEnabled: boolean;\n  otelVersion: string;\n  traceIdColumn?: SelectedColumn;\n  spanIdColumn?: SelectedColumn;\n  parentSpanIdColumn?: SelectedColumn;\n  serviceNameColumn?: SelectedColumn;\n  operationNameColumn?: SelectedColumn;\n  startTimeColumn?: SelectedColumn;\n  durationTimeColumn?: SelectedColumn;\n  durationUnit: TimeUnit;\n  tagsColumn?: SelectedColumn;\n  serviceTagsColumn?: SelectedColumn;\n  kindColumn?: SelectedColumn;\n  statusCodeColumn?: SelectedColumn;\n  statusMessageColumn?: SelectedColumn;\n  stateColumn?: SelectedColumn;\n  instrumentationLibraryNameColumn?: SelectedColumn;\n  instrumentationLibraryVersionColumn?: SelectedColumn;\n  flattenNested?: boolean;\n  traceEventsColumnPrefix?: string;\n  traceLinksColumnPrefix?: string;\n  traceId: string;\n  orderBy: OrderBy[];\n  limit: number;\n  filters: Filter[];\n}\n\nexport const TraceQueryBuilder = (props: TraceQueryBuilderProps) => {\n  const { datasource, builderOptions, builderOptionsDispatch } = props;\n  const allColumns = useColumns(datasource, builderOptions.database, builderOptions.table);\n  const isNewQuery = useIsNewQuery(builderOptions);\n  const [showConfigWarning, setConfigWarningOpen] = useState(\n    datasource.getDefaultTraceColumns().size === 0 && builderOptions.columns?.length === 0\n  );\n  const [isColumnsOpen, setColumnsOpen] = useState<boolean>(showConfigWarning); // Toggle Columns collapse section\n  const [isFiltersOpen, setFiltersOpen] = useState<boolean>(\n    !(builderOptions.meta?.isTraceIdMode && builderOptions.meta.traceId)\n  ); // Toggle Filters collapse section\n  const labels = allLabels.components.TraceQueryBuilder;\n  const builderState = useMemo<TraceQueryBuilderState>(\n    () => ({\n      isTraceIdMode: builderOptions.meta?.isTraceIdMode || false,\n      otelEnabled: builderOptions.meta?.otelEnabled || false,\n      otelVersion: builderOptions.meta?.otelVersion || '',\n      traceIdColumn: getColumnByHint(builderOptions, ColumnHint.TraceId),\n      spanIdColumn: getColumnByHint(builderOptions, ColumnHint.TraceSpanId),\n      parentSpanIdColumn: getColumnByHint(builderOptions, ColumnHint.TraceParentSpanId),\n      serviceNameColumn: getColumnByHint(builderOptions, ColumnHint.TraceServiceName),\n      operationNameColumn: getColumnByHint(builderOptions, ColumnHint.TraceOperationName),\n      startTimeColumn: getColumnByHint(builderOptions, ColumnHint.Time),\n      durationTimeColumn: getColumnByHint(builderOptions, ColumnHint.TraceDurationTime),\n      durationUnit: builderOptions.meta?.traceDurationUnit || TimeUnit.Nanoseconds,\n      tagsColumn: getColumnByHint(builderOptions, ColumnHint.TraceTags),\n      serviceTagsColumn: getColumnByHint(builderOptions, ColumnHint.TraceServiceTags),\n      kindColumn: getColumnByHint(builderOptions, ColumnHint.TraceKind),\n      statusCodeColumn: getColumnByHint(builderOptions, ColumnHint.TraceStatusCode),\n      statusMessageColumn: getColumnByHint(builderOptions, ColumnHint.TraceStatusMessage),\n      stateColumn: getColumnByHint(builderOptions, ColumnHint.TraceState),\n      instrumentationLibraryNameColumn: getColumnByHint(builderOptions, ColumnHint.TraceInstrumentationLibraryName),\n      instrumentationLibraryVersionColumn: getColumnByHint(\n        builderOptions,\n        ColumnHint.TraceInstrumentationLibraryVersion\n      ),\n      flattenNested: Boolean(builderOptions.meta?.flattenNested),\n      traceEventsColumnPrefix: builderOptions.meta?.traceEventsColumnPrefix || '',\n      traceLinksColumnPrefix: builderOptions.meta?.traceLinksColumnPrefix || '',\n      traceId: builderOptions.meta?.traceId || '',\n      orderBy: builderOptions.orderBy || [],\n      limit: builderOptions.limit || 0,\n      filters: builderOptions.filters || [],\n    }),\n    [builderOptions]\n  );\n\n  const onOptionChange = useBuilderOptionChanges<TraceQueryBuilderState>((next) => {\n    const nextColumns = [\n      next.traceIdColumn,\n      next.spanIdColumn,\n      next.parentSpanIdColumn,\n      next.serviceNameColumn,\n      next.operationNameColumn,\n      next.startTimeColumn,\n      next.durationTimeColumn,\n      next.tagsColumn,\n      next.serviceTagsColumn,\n      next.serviceTagsColumn,\n      next.kindColumn,\n      next.statusCodeColumn,\n      next.statusMessageColumn,\n      next.stateColumn,\n      next.instrumentationLibraryNameColumn,\n      next.instrumentationLibraryVersionColumn,\n    ].filter((c) => c !== undefined) as SelectedColumn[];\n\n    builderOptionsDispatch(\n      setOptions({\n        columns: nextColumns,\n        orderBy: next.orderBy,\n        limit: next.limit,\n        filters: next.filters,\n        meta: {\n          isTraceIdMode: next.isTraceIdMode,\n          traceDurationUnit: next.durationUnit,\n          traceId: next.traceId,\n          flattenNested: next.flattenNested,\n          traceEventsColumnPrefix: next.traceEventsColumnPrefix,\n          traceLinksColumnPrefix: next.traceLinksColumnPrefix,\n        },\n      })\n    );\n  }, builderState);\n\n  useTraceDefaultsOnMount(datasource, isNewQuery, builderOptions, builderOptionsDispatch);\n  useOtelColumns(builderState.otelEnabled, builderState.otelVersion, builderOptionsDispatch);\n  useDefaultFilters(builderOptions.table, builderState.isTraceIdMode, isNewQuery, builderOptionsDispatch);\n\n  const configWarning = showConfigWarning && (\n    <Alert title=\"\" severity=\"warning\" buttonContent=\"Close\" onRemove={() => setConfigWarningOpen(false)}>\n      <Stack>\n        <div>\n          {'To speed up your query building, enter your default trace configuration in your '}\n          <a\n            style={{ textDecoration: 'underline' }}\n            href={`/connections/datasources/edit/${encodeURIComponent(datasource.uid)}#traces-config`}\n          >\n            ClickHouse Data Source settings\n          </a>\n        </div>\n      </Stack>\n    </Alert>\n  );\n\n  return (\n    <div>\n      <ModeSwitch\n        labelA={labels.traceSearchModeLabel}\n        labelB={labels.traceIdModeLabel}\n        value={builderState.isTraceIdMode}\n        onChange={onOptionChange('isTraceIdMode')}\n        label={labels.traceModeLabel}\n        tooltip={labels.traceModeTooltip}\n      />\n\n      <Collapse label={labels.columnsSection} collapsible isOpen={isColumnsOpen} onToggle={setColumnsOpen}>\n        {configWarning}\n        <OtelVersionSelect\n          enabled={builderState.otelEnabled}\n          onEnabledChange={(e) => builderOptionsDispatch(setOtelEnabled(e))}\n          selectedVersion={builderState.otelVersion}\n          onVersionChange={(v) => builderOptionsDispatch(setOtelVersion(v))}\n          wide\n        />\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.traceIdColumn}\n            invalid={!builderState.traceIdColumn}\n            onColumnChange={onOptionChange('traceIdColumn')}\n            columnHint={ColumnHint.TraceId}\n            label={labels.columns.traceId.label}\n            tooltip={labels.columns.traceId.tooltip}\n            wide\n          />\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.spanIdColumn}\n            invalid={!builderState.spanIdColumn}\n            onColumnChange={onOptionChange('spanIdColumn')}\n            columnHint={ColumnHint.TraceSpanId}\n            label={labels.columns.spanId.label}\n            tooltip={labels.columns.spanId.tooltip}\n            wide\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.parentSpanIdColumn}\n            invalid={!builderState.parentSpanIdColumn}\n            onColumnChange={onOptionChange('parentSpanIdColumn')}\n            columnHint={ColumnHint.TraceParentSpanId}\n            label={labels.columns.parentSpanId.label}\n            tooltip={labels.columns.parentSpanId.tooltip}\n            wide\n          />\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.serviceNameColumn}\n            invalid={!builderState.serviceNameColumn}\n            onColumnChange={onOptionChange('serviceNameColumn')}\n            columnHint={ColumnHint.TraceServiceName}\n            label={labels.columns.serviceName.label}\n            tooltip={labels.columns.serviceName.tooltip}\n            wide\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.operationNameColumn}\n            invalid={!builderState.operationNameColumn}\n            onColumnChange={onOptionChange('operationNameColumn')}\n            columnHint={ColumnHint.TraceOperationName}\n            label={labels.columns.operationName.label}\n            tooltip={labels.columns.operationName.tooltip}\n            wide\n          />\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.startTimeColumn}\n            invalid={!builderState.startTimeColumn}\n            onColumnChange={onOptionChange('startTimeColumn')}\n            columnHint={ColumnHint.Time}\n            label={labels.columns.startTime.label}\n            tooltip={labels.columns.startTime.tooltip}\n            wide\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.durationTimeColumn}\n            invalid={!builderState.durationTimeColumn}\n            onColumnChange={onOptionChange('durationTimeColumn')}\n            columnHint={ColumnHint.TraceDurationTime}\n            label={labels.columns.durationTime.label}\n            tooltip={labels.columns.durationTime.tooltip}\n            wide\n          />\n          <DurationUnitSelect\n            disabled={builderState.otelEnabled}\n            unit={builderState.durationUnit}\n            onChange={onOptionChange('durationUnit')}\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.tagsColumn}\n            invalid={!builderState.tagsColumn}\n            onColumnChange={onOptionChange('tagsColumn')}\n            columnHint={ColumnHint.TraceTags}\n            label={labels.columns.tags.label}\n            tooltip={labels.columns.tags.tooltip}\n            wide\n          />\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.serviceTagsColumn}\n            invalid={!builderState.serviceTagsColumn}\n            onColumnChange={onOptionChange('serviceTagsColumn')}\n            columnHint={ColumnHint.TraceServiceTags}\n            label={labels.columns.serviceTags.label}\n            tooltip={labels.columns.serviceTags.tooltip}\n            wide\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.kindColumn}\n            invalid={!builderState.kindColumn}\n            onColumnChange={onOptionChange('kindColumn')}\n            columnHint={ColumnHint.TraceKind}\n            label={labels.columns.kind.label}\n            tooltip={labels.columns.kind.tooltip}\n            wide\n          />\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.statusCodeColumn}\n            invalid={!builderState.statusCodeColumn}\n            onColumnChange={onOptionChange('statusCodeColumn')}\n            columnHint={ColumnHint.TraceStatusCode}\n            label={labels.columns.statusCode.label}\n            tooltip={labels.columns.statusCode.tooltip}\n            wide\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.statusMessageColumn}\n            invalid={!builderState.statusMessageColumn}\n            onColumnChange={onOptionChange('statusMessageColumn')}\n            columnHint={ColumnHint.TraceStatusMessage}\n            label={labels.columns.statusMessage.label}\n            tooltip={labels.columns.statusMessage.tooltip}\n            wide\n          />\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.stateColumn}\n            invalid={!builderState.stateColumn}\n            onColumnChange={onOptionChange('stateColumn')}\n            columnHint={ColumnHint.TraceState}\n            label={labels.columns.state.label}\n            tooltip={labels.columns.state.tooltip}\n            wide\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.instrumentationLibraryNameColumn}\n            invalid={!builderState.instrumentationLibraryNameColumn}\n            onColumnChange={onOptionChange('instrumentationLibraryNameColumn')}\n            columnHint={ColumnHint.TraceInstrumentationLibraryName}\n            label={labels.columns.instrumentationLibraryName.label}\n            tooltip={labels.columns.instrumentationLibraryName.tooltip}\n            wide\n          />\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.instrumentationLibraryVersionColumn}\n            invalid={!builderState.instrumentationLibraryVersionColumn}\n            onColumnChange={onOptionChange('instrumentationLibraryVersionColumn')}\n            columnHint={ColumnHint.TraceInstrumentationLibraryVersion}\n            label={labels.columns.instrumentationLibraryVersion.label}\n            tooltip={labels.columns.instrumentationLibraryVersion.tooltip}\n            wide\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <Switch\n            disabled={builderState.otelEnabled}\n            label={labels.columns.flattenNested.label}\n            tooltip={labels.columns.flattenNested.tooltip}\n            value={Boolean(builderState.flattenNested)}\n            onChange={onOptionChange('flattenNested')}\n            wide\n          />\n        </div>\n        <div className=\"gf-form\">\n          <LabeledInput\n            disabled={builderState.otelEnabled}\n            label={labels.columns.eventsPrefix.label}\n            tooltip={labels.columns.eventsPrefix.tooltip}\n            value={builderState.traceEventsColumnPrefix || ''}\n            onChange={onOptionChange('traceEventsColumnPrefix')}\n          />\n        </div>\n        <div className=\"gf-form\">\n          <LabeledInput\n            disabled={builderState.otelEnabled}\n            label={labels.columns.linksPrefix.label}\n            tooltip={labels.columns.linksPrefix.tooltip}\n            value={builderState.traceLinksColumnPrefix || ''}\n            onChange={onOptionChange('traceLinksColumnPrefix')}\n          />\n        </div>\n      </Collapse>\n      <Collapse label={labels.filtersSection} collapsible isOpen={isFiltersOpen} onToggle={setFiltersOpen}>\n        <OrderByEditor\n          orderByOptions={getOrderByOptions(builderOptions, allColumns)}\n          orderBy={builderState.orderBy}\n          onOrderByChange={onOptionChange('orderBy')}\n        />\n        <LimitEditor limit={builderState.limit} onLimitChange={onOptionChange('limit')} />\n        <FiltersEditor\n          allColumns={allColumns}\n          filters={builderState.filters}\n          onFiltersChange={onOptionChange('filters')}\n          datasource={datasource}\n          database={builderOptions.database}\n          table={builderOptions.table}\n        />\n      </Collapse>\n      {builderState.isTraceIdMode && (\n        <TraceIdInput traceId={builderState.traceId} onChange={onOptionChange('traceId')} />\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { Datasource } from 'data/CHDatasource';\nimport otel from 'otel';\nimport {\n  ColumnHint,\n  DateFilterWithoutValue,\n  Filter,\n  FilterOperator,\n  NumberFilter,\n  OrderBy,\n  OrderByDirection,\n  QueryBuilderOptions,\n  SelectedColumn,\n  StringFilter,\n} from 'types/queryBuilder';\nimport { BuilderOptionsReducerAction, setOptions } from 'hooks/useBuilderOptionsState';\n\n/**\n * Loads the default configuration for new queries. (Only runs on new queries)\n */\nexport const useTraceDefaultsOnMount = (\n  datasource: Datasource,\n  isNewQuery: boolean,\n  builderOptions: QueryBuilderOptions,\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>\n) => {\n  const didSetDefaults = useRef<boolean>(false);\n  useEffect(() => {\n    if (!isNewQuery || didSetDefaults.current) {\n      return;\n    }\n\n    const defaultDb = datasource.getDefaultTraceDatabase() || datasource.getDefaultDatabase();\n    const defaultTable = datasource.getDefaultTraceTable() || datasource.getDefaultTable();\n    const defaultDurationUnit = datasource.getDefaultTraceDurationUnit();\n    const otelVersion = datasource.getTraceOtelVersion();\n    const defaultColumns = datasource.getDefaultTraceColumns();\n    const defaultFlattenNested = datasource.getDefaultTraceFlattenNested();\n    const defaultEventsColumnPrefix = datasource.getDefaultTraceEventsColumnPrefix();\n    const defaultLinksColumnPrefix = datasource.getDefaultTraceLinksColumnPrefix();\n\n    const nextColumns: SelectedColumn[] = [];\n    for (let [hint, colName] of defaultColumns) {\n      nextColumns.push({ name: colName, hint });\n    }\n\n    builderOptionsDispatch(\n      setOptions({\n        database: defaultDb,\n        table: defaultTable || builderOptions.table,\n        columns: nextColumns,\n        meta: {\n          otelEnabled: Boolean(otelVersion),\n          otelVersion,\n          traceDurationUnit: defaultDurationUnit,\n          flattenNested: defaultFlattenNested,\n          traceEventsColumnPrefix: defaultEventsColumnPrefix,\n          traceLinksColumnPrefix: defaultLinksColumnPrefix,\n        },\n      })\n    );\n    didSetDefaults.current = true;\n  }, [\n    builderOptions.columns,\n    builderOptions.orderBy,\n    builderOptions.table,\n    builderOptionsDispatch,\n    datasource,\n    isNewQuery,\n  ]);\n};\n\n/**\n * Sets OTEL Trace columns automatically when OTEL is enabled\n * Does not run if OTEL is already enabled, only when it's changed.\n */\nexport const useOtelColumns = (\n  otelEnabled: boolean,\n  otelVersion: string,\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>\n) => {\n  const didSetColumns = useRef<boolean>(otelEnabled);\n  if (!otelEnabled) {\n    didSetColumns.current = false;\n  }\n\n  useEffect(() => {\n    if (!otelEnabled || didSetColumns.current) {\n      return;\n    }\n\n    const otelConfig = otel.getVersion(otelVersion);\n    const traceColumnMap = otelConfig?.traceColumnMap;\n    if (!traceColumnMap) {\n      return;\n    }\n\n    const columns: SelectedColumn[] = [];\n    traceColumnMap.forEach((name, hint) => {\n      columns.push({ name, hint });\n    });\n\n    builderOptionsDispatch(\n      setOptions({\n        columns,\n        meta: {\n          traceDurationUnit: otelConfig.traceDurationUnit,\n          flattenNested: otelConfig.flattenNested,\n          traceEventsColumnPrefix: otelConfig.traceEventsColumnPrefix,\n          traceLinksColumnPrefix: otelConfig.traceLinksColumnPrefix,\n        },\n      })\n    );\n    didSetColumns.current = true;\n  }, [otelEnabled, otelVersion, builderOptionsDispatch]);\n};\n\n// Apply default filters on table change\nexport const useDefaultFilters = (\n  table: string,\n  isTraceIdMode: boolean,\n  isNewQuery: boolean,\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>\n) => {\n  const appliedDefaultFilters = useRef<boolean>(!isNewQuery);\n  const lastTable = useRef<string>(table || '');\n  if (table !== lastTable.current) {\n    appliedDefaultFilters.current = false;\n  }\n\n  useEffect(() => {\n    if (isTraceIdMode || !table || appliedDefaultFilters.current) {\n      return;\n    }\n\n    const defaultFilters: Filter[] = [\n      {\n        type: 'datetime',\n        operator: FilterOperator.WithInGrafanaTimeRange,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.Time,\n        condition: 'AND',\n      } as DateFilterWithoutValue, // Filter to dashboard time range\n      {\n        type: 'string',\n        operator: FilterOperator.IsEmpty,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.TraceParentSpanId,\n        condition: 'AND',\n        value: '',\n      } as StringFilter, // Only show top level spans\n      {\n        type: 'UInt64',\n        operator: FilterOperator.GreaterThan,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.TraceDurationTime,\n        condition: 'AND',\n        value: 0,\n      } as NumberFilter, // Only show spans where duration > 0\n      {\n        type: 'string',\n        operator: FilterOperator.IsAnything,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.TraceServiceName,\n        condition: 'AND',\n        value: '',\n      } as StringFilter, // Placeholder service name filter for convenience\n    ];\n\n    const defaultOrderBy: OrderBy[] = [\n      { name: '', hint: ColumnHint.Time, dir: OrderByDirection.DESC, default: true },\n      { name: '', hint: ColumnHint.TraceDurationTime, dir: OrderByDirection.DESC, default: true },\n    ];\n\n    lastTable.current = table;\n    appliedDefaultFilters.current = true;\n    builderOptionsDispatch(\n      setOptions({\n        filters: defaultFilters,\n        orderBy: defaultOrderBy,\n      })\n    );\n  }, [table, isTraceIdMode, builderOptionsDispatch]);\n};\n","import React, { useMemo } from 'react';\nimport { Datasource } from 'data/CHDatasource';\nimport { QueryType, QueryBuilderOptions, ColumnHint, StringFilter } from 'types/queryBuilder';\nimport { CoreApp } from '@grafana/data';\nimport { LogsQueryBuilder } from './views/LogsQueryBuilder';\nimport { TimeSeriesQueryBuilder } from './views/TimeSeriesQueryBuilder';\nimport { TableQueryBuilder } from './views/TableQueryBuilder';\nimport { SqlPreview } from './SqlPreview';\nimport { DatabaseTableSelect } from 'components/queryBuilder/DatabaseTableSelect';\nimport { QueryTypeSwitcher } from 'components/queryBuilder/QueryTypeSwitcher';\nimport { styles } from 'styles';\nimport { TraceQueryBuilder } from './views/TraceQueryBuilder';\nimport {\n  BuilderOptionsReducerAction,\n  setBuilderMinimized,\n  setDatabase,\n  setQueryType,\n  setTable,\n} from 'hooks/useBuilderOptionsState';\nimport TraceIdInput from './TraceIdInput';\nimport { Alert, Button, VerticalGroup } from '@grafana/ui';\nimport { Components as allSelectors } from 'selectors';\nimport allLabels from 'labels';\n\ninterface QueryBuilderProps {\n  app: CoreApp | undefined;\n  builderOptions: QueryBuilderOptions;\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>;\n  datasource: Datasource;\n  generatedSql: string;\n}\n\nexport const QueryBuilder = (props: QueryBuilderProps) => {\n  const { datasource, builderOptions, builderOptionsDispatch, generatedSql } = props;\n\n  const onDatabaseChange = (database: string) => builderOptionsDispatch(setDatabase(database));\n  const onTableChange = (table: string) => builderOptionsDispatch(setTable(table));\n  const onQueryTypeChange = (queryType: QueryType) => builderOptionsDispatch(setQueryType(queryType));\n\n  if (builderOptions.meta?.minimized) {\n    return (\n      <MinimizedQueryViewer\n        builderOptions={builderOptions}\n        builderOptionsDispatch={builderOptionsDispatch}\n        datasource={datasource}\n      />\n    );\n  }\n\n  return (\n    <div data-testid=\"query-editor-section-builder\">\n      <div className={'gf-form ' + styles.QueryEditor.queryType}>\n        <DatabaseTableSelect\n          datasource={datasource}\n          database={builderOptions.database}\n          onDatabaseChange={onDatabaseChange}\n          table={builderOptions.table}\n          onTableChange={onTableChange}\n        />\n      </div>\n      <div className={'gf-form ' + styles.QueryEditor.queryType}>\n        <QueryTypeSwitcher queryType={builderOptions.queryType} onChange={onQueryTypeChange} />\n      </div>\n\n      {builderOptions.queryType === QueryType.Table && (\n        <TableQueryBuilder\n          datasource={datasource}\n          builderOptions={builderOptions}\n          builderOptionsDispatch={builderOptionsDispatch}\n        />\n      )}\n      {builderOptions.queryType === QueryType.Logs && (\n        <LogsQueryBuilder\n          datasource={datasource}\n          builderOptions={builderOptions}\n          builderOptionsDispatch={builderOptionsDispatch}\n        />\n      )}\n      {builderOptions.queryType === QueryType.TimeSeries && (\n        <TimeSeriesQueryBuilder\n          datasource={datasource}\n          builderOptions={builderOptions}\n          builderOptionsDispatch={builderOptionsDispatch}\n        />\n      )}\n      {builderOptions.queryType === QueryType.Traces && (\n        <TraceQueryBuilder\n          datasource={datasource}\n          builderOptions={builderOptions}\n          builderOptionsDispatch={builderOptionsDispatch}\n        />\n      )}\n\n      <SqlPreview sql={generatedSql} />\n    </div>\n  );\n};\n\ninterface MinimizedQueryBuilder {\n  builderOptions: QueryBuilderOptions;\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>;\n  datasource: Datasource;\n}\n\nconst MinimizedQueryViewer = (props: MinimizedQueryBuilder) => {\n  const { builderOptions, builderOptionsDispatch, datasource } = props;\n  const defaultColumns = useMemo<Map<ColumnHint, string> | undefined>(() => {\n    if (builderOptions.queryType === QueryType.Logs) {\n      return datasource.getDefaultLogsColumns();\n    } else if (builderOptions.queryType === QueryType.Traces) {\n      return datasource.getDefaultTraceColumns();\n    }\n\n    return undefined;\n  }, [builderOptions.queryType, datasource]);\n  const showConfigWarning = defaultColumns?.size === 0 && builderOptions.columns?.length === 0;\n  const configQueryType =\n    builderOptions.queryType === QueryType.Logs\n      ? 'logs'\n      : builderOptions.queryType === QueryType.Traces\n        ? 'trace'\n        : builderOptions.queryType;\n\n  let traceId;\n  if (\n    builderOptions.queryType === QueryType.Traces &&\n    builderOptions.meta?.isTraceIdMode &&\n    builderOptions.meta.traceId\n  ) {\n    traceId = builderOptions.meta.traceId!;\n  } else if (\n    builderOptions.queryType === QueryType.Logs &&\n    builderOptions.filters?.find((f) => f.hint === ColumnHint.TraceId && 'value' in f)\n  ) {\n    const traceIdFilter = builderOptions.filters?.find(\n      (f) => f.hint === ColumnHint.TraceId && 'value' in f\n    ) as StringFilter;\n    traceId = traceIdFilter.value;\n  }\n\n  return (\n    <div data-testid=\"query-editor-minimized-viewer\">\n      {showConfigWarning && (\n        <Alert title=\"\" severity=\"warning\">\n          <VerticalGroup>\n            <div>\n              {`To enable data linking, enter your default ${configQueryType} configuration in your `}\n              <a\n                style={{ textDecoration: 'underline' }}\n                href={`/connections/datasources/edit/${encodeURIComponent(datasource.uid)}#${builderOptions.queryType}-config`}\n              >\n                ClickHouse Data Source settings\n              </a>\n            </div>\n          </VerticalGroup>\n        </Alert>\n      )}\n      {!traceId && (\n        <Alert title=\"\" severity=\"warning\">\n          <VerticalGroup>\n            <div>Trace ID is empty</div>\n          </VerticalGroup>\n        </Alert>\n      )}\n\n      {traceId && <TraceIdInput traceId={traceId} onChange={() => {}} disabled />}\n\n      <Button\n        data-testid={allSelectors.QueryBuilder.expandBuilderButton}\n        icon=\"plus\"\n        variant=\"secondary\"\n        size=\"md\"\n        onClick={() => builderOptionsDispatch(setBuilderMinimized(false))}\n        className={styles.Common.smallBtn}\n        tooltip={allLabels.components.expandBuilderButton.tooltip}\n      >\n        {allLabels.components.expandBuilderButton.label}\n      </Button>\n    </div>\n  );\n};\n","/**\n * Performs expandSinglePhrase() on array\n */\nexport const expandPhrases = (phrases) => phrases.flatMap(expandSinglePhrase);\n/**\n * Expands a syntax description like\n *\n *     \"CREATE [OR REPLACE] [TEMP|TEMPORARY] TABLE\"\n *\n * into an array of all possible combinations like:\n *\n *     [ \"CREATE TABLE\",\n *       \"CREATE TEMP TABLE\",\n *       \"CREATE TEMPORARY TABLE\",\n *       \"CREATE OR REPLACE TABLE\",\n *       \"CREATE OR REPLACE TEMP TABLE\",\n *       \"CREATE OR REPLACE TEMPORARY TABLE\" ]\n *\n * The [] and {} parenthesis can also be nested like\n *\n *     \"FOR [OF {UNIQUE | MANDATORY} TABLES]\"\n *\n * resulting in:\n *\n *     [ \"FOR\",\n *       \"FOR OF UNIQUE TABLES\",\n *       \"FOR OF MANDATORY TABLES\" ]\n */\nexport const expandSinglePhrase = (phrase) => buildCombinations(parsePhrase(phrase)).map(stripExtraWhitespace);\nconst stripExtraWhitespace = (text) => text.replace(/ +/g, ' ').trim();\nconst parsePhrase = (text) => ({\n    type: 'mandatory_block',\n    items: parseAlteration(text, 0)[0],\n});\nconst parseAlteration = (text, index, expectClosing) => {\n    const alterations = [];\n    while (text[index]) {\n        const [term, newIndex] = parseConcatenation(text, index);\n        alterations.push(term);\n        index = newIndex;\n        if (text[index] === '|') {\n            index++;\n        }\n        else if (text[index] === '}' || text[index] === ']') {\n            if (expectClosing !== text[index]) {\n                throw new Error(`Unbalanced parenthesis in: ${text}`);\n            }\n            index++;\n            return [alterations, index];\n        }\n        else if (index === text.length) {\n            if (expectClosing) {\n                throw new Error(`Unbalanced parenthesis in: ${text}`);\n            }\n            return [alterations, index];\n        }\n        else {\n            throw new Error(`Unexpected \"${text[index]}\"`);\n        }\n    }\n    return [alterations, index];\n};\nconst parseConcatenation = (text, index) => {\n    const items = [];\n    while (true) {\n        const [term, newIndex] = parseTerm(text, index);\n        if (term) {\n            items.push(term);\n            index = newIndex;\n        }\n        else {\n            break;\n        }\n    }\n    return items.length === 1 ? [items[0], index] : [{ type: 'concatenation', items }, index];\n};\nconst parseTerm = (text, index) => {\n    if (text[index] === '{') {\n        return parseMandatoryBlock(text, index + 1);\n    }\n    else if (text[index] === '[') {\n        return parseOptionalBlock(text, index + 1);\n    }\n    else {\n        let word = '';\n        while (text[index] && /[A-Za-z0-9_ ]/.test(text[index])) {\n            word += text[index];\n            index++;\n        }\n        return [word, index];\n    }\n};\nconst parseMandatoryBlock = (text, index) => {\n    const [items, newIndex] = parseAlteration(text, index, '}');\n    return [{ type: 'mandatory_block', items }, newIndex];\n};\nconst parseOptionalBlock = (text, index) => {\n    const [items, newIndex] = parseAlteration(text, index, ']');\n    return [{ type: 'optional_block', items }, newIndex];\n};\nconst buildCombinations = (node) => {\n    if (typeof node === 'string') {\n        return [node];\n    }\n    else if (node.type === 'concatenation') {\n        return node.items.map(buildCombinations).reduce(stringCombinations, ['']);\n    }\n    else if (node.type === 'mandatory_block') {\n        return node.items.flatMap(buildCombinations);\n    }\n    else if (node.type === 'optional_block') {\n        return ['', ...node.items.flatMap(buildCombinations)];\n    }\n    else {\n        throw new Error(`Unknown node type: ${node}`);\n    }\n};\nconst stringCombinations = (xs, ys) => {\n    const results = [];\n    for (const x of xs) {\n        for (const y of ys) {\n            results.push(x + y);\n        }\n    }\n    return results;\n};\n//# sourceMappingURL=expandPhrases.js.map","/** Token type enum for all possible Token categories */\nexport var TokenType;\n(function (TokenType) {\n    TokenType[\"QUOTED_IDENTIFIER\"] = \"QUOTED_IDENTIFIER\";\n    TokenType[\"IDENTIFIER\"] = \"IDENTIFIER\";\n    TokenType[\"STRING\"] = \"STRING\";\n    TokenType[\"VARIABLE\"] = \"VARIABLE\";\n    TokenType[\"RESERVED_DATA_TYPE\"] = \"RESERVED_DATA_TYPE\";\n    TokenType[\"RESERVED_PARAMETERIZED_DATA_TYPE\"] = \"RESERVED_PARAMETERIZED_DATA_TYPE\";\n    TokenType[\"RESERVED_KEYWORD\"] = \"RESERVED_KEYWORD\";\n    TokenType[\"RESERVED_FUNCTION_NAME\"] = \"RESERVED_FUNCTION_NAME\";\n    TokenType[\"RESERVED_KEYWORD_PHRASE\"] = \"RESERVED_KEYWORD_PHRASE\";\n    TokenType[\"RESERVED_DATA_TYPE_PHRASE\"] = \"RESERVED_DATA_TYPE_PHRASE\";\n    TokenType[\"RESERVED_SET_OPERATION\"] = \"RESERVED_SET_OPERATION\";\n    TokenType[\"RESERVED_CLAUSE\"] = \"RESERVED_CLAUSE\";\n    TokenType[\"RESERVED_SELECT\"] = \"RESERVED_SELECT\";\n    TokenType[\"RESERVED_JOIN\"] = \"RESERVED_JOIN\";\n    TokenType[\"ARRAY_IDENTIFIER\"] = \"ARRAY_IDENTIFIER\";\n    TokenType[\"ARRAY_KEYWORD\"] = \"ARRAY_KEYWORD\";\n    TokenType[\"CASE\"] = \"CASE\";\n    TokenType[\"END\"] = \"END\";\n    TokenType[\"WHEN\"] = \"WHEN\";\n    TokenType[\"ELSE\"] = \"ELSE\";\n    TokenType[\"THEN\"] = \"THEN\";\n    TokenType[\"LIMIT\"] = \"LIMIT\";\n    TokenType[\"BETWEEN\"] = \"BETWEEN\";\n    TokenType[\"AND\"] = \"AND\";\n    TokenType[\"OR\"] = \"OR\";\n    TokenType[\"XOR\"] = \"XOR\";\n    TokenType[\"OPERATOR\"] = \"OPERATOR\";\n    TokenType[\"COMMA\"] = \"COMMA\";\n    TokenType[\"ASTERISK\"] = \"ASTERISK\";\n    TokenType[\"PROPERTY_ACCESS_OPERATOR\"] = \"PROPERTY_ACCESS_OPERATOR\";\n    TokenType[\"OPEN_PAREN\"] = \"OPEN_PAREN\";\n    TokenType[\"CLOSE_PAREN\"] = \"CLOSE_PAREN\";\n    TokenType[\"LINE_COMMENT\"] = \"LINE_COMMENT\";\n    TokenType[\"BLOCK_COMMENT\"] = \"BLOCK_COMMENT\";\n    // Text between /* sql-formatter-disable */ and /* sql-formatter-enable */\n    TokenType[\"DISABLE_COMMENT\"] = \"DISABLE_COMMENT\";\n    TokenType[\"NUMBER\"] = \"NUMBER\";\n    TokenType[\"NAMED_PARAMETER\"] = \"NAMED_PARAMETER\";\n    TokenType[\"QUOTED_PARAMETER\"] = \"QUOTED_PARAMETER\";\n    TokenType[\"NUMBERED_PARAMETER\"] = \"NUMBERED_PARAMETER\";\n    TokenType[\"POSITIONAL_PARAMETER\"] = \"POSITIONAL_PARAMETER\";\n    TokenType[\"CUSTOM_PARAMETER\"] = \"CUSTOM_PARAMETER\";\n    TokenType[\"DELIMITER\"] = \"DELIMITER\";\n    TokenType[\"EOF\"] = \"EOF\";\n})(TokenType = TokenType || (TokenType = {}));\n/** Creates EOF token positioned at given location */\nexport const createEofToken = (index) => ({\n    type: TokenType.EOF,\n    raw: '«EOF»',\n    text: '«EOF»',\n    start: index,\n});\n/**\n * For use as a \"missing token\"\n * e.g. in lookAhead and lookBehind to avoid dealing with null values\n */\nexport const EOF_TOKEN = createEofToken(Infinity);\n/** Checks if two tokens are equivalent */\nexport const testToken = (compareToken) => (token) => token.type === compareToken.type && token.text === compareToken.text;\n/** Util object that allows for easy checking of Reserved Keywords */\nexport const isToken = {\n    ARRAY: testToken({ text: 'ARRAY', type: TokenType.RESERVED_DATA_TYPE }),\n    BY: testToken({ text: 'BY', type: TokenType.RESERVED_KEYWORD }),\n    SET: testToken({ text: 'SET', type: TokenType.RESERVED_CLAUSE }),\n    STRUCT: testToken({ text: 'STRUCT', type: TokenType.RESERVED_DATA_TYPE }),\n    WINDOW: testToken({ text: 'WINDOW', type: TokenType.RESERVED_CLAUSE }),\n    VALUES: testToken({ text: 'VALUES', type: TokenType.RESERVED_CLAUSE }),\n};\n/** Checks if token is any Reserved Keyword or Clause */\nexport const isReserved = (type) => type === TokenType.RESERVED_DATA_TYPE ||\n    type === TokenType.RESERVED_KEYWORD ||\n    type === TokenType.RESERVED_FUNCTION_NAME ||\n    type === TokenType.RESERVED_KEYWORD_PHRASE ||\n    type === TokenType.RESERVED_DATA_TYPE_PHRASE ||\n    type === TokenType.RESERVED_CLAUSE ||\n    type === TokenType.RESERVED_SELECT ||\n    type === TokenType.RESERVED_SET_OPERATION ||\n    type === TokenType.RESERVED_JOIN ||\n    type === TokenType.ARRAY_KEYWORD ||\n    type === TokenType.CASE ||\n    type === TokenType.END ||\n    type === TokenType.WHEN ||\n    type === TokenType.ELSE ||\n    type === TokenType.THEN ||\n    type === TokenType.LIMIT ||\n    type === TokenType.BETWEEN ||\n    type === TokenType.AND ||\n    type === TokenType.OR ||\n    type === TokenType.XOR;\nexport const isLogicalOperator = (type) => type === TokenType.AND || type === TokenType.OR || type === TokenType.XOR;\n//# sourceMappingURL=token.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { EOF_TOKEN, isToken, TokenType } from '../../lexer/token.js';\nimport { functions } from './bigquery.functions.js';\nimport { dataTypes, keywords } from './bigquery.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT] [AS STRUCT | AS VALUE]']);\nconst reservedClauses = expandPhrases([\n    // Queries: https://cloud.google.com/bigquery/docs/reference/standard-sql/query-syntax\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'QUALIFY',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    'OMIT RECORD IF',\n    // Data modification: https://cloud.google.com/bigquery/docs/reference/standard-sql/dml-syntax\n    // - insert:\n    'INSERT [INTO]',\n    'VALUES',\n    // - update:\n    'SET',\n    // - merge:\n    'MERGE [INTO]',\n    'WHEN [NOT] MATCHED [BY SOURCE | BY TARGET] [THEN]',\n    'UPDATE SET',\n    'CLUSTER BY',\n    'FOR SYSTEM_TIME AS OF',\n    'WITH CONNECTION',\n    'WITH PARTITION COLUMNS',\n    'REMOTE WITH CONNECTION',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [OR REPLACE] [TEMP|TEMPORARY|SNAPSHOT|EXTERNAL] TABLE [IF NOT EXISTS]',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language\n    'CREATE [OR REPLACE] [MATERIALIZED] VIEW [IF NOT EXISTS]',\n    // - update:\n    'UPDATE',\n    // - delete:\n    'DELETE [FROM]',\n    // - drop table:\n    'DROP [SNAPSHOT | EXTERNAL] TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE [IF EXISTS]',\n    'ADD COLUMN [IF NOT EXISTS]',\n    'DROP COLUMN [IF EXISTS]',\n    'RENAME TO',\n    'ALTER COLUMN [IF EXISTS]',\n    'SET DEFAULT COLLATE',\n    'SET OPTIONS',\n    'DROP NOT NULL',\n    'SET DATA TYPE',\n    // - alter schema\n    'ALTER SCHEMA [IF EXISTS]',\n    // - alter view\n    'ALTER [MATERIALIZED] VIEW [IF EXISTS]',\n    // - alter bi_capacity\n    'ALTER BI_CAPACITY',\n    // - truncate:\n    'TRUNCATE TABLE',\n    // - create schema\n    'CREATE SCHEMA [IF NOT EXISTS]',\n    'DEFAULT COLLATE',\n    // stored procedures\n    'CREATE [OR REPLACE] [TEMP|TEMPORARY|TABLE] FUNCTION [IF NOT EXISTS]',\n    'CREATE [OR REPLACE] PROCEDURE [IF NOT EXISTS]',\n    // row access policy\n    'CREATE [OR REPLACE] ROW ACCESS POLICY [IF NOT EXISTS]',\n    'GRANT TO',\n    'FILTER USING',\n    // capacity\n    'CREATE CAPACITY',\n    'AS JSON',\n    // reservation\n    'CREATE RESERVATION',\n    // assignment\n    'CREATE ASSIGNMENT',\n    // search index\n    'CREATE SEARCH INDEX [IF NOT EXISTS]',\n    // drop\n    'DROP SCHEMA [IF EXISTS]',\n    'DROP [MATERIALIZED] VIEW [IF EXISTS]',\n    'DROP [TABLE] FUNCTION [IF EXISTS]',\n    'DROP PROCEDURE [IF EXISTS]',\n    'DROP ROW ACCESS POLICY',\n    'DROP ALL ROW ACCESS POLICIES',\n    'DROP CAPACITY [IF EXISTS]',\n    'DROP RESERVATION [IF EXISTS]',\n    'DROP ASSIGNMENT [IF EXISTS]',\n    'DROP SEARCH INDEX [IF EXISTS]',\n    'DROP [IF EXISTS]',\n    // DCL, https://cloud.google.com/bigquery/docs/reference/standard-sql/data-control-language\n    'GRANT',\n    'REVOKE',\n    // Script, https://cloud.google.com/bigquery/docs/reference/standard-sql/scripting\n    'DECLARE',\n    'EXECUTE IMMEDIATE',\n    'LOOP',\n    'END LOOP',\n    'REPEAT',\n    'END REPEAT',\n    'WHILE',\n    'END WHILE',\n    'BREAK',\n    'LEAVE',\n    'CONTINUE',\n    'ITERATE',\n    'FOR',\n    'END FOR',\n    'BEGIN',\n    'BEGIN TRANSACTION',\n    'COMMIT TRANSACTION',\n    'ROLLBACK TRANSACTION',\n    'RAISE',\n    'RETURN',\n    'CALL',\n    // Debug, https://cloud.google.com/bigquery/docs/reference/standard-sql/debugging-statements\n    'ASSERT',\n    // Other, https://cloud.google.com/bigquery/docs/reference/standard-sql/other-statements\n    'EXPORT DATA',\n]);\nconst reservedSetOperations = expandPhrases([\n    'UNION {ALL | DISTINCT}',\n    'EXCEPT DISTINCT',\n    'INTERSECT DISTINCT',\n]);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n]);\nconst reservedKeywordPhrases = expandPhrases([\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/query-syntax#tablesample_operator\n    'TABLESAMPLE SYSTEM',\n    // From DDL: https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language\n    'ANY TYPE',\n    'ALL COLUMNS',\n    'NOT DETERMINISTIC',\n    // inside window definitions\n    '{ROWS | RANGE} BETWEEN',\n    // comparison operator\n    'IS [NOT] DISTINCT FROM',\n]);\nconst reservedDataTypePhrases = expandPhrases([]);\n// https://cloud.google.com/bigquery/docs/reference/#standard-sql-reference\nexport const bigquery = {\n    name: 'bigquery',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...tabularOnelineClauses, ...standardOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedKeywordPhrases,\n        reservedDataTypePhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        extraParens: ['[]'],\n        stringTypes: [\n            // The triple-quoted strings are listed first, so they get matched first.\n            // Otherwise the first two quotes of \"\"\" will get matched as an empty \"\" string.\n            { quote: '\"\"\"..\"\"\"', prefixes: ['R', 'B', 'RB', 'BR'] },\n            { quote: \"'''..'''\", prefixes: ['R', 'B', 'RB', 'BR'] },\n            '\"\"-bs',\n            \"''-bs\",\n            { quote: '\"\"-raw', prefixes: ['R', 'B', 'RB', 'BR'], requirePrefix: true },\n            { quote: \"''-raw\", prefixes: ['R', 'B', 'RB', 'BR'], requirePrefix: true },\n        ],\n        identTypes: ['``'],\n        identChars: { dashes: true },\n        paramTypes: { positional: true, named: ['@'], quoted: ['@'] },\n        variableTypes: [{ regex: String.raw `@@\\w+` }],\n        lineCommentTypes: ['--', '#'],\n        operators: ['&', '|', '^', '~', '>>', '<<', '||', '=>'],\n        postProcess,\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\nfunction postProcess(tokens) {\n    return detectArraySubscripts(combineParameterizedTypes(tokens));\n}\n// Converts OFFSET token inside array from RESERVED_CLAUSE to RESERVED_FUNCTION_NAME\n// See: https://cloud.google.com/bigquery/docs/reference/standard-sql/functions-and-operators#array_subscript_operator\nfunction detectArraySubscripts(tokens) {\n    let prevToken = EOF_TOKEN;\n    return tokens.map(token => {\n        if (token.text === 'OFFSET' && prevToken.text === '[') {\n            prevToken = token;\n            return Object.assign(Object.assign({}, token), { type: TokenType.RESERVED_FUNCTION_NAME });\n        }\n        else {\n            prevToken = token;\n            return token;\n        }\n    });\n}\n// Combines multiple tokens forming a parameterized type like STRUCT<ARRAY<INT64>> into a single token\nfunction combineParameterizedTypes(tokens) {\n    var _a;\n    const processed = [];\n    for (let i = 0; i < tokens.length; i++) {\n        const token = tokens[i];\n        if ((isToken.ARRAY(token) || isToken.STRUCT(token)) && ((_a = tokens[i + 1]) === null || _a === void 0 ? void 0 : _a.text) === '<') {\n            const endIndex = findClosingAngleBracketIndex(tokens, i + 1);\n            const typeDefTokens = tokens.slice(i, endIndex + 1);\n            processed.push({\n                type: TokenType.IDENTIFIER,\n                raw: typeDefTokens.map(formatTypeDefToken('raw')).join(''),\n                text: typeDefTokens.map(formatTypeDefToken('text')).join(''),\n                start: token.start,\n            });\n            i = endIndex;\n        }\n        else {\n            processed.push(token);\n        }\n    }\n    return processed;\n}\nconst formatTypeDefToken = (key) => (token) => {\n    if (token.type === TokenType.IDENTIFIER || token.type === TokenType.COMMA) {\n        return token[key] + ' ';\n    }\n    else {\n        return token[key];\n    }\n};\nfunction findClosingAngleBracketIndex(tokens, startIndex) {\n    let level = 0;\n    for (let i = startIndex; i < tokens.length; i++) {\n        const token = tokens[i];\n        if (token.text === '<') {\n            level++;\n        }\n        else if (token.text === '>') {\n            level--;\n        }\n        else if (token.text === '>>') {\n            level -= 2;\n        }\n        if (level === 0) {\n            return i;\n        }\n    }\n    return tokens.length - 1;\n}\n//# sourceMappingURL=bigquery.formatter.js.map","export const keywords = [\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical#reserved_keywords\n    'ALL',\n    'AND',\n    'ANY',\n    'AS',\n    'ASC',\n    'ASSERT_ROWS_MODIFIED',\n    'AT',\n    'BETWEEN',\n    'BY',\n    'CASE',\n    'CAST',\n    'COLLATE',\n    'CONTAINS',\n    'CREATE',\n    'CROSS',\n    'CUBE',\n    'CURRENT',\n    'DEFAULT',\n    'DEFINE',\n    'DESC',\n    'DISTINCT',\n    'ELSE',\n    'END',\n    'ENUM',\n    'ESCAPE',\n    'EXCEPT',\n    'EXCLUDE',\n    'EXISTS',\n    'EXTRACT',\n    'FALSE',\n    'FETCH',\n    'FOLLOWING',\n    'FOR',\n    'FROM',\n    'FULL',\n    'GROUP',\n    'GROUPING',\n    'GROUPS',\n    'HASH',\n    'HAVING',\n    'IF',\n    'IGNORE',\n    'IN',\n    'INNER',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'JOIN',\n    'LATERAL',\n    'LEFT',\n    'LIMIT',\n    'LOOKUP',\n    'MERGE',\n    'NATURAL',\n    'NEW',\n    'NO',\n    'NOT',\n    'NULL',\n    'NULLS',\n    'OF',\n    'ON',\n    'OR',\n    'ORDER',\n    'OUTER',\n    'OVER',\n    'PARTITION',\n    'PRECEDING',\n    'PROTO',\n    'RANGE',\n    'RECURSIVE',\n    'RESPECT',\n    'RIGHT',\n    'ROLLUP',\n    'ROWS',\n    'SELECT',\n    'SET',\n    'SOME',\n    'TABLE',\n    'TABLESAMPLE',\n    'THEN',\n    'TO',\n    'TREAT',\n    'TRUE',\n    'UNBOUNDED',\n    'UNION',\n    'UNNEST',\n    'USING',\n    'WHEN',\n    'WHERE',\n    'WINDOW',\n    'WITH',\n    'WITHIN',\n    // misc\n    'SAFE',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language\n    'LIKE',\n    'COPY',\n    'CLONE',\n    'IN',\n    'OUT',\n    'INOUT',\n    'RETURNS',\n    'LANGUAGE',\n    'CASCADE',\n    'RESTRICT',\n    'DETERMINISTIC',\n];\nexport const dataTypes = [\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types\n    'ARRAY',\n    'BOOL',\n    'BYTES',\n    'DATE',\n    'DATETIME',\n    'GEOGRAPHY',\n    'INTERVAL',\n    'INT64',\n    'INT',\n    'SMALLINT',\n    'INTEGER',\n    'BIGINT',\n    'TINYINT',\n    'BYTEINT',\n    'NUMERIC',\n    'DECIMAL',\n    'BIGNUMERIC',\n    'BIGDECIMAL',\n    'FLOAT64',\n    'STRING',\n    'STRUCT',\n    'TIME',\n    'TIMEZONE',\n];\n//# sourceMappingURL=bigquery.keywords.js.map","export const functions = [\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/aead_encryption_functions\n    'KEYS.NEW_KEYSET',\n    'KEYS.ADD_KEY_FROM_RAW_BYTES',\n    'AEAD.DECRYPT_BYTES',\n    'AEAD.DECRYPT_STRING',\n    'AEAD.ENCRYPT',\n    'KEYS.KEYSET_CHAIN',\n    'KEYS.KEYSET_FROM_JSON',\n    'KEYS.KEYSET_TO_JSON',\n    'KEYS.ROTATE_KEYSET',\n    'KEYS.KEYSET_LENGTH',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/aggregate_analytic_functions\n    'ANY_VALUE',\n    'ARRAY_AGG',\n    'AVG',\n    'CORR',\n    'COUNT',\n    'COUNTIF',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'MAX',\n    'MIN',\n    'ST_CLUSTERDBSCAN',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STRING_AGG',\n    'SUM',\n    'VAR_POP',\n    'VAR_SAMP',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/aggregate_functions\n    'ANY_VALUE',\n    'ARRAY_AGG',\n    'ARRAY_CONCAT_AGG',\n    'AVG',\n    'BIT_AND',\n    'BIT_OR',\n    'BIT_XOR',\n    'COUNT',\n    'COUNTIF',\n    'LOGICAL_AND',\n    'LOGICAL_OR',\n    'MAX',\n    'MIN',\n    'STRING_AGG',\n    'SUM',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/approximate_aggregate_functions\n    'APPROX_COUNT_DISTINCT',\n    'APPROX_QUANTILES',\n    'APPROX_TOP_COUNT',\n    'APPROX_TOP_SUM',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/array_functions\n    // 'ARRAY',\n    'ARRAY_CONCAT',\n    'ARRAY_LENGTH',\n    'ARRAY_TO_STRING',\n    'GENERATE_ARRAY',\n    'GENERATE_DATE_ARRAY',\n    'GENERATE_TIMESTAMP_ARRAY',\n    'ARRAY_REVERSE',\n    'OFFSET',\n    'SAFE_OFFSET',\n    'ORDINAL',\n    'SAFE_ORDINAL',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/bit_functions\n    'BIT_COUNT',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/conversion_functions\n    // 'CASE',\n    'PARSE_BIGNUMERIC',\n    'PARSE_NUMERIC',\n    'SAFE_CAST',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/date_functions\n    'CURRENT_DATE',\n    'EXTRACT',\n    'DATE',\n    'DATE_ADD',\n    'DATE_SUB',\n    'DATE_DIFF',\n    'DATE_TRUNC',\n    'DATE_FROM_UNIX_DATE',\n    'FORMAT_DATE',\n    'LAST_DAY',\n    'PARSE_DATE',\n    'UNIX_DATE',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/datetime_functions\n    'CURRENT_DATETIME',\n    'DATETIME',\n    'EXTRACT',\n    'DATETIME_ADD',\n    'DATETIME_SUB',\n    'DATETIME_DIFF',\n    'DATETIME_TRUNC',\n    'FORMAT_DATETIME',\n    'LAST_DAY',\n    'PARSE_DATETIME',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/debugging_functions\n    'ERROR',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/federated_query_functions\n    'EXTERNAL_QUERY',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/geography_functions\n    'S2_CELLIDFROMPOINT',\n    'S2_COVERINGCELLIDS',\n    'ST_ANGLE',\n    'ST_AREA',\n    'ST_ASBINARY',\n    'ST_ASGEOJSON',\n    'ST_ASTEXT',\n    'ST_AZIMUTH',\n    'ST_BOUNDARY',\n    'ST_BOUNDINGBOX',\n    'ST_BUFFER',\n    'ST_BUFFERWITHTOLERANCE',\n    'ST_CENTROID',\n    'ST_CENTROID_AGG',\n    'ST_CLOSESTPOINT',\n    'ST_CLUSTERDBSCAN',\n    'ST_CONTAINS',\n    'ST_CONVEXHULL',\n    'ST_COVEREDBY',\n    'ST_COVERS',\n    'ST_DIFFERENCE',\n    'ST_DIMENSION',\n    'ST_DISJOINT',\n    'ST_DISTANCE',\n    'ST_DUMP',\n    'ST_DWITHIN',\n    'ST_ENDPOINT',\n    'ST_EQUALS',\n    'ST_EXTENT',\n    'ST_EXTERIORRING',\n    'ST_GEOGFROM',\n    'ST_GEOGFROMGEOJSON',\n    'ST_GEOGFROMTEXT',\n    'ST_GEOGFROMWKB',\n    'ST_GEOGPOINT',\n    'ST_GEOGPOINTFROMGEOHASH',\n    'ST_GEOHASH',\n    'ST_GEOMETRYTYPE',\n    'ST_INTERIORRINGS',\n    'ST_INTERSECTION',\n    'ST_INTERSECTS',\n    'ST_INTERSECTSBOX',\n    'ST_ISCOLLECTION',\n    'ST_ISEMPTY',\n    'ST_LENGTH',\n    'ST_MAKELINE',\n    'ST_MAKEPOLYGON',\n    'ST_MAKEPOLYGONORIENTED',\n    'ST_MAXDISTANCE',\n    'ST_NPOINTS',\n    'ST_NUMGEOMETRIES',\n    'ST_NUMPOINTS',\n    'ST_PERIMETER',\n    'ST_POINTN',\n    'ST_SIMPLIFY',\n    'ST_SNAPTOGRID',\n    'ST_STARTPOINT',\n    'ST_TOUCHES',\n    'ST_UNION',\n    'ST_UNION_AGG',\n    'ST_WITHIN',\n    'ST_X',\n    'ST_Y',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/hash_functions\n    'FARM_FINGERPRINT',\n    'MD5',\n    'SHA1',\n    'SHA256',\n    'SHA512',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/hll_functions\n    'HLL_COUNT.INIT',\n    'HLL_COUNT.MERGE',\n    'HLL_COUNT.MERGE_PARTIAL',\n    'HLL_COUNT.EXTRACT',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/interval_functions\n    'MAKE_INTERVAL',\n    'EXTRACT',\n    'JUSTIFY_DAYS',\n    'JUSTIFY_HOURS',\n    'JUSTIFY_INTERVAL',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/json_functions\n    'JSON_EXTRACT',\n    'JSON_QUERY',\n    'JSON_EXTRACT_SCALAR',\n    'JSON_VALUE',\n    'JSON_EXTRACT_ARRAY',\n    'JSON_QUERY_ARRAY',\n    'JSON_EXTRACT_STRING_ARRAY',\n    'JSON_VALUE_ARRAY',\n    'TO_JSON_STRING',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/mathematical_functions\n    'ABS',\n    'SIGN',\n    'IS_INF',\n    'IS_NAN',\n    'IEEE_DIVIDE',\n    'RAND',\n    'SQRT',\n    'POW',\n    'POWER',\n    'EXP',\n    'LN',\n    'LOG',\n    'LOG10',\n    'GREATEST',\n    'LEAST',\n    'DIV',\n    'SAFE_DIVIDE',\n    'SAFE_MULTIPLY',\n    'SAFE_NEGATE',\n    'SAFE_ADD',\n    'SAFE_SUBTRACT',\n    'MOD',\n    'ROUND',\n    'TRUNC',\n    'CEIL',\n    'CEILING',\n    'FLOOR',\n    'COS',\n    'COSH',\n    'ACOS',\n    'ACOSH',\n    'SIN',\n    'SINH',\n    'ASIN',\n    'ASINH',\n    'TAN',\n    'TANH',\n    'ATAN',\n    'ATANH',\n    'ATAN2',\n    'RANGE_BUCKET',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/navigation_functions\n    'FIRST_VALUE',\n    'LAST_VALUE',\n    'NTH_VALUE',\n    'LEAD',\n    'LAG',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/net_functions\n    'NET.IP_FROM_STRING',\n    'NET.SAFE_IP_FROM_STRING',\n    'NET.IP_TO_STRING',\n    'NET.IP_NET_MASK',\n    'NET.IP_TRUNC',\n    'NET.IPV4_FROM_INT64',\n    'NET.IPV4_TO_INT64',\n    'NET.HOST',\n    'NET.PUBLIC_SUFFIX',\n    'NET.REG_DOMAIN',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/numbering_functions\n    'RANK',\n    'DENSE_RANK',\n    'PERCENT_RANK',\n    'CUME_DIST',\n    'NTILE',\n    'ROW_NUMBER',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/security_functions\n    'SESSION_USER',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/statistical_aggregate_functions\n    'CORR',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STDDEV',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VARIANCE',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/string_functions\n    'ASCII',\n    'BYTE_LENGTH',\n    'CHAR_LENGTH',\n    'CHARACTER_LENGTH',\n    'CHR',\n    'CODE_POINTS_TO_BYTES',\n    'CODE_POINTS_TO_STRING',\n    'CONCAT',\n    'CONTAINS_SUBSTR',\n    'ENDS_WITH',\n    'FORMAT',\n    'FROM_BASE32',\n    'FROM_BASE64',\n    'FROM_HEX',\n    'INITCAP',\n    'INSTR',\n    'LEFT',\n    'LENGTH',\n    'LPAD',\n    'LOWER',\n    'LTRIM',\n    'NORMALIZE',\n    'NORMALIZE_AND_CASEFOLD',\n    'OCTET_LENGTH',\n    'REGEXP_CONTAINS',\n    'REGEXP_EXTRACT',\n    'REGEXP_EXTRACT_ALL',\n    'REGEXP_INSTR',\n    'REGEXP_REPLACE',\n    'REGEXP_SUBSTR',\n    'REPLACE',\n    'REPEAT',\n    'REVERSE',\n    'RIGHT',\n    'RPAD',\n    'RTRIM',\n    'SAFE_CONVERT_BYTES_TO_STRING',\n    'SOUNDEX',\n    'SPLIT',\n    'STARTS_WITH',\n    'STRPOS',\n    'SUBSTR',\n    'SUBSTRING',\n    'TO_BASE32',\n    'TO_BASE64',\n    'TO_CODE_POINTS',\n    'TO_HEX',\n    'TRANSLATE',\n    'TRIM',\n    'UNICODE',\n    'UPPER',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/time_functions\n    'CURRENT_TIME',\n    'TIME',\n    'EXTRACT',\n    'TIME_ADD',\n    'TIME_SUB',\n    'TIME_DIFF',\n    'TIME_TRUNC',\n    'FORMAT_TIME',\n    'PARSE_TIME',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/timestamp_functions\n    'CURRENT_TIMESTAMP',\n    'EXTRACT',\n    'STRING',\n    'TIMESTAMP',\n    'TIMESTAMP_ADD',\n    'TIMESTAMP_SUB',\n    'TIMESTAMP_DIFF',\n    'TIMESTAMP_TRUNC',\n    'FORMAT_TIMESTAMP',\n    'PARSE_TIMESTAMP',\n    'TIMESTAMP_SECONDS',\n    'TIMESTAMP_MILLIS',\n    'TIMESTAMP_MICROS',\n    'UNIX_SECONDS',\n    'UNIX_MILLIS',\n    'UNIX_MICROS',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/uuid_functions\n    'GENERATE_UUID',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/conditional_expressions\n    'COALESCE',\n    'IF',\n    'IFNULL',\n    'NULLIF',\n    // https://cloud.google.com/bigquery/docs/reference/legacy-sql\n    // legacyAggregate\n    'AVG',\n    'BIT_AND',\n    'BIT_OR',\n    'BIT_XOR',\n    'CORR',\n    'COUNT',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'EXACT_COUNT_DISTINCT',\n    'FIRST',\n    'GROUP_CONCAT',\n    'GROUP_CONCAT_UNQUOTED',\n    'LAST',\n    'MAX',\n    'MIN',\n    'NEST',\n    'NTH',\n    'QUANTILES',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'SUM',\n    'TOP',\n    'UNIQUE',\n    'VARIANCE',\n    'VAR_POP',\n    'VAR_SAMP',\n    // legacyBitwise\n    'BIT_COUNT',\n    // legacyCasting\n    'BOOLEAN',\n    'BYTES',\n    'CAST',\n    'FLOAT',\n    'HEX_STRING',\n    'INTEGER',\n    'STRING',\n    // legacyComparison\n    // expr 'IN',\n    'COALESCE',\n    'GREATEST',\n    'IFNULL',\n    'IS_INF',\n    'IS_NAN',\n    'IS_EXPLICITLY_DEFINED',\n    'LEAST',\n    'NVL',\n    // legacyDatetime\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'DATE',\n    'DATE_ADD',\n    'DATEDIFF',\n    'DAY',\n    'DAYOFWEEK',\n    'DAYOFYEAR',\n    'FORMAT_UTC_USEC',\n    'HOUR',\n    'MINUTE',\n    'MONTH',\n    'MSEC_TO_TIMESTAMP',\n    'NOW',\n    'PARSE_UTC_USEC',\n    'QUARTER',\n    'SEC_TO_TIMESTAMP',\n    'SECOND',\n    'STRFTIME_UTC_USEC',\n    'TIME',\n    'TIMESTAMP',\n    'TIMESTAMP_TO_MSEC',\n    'TIMESTAMP_TO_SEC',\n    'TIMESTAMP_TO_USEC',\n    'USEC_TO_TIMESTAMP',\n    'UTC_USEC_TO_DAY',\n    'UTC_USEC_TO_HOUR',\n    'UTC_USEC_TO_MONTH',\n    'UTC_USEC_TO_WEEK',\n    'UTC_USEC_TO_YEAR',\n    'WEEK',\n    'YEAR',\n    // legacyIp\n    'FORMAT_IP',\n    'PARSE_IP',\n    'FORMAT_PACKED_IP',\n    'PARSE_PACKED_IP',\n    // legacyJson\n    'JSON_EXTRACT',\n    'JSON_EXTRACT_SCALAR',\n    // legacyMath\n    'ABS',\n    'ACOS',\n    'ACOSH',\n    'ASIN',\n    'ASINH',\n    'ATAN',\n    'ATANH',\n    'ATAN2',\n    'CEIL',\n    'COS',\n    'COSH',\n    'DEGREES',\n    'EXP',\n    'FLOOR',\n    'LN',\n    'LOG',\n    'LOG2',\n    'LOG10',\n    'PI',\n    'POW',\n    'RADIANS',\n    'RAND',\n    'ROUND',\n    'SIN',\n    'SINH',\n    'SQRT',\n    'TAN',\n    'TANH',\n    // legacyRegex\n    'REGEXP_MATCH',\n    'REGEXP_EXTRACT',\n    'REGEXP_REPLACE',\n    // legacyString\n    'CONCAT',\n    // expr CONTAINS 'str'\n    'INSTR',\n    'LEFT',\n    'LENGTH',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'REPLACE',\n    'RIGHT',\n    'RPAD',\n    'RTRIM',\n    'SPLIT',\n    'SUBSTR',\n    'UPPER',\n    // legacyTableWildcard\n    'TABLE_DATE_RANGE',\n    'TABLE_DATE_RANGE_STRICT',\n    'TABLE_QUERY',\n    // legacyUrl\n    'HOST',\n    'DOMAIN',\n    'TLD',\n    // legacyWindow\n    'AVG',\n    'COUNT',\n    'MAX',\n    'MIN',\n    'STDDEV',\n    'SUM',\n    'CUME_DIST',\n    'DENSE_RANK',\n    'FIRST_VALUE',\n    'LAG',\n    'LAST_VALUE',\n    'LEAD',\n    'NTH_VALUE',\n    'NTILE',\n    'PERCENT_RANK',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'RANK',\n    'RATIO_TO_REPORT',\n    'ROW_NUMBER',\n    // legacyMisc\n    'CURRENT_USER',\n    'EVERY',\n    'FROM_BASE64',\n    'HASH',\n    'FARM_FINGERPRINT',\n    'IF',\n    'POSITION',\n    'SHA1',\n    'SOME',\n    'TO_BASE64',\n    // other\n    'BQ.JOBS.CANCEL',\n    'BQ.REFRESH_MATERIALIZED_VIEW',\n    // ddl\n    'OPTIONS',\n    // pivot\n    'PIVOT',\n    'UNPIVOT',\n];\n//# sourceMappingURL=bigquery.functions.js.map","export const functions = [\n    // https://www.ibm.com/docs/en/db2/11.5?topic=bif-aggregate-functions\n    'ARRAY_AGG',\n    'AVG',\n    'CORRELATION',\n    'COUNT',\n    'COUNT_BIG',\n    'COVARIANCE',\n    'COVARIANCE_SAMP',\n    'CUME_DIST',\n    'GROUPING',\n    'LISTAGG',\n    'MAX',\n    'MEDIAN',\n    'MIN',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'PERCENT_RANK',\n    'REGR_AVGX',\n    'REGR_AVGY',\n    'REGR_COUNT',\n    'REGR_INTERCEPT',\n    'REGR_ICPT',\n    'REGR_R2',\n    'REGR_SLOPE',\n    'REGR_SXX',\n    'REGR_SXY',\n    'REGR_SYY',\n    'STDDEV',\n    'STDDEV_SAMP',\n    'SUM',\n    'VARIANCE',\n    'VARIANCE_SAMP',\n    'XMLAGG',\n    'XMLGROUP',\n    // https://www.ibm.com/docs/en/db2/11.5?topic=bif-scalar-functions\n    'ABS',\n    'ABSVAL',\n    'ACOS',\n    'ADD_DAYS',\n    'ADD_HOURS',\n    'ADD_MINUTES',\n    'ADD_MONTHS',\n    'ADD_SECONDS',\n    'ADD_YEARS',\n    'AGE',\n    'ARRAY_DELETE',\n    'ARRAY_FIRST',\n    'ARRAY_LAST',\n    'ARRAY_NEXT',\n    'ARRAY_PRIOR',\n    'ASCII',\n    'ASCII_STR',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'ATANH',\n    'BITAND',\n    'BITANDNOT',\n    'BITOR',\n    'BITXOR',\n    'BITNOT',\n    'BPCHAR',\n    'BSON_TO_JSON',\n    'BTRIM',\n    'CARDINALITY',\n    'CEILING',\n    'CEIL',\n    'CHARACTER_LENGTH',\n    'CHR',\n    'COALESCE',\n    'COLLATION_KEY',\n    'COLLATION_KEY_BIT',\n    'COMPARE_DECFLOAT',\n    'CONCAT',\n    'COS',\n    'COSH',\n    'COT',\n    'CURSOR_ROWCOUNT',\n    'DATAPARTITIONNUM',\n    'DATE_PART',\n    'DATE_TRUNC',\n    'DAY',\n    'DAYNAME',\n    'DAYOFMONTH',\n    'DAYOFWEEK',\n    'DAYOFWEEK_ISO',\n    'DAYOFYEAR',\n    'DAYS',\n    'DAYS_BETWEEN',\n    'DAYS_TO_END_OF_MONTH',\n    'DBPARTITIONNUM',\n    'DECFLOAT',\n    'DECFLOAT_FORMAT',\n    'DECODE',\n    'DECRYPT_BIN',\n    'DECRYPT_CHAR',\n    'DEGREES',\n    'DEREF',\n    'DIFFERENCE',\n    'DIGITS',\n    'DOUBLE_PRECISION',\n    'EMPTY_BLOB',\n    'EMPTY_CLOB',\n    'EMPTY_DBCLOB',\n    'EMPTY_NCLOB',\n    'ENCRYPT',\n    'EVENT_MON_STATE',\n    'EXP',\n    'EXTRACT',\n    'FIRST_DAY',\n    'FLOOR',\n    'FROM_UTC_TIMESTAMP',\n    'GENERATE_UNIQUE',\n    'GETHINT',\n    'GREATEST',\n    'HASH',\n    'HASH4',\n    'HASH8',\n    'HASHEDVALUE',\n    'HEX',\n    'HEXTORAW',\n    'HOUR',\n    'HOURS_BETWEEN',\n    'IDENTITY_VAL_LOCAL',\n    'IFNULL',\n    'INITCAP',\n    'INSERT',\n    'INSTR',\n    'INSTR2',\n    'INSTR4',\n    'INSTRB',\n    'INTNAND',\n    'INTNOR',\n    'INTNXOR',\n    'INTNNOT',\n    'ISNULL',\n    'JSON_ARRAY',\n    'JSON_OBJECT',\n    'JSON_QUERY',\n    'JSON_TO_BSON',\n    'JSON_VALUE',\n    'JULIAN_DAY',\n    'LAST_DAY',\n    'LCASE',\n    'LEAST',\n    'LEFT',\n    'LENGTH',\n    'LENGTH2',\n    'LENGTH4',\n    'LENGTHB',\n    'LN',\n    'LOCATE',\n    'LOCATE_IN_STRING',\n    'LOG10',\n    'LONG_VARCHAR',\n    'LONG_VARGRAPHIC',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'MAX',\n    'MAX_CARDINALITY',\n    'MICROSECOND',\n    'MIDNIGHT_SECONDS',\n    'MIN',\n    'MINUTE',\n    'MINUTES_BETWEEN',\n    'MOD',\n    'MONTH',\n    'MONTHNAME',\n    'MONTHS_BETWEEN',\n    'MULTIPLY_ALT',\n    'NEXT_DAY',\n    'NEXT_MONTH',\n    'NEXT_QUARTER',\n    'NEXT_WEEK',\n    'NEXT_YEAR',\n    'NORMALIZE_DECFLOAT',\n    'NOW',\n    'NULLIF',\n    'NVL',\n    'NVL2',\n    'OCTET_LENGTH',\n    'OVERLAY',\n    'PARAMETER',\n    'POSITION',\n    'POSSTR',\n    'POW',\n    'POWER',\n    'QUANTIZE',\n    'QUARTER',\n    'QUOTE_IDENT',\n    'QUOTE_LITERAL',\n    'RADIANS',\n    'RAISE_ERROR',\n    'RAND',\n    'RANDOM',\n    'RAWTOHEX',\n    'REC2XML',\n    'REGEXP_COUNT',\n    'REGEXP_EXTRACT',\n    'REGEXP_INSTR',\n    'REGEXP_LIKE',\n    'REGEXP_MATCH_COUNT',\n    'REGEXP_REPLACE',\n    'REGEXP_SUBSTR',\n    'REPEAT',\n    'REPLACE',\n    'RID',\n    'RID_BIT',\n    'RIGHT',\n    'ROUND',\n    'ROUND_TIMESTAMP',\n    'RPAD',\n    'RTRIM',\n    'SECLABEL',\n    'SECLABEL_BY_NAME',\n    'SECLABEL_TO_CHAR',\n    'SECOND',\n    'SECONDS_BETWEEN',\n    'SIGN',\n    'SIN',\n    'SINH',\n    'SOUNDEX',\n    'SPACE',\n    'SQRT',\n    'STRIP',\n    'STRLEFT',\n    'STRPOS',\n    'STRRIGHT',\n    'SUBSTR',\n    'SUBSTR2',\n    'SUBSTR4',\n    'SUBSTRB',\n    'SUBSTRING',\n    'TABLE_NAME',\n    'TABLE_SCHEMA',\n    'TAN',\n    'TANH',\n    'THIS_MONTH',\n    'THIS_QUARTER',\n    'THIS_WEEK',\n    'THIS_YEAR',\n    'TIMESTAMP_FORMAT',\n    'TIMESTAMP_ISO',\n    'TIMESTAMPDIFF',\n    'TIMEZONE',\n    'TO_CHAR',\n    'TO_CLOB',\n    'TO_DATE',\n    'TO_HEX',\n    'TO_MULTI_BYTE',\n    'TO_NCHAR',\n    'TO_NCLOB',\n    'TO_NUMBER',\n    'TO_SINGLE_BYTE',\n    'TO_TIMESTAMP',\n    'TO_UTC_TIMESTAMP',\n    'TOTALORDER',\n    'TRANSLATE',\n    'TRIM',\n    'TRIM_ARRAY',\n    'TRUNC_TIMESTAMP',\n    'TRUNCATE',\n    'TRUNC',\n    'TYPE_ID',\n    'TYPE_NAME',\n    'TYPE_SCHEMA',\n    'UCASE',\n    'UNICODE_STR',\n    'UPPER',\n    'VALUE',\n    'VARCHAR_BIT_FORMAT',\n    'VARCHAR_FORMAT',\n    'VARCHAR_FORMAT_BIT',\n    'VERIFY_GROUP_FOR_USER',\n    'VERIFY_ROLE_FOR_USER',\n    'VERIFY_TRUSTED_CONTEXT_ROLE_FOR_USER',\n    'WEEK',\n    'WEEK_ISO',\n    'WEEKS_BETWEEN',\n    'WIDTH_BUCKET',\n    'XMLATTRIBUTES',\n    'XMLCOMMENT',\n    'XMLCONCAT',\n    'XMLDOCUMENT',\n    'XMLELEMENT',\n    'XMLFOREST',\n    'XMLNAMESPACES',\n    'XMLPARSE',\n    'XMLPI',\n    'XMLQUERY',\n    'XMLROW',\n    'XMLSERIALIZE',\n    'XMLTEXT',\n    'XMLVALIDATE',\n    'XMLXSROBJECTID',\n    'XSLTRANSFORM',\n    'YEAR',\n    'YEARS_BETWEEN',\n    'YMD_BETWEEN',\n    // https://www.ibm.com/docs/en/db2/11.5?topic=bif-table-functions\n    'BASE_TABLE',\n    'JSON_TABLE',\n    'UNNEST',\n    'XMLTABLE',\n    // https://www.ibm.com/docs/en/db2/11.5?topic=expressions-olap-specification\n    // Additional function names not already present in the aggregate functions list\n    'RANK',\n    'DENSE_RANK',\n    'NTILE',\n    'LAG',\n    'LEAD',\n    'ROW_NUMBER',\n    'FIRST_VALUE',\n    'LAST_VALUE',\n    'NTH_VALUE',\n    'RATIO_TO_REPORT',\n    // Type casting\n    'CAST',\n];\n//# sourceMappingURL=db2.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './db2.functions.js';\nimport { dataTypes, keywords } from './db2.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'PARTITION BY',\n    'ORDER BY [INPUT SEQUENCE]',\n    'LIMIT',\n    'OFFSET',\n    'FETCH NEXT',\n    'FOR UPDATE [OF]',\n    'FOR {READ | FETCH} ONLY',\n    'FOR {RR | CS | UR | RS} [USE AND KEEP {SHARE | UPDATE | EXCLUSIVE} LOCKS]',\n    'WAIT FOR OUTCOME',\n    'SKIP LOCKED DATA',\n    'INTO',\n    // Data modification\n    // - insert:\n    'INSERT INTO',\n    'VALUES',\n    // - update:\n    'SET',\n    // - merge:\n    'MERGE INTO',\n    'WHEN [NOT] MATCHED [THEN]',\n    'UPDATE SET',\n    'INSERT',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [GLOBAL TEMPORARY | EXTERNAL] TABLE [IF NOT EXISTS]',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR REPLACE] VIEW',\n    // - update:\n    'UPDATE',\n    'WHERE CURRENT OF',\n    'WITH {RR | RS | CS | UR}',\n    // - delete:\n    'DELETE FROM',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // alter table:\n    'ALTER TABLE',\n    'ADD [COLUMN]',\n    'DROP [COLUMN]',\n    'RENAME COLUMN',\n    'ALTER [COLUMN]',\n    'SET DATA TYPE',\n    'SET NOT NULL',\n    'DROP {DEFAULT | GENERATED | NOT NULL}',\n    // - truncate:\n    'TRUNCATE [TABLE]',\n    // https://www.ibm.com/docs/en/db2/11.5?topic=s-statements\n    'ALLOCATE',\n    'ALTER AUDIT POLICY',\n    'ALTER BUFFERPOOL',\n    'ALTER DATABASE PARTITION GROUP',\n    'ALTER DATABASE',\n    'ALTER EVENT MONITOR',\n    'ALTER FUNCTION',\n    'ALTER HISTOGRAM TEMPLATE',\n    'ALTER INDEX',\n    'ALTER MASK',\n    'ALTER METHOD',\n    'ALTER MODULE',\n    'ALTER NICKNAME',\n    'ALTER PACKAGE',\n    'ALTER PERMISSION',\n    'ALTER PROCEDURE',\n    'ALTER SCHEMA',\n    'ALTER SECURITY LABEL COMPONENT',\n    'ALTER SECURITY POLICY',\n    'ALTER SEQUENCE',\n    'ALTER SERVER',\n    'ALTER SERVICE CLASS',\n    'ALTER STOGROUP',\n    'ALTER TABLESPACE',\n    'ALTER THRESHOLD',\n    'ALTER TRIGGER',\n    'ALTER TRUSTED CONTEXT',\n    'ALTER TYPE',\n    'ALTER USAGE LIST',\n    'ALTER USER MAPPING',\n    'ALTER VIEW',\n    'ALTER WORK ACTION SET',\n    'ALTER WORK CLASS SET',\n    'ALTER WORKLOAD',\n    'ALTER WRAPPER',\n    'ALTER XSROBJECT',\n    'ALTER STOGROUP',\n    'ALTER TABLESPACE',\n    'ALTER TRIGGER',\n    'ALTER TRUSTED CONTEXT',\n    'ALTER VIEW',\n    'ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}',\n    'AUDIT',\n    'BEGIN DECLARE SECTION',\n    'CALL',\n    'CLOSE',\n    'COMMENT ON',\n    'COMMIT [WORK]',\n    'CONNECT',\n    'CREATE [OR REPLACE] [PUBLIC] ALIAS',\n    'CREATE AUDIT POLICY',\n    'CREATE BUFFERPOOL',\n    'CREATE DATABASE PARTITION GROUP',\n    'CREATE EVENT MONITOR',\n    'CREATE [OR REPLACE] FUNCTION',\n    'CREATE FUNCTION MAPPING',\n    'CREATE HISTOGRAM TEMPLATE',\n    'CREATE [UNIQUE] INDEX',\n    'CREATE INDEX EXTENSION',\n    'CREATE [OR REPLACE] MASK',\n    'CREATE [SPECIFIC] METHOD',\n    'CREATE [OR REPLACE] MODULE',\n    'CREATE [OR REPLACE] NICKNAME',\n    'CREATE [OR REPLACE] PERMISSION',\n    'CREATE [OR REPLACE] PROCEDURE',\n    'CREATE ROLE',\n    'CREATE SCHEMA',\n    'CREATE SECURITY LABEL [COMPONENT]',\n    'CREATE SECURITY POLICY',\n    'CREATE [OR REPLACE] SEQUENCE',\n    'CREATE SERVICE CLASS',\n    'CREATE SERVER',\n    'CREATE STOGROUP',\n    'CREATE SYNONYM',\n    'CREATE [LARGE | REGULAR | {SYSTEM | USER} TEMPORARY] TABLESPACE',\n    'CREATE THRESHOLD',\n    'CREATE {TRANSFORM | TRANSFORMS} FOR',\n    'CREATE [OR REPLACE] TRIGGER',\n    'CREATE TRUSTED CONTEXT',\n    'CREATE [OR REPLACE] TYPE',\n    'CREATE TYPE MAPPING',\n    'CREATE USAGE LIST',\n    'CREATE USER MAPPING FOR',\n    'CREATE [OR REPLACE] VARIABLE',\n    'CREATE WORK ACTION SET',\n    'CREATE WORK CLASS SET',\n    'CREATE WORKLOAD',\n    'CREATE WRAPPER',\n    'DECLARE',\n    'DECLARE GLOBAL TEMPORARY TABLE',\n    'DESCRIBE [INPUT | OUTPUT]',\n    'DISCONNECT',\n    'DROP [PUBLIC] ALIAS',\n    'DROP AUDIT POLICY',\n    'DROP BUFFERPOOL',\n    'DROP DATABASE PARTITION GROUP',\n    'DROP EVENT MONITOR',\n    'DROP [SPECIFIC] FUNCTION',\n    'DROP FUNCTION MAPPING',\n    'DROP HISTOGRAM TEMPLATE',\n    'DROP INDEX [EXTENSION]',\n    'DROP MASK',\n    'DROP [SPECIFIC] METHOD',\n    'DROP MODULE',\n    'DROP NICKNAME',\n    'DROP PACKAGE',\n    'DROP PERMISSION',\n    'DROP [SPECIFIC] PROCEDURE',\n    'DROP ROLE',\n    'DROP SCHEMA',\n    'DROP SECURITY LABEL [COMPONENT]',\n    'DROP SECURITY POLICY',\n    'DROP SEQUENCE',\n    'DROP SERVER',\n    'DROP SERVICE CLASS',\n    'DROP STOGROUP',\n    'DROP TABLE HIERARCHY',\n    'DROP {TABLESPACE | TABLESPACES}',\n    'DROP {TRANSFORM | TRANSFORMS}',\n    'DROP THRESHOLD',\n    'DROP TRIGGER',\n    'DROP TRUSTED CONTEXT',\n    'DROP TYPE [MAPPING]',\n    'DROP USAGE LIST',\n    'DROP USER MAPPING FOR',\n    'DROP VARIABLE',\n    'DROP VIEW [HIERARCHY]',\n    'DROP WORK {ACTION | CLASS} SET',\n    'DROP WORKLOAD',\n    'DROP WRAPPER',\n    'DROP XSROBJECT',\n    'END DECLARE SECTION',\n    'EXECUTE [IMMEDIATE]',\n    'EXPLAIN {PLAN [SECTION] | ALL}',\n    'FETCH [FROM]',\n    'FLUSH {BUFFERPOOL | BUFFERPOOLS} ALL',\n    'FLUSH EVENT MONITOR',\n    'FLUSH FEDERATED CACHE',\n    'FLUSH OPTIMIZATION PROFILE CACHE',\n    'FLUSH PACKAGE CACHE [DYNAMIC]',\n    'FLUSH AUTHENTICATION CACHE [FOR ALL]',\n    'FREE LOCATOR',\n    'GET DIAGNOSTICS',\n    'GOTO',\n    'GRANT',\n    'INCLUDE',\n    'ITERATE',\n    'LEAVE',\n    'LOCK TABLE',\n    'LOOP',\n    'OPEN',\n    'PIPE',\n    'PREPARE',\n    'REFRESH TABLE',\n    'RELEASE',\n    'RELEASE [TO] SAVEPOINT',\n    'RENAME [TABLE | INDEX | STOGROUP | TABLESPACE]',\n    'REPEAT',\n    'RESIGNAL',\n    'RETURN',\n    'REVOKE',\n    'ROLLBACK [WORK] [TO SAVEPOINT]',\n    'SAVEPOINT',\n    'SET COMPILATION ENVIRONMENT',\n    'SET CONNECTION',\n    'SET CURRENT',\n    'SET ENCRYPTION PASSWORD',\n    'SET EVENT MONITOR STATE',\n    'SET INTEGRITY',\n    'SET PASSTHRU',\n    'SET PATH',\n    'SET ROLE',\n    'SET SCHEMA',\n    'SET SERVER OPTION',\n    'SET {SESSION AUTHORIZATION | SESSION_USER}',\n    'SET USAGE LIST',\n    'SIGNAL',\n    'TRANSFER OWNERSHIP OF',\n    'WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}',\n    'WHILE',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'EXCEPT [ALL]', 'INTERSECT [ALL]']);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n]);\nconst reservedKeywordPhrases = expandPhrases([\n    'ON DELETE',\n    'ON UPDATE',\n    'SET NULL',\n    '{ROWS | RANGE} BETWEEN',\n]);\nconst reservedDataTypePhrases = expandPhrases([]);\nexport const db2 = {\n    name: 'db2',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedKeywordPhrases,\n        reservedDataTypePhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        extraParens: ['[]'],\n        stringTypes: [\n            { quote: \"''-qq\", prefixes: ['G', 'N', 'U&'] },\n            { quote: \"''-raw\", prefixes: ['X', 'BX', 'GX', 'UX'], requirePrefix: true },\n        ],\n        identTypes: [`\"\"-qq`],\n        identChars: { first: '@#$', rest: '@#$' },\n        paramTypes: { positional: true, named: [':'] },\n        paramChars: { first: '@#$', rest: '@#$' },\n        operators: [\n            '**',\n            '%',\n            '|',\n            '&',\n            '^',\n            '~',\n            '¬=',\n            '¬>',\n            '¬<',\n            '!>',\n            '!<',\n            '^=',\n            '^>',\n            '^<',\n            '||',\n            '->',\n            '=>',\n        ],\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=db2.formatter.js.map","export const keywords = [\n    // https://www.ibm.com/docs/en/db2/11.5?topic=sql-reserved-schema-names-reserved-words\n    'ACTIVATE',\n    'ADD',\n    'AFTER',\n    'ALIAS',\n    'ALL',\n    'ALLOCATE',\n    'ALLOW',\n    'ALTER',\n    'AND',\n    'ANY',\n    'AS',\n    'ASENSITIVE',\n    'ASSOCIATE',\n    'ASUTIME',\n    'AT',\n    'ATTRIBUTES',\n    'AUDIT',\n    'AUTHORIZATION',\n    'AUX',\n    'AUXILIARY',\n    'BEFORE',\n    'BEGIN',\n    'BETWEEN',\n    'BINARY',\n    'BUFFERPOOL',\n    'BY',\n    'CACHE',\n    'CALL',\n    'CALLED',\n    'CAPTURE',\n    'CARDINALITY',\n    'CASCADED',\n    'CASE',\n    'CAST',\n    'CHECK',\n    'CLONE',\n    'CLOSE',\n    'CLUSTER',\n    'COLLECTION',\n    'COLLID',\n    'COLUMN',\n    'COMMENT',\n    'COMMIT',\n    'CONCAT',\n    'CONDITION',\n    'CONNECT',\n    'CONNECTION',\n    'CONSTRAINT',\n    'CONTAINS',\n    'CONTINUE',\n    'COUNT',\n    'COUNT_BIG',\n    'CREATE',\n    'CROSS',\n    'CURRENT',\n    'CURRENT_DATE',\n    'CURRENT_LC_CTYPE',\n    'CURRENT_PATH',\n    'CURRENT_SCHEMA',\n    'CURRENT_SERVER',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_TIMEZONE',\n    'CURRENT_USER',\n    'CURSOR',\n    'CYCLE',\n    'DATA',\n    'DATABASE',\n    'DATAPARTITIONNAME',\n    'DATAPARTITIONNUM',\n    'DAY',\n    'DAYS',\n    'DB2GENERAL',\n    'DB2GENRL',\n    'DB2SQL',\n    'DBINFO',\n    'DBPARTITIONNAME',\n    'DBPARTITIONNUM',\n    'DEALLOCATE',\n    'DECLARE',\n    'DEFAULT',\n    'DEFAULTS',\n    'DEFINITION',\n    'DELETE',\n    'DENSERANK',\n    'DENSE_RANK',\n    'DESCRIBE',\n    'DESCRIPTOR',\n    'DETERMINISTIC',\n    'DIAGNOSTICS',\n    'DISABLE',\n    'DISALLOW',\n    'DISCONNECT',\n    'DISTINCT',\n    'DO',\n    'DOCUMENT',\n    'DROP',\n    'DSSIZE',\n    'DYNAMIC',\n    'EACH',\n    'EDITPROC',\n    'ELSE',\n    'ELSEIF',\n    'ENABLE',\n    'ENCODING',\n    'ENCRYPTION',\n    'END',\n    'END-EXEC',\n    'ENDING',\n    'ERASE',\n    'ESCAPE',\n    'EVERY',\n    'EXCEPT',\n    'EXCEPTION',\n    'EXCLUDING',\n    'EXCLUSIVE',\n    'EXECUTE',\n    'EXISTS',\n    'EXIT',\n    'EXPLAIN',\n    'EXTENDED',\n    'EXTERNAL',\n    'EXTRACT',\n    'FENCED',\n    'FETCH',\n    'FIELDPROC',\n    'FILE',\n    'FINAL',\n    'FIRST1',\n    'FOR',\n    'FOREIGN',\n    'FREE',\n    'FROM',\n    'FULL',\n    'FUNCTION',\n    'GENERAL',\n    'GENERATED',\n    'GET',\n    'GLOBAL',\n    'GO',\n    'GOTO',\n    'GRANT',\n    'GRAPHIC',\n    'GROUP',\n    'HANDLER',\n    'HASH',\n    'HASHED_VALUE',\n    'HAVING',\n    'HINT',\n    'HOLD',\n    'HOUR',\n    'HOURS',\n    'IDENTITY',\n    'IF',\n    'IMMEDIATE',\n    'IMPORT',\n    'IN',\n    'INCLUDING',\n    'INCLUSIVE',\n    'INCREMENT',\n    'INDEX',\n    'INDICATOR',\n    'INDICATORS',\n    'INF',\n    'INFINITY',\n    'INHERIT',\n    'INNER',\n    'INOUT',\n    'INSENSITIVE',\n    'INSERT',\n    'INTEGRITY',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'ISNULL',\n    'ISOBID',\n    'ISOLATION',\n    'ITERATE',\n    'JAR',\n    'JAVA',\n    'JOIN',\n    'KEEP',\n    'KEY',\n    'LABEL',\n    'LANGUAGE',\n    'LAST3',\n    'LATERAL',\n    'LC_CTYPE',\n    'LEAVE',\n    'LEFT',\n    'LIKE',\n    'LIMIT',\n    'LINKTYPE',\n    'LOCAL',\n    'LOCALDATE',\n    'LOCALE',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOCATOR',\n    'LOCATORS',\n    'LOCK',\n    'LOCKMAX',\n    'LOCKSIZE',\n    'LOOP',\n    'MAINTAINED',\n    'MATERIALIZED',\n    'MAXVALUE',\n    'MICROSECOND',\n    'MICROSECONDS',\n    'MINUTE',\n    'MINUTES',\n    'MINVALUE',\n    'MODE',\n    'MODIFIES',\n    'MONTH',\n    'MONTHS',\n    'NAN',\n    'NEW',\n    'NEW_TABLE',\n    'NEXTVAL',\n    'NO',\n    'NOCACHE',\n    'NOCYCLE',\n    'NODENAME',\n    'NODENUMBER',\n    'NOMAXVALUE',\n    'NOMINVALUE',\n    'NONE',\n    'NOORDER',\n    'NORMALIZED',\n    'NOT2',\n    'NOTNULL',\n    'NULL',\n    'NULLS',\n    'NUMPARTS',\n    'OBID',\n    'OF',\n    'OFF',\n    'OFFSET',\n    'OLD',\n    'OLD_TABLE',\n    'ON',\n    'OPEN',\n    'OPTIMIZATION',\n    'OPTIMIZE',\n    'OPTION',\n    'OR',\n    'ORDER',\n    'OUT',\n    'OUTER',\n    'OVER',\n    'OVERRIDING',\n    'PACKAGE',\n    'PADDED',\n    'PAGESIZE',\n    'PARAMETER',\n    'PART',\n    'PARTITION',\n    'PARTITIONED',\n    'PARTITIONING',\n    'PARTITIONS',\n    'PASSWORD',\n    'PATH',\n    'PERCENT',\n    'PIECESIZE',\n    'PLAN',\n    'POSITION',\n    'PRECISION',\n    'PREPARE',\n    'PREVVAL',\n    'PRIMARY',\n    'PRIQTY',\n    'PRIVILEGES',\n    'PROCEDURE',\n    'PROGRAM',\n    'PSID',\n    'PUBLIC',\n    'QUERY',\n    'QUERYNO',\n    'RANGE',\n    'RANK',\n    'READ',\n    'READS',\n    'RECOVERY',\n    'REFERENCES',\n    'REFERENCING',\n    'REFRESH',\n    'RELEASE',\n    'RENAME',\n    'REPEAT',\n    'RESET',\n    'RESIGNAL',\n    'RESTART',\n    'RESTRICT',\n    'RESULT',\n    'RESULT_SET_LOCATOR',\n    'RETURN',\n    'RETURNS',\n    'REVOKE',\n    'RIGHT',\n    'ROLE',\n    'ROLLBACK',\n    'ROUND_CEILING',\n    'ROUND_DOWN',\n    'ROUND_FLOOR',\n    'ROUND_HALF_DOWN',\n    'ROUND_HALF_EVEN',\n    'ROUND_HALF_UP',\n    'ROUND_UP',\n    'ROUTINE',\n    'ROW',\n    'ROWNUMBER',\n    'ROWS',\n    'ROWSET',\n    'ROW_NUMBER',\n    'RRN',\n    'RUN',\n    'SAVEPOINT',\n    'SCHEMA',\n    'SCRATCHPAD',\n    'SCROLL',\n    'SEARCH',\n    'SECOND',\n    'SECONDS',\n    'SECQTY',\n    'SECURITY',\n    'SELECT',\n    'SENSITIVE',\n    'SEQUENCE',\n    'SESSION',\n    'SESSION_USER',\n    'SET',\n    'SIGNAL',\n    'SIMPLE',\n    'SNAN',\n    'SOME',\n    'SOURCE',\n    'SPECIFIC',\n    'SQL',\n    'SQLID',\n    'STACKED',\n    'STANDARD',\n    'START',\n    'STARTING',\n    'STATEMENT',\n    'STATIC',\n    'STATMENT',\n    'STAY',\n    'STOGROUP',\n    'STORES',\n    'STYLE',\n    'SUBSTRING',\n    'SUMMARY',\n    'SYNONYM',\n    'SYSFUN',\n    'SYSIBM',\n    'SYSPROC',\n    'SYSTEM',\n    'SYSTEM_USER',\n    'TABLE',\n    'TABLESPACE',\n    'THEN',\n    'TO',\n    'TRANSACTION',\n    'TRIGGER',\n    'TRIM',\n    'TRUNCATE',\n    'TYPE',\n    'UNDO',\n    'UNION',\n    'UNIQUE',\n    'UNTIL',\n    'UPDATE',\n    'USAGE',\n    'USER',\n    'USING',\n    'VALIDPROC',\n    'VALUE',\n    'VALUES',\n    'VARIABLE',\n    'VARIANT',\n    'VCAT',\n    'VERSION',\n    'VIEW',\n    'VOLATILE',\n    'VOLUMES',\n    'WHEN',\n    'WHENEVER',\n    'WHERE',\n    'WHILE',\n    'WITH',\n    'WITHOUT',\n    'WLM',\n    'WRITE',\n    'XMLELEMENT',\n    'XMLEXISTS',\n    'XMLNAMESPACES',\n    'YEAR',\n    'YEARS',\n];\nexport const dataTypes = [\n    // https://www.ibm.com/docs/en/db2-for-zos/12?topic=columns-data-types\n    'ARRAY',\n    'BIGINT',\n    'BINARY',\n    'BLOB',\n    'BOOLEAN',\n    'CCSID',\n    'CHAR',\n    'CHARACTER',\n    'CLOB',\n    'DATE',\n    'DATETIME',\n    'DBCLOB',\n    'DEC',\n    'DECIMAL',\n    'DOUBLE',\n    'DOUBLE PRECISION',\n    'FLOAT',\n    'FLOAT4',\n    'FLOAT8',\n    'GRAPHIC',\n    'INT',\n    'INT2',\n    'INT4',\n    'INT8',\n    'INTEGER',\n    'INTERVAL',\n    'LONG VARCHAR',\n    'LONG VARGRAPHIC',\n    'NCHAR',\n    'NCHR',\n    'NCLOB',\n    'NVARCHAR',\n    'NUMERIC',\n    'SMALLINT',\n    'REAL',\n    'TIME',\n    'TIMESTAMP',\n    'VARBINARY',\n    'VARCHAR',\n    'VARGRAPHIC',\n];\n//# sourceMappingURL=db2.keywords.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './db2i.functions.js';\nimport { dataTypes, keywords } from './db2i.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'INTO',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'PARTITION BY',\n    'ORDER [SIBLINGS] BY [INPUT SEQUENCE]',\n    'LIMIT',\n    'OFFSET',\n    'FETCH {FIRST | NEXT}',\n    'FOR UPDATE [OF]',\n    'FOR READ ONLY',\n    'OPTIMIZE FOR',\n    // Data modification\n    // - insert:\n    'INSERT INTO',\n    'VALUES',\n    // - update:\n    'SET',\n    // - merge:\n    'MERGE INTO',\n    'WHEN [NOT] MATCHED [THEN]',\n    'UPDATE SET',\n    'DELETE',\n    'INSERT',\n    // Data definition - table\n    'FOR SYSTEM NAME',\n]);\nconst standardOnelineClauses = expandPhrases(['CREATE [OR REPLACE] TABLE']);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR REPLACE] [RECURSIVE] VIEW',\n    // - update:\n    'UPDATE',\n    'WHERE CURRENT OF',\n    'WITH {NC | RR | RS | CS | UR}',\n    // - delete:\n    'DELETE FROM',\n    // - drop table:\n    'DROP TABLE',\n    // alter table:\n    'ALTER TABLE',\n    'ADD [COLUMN]',\n    'ALTER [COLUMN]',\n    'DROP [COLUMN]',\n    'SET DATA TYPE',\n    'SET {GENERATED ALWAYS | GENERATED BY DEFAULT}',\n    'SET NOT NULL',\n    'SET {NOT HIDDEN | IMPLICITLY HIDDEN}',\n    'SET FIELDPROC',\n    'DROP {DEFAULT | NOT NULL | GENERATED | IDENTITY | ROW CHANGE TIMESTAMP | FIELDPROC}',\n    // - truncate:\n    'TRUNCATE [TABLE]',\n    // other\n    'SET [CURRENT] SCHEMA',\n    'SET CURRENT_SCHEMA',\n    // https://www.ibm.com/docs/en/i/7.5?topic=reference-statements\n    'ALLOCATE CURSOR',\n    'ALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL] SQL',\n    'ALTER [SPECIFIC] {FUNCTION | PROCEDURE}',\n    'ALTER {MASK | PERMISSION | SEQUENCE | TRIGGER}',\n    'ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}',\n    'BEGIN DECLARE SECTION',\n    'CALL',\n    'CLOSE',\n    'COMMENT ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PARAMETER | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}',\n    'COMMENT ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}',\n    'COMMENT ON PARAMETER SPECIFIC {FUNCTION | PROCEDURE | ROUTINE}',\n    'COMMENT ON [TABLE FUNCTION] RETURN COLUMN',\n    'COMMENT ON [TABLE FUNCTION] RETURN COLUMN SPECIFIC [PROCEDURE | ROUTINE]',\n    'COMMIT [WORK] [HOLD]',\n    'CONNECT [TO | RESET] USER',\n    'CREATE [OR REPLACE] {ALIAS | FUNCTION | MASK | PERMISSION | PROCEDURE | SEQUENCE | TRIGGER | VARIABLE}',\n    'CREATE [ENCODED VECTOR] INDEX',\n    'CREATE UNIQUE [WHERE NOT NULL] INDEX',\n    'CREATE SCHEMA',\n    'CREATE TYPE',\n    'DEALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL]',\n    'DECLARE CURSOR',\n    'DECLARE GLOBAL TEMPORARY TABLE',\n    'DECLARE',\n    'DESCRIBE CURSOR',\n    'DESCRIBE INPUT',\n    'DESCRIBE [OUTPUT]',\n    'DESCRIBE {PROCEDURE | ROUTINE}',\n    'DESCRIBE TABLE',\n    'DISCONNECT ALL [SQL]',\n    'DISCONNECT [CURRENT]',\n    'DROP {ALIAS | INDEX | MASK | PACKAGE | PERMISSION | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT} [IF EXISTS]',\n    'DROP [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE} [IF EXISTS]',\n    'END DECLARE SECTION',\n    'EXECUTE [IMMEDIATE]',\n    // 'FETCH {NEXT | PRIOR | FIRST | LAST | BEFORE | AFTER | CURRENT} [FROM]',\n    'FREE LOCATOR',\n    'GET [SQL] DESCRIPTOR [LOCAL | GLOBAL]',\n    'GET [CURRENT | STACKED] DIAGNOSTICS',\n    'GRANT {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}',\n    'HOLD LOCATOR',\n    'INCLUDE',\n    'LABEL ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}',\n    'LABEL ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}',\n    'LOCK TABLE',\n    'OPEN',\n    'PREPARE',\n    'REFRESH TABLE',\n    'RELEASE',\n    'RELEASE [TO] SAVEPOINT',\n    'RENAME [TABLE | INDEX] TO',\n    'REVOKE {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}',\n    'ROLLBACK [WORK] [HOLD | TO SAVEPOINT]',\n    'SAVEPOINT',\n    'SET CONNECTION',\n    'SET CURRENT {DEBUG MODE | DECFLOAT ROUNDING MODE | DEGREE | IMPLICIT XMLPARSE OPTION | TEMPORAL SYSTEM_TIME}',\n    'SET [SQL] DESCRIPTOR [LOCAL | GLOBAL]',\n    'SET ENCRYPTION PASSWORD',\n    'SET OPTION',\n    'SET {[CURRENT [FUNCTION]] PATH | CURRENT_PATH}',\n    'SET RESULT SETS [WITH RETURN [TO CALLER | TO CLIENT]]',\n    'SET SESSION AUTHORIZATION',\n    'SET SESSION_USER',\n    'SET TRANSACTION',\n    'SIGNAL SQLSTATE [VALUE]',\n    'TAG',\n    'TRANSFER OWNERSHIP OF',\n    'WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'EXCEPT [ALL]', 'INTERSECT [ALL]']);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '[LEFT | RIGHT] EXCEPTION JOIN',\n    '{INNER | CROSS} JOIN',\n]);\nconst reservedKeywordPhrases = expandPhrases([\n    'ON DELETE',\n    'ON UPDATE',\n    'SET NULL',\n    '{ROWS | RANGE} BETWEEN',\n]);\nconst reservedDataTypePhrases = expandPhrases([]);\n// https://www.ibm.com/docs/en/i/7.5?topic=reference-sql\nexport const db2i = {\n    name: 'db2i',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedKeywordPhrases,\n        reservedDataTypePhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        nestedBlockComments: true,\n        extraParens: ['[]'],\n        stringTypes: [\n            { quote: \"''-qq\", prefixes: ['G', 'N'] },\n            { quote: \"''-raw\", prefixes: ['X', 'BX', 'GX', 'UX'], requirePrefix: true },\n        ],\n        identTypes: [`\"\"-qq`],\n        identChars: { first: '@#$', rest: '@#$' },\n        paramTypes: { positional: true, named: [':'] },\n        paramChars: { first: '@#$', rest: '@#$' },\n        operators: ['**', '¬=', '¬>', '¬<', '!>', '!<', '||', '=>'],\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=db2i.formatter.js.map","export const keywords = [\n    // https://www.ibm.com/docs/en/i/7.5?topic=words-reserved\n    // TODO: This list likely contains all keywords, not only the reserved ones,\n    // try to filter it down to just the reserved keywords.\n    'ABSENT',\n    'ACCORDING',\n    'ACCTNG',\n    'ACTION',\n    'ACTIVATE',\n    'ADD',\n    'ALIAS',\n    'ALL',\n    'ALLOCATE',\n    'ALLOW',\n    'ALTER',\n    'AND',\n    'ANY',\n    'APPEND',\n    'APPLNAME',\n    'ARRAY',\n    'ARRAY_AGG',\n    'ARRAY_TRIM',\n    'AS',\n    'ASC',\n    'ASENSITIVE',\n    'ASSOCIATE',\n    'ATOMIC',\n    'ATTACH',\n    'ATTRIBUTES',\n    'AUTHORIZATION',\n    'AUTONOMOUS',\n    'BEFORE',\n    'BEGIN',\n    'BETWEEN',\n    'BIND',\n    'BSON',\n    'BUFFERPOOL',\n    'BY',\n    'CACHE',\n    'CALL',\n    'CALLED',\n    'CARDINALITY',\n    'CASE',\n    'CAST',\n    'CHECK',\n    'CL',\n    'CLOSE',\n    'CLUSTER',\n    'COLLECT',\n    'COLLECTION',\n    'COLUMN',\n    'COMMENT',\n    'COMMIT',\n    'COMPACT',\n    'COMPARISONS',\n    'COMPRESS',\n    'CONCAT',\n    'CONCURRENT',\n    'CONDITION',\n    'CONNECT',\n    'CONNECT_BY_ROOT',\n    'CONNECTION',\n    'CONSTANT',\n    'CONSTRAINT',\n    'CONTAINS',\n    'CONTENT',\n    'CONTINUE',\n    'COPY',\n    'COUNT',\n    'COUNT_BIG',\n    'CREATE',\n    'CREATEIN',\n    'CROSS',\n    'CUBE',\n    'CUME_DIST',\n    'CURRENT',\n    'CURRENT_DATE',\n    'CURRENT_PATH',\n    'CURRENT_SCHEMA',\n    'CURRENT_SERVER',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_TIMEZONE',\n    'CURRENT_USER',\n    'CURSOR',\n    'CYCLE',\n    'DATABASE',\n    'DATAPARTITIONNAME',\n    'DATAPARTITIONNUM',\n    'DAY',\n    'DAYS',\n    'DB2GENERAL',\n    'DB2GENRL',\n    'DB2SQL',\n    'DBINFO',\n    'DBPARTITIONNAME',\n    'DBPARTITIONNUM',\n    'DEACTIVATE',\n    'DEALLOCATE',\n    'DECLARE',\n    'DEFAULT',\n    'DEFAULTS',\n    'DEFER',\n    'DEFINE',\n    'DEFINITION',\n    'DELETE',\n    'DELETING',\n    'DENSE_RANK',\n    'DENSERANK',\n    'DESC',\n    'DESCRIBE',\n    'DESCRIPTOR',\n    'DETACH',\n    'DETERMINISTIC',\n    'DIAGNOSTICS',\n    'DISABLE',\n    'DISALLOW',\n    'DISCONNECT',\n    'DISTINCT',\n    'DO',\n    'DOCUMENT',\n    'DROP',\n    'DYNAMIC',\n    'EACH',\n    'ELSE',\n    'ELSEIF',\n    'EMPTY',\n    'ENABLE',\n    'ENCODING',\n    'ENCRYPTION',\n    'END',\n    'END-EXEC',\n    'ENDING',\n    'ENFORCED',\n    'ERROR',\n    'ESCAPE',\n    'EVERY',\n    'EXCEPT',\n    'EXCEPTION',\n    'EXCLUDING',\n    'EXCLUSIVE',\n    'EXECUTE',\n    'EXISTS',\n    'EXIT',\n    'EXTEND',\n    'EXTERNAL',\n    'EXTRACT',\n    'FALSE',\n    'FENCED',\n    'FETCH',\n    'FIELDPROC',\n    'FILE',\n    'FINAL',\n    'FIRST_VALUE',\n    'FOR',\n    'FOREIGN',\n    'FORMAT',\n    'FREE',\n    'FREEPAGE',\n    'FROM',\n    'FULL',\n    'FUNCTION',\n    'GBPCACHE',\n    'GENERAL',\n    'GENERATED',\n    'GET',\n    'GLOBAL',\n    'GO',\n    'GOTO',\n    'GRANT',\n    'GROUP',\n    'HANDLER',\n    'HASH',\n    'HASH_ROW',\n    'HASHED_VALUE',\n    'HAVING',\n    'HINT',\n    'HOLD',\n    'HOUR',\n    'HOURS',\n    // 'ID', Not actually a reserved keyword\n    'IDENTITY',\n    'IF',\n    'IGNORE',\n    'IMMEDIATE',\n    'IMPLICITLY',\n    'IN',\n    'INCLUDE',\n    'INCLUDING',\n    'INCLUSIVE',\n    'INCREMENT',\n    'INDEX',\n    'INDEXBP',\n    'INDICATOR',\n    'INF',\n    'INFINITY',\n    'INHERIT',\n    'INLINE',\n    'INNER',\n    'INOUT',\n    'INSENSITIVE',\n    'INSERT',\n    'INSERTING',\n    'INTEGRITY',\n    'INTERPRET',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'ISNULL',\n    'ISOLATION',\n    'ITERATE',\n    'JAVA',\n    'JOIN',\n    'JSON',\n    'JSON_ARRAY',\n    'JSON_ARRAYAGG',\n    'JSON_EXISTS',\n    'JSON_OBJECT',\n    'JSON_OBJECTAGG',\n    'JSON_QUERY',\n    'JSON_TABLE',\n    'JSON_VALUE',\n    'KEEP',\n    'KEY',\n    'KEYS',\n    'LABEL',\n    'LAG',\n    'LANGUAGE',\n    'LAST_VALUE',\n    'LATERAL',\n    'LEAD',\n    'LEAVE',\n    'LEFT',\n    'LEVEL2',\n    'LIKE',\n    'LIMIT',\n    'LINKTYPE',\n    'LISTAGG',\n    'LOCAL',\n    'LOCALDATE',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOCATION',\n    'LOCATOR',\n    'LOCK',\n    'LOCKSIZE',\n    'LOG',\n    'LOGGED',\n    'LOOP',\n    'MAINTAINED',\n    'MASK',\n    'MATCHED',\n    'MATERIALIZED',\n    'MAXVALUE',\n    'MERGE',\n    'MICROSECOND',\n    'MICROSECONDS',\n    'MINPCTUSED',\n    'MINUTE',\n    'MINUTES',\n    'MINVALUE',\n    'MIRROR',\n    'MIXED',\n    'MODE',\n    'MODIFIES',\n    'MONTH',\n    'MONTHS',\n    'NAMESPACE',\n    'NAN',\n    'NATIONAL',\n    'NCHAR',\n    'NCLOB',\n    'NESTED',\n    'NEW',\n    'NEW_TABLE',\n    'NEXTVAL',\n    'NO',\n    'NOCACHE',\n    'NOCYCLE',\n    'NODENAME',\n    'NODENUMBER',\n    'NOMAXVALUE',\n    'NOMINVALUE',\n    'NONE',\n    'NOORDER',\n    'NORMALIZED',\n    'NOT',\n    'NOTNULL',\n    'NTH_VALUE',\n    'NTILE',\n    'NULL',\n    'NULLS',\n    'NVARCHAR',\n    'OBID',\n    'OBJECT',\n    'OF',\n    'OFF',\n    'OFFSET',\n    'OLD',\n    'OLD_TABLE',\n    'OMIT',\n    'ON',\n    'ONLY',\n    'OPEN',\n    'OPTIMIZE',\n    'OPTION',\n    'OR',\n    'ORDER',\n    'ORDINALITY',\n    'ORGANIZE',\n    'OUT',\n    'OUTER',\n    'OVER',\n    'OVERLAY',\n    'OVERRIDING',\n    'PACKAGE',\n    'PADDED',\n    'PAGE',\n    'PAGESIZE',\n    'PARAMETER',\n    'PART',\n    'PARTITION',\n    'PARTITIONED',\n    'PARTITIONING',\n    'PARTITIONS',\n    'PASSING',\n    'PASSWORD',\n    'PATH',\n    'PCTFREE',\n    'PERCENT_RANK',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'PERIOD',\n    'PERMISSION',\n    'PIECESIZE',\n    'PIPE',\n    'PLAN',\n    'POSITION',\n    'PREPARE',\n    'PREVVAL',\n    'PRIMARY',\n    'PRIOR',\n    'PRIQTY',\n    'PRIVILEGES',\n    'PROCEDURE',\n    'PROGRAM',\n    'PROGRAMID',\n    'QUERY',\n    'RANGE',\n    'RANK',\n    'RATIO_TO_REPORT',\n    'RCDFMT',\n    'READ',\n    'READS',\n    'RECOVERY',\n    'REFERENCES',\n    'REFERENCING',\n    'REFRESH',\n    'REGEXP_LIKE',\n    'RELEASE',\n    'RENAME',\n    'REPEAT',\n    'RESET',\n    'RESIGNAL',\n    'RESTART',\n    'RESULT',\n    'RESULT_SET_LOCATOR',\n    'RETURN',\n    'RETURNING',\n    'RETURNS',\n    'REVOKE',\n    'RID',\n    'RIGHT',\n    'ROLLBACK',\n    'ROLLUP',\n    'ROUTINE',\n    'ROW',\n    'ROW_NUMBER',\n    'ROWNUMBER',\n    'ROWS',\n    'RRN',\n    'RUN',\n    'SAVEPOINT',\n    'SBCS',\n    'SCALAR',\n    'SCHEMA',\n    'SCRATCHPAD',\n    'SCROLL',\n    'SEARCH',\n    'SECOND',\n    'SECONDS',\n    'SECQTY',\n    'SECURED',\n    'SELECT',\n    'SENSITIVE',\n    'SEQUENCE',\n    'SESSION',\n    'SESSION_USER',\n    'SET',\n    'SIGNAL',\n    'SIMPLE',\n    'SKIP',\n    'SNAN',\n    'SOME',\n    'SOURCE',\n    'SPECIFIC',\n    'SQL',\n    'SQLID',\n    'SQLIND_DEFAULT',\n    'SQLIND_UNASSIGNED',\n    'STACKED',\n    'START',\n    'STARTING',\n    'STATEMENT',\n    'STATIC',\n    'STOGROUP',\n    'SUBSTRING',\n    'SUMMARY',\n    'SYNONYM',\n    'SYSTEM_TIME',\n    'SYSTEM_USER',\n    'TABLE',\n    'TABLESPACE',\n    'TABLESPACES',\n    'TAG',\n    'THEN',\n    'THREADSAFE',\n    'TO',\n    'TRANSACTION',\n    'TRANSFER',\n    'TRIGGER',\n    'TRIM',\n    'TRIM_ARRAY',\n    'TRUE',\n    'TRUNCATE',\n    'TRY_CAST',\n    'TYPE',\n    'UNDO',\n    'UNION',\n    'UNIQUE',\n    'UNIT',\n    'UNKNOWN',\n    'UNNEST',\n    'UNTIL',\n    'UPDATE',\n    'UPDATING',\n    'URI',\n    'USAGE',\n    'USE',\n    'USER',\n    'USERID',\n    'USING',\n    'VALUE',\n    'VALUES',\n    'VARIABLE',\n    'VARIANT',\n    'VCAT',\n    'VERSION',\n    'VERSIONING',\n    'VIEW',\n    'VOLATILE',\n    'WAIT',\n    'WHEN',\n    'WHENEVER',\n    'WHERE',\n    'WHILE',\n    'WITH',\n    'WITHIN',\n    'WITHOUT',\n    'WRAPPED',\n    'WRAPPER',\n    'WRITE',\n    'WRKSTNNAME',\n    'XMLAGG',\n    'XMLATTRIBUTES',\n    'XMLCAST',\n    'XMLCOMMENT',\n    'XMLCONCAT',\n    'XMLDOCUMENT',\n    'XMLELEMENT',\n    'XMLFOREST',\n    'XMLGROUP',\n    'XMLNAMESPACES',\n    'XMLPARSE',\n    'XMLPI',\n    'XMLROW',\n    'XMLSERIALIZE',\n    'XMLTABLE',\n    'XMLTEXT',\n    'XMLVALIDATE',\n    'XSLTRANSFORM',\n    'XSROBJECT',\n    'YEAR',\n    'YEARS',\n    'YES',\n    'ZONE',\n];\nexport const dataTypes = [\n    // https://www.ibm.com/docs/en/i/7.2?topic=iaodsd-odbc-data-types-how-they-correspond-db2-i-database-types\n    'ARRAY',\n    'BIGINT',\n    'BINARY',\n    'BIT',\n    'BLOB',\n    'BOOLEAN',\n    'CCSID',\n    'CHAR',\n    'CHARACTER',\n    'CLOB',\n    'DATA',\n    'DATALINK',\n    'DATE',\n    'DBCLOB',\n    'DECFLOAT',\n    'DECIMAL',\n    'DEC',\n    'DOUBLE',\n    'DOUBLE PRECISION',\n    'FLOAT',\n    'GRAPHIC',\n    'INT',\n    'INTEGER',\n    'LONG',\n    'NUMERIC',\n    'REAL',\n    'ROWID',\n    'SMALLINT',\n    'TIME',\n    'TIMESTAMP',\n    'VARBINARY',\n    'VARCHAR',\n    'VARGRAPHIC',\n    'XML',\n];\n//# sourceMappingURL=db2i.keywords.js.map","export const functions = [\n    // https://www.ibm.com/docs/en/i/7.5?topic=functions-aggregate\n    // TODO: 'ANY', - conflicts with test for ANY predicate in 'operators.ys'!!\n    'ARRAY_AGG',\n    'AVG',\n    'CORR',\n    'CORRELATION',\n    'COUNT',\n    'COUNT_BIG',\n    'COVAR_POP',\n    'COVARIANCE',\n    'COVAR',\n    'COVAR_SAMP',\n    'COVARIANCE_SAMP',\n    'EVERY',\n    'GROUPING',\n    'JSON_ARRAYAGG',\n    'JSON_OBJECTAGG',\n    'LISTAGG',\n    'MAX',\n    'MEDIAN',\n    'MIN',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    // https://www.ibm.com/docs/en/i/7.5?topic=functions-regression'\n    'REGR_AVGX',\n    'REGR_AVGY',\n    'REGR_COUNT',\n    'REGR_INTERCEPT',\n    'REGR_R2',\n    'REGR_SLOPE',\n    'REGR_SXX',\n    'REGR_SXY',\n    'REGR_SYY',\n    'SOME',\n    'STDDEV_POP',\n    'STDDEV',\n    'STDDEV_SAMP',\n    'SUM',\n    'VAR_POP',\n    'VARIANCE',\n    'VAR',\n    'VAR_SAMP',\n    'VARIANCE_SAMP',\n    'XMLAGG',\n    'XMLGROUP',\n    // https://www.ibm.com/docs/en/i/7.5?topic=functions-scalar\n    'ABS',\n    'ABSVAL',\n    'ACOS',\n    'ADD_DAYS',\n    'ADD_HOURS',\n    'ADD_MINUTES',\n    'ADD_MONTHS',\n    'ADD_SECONDS',\n    'ADD_YEARS',\n    'ANTILOG',\n    'ARRAY_MAX_CARDINALITY',\n    'ARRAY_TRIM',\n    'ASCII',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'ATANH',\n    'BASE64_DECODE',\n    'BASE64_ENCODE',\n    'BIT_LENGTH',\n    'BITAND',\n    'BITANDNOT',\n    'BITNOT',\n    'BITOR',\n    'BITXOR',\n    'BSON_TO_JSON',\n    'CARDINALITY',\n    'CEIL',\n    'CEILING',\n    'CHAR_LENGTH',\n    'CHARACTER_LENGTH',\n    'CHR',\n    'COALESCE',\n    'COMPARE_DECFLOAT',\n    'CONCAT',\n    'CONTAINS',\n    'COS',\n    'COSH',\n    'COT',\n    'CURDATE',\n    'CURTIME',\n    'DATABASE',\n    'DATAPARTITIONNAME',\n    'DATAPARTITIONNUM',\n    'DAY',\n    'DAYNAME',\n    'DAYOFMONTH',\n    'DAYOFWEEK_ISO',\n    'DAYOFWEEK',\n    'DAYOFYEAR',\n    'DAYS',\n    'DBPARTITIONNAME',\n    'DBPARTITIONNUM',\n    'DECFLOAT_FORMAT',\n    'DECFLOAT_SORTKEY',\n    'DECRYPT_BINARY',\n    'DECRYPT_BIT',\n    'DECRYPT_CHAR',\n    'DECRYPT_DB',\n    'DEGREES',\n    'DIFFERENCE',\n    'DIGITS',\n    'DLCOMMENT',\n    'DLLINKTYPE',\n    'DLURLCOMPLETE',\n    'DLURLPATH',\n    'DLURLPATHONLY',\n    'DLURLSCHEME',\n    'DLURLSERVER',\n    'DLVALUE',\n    'DOUBLE_PRECISION',\n    'DOUBLE',\n    'ENCRPYT',\n    'ENCRYPT_AES',\n    'ENCRYPT_AES256',\n    'ENCRYPT_RC2',\n    'ENCRYPT_TDES',\n    'EXP',\n    'EXTRACT',\n    'FIRST_DAY',\n    'FLOOR',\n    'GENERATE_UNIQUE',\n    'GET_BLOB_FROM_FILE',\n    'GET_CLOB_FROM_FILE',\n    'GET_DBCLOB_FROM_FILE',\n    'GET_XML_FILE',\n    'GETHINT',\n    'GREATEST',\n    'HASH_MD5',\n    'HASH_ROW',\n    'HASH_SHA1',\n    'HASH_SHA256',\n    'HASH_SHA512',\n    'HASH_VALUES',\n    'HASHED_VALUE',\n    'HEX',\n    'HEXTORAW',\n    'HOUR',\n    'HTML_ENTITY_DECODE',\n    'HTML_ENTITY_ENCODE',\n    'HTTP_DELETE_BLOB',\n    'HTTP_DELETE',\n    'HTTP_GET_BLOB',\n    'HTTP_GET',\n    'HTTP_PATCH_BLOB',\n    'HTTP_PATCH',\n    'HTTP_POST_BLOB',\n    'HTTP_POST',\n    'HTTP_PUT_BLOB',\n    'HTTP_PUT',\n    'IDENTITY_VAL_LOCAL',\n    'IFNULL',\n    'INSERT',\n    'INSTR',\n    'INTERPRET',\n    'ISFALSE',\n    'ISNOTFALSE',\n    'ISNOTTRUE',\n    'ISTRUE',\n    'JSON_ARRAY',\n    'JSON_OBJECT',\n    'JSON_QUERY',\n    'JSON_TO_BSON',\n    'JSON_UPDATE',\n    'JSON_VALUE',\n    'JULIAN_DAY',\n    'LAND',\n    'LAST_DAY',\n    'LCASE',\n    'LEAST',\n    'LEFT',\n    'LENGTH',\n    'LN',\n    'LNOT',\n    'LOCATE_IN_STRING',\n    'LOCATE',\n    'LOG10',\n    'LOR',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'MAX_CARDINALITY',\n    'MAX',\n    'MICROSECOND',\n    'MIDNIGHT_SECONDS',\n    'MIN',\n    'MINUTE',\n    'MOD',\n    'MONTH',\n    'MONTHNAME',\n    'MONTHS_BETWEEN',\n    'MQREAD',\n    'MQREADCLOB',\n    'MQRECEIVE',\n    'MQRECEIVECLOB',\n    'MQSEND',\n    'MULTIPLY_ALT',\n    'NEXT_DAY',\n    'NORMALIZE_DECFLOAT',\n    'NOW',\n    'NULLIF',\n    'NVL',\n    'OCTET_LENGTH',\n    'OVERLAY',\n    'PI',\n    'POSITION',\n    'POSSTR',\n    'POW',\n    'POWER',\n    'QUANTIZE',\n    'QUARTER',\n    'RADIANS',\n    'RAISE_ERROR',\n    'RANDOM',\n    'RAND',\n    'REGEXP_COUNT',\n    'REGEXP_INSTR',\n    'REGEXP_REPLACE',\n    'REGEXP_SUBSTR',\n    'REPEAT',\n    'REPLACE',\n    'RID',\n    'RIGHT',\n    'ROUND_TIMESTAMP',\n    'ROUND',\n    'RPAD',\n    'RRN',\n    'RTRIM',\n    'SCORE',\n    'SECOND',\n    'SIGN',\n    'SIN',\n    'SINH',\n    'SOUNDEX',\n    'SPACE',\n    'SQRT',\n    'STRIP',\n    'STRLEFT',\n    'STRPOS',\n    'STRRIGHT',\n    'SUBSTR',\n    'SUBSTRING',\n    'TABLE_NAME',\n    'TABLE_SCHEMA',\n    'TAN',\n    'TANH',\n    'TIMESTAMP_FORMAT',\n    'TIMESTAMP_ISO',\n    'TIMESTAMPDIFF_BIG',\n    'TIMESTAMPDIFF',\n    'TO_CHAR',\n    'TO_CLOB',\n    'TO_DATE',\n    'TO_NUMBER',\n    'TO_TIMESTAMP',\n    'TOTALORDER',\n    'TRANSLATE',\n    'TRIM_ARRAY',\n    'TRIM',\n    'TRUNC_TIMESTAMP',\n    'TRUNC',\n    'TRUNCATE',\n    'UCASE',\n    'UPPER',\n    'URL_DECODE',\n    'URL_ENCODE',\n    'VALUE',\n    'VARBINARY_FORMAT',\n    'VARCHAR_BIT_FORMAT',\n    'VARCHAR_FORMAT_BINARY',\n    'VARCHAR_FORMAT',\n    'VERIFY_GROUP_FOR_USER',\n    'WEEK_ISO',\n    'WEEK',\n    'WRAP',\n    'XMLATTRIBUTES',\n    'XMLCOMMENT',\n    'XMLCONCAT',\n    'XMLDOCUMENT',\n    'XMLELEMENT',\n    'XMLFOREST',\n    'XMLNAMESPACES',\n    'XMLPARSE',\n    'XMLPI',\n    'XMLROW',\n    'XMLSERIALIZE',\n    'XMLTEXT',\n    'XMLVALIDATE',\n    'XOR',\n    'XSLTRANSFORM',\n    'YEAR',\n    'ZONED',\n    // https://www.ibm.com/docs/en/i/7.5?topic=functions-table\n    'BASE_TABLE',\n    'HTTP_DELETE_BLOB_VERBOSE',\n    'HTTP_DELETE_VERBOSE',\n    'HTTP_GET_BLOB_VERBOSE',\n    'HTTP_GET_VERBOSE',\n    'HTTP_PATCH_BLOB_VERBOSE',\n    'HTTP_PATCH_VERBOSE',\n    'HTTP_POST_BLOB_VERBOSE',\n    'HTTP_POST_VERBOSE',\n    'HTTP_PUT_BLOB_VERBOSE',\n    'HTTP_PUT_VERBOSE',\n    'JSON_TABLE',\n    'MQREADALL',\n    'MQREADALLCLOB',\n    'MQRECEIVEALL',\n    'MQRECEIVEALLCLOB',\n    'XMLTABLE',\n    // https://www.ibm.com/docs/en/db2-for-zos/11?topic=functions-row\n    'UNPACK',\n    // https://www.ibm.com/docs/en/i/7.5?topic=expressions-olap-specifications\n    'CUME_DIST',\n    'DENSE_RANK',\n    'FIRST_VALUE',\n    'LAG',\n    'LAST_VALUE',\n    'LEAD',\n    'NTH_VALUE',\n    'NTILE',\n    'PERCENT_RANK',\n    'RANK',\n    'RATIO_TO_REPORT',\n    'ROW_NUMBER',\n    // Type casting\n    'CAST',\n];\n//# sourceMappingURL=db2i.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './duckdb.functions.js';\nimport { dataTypes, keywords } from './duckdb.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY [ALL]',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY [ALL]',\n    'LIMIT',\n    'OFFSET',\n    // 'USING' (conflicts with 'USING' in JOIN)\n    'USING SAMPLE',\n    'QUALIFY',\n    // Data manipulation\n    // - insert:\n    'INSERT [OR REPLACE] INTO',\n    'VALUES',\n    'DEFAULT VALUES',\n    // - update:\n    'SET',\n    // other:\n    'RETURNING',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [OR REPLACE] [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // TABLE\n    // - update:\n    'UPDATE',\n    // - insert:\n    'ON CONFLICT',\n    // - delete:\n    'DELETE FROM',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // - truncate\n    'TRUNCATE',\n    // - alter table:\n    'ALTER TABLE',\n    'ADD [COLUMN] [IF NOT EXISTS]',\n    'ADD PRIMARY KEY',\n    'DROP [COLUMN] [IF EXISTS]',\n    'ALTER [COLUMN]',\n    'RENAME [COLUMN]',\n    'RENAME TO',\n    'SET [DATA] TYPE',\n    '{SET | DROP} DEFAULT',\n    '{SET | DROP} NOT NULL',\n    // MACRO / FUNCTION\n    'CREATE [OR REPLACE] [TEMPORARY | TEMP] {MACRO | FUNCTION}',\n    'DROP MACRO [TABLE] [IF EXISTS]',\n    'DROP FUNCTION [IF EXISTS]',\n    // INDEX\n    'CREATE [UNIQUE] INDEX [IF NOT EXISTS]',\n    'DROP INDEX [IF EXISTS]',\n    // SCHEMA\n    'CREATE [OR REPLACE] SCHEMA [IF NOT EXISTS]',\n    'DROP SCHEMA [IF EXISTS]',\n    // SECRET\n    'CREATE [OR REPLACE] [PERSISTENT | TEMPORARY] SECRET [IF NOT EXISTS]',\n    'DROP [PERSISTENT | TEMPORARY] SECRET [IF EXISTS]',\n    // SEQUENCE\n    'CREATE [OR REPLACE] [TEMPORARY | TEMP] SEQUENCE',\n    'DROP SEQUENCE [IF EXISTS]',\n    // VIEW\n    'CREATE [OR REPLACE] [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]',\n    'DROP VIEW [IF EXISTS]',\n    'ALTER VIEW',\n    // TYPE\n    'CREATE TYPE',\n    'DROP TYPE [IF EXISTS]',\n    // other\n    'ANALYZE',\n    'ATTACH [DATABASE] [IF NOT EXISTS]',\n    'DETACH [DATABASE] [IF EXISTS]',\n    'CALL',\n    '[FORCE] CHECKPOINT',\n    'COMMENT ON [TABLE | COLUMN | VIEW | INDEX | SEQUENCE | TYPE | MACRO | MACRO TABLE]',\n    'COPY [FROM DATABASE]',\n    'DESCRIBE',\n    'EXPORT DATABASE',\n    'IMPORT DATABASE',\n    'INSTALL',\n    'LOAD',\n    'PIVOT',\n    'PIVOT_WIDER',\n    'UNPIVOT',\n    'EXPLAIN [ANALYZE]',\n    // plain SET conflicts with SET clause in UPDATE\n    'SET {LOCAL | SESSION | GLOBAL}',\n    'RESET [LOCAL | SESSION | GLOBAL]',\n    '{SET | RESET} VARIABLE',\n    'SUMMARIZE',\n    'BEGIN TRANSACTION',\n    'ROLLBACK',\n    'COMMIT',\n    'ABORT',\n    'USE',\n    'VACUUM [ANALYZE]',\n    // prepared statements\n    'PREPARE',\n    'EXECUTE',\n    'DEALLOCATE [PREPARE]',\n]);\nconst reservedSetOperations = expandPhrases([\n    'UNION [ALL | BY NAME]',\n    'EXCEPT [ALL]',\n    'INTERSECT [ALL]',\n]);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    '{NATURAL | ASOF} [INNER] JOIN',\n    '{NATURAL | ASOF} {LEFT | RIGHT | FULL} [OUTER] JOIN',\n    'POSITIONAL JOIN',\n    'ANTI JOIN',\n    'SEMI JOIN',\n]);\nconst reservedKeywordPhrases = expandPhrases([\n    '{ROWS | RANGE | GROUPS} BETWEEN',\n    'SIMILAR TO',\n    'IS [NOT] DISTINCT FROM',\n]);\nconst reservedDataTypePhrases = expandPhrases(['TIMESTAMP WITH TIME ZONE']);\nexport const duckdb = {\n    name: 'duckdb',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedKeywordPhrases,\n        reservedDataTypePhrases,\n        supportsXor: true,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        nestedBlockComments: true,\n        extraParens: ['[]', '{}'],\n        underscoresInNumbers: true,\n        stringTypes: [\n            '$$',\n            \"''-qq\",\n            { quote: \"''-qq-bs\", prefixes: ['E'], requirePrefix: true },\n            { quote: \"''-raw\", prefixes: ['B', 'X'], requirePrefix: true },\n        ],\n        identTypes: [`\"\"-qq`],\n        identChars: { rest: '$' },\n        // TODO: named params $foo currently conflict with $$-quoted strings\n        paramTypes: { positional: true, numbered: ['$'], quoted: ['$'] },\n        operators: [\n            // Arithmetic:\n            '//',\n            '%',\n            '**',\n            '^',\n            '!',\n            // Bitwise:\n            '&',\n            '|',\n            '~',\n            '<<',\n            '>>',\n            // Cast:\n            '::',\n            // Comparison:\n            '==',\n            // Lambda & JSON:\n            '->',\n            // JSON:\n            '->>',\n            // key-value separator:\n            ':',\n            // Named function params:\n            ':=',\n            '=>',\n            // Pattern matching:\n            '~~',\n            '!~~',\n            '~~*',\n            '!~~*',\n            '~~~',\n            // Regular expressions:\n            '~',\n            '!~',\n            '~*',\n            '!~*',\n            // String:\n            '^@',\n            '||',\n            // INET extension:\n            '>>=',\n            '<<=',\n        ],\n    },\n    formatOptions: {\n        alwaysDenseOperators: ['::'],\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=duckdb.formatter.js.map","export const keywords = [\n    // Keywords from DuckDB:\n    // SELECT upper(keyword_name)\n    // FROM duckdb_keywords()\n    // WHERE keyword_category = 'reserved'\n    // ORDER BY keyword_name\n    'ALL',\n    'ANALYSE',\n    'ANALYZE',\n    'AND',\n    'ANY',\n    'AS',\n    'ASC',\n    'ATTACH',\n    'ASYMMETRIC',\n    'BOTH',\n    'CASE',\n    'CAST',\n    'CHECK',\n    'COLLATE',\n    'COLUMN',\n    'CONSTRAINT',\n    'CREATE',\n    'DEFAULT',\n    'DEFERRABLE',\n    'DESC',\n    'DESCRIBE',\n    'DETACH',\n    'DISTINCT',\n    'DO',\n    'ELSE',\n    'END',\n    'EXCEPT',\n    'FALSE',\n    'FETCH',\n    'FOR',\n    'FOREIGN',\n    'FROM',\n    'GRANT',\n    'GROUP',\n    'HAVING',\n    'IN',\n    'INITIALLY',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'LATERAL',\n    'LEADING',\n    'LIMIT',\n    'NOT',\n    'NULL',\n    'OFFSET',\n    'ON',\n    'ONLY',\n    'OR',\n    'ORDER',\n    'PIVOT',\n    'PIVOT_LONGER',\n    'PIVOT_WIDER',\n    'PLACING',\n    'PRIMARY',\n    'REFERENCES',\n    'RETURNING',\n    'SELECT',\n    'SHOW',\n    'SOME',\n    'SUMMARIZE',\n    'SYMMETRIC',\n    'TABLE',\n    'THEN',\n    'TO',\n    'TRAILING',\n    'TRUE',\n    'UNION',\n    'UNIQUE',\n    'UNPIVOT',\n    'USING',\n    'VARIADIC',\n    'WHEN',\n    'WHERE',\n    'WINDOW',\n    'WITH',\n];\nexport const dataTypes = [\n    // Types from DuckDB:\n    // SELECT DISTINCT upper(type_name)\n    // FROM duckdb_types()\n    // ORDER BY type_name\n    'ARRAY',\n    'BIGINT',\n    'BINARY',\n    'BIT',\n    'BITSTRING',\n    'BLOB',\n    'BOOL',\n    'BOOLEAN',\n    'BPCHAR',\n    'BYTEA',\n    'CHAR',\n    'DATE',\n    'DATETIME',\n    'DEC',\n    'DECIMAL',\n    'DOUBLE',\n    'ENUM',\n    'FLOAT',\n    'FLOAT4',\n    'FLOAT8',\n    'GUID',\n    'HUGEINT',\n    'INET',\n    'INT',\n    'INT1',\n    'INT128',\n    'INT16',\n    'INT2',\n    'INT32',\n    'INT4',\n    'INT64',\n    'INT8',\n    'INTEGER',\n    'INTEGRAL',\n    'INTERVAL',\n    'JSON',\n    'LIST',\n    'LOGICAL',\n    'LONG',\n    'MAP',\n    // 'NULL' is a keyword\n    'NUMERIC',\n    'NVARCHAR',\n    'OID',\n    'REAL',\n    'ROW',\n    'SHORT',\n    'SIGNED',\n    'SMALLINT',\n    'STRING',\n    'STRUCT',\n    'TEXT',\n    'TIME',\n    'TIMESTAMP_MS',\n    'TIMESTAMP_NS',\n    'TIMESTAMP_S',\n    'TIMESTAMP_US',\n    'TIMESTAMP',\n    'TIMESTAMPTZ',\n    'TIMETZ',\n    'TINYINT',\n    'UBIGINT',\n    'UHUGEINT',\n    'UINT128',\n    'UINT16',\n    'UINT32',\n    'UINT64',\n    'UINT8',\n    'UINTEGER',\n    'UNION',\n    'USMALLINT',\n    'UTINYINT',\n    'UUID',\n    'VARBINARY',\n    'VARCHAR',\n];\n//# sourceMappingURL=duckdb.keywords.js.map","export const functions = [\n    // Functions from DuckDB (excluding those that start with an underscore):\n    // SELECT DISTINCT upper(function_name) AS function_name\n    // FROM duckdb_functions()\n    // WHERE function_name SIMILAR TO '^[a-z].*'\n    // ORDER BY function_name\n    'ABS',\n    'ACOS',\n    'ADD',\n    'ADD_PARQUET_KEY',\n    'AGE',\n    'AGGREGATE',\n    'ALIAS',\n    'ALL_PROFILING_OUTPUT',\n    'ANY_VALUE',\n    'APPLY',\n    'APPROX_COUNT_DISTINCT',\n    'APPROX_QUANTILE',\n    'ARBITRARY',\n    'ARGMAX',\n    'ARGMIN',\n    'ARG_MAX',\n    'ARG_MAX_NULL',\n    'ARG_MIN',\n    'ARG_MIN_NULL',\n    'ARRAY_AGG',\n    'ARRAY_AGGR',\n    'ARRAY_AGGREGATE',\n    'ARRAY_APPEND',\n    'ARRAY_APPLY',\n    'ARRAY_CAT',\n    'ARRAY_CONCAT',\n    'ARRAY_CONTAINS',\n    'ARRAY_COSINE_SIMILARITY',\n    'ARRAY_CROSS_PRODUCT',\n    'ARRAY_DISTANCE',\n    'ARRAY_DISTINCT',\n    'ARRAY_DOT_PRODUCT',\n    'ARRAY_EXTRACT',\n    'ARRAY_FILTER',\n    'ARRAY_GRADE_UP',\n    'ARRAY_HAS',\n    'ARRAY_HAS_ALL',\n    'ARRAY_HAS_ANY',\n    'ARRAY_INDEXOF',\n    'ARRAY_INNER_PRODUCT',\n    'ARRAY_INTERSECT',\n    'ARRAY_LENGTH',\n    'ARRAY_POP_BACK',\n    'ARRAY_POP_FRONT',\n    'ARRAY_POSITION',\n    'ARRAY_PREPEND',\n    'ARRAY_PUSH_BACK',\n    'ARRAY_PUSH_FRONT',\n    'ARRAY_REDUCE',\n    'ARRAY_RESIZE',\n    'ARRAY_REVERSE',\n    'ARRAY_REVERSE_SORT',\n    'ARRAY_SELECT',\n    'ARRAY_SLICE',\n    'ARRAY_SORT',\n    'ARRAY_TO_JSON',\n    'ARRAY_TO_STRING',\n    'ARRAY_TRANSFORM',\n    'ARRAY_UNIQUE',\n    'ARRAY_VALUE',\n    'ARRAY_WHERE',\n    'ARRAY_ZIP',\n    'ARROW_SCAN',\n    'ARROW_SCAN_DUMB',\n    'ASCII',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'AVG',\n    'BASE64',\n    'BIN',\n    'BITSTRING',\n    'BITSTRING_AGG',\n    'BIT_AND',\n    'BIT_COUNT',\n    'BIT_LENGTH',\n    'BIT_OR',\n    'BIT_POSITION',\n    'BIT_XOR',\n    'BOOL_AND',\n    'BOOL_OR',\n    'CARDINALITY',\n    'CBRT',\n    'CEIL',\n    'CEILING',\n    'CENTURY',\n    'CHECKPOINT',\n    'CHR',\n    'COLLATIONS',\n    'COL_DESCRIPTION',\n    'COMBINE',\n    'CONCAT',\n    'CONCAT_WS',\n    'CONSTANT_OR_NULL',\n    'CONTAINS',\n    'COPY_DATABASE',\n    'CORR',\n    'COS',\n    'COT',\n    'COUNT',\n    'COUNT_IF',\n    'COUNT_STAR',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'CREATE_SORT_KEY',\n    'CURRENT_CATALOG',\n    'CURRENT_DATABASE',\n    'CURRENT_DATE',\n    'CURRENT_LOCALTIME',\n    'CURRENT_LOCALTIMESTAMP',\n    'CURRENT_QUERY',\n    'CURRENT_ROLE',\n    'CURRENT_SCHEMA',\n    'CURRENT_SCHEMAS',\n    'CURRENT_SETTING',\n    'CURRENT_USER',\n    'CURRVAL',\n    'DAMERAU_LEVENSHTEIN',\n    'DATABASE_LIST',\n    'DATABASE_SIZE',\n    'DATEDIFF',\n    'DATEPART',\n    'DATESUB',\n    'DATETRUNC',\n    'DATE_ADD',\n    'DATE_DIFF',\n    'DATE_PART',\n    'DATE_SUB',\n    'DATE_TRUNC',\n    'DAY',\n    'DAYNAME',\n    'DAYOFMONTH',\n    'DAYOFWEEK',\n    'DAYOFYEAR',\n    'DECADE',\n    'DECODE',\n    'DEGREES',\n    'DISABLE_CHECKPOINT_ON_SHUTDOWN',\n    'DISABLE_OBJECT_CACHE',\n    'DISABLE_OPTIMIZER',\n    'DISABLE_PRINT_PROGRESS_BAR',\n    'DISABLE_PROFILE',\n    'DISABLE_PROFILING',\n    'DISABLE_PROGRESS_BAR',\n    'DISABLE_VERIFICATION',\n    'DISABLE_VERIFY_EXTERNAL',\n    'DISABLE_VERIFY_FETCH_ROW',\n    'DISABLE_VERIFY_PARALLELISM',\n    'DISABLE_VERIFY_SERIALIZER',\n    'DIVIDE',\n    'DUCKDB_COLUMNS',\n    'DUCKDB_CONSTRAINTS',\n    'DUCKDB_DATABASES',\n    'DUCKDB_DEPENDENCIES',\n    'DUCKDB_EXTENSIONS',\n    'DUCKDB_FUNCTIONS',\n    'DUCKDB_INDEXES',\n    'DUCKDB_KEYWORDS',\n    'DUCKDB_MEMORY',\n    'DUCKDB_OPTIMIZERS',\n    'DUCKDB_SCHEMAS',\n    'DUCKDB_SECRETS',\n    'DUCKDB_SEQUENCES',\n    'DUCKDB_SETTINGS',\n    'DUCKDB_TABLES',\n    'DUCKDB_TEMPORARY_FILES',\n    'DUCKDB_TYPES',\n    'DUCKDB_VIEWS',\n    'EDIT',\n    'EDITDIST3',\n    'ELEMENT_AT',\n    'ENABLE_CHECKPOINT_ON_SHUTDOWN',\n    'ENABLE_OBJECT_CACHE',\n    'ENABLE_OPTIMIZER',\n    'ENABLE_PRINT_PROGRESS_BAR',\n    'ENABLE_PROFILE',\n    'ENABLE_PROFILING',\n    'ENABLE_PROGRESS_BAR',\n    'ENABLE_VERIFICATION',\n    'ENCODE',\n    'ENDS_WITH',\n    'ENTROPY',\n    'ENUM_CODE',\n    'ENUM_FIRST',\n    'ENUM_LAST',\n    'ENUM_RANGE',\n    'ENUM_RANGE_BOUNDARY',\n    'EPOCH',\n    'EPOCH_MS',\n    'EPOCH_NS',\n    'EPOCH_US',\n    'ERA',\n    'ERROR',\n    'EVEN',\n    'EXP',\n    'FACTORIAL',\n    'FAVG',\n    'FDIV',\n    'FILTER',\n    'FINALIZE',\n    'FIRST',\n    'FLATTEN',\n    'FLOOR',\n    'FMOD',\n    'FORCE_CHECKPOINT',\n    'FORMAT',\n    'FORMATREADABLEDECIMALSIZE',\n    'FORMATREADABLESIZE',\n    'FORMAT_BYTES',\n    'FORMAT_PG_TYPE',\n    'FORMAT_TYPE',\n    'FROM_BASE64',\n    'FROM_BINARY',\n    'FROM_HEX',\n    'FROM_JSON',\n    'FROM_JSON_STRICT',\n    'FSUM',\n    'FUNCTIONS',\n    'GAMMA',\n    'GCD',\n    'GENERATE_SERIES',\n    'GENERATE_SUBSCRIPTS',\n    'GEN_RANDOM_UUID',\n    'GEOMEAN',\n    'GEOMETRIC_MEAN',\n    'GETENV',\n    'GET_BIT',\n    'GET_BLOCK_SIZE',\n    'GET_CURRENT_TIME',\n    'GET_CURRENT_TIMESTAMP',\n    'GLOB',\n    'GRADE_UP',\n    'GREATEST',\n    'GREATEST_COMMON_DIVISOR',\n    'GROUP_CONCAT',\n    'HAMMING',\n    'HASH',\n    'HAS_ANY_COLUMN_PRIVILEGE',\n    'HAS_COLUMN_PRIVILEGE',\n    'HAS_DATABASE_PRIVILEGE',\n    'HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE',\n    'HAS_FUNCTION_PRIVILEGE',\n    'HAS_LANGUAGE_PRIVILEGE',\n    'HAS_SCHEMA_PRIVILEGE',\n    'HAS_SEQUENCE_PRIVILEGE',\n    'HAS_SERVER_PRIVILEGE',\n    'HAS_TABLESPACE_PRIVILEGE',\n    'HAS_TABLE_PRIVILEGE',\n    'HEX',\n    'HISTOGRAM',\n    'HOUR',\n    'ICU_CALENDAR_NAMES',\n    'ICU_SORT_KEY',\n    'ILIKE_ESCAPE',\n    'IMPORT_DATABASE',\n    'INDEX_SCAN',\n    'INET_CLIENT_ADDR',\n    'INET_CLIENT_PORT',\n    'INET_SERVER_ADDR',\n    'INET_SERVER_PORT',\n    'INSTR',\n    'IN_SEARCH_PATH',\n    'ISFINITE',\n    'ISINF',\n    'ISNAN',\n    'ISODOW',\n    'ISOYEAR',\n    'JACCARD',\n    'JARO_SIMILARITY',\n    'JARO_WINKLER_SIMILARITY',\n    // 'JSON',\n    'JSON_ARRAY',\n    'JSON_ARRAY_LENGTH',\n    'JSON_CONTAINS',\n    'JSON_DESERIALIZE_SQL',\n    'JSON_EXECUTE_SERIALIZED_SQL',\n    'JSON_EXTRACT',\n    'JSON_EXTRACT_PATH',\n    'JSON_EXTRACT_PATH_TEXT',\n    'JSON_EXTRACT_STRING',\n    'JSON_GROUP_ARRAY',\n    'JSON_GROUP_OBJECT',\n    'JSON_GROUP_STRUCTURE',\n    'JSON_KEYS',\n    'JSON_MERGE_PATCH',\n    'JSON_OBJECT',\n    'JSON_QUOTE',\n    'JSON_SERIALIZE_PLAN',\n    'JSON_SERIALIZE_SQL',\n    'JSON_STRUCTURE',\n    'JSON_TRANSFORM',\n    'JSON_TRANSFORM_STRICT',\n    'JSON_TYPE',\n    'JSON_VALID',\n    'JULIAN',\n    'KAHAN_SUM',\n    'KURTOSIS',\n    'KURTOSIS_POP',\n    'LAST',\n    'LAST_DAY',\n    'LCASE',\n    'LCM',\n    'LEAST',\n    'LEAST_COMMON_MULTIPLE',\n    'LEFT',\n    'LEFT_GRAPHEME',\n    'LEN',\n    'LENGTH',\n    'LENGTH_GRAPHEME',\n    'LEVENSHTEIN',\n    'LGAMMA',\n    'LIKE_ESCAPE',\n    'LIST',\n    'LISTAGG',\n    'LIST_AGGR',\n    'LIST_AGGREGATE',\n    'LIST_ANY_VALUE',\n    'LIST_APPEND',\n    'LIST_APPLY',\n    'LIST_APPROX_COUNT_DISTINCT',\n    'LIST_AVG',\n    'LIST_BIT_AND',\n    'LIST_BIT_OR',\n    'LIST_BIT_XOR',\n    'LIST_BOOL_AND',\n    'LIST_BOOL_OR',\n    'LIST_CAT',\n    'LIST_CONCAT',\n    'LIST_CONTAINS',\n    'LIST_COSINE_SIMILARITY',\n    'LIST_COUNT',\n    'LIST_DISTANCE',\n    'LIST_DISTINCT',\n    'LIST_DOT_PRODUCT',\n    'LIST_ELEMENT',\n    'LIST_ENTROPY',\n    'LIST_EXTRACT',\n    'LIST_FILTER',\n    'LIST_FIRST',\n    'LIST_GRADE_UP',\n    'LIST_HAS',\n    'LIST_HAS_ALL',\n    'LIST_HAS_ANY',\n    'LIST_HISTOGRAM',\n    'LIST_INDEXOF',\n    'LIST_INNER_PRODUCT',\n    'LIST_INTERSECT',\n    'LIST_KURTOSIS',\n    'LIST_KURTOSIS_POP',\n    'LIST_LAST',\n    'LIST_MAD',\n    'LIST_MAX',\n    'LIST_MEDIAN',\n    'LIST_MIN',\n    'LIST_MODE',\n    'LIST_PACK',\n    'LIST_POSITION',\n    'LIST_PREPEND',\n    'LIST_PRODUCT',\n    'LIST_REDUCE',\n    'LIST_RESIZE',\n    'LIST_REVERSE',\n    'LIST_REVERSE_SORT',\n    'LIST_SELECT',\n    'LIST_SEM',\n    'LIST_SKEWNESS',\n    'LIST_SLICE',\n    'LIST_SORT',\n    'LIST_STDDEV_POP',\n    'LIST_STDDEV_SAMP',\n    'LIST_STRING_AGG',\n    'LIST_SUM',\n    'LIST_TRANSFORM',\n    'LIST_UNIQUE',\n    'LIST_VALUE',\n    'LIST_VAR_POP',\n    'LIST_VAR_SAMP',\n    'LIST_WHERE',\n    'LIST_ZIP',\n    'LN',\n    'LOG',\n    'LOG10',\n    'LOG2',\n    'LOWER',\n    'LPAD',\n    'LSMODE',\n    'LTRIM',\n    'MAD',\n    'MAKE_DATE',\n    'MAKE_TIME',\n    'MAKE_TIMESTAMP',\n    'MAKE_TIMESTAMPTZ',\n    'MAP',\n    'MAP_CONCAT',\n    'MAP_ENTRIES',\n    'MAP_EXTRACT',\n    'MAP_FROM_ENTRIES',\n    'MAP_KEYS',\n    'MAP_VALUES',\n    'MAX',\n    'MAX_BY',\n    'MD5',\n    'MD5_NUMBER',\n    'MD5_NUMBER_LOWER',\n    'MD5_NUMBER_UPPER',\n    'MEAN',\n    'MEDIAN',\n    'METADATA_INFO',\n    'MICROSECOND',\n    'MILLENNIUM',\n    'MILLISECOND',\n    'MIN',\n    'MINUTE',\n    'MIN_BY',\n    'MISMATCHES',\n    'MOD',\n    'MODE',\n    'MONTH',\n    'MONTHNAME',\n    'MULTIPLY',\n    'NEXTAFTER',\n    'NEXTVAL',\n    'NFC_NORMALIZE',\n    'NOT_ILIKE_ESCAPE',\n    'NOT_LIKE_ESCAPE',\n    'NOW',\n    'NULLIF',\n    'OBJ_DESCRIPTION',\n    'OCTET_LENGTH',\n    'ORD',\n    'PARQUET_FILE_METADATA',\n    'PARQUET_KV_METADATA',\n    'PARQUET_METADATA',\n    'PARQUET_SCAN',\n    'PARQUET_SCHEMA',\n    'PARSE_DIRNAME',\n    'PARSE_DIRPATH',\n    'PARSE_FILENAME',\n    'PARSE_PATH',\n    'PG_COLLATION_IS_VISIBLE',\n    'PG_CONF_LOAD_TIME',\n    'PG_CONVERSION_IS_VISIBLE',\n    'PG_FUNCTION_IS_VISIBLE',\n    'PG_GET_CONSTRAINTDEF',\n    'PG_GET_EXPR',\n    'PG_GET_VIEWDEF',\n    'PG_HAS_ROLE',\n    'PG_IS_OTHER_TEMP_SCHEMA',\n    'PG_MY_TEMP_SCHEMA',\n    'PG_OPCLASS_IS_VISIBLE',\n    'PG_OPERATOR_IS_VISIBLE',\n    'PG_OPFAMILY_IS_VISIBLE',\n    'PG_POSTMASTER_START_TIME',\n    'PG_SIZE_PRETTY',\n    'PG_TABLE_IS_VISIBLE',\n    'PG_TIMEZONE_NAMES',\n    'PG_TS_CONFIG_IS_VISIBLE',\n    'PG_TS_DICT_IS_VISIBLE',\n    'PG_TS_PARSER_IS_VISIBLE',\n    'PG_TS_TEMPLATE_IS_VISIBLE',\n    'PG_TYPEOF',\n    'PG_TYPE_IS_VISIBLE',\n    'PI',\n    'PLATFORM',\n    'POSITION',\n    'POW',\n    'POWER',\n    'PRAGMA_COLLATIONS',\n    'PRAGMA_DATABASE_SIZE',\n    'PRAGMA_METADATA_INFO',\n    'PRAGMA_PLATFORM',\n    'PRAGMA_SHOW',\n    'PRAGMA_STORAGE_INFO',\n    'PRAGMA_TABLE_INFO',\n    'PRAGMA_USER_AGENT',\n    'PRAGMA_VERSION',\n    'PREFIX',\n    'PRINTF',\n    'PRODUCT',\n    'QUANTILE',\n    'QUANTILE_CONT',\n    'QUANTILE_DISC',\n    'QUARTER',\n    'RADIANS',\n    'RANDOM',\n    'RANGE',\n    'READFILE',\n    'READ_BLOB',\n    'READ_CSV',\n    'READ_CSV_AUTO',\n    'READ_JSON',\n    'READ_JSON_AUTO',\n    'READ_JSON_OBJECTS',\n    'READ_JSON_OBJECTS_AUTO',\n    'READ_NDJSON',\n    'READ_NDJSON_AUTO',\n    'READ_NDJSON_OBJECTS',\n    'READ_PARQUET',\n    'READ_TEXT',\n    'REDUCE',\n    'REGEXP_ESCAPE',\n    'REGEXP_EXTRACT',\n    'REGEXP_EXTRACT_ALL',\n    'REGEXP_FULL_MATCH',\n    'REGEXP_MATCHES',\n    'REGEXP_REPLACE',\n    'REGEXP_SPLIT_TO_ARRAY',\n    'REGEXP_SPLIT_TO_TABLE',\n    'REGR_AVGX',\n    'REGR_AVGY',\n    'REGR_COUNT',\n    'REGR_INTERCEPT',\n    'REGR_R2',\n    'REGR_SLOPE',\n    'REGR_SXX',\n    'REGR_SXY',\n    'REGR_SYY',\n    'REPEAT',\n    'REPEAT_ROW',\n    'REPLACE',\n    'RESERVOIR_QUANTILE',\n    'REVERSE',\n    'RIGHT',\n    'RIGHT_GRAPHEME',\n    'ROUND',\n    'ROUNDBANKERS',\n    'ROUND_EVEN',\n    'ROW',\n    'ROW_TO_JSON',\n    'RPAD',\n    'RTRIM',\n    'SECOND',\n    'SEM',\n    'SEQ_SCAN',\n    'SESSION_USER',\n    'SETSEED',\n    'SET_BIT',\n    'SHA256',\n    'SHA3',\n    'SHELL_ADD_SCHEMA',\n    'SHELL_ESCAPE_CRNL',\n    'SHELL_IDQUOTE',\n    'SHELL_MODULE_SCHEMA',\n    'SHELL_PUTSNL',\n    'SHOBJ_DESCRIPTION',\n    'SHOW',\n    'SHOW_DATABASES',\n    'SHOW_TABLES',\n    'SHOW_TABLES_EXPANDED',\n    'SIGN',\n    'SIGNBIT',\n    'SIN',\n    'SKEWNESS',\n    'SNIFF_CSV',\n    'SPLIT',\n    'SPLIT_PART',\n    'SQL_AUTO_COMPLETE',\n    'SQRT',\n    'STARTS_WITH',\n    'STATS',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STORAGE_INFO',\n    'STRFTIME',\n    'STRING_AGG',\n    'STRING_SPLIT',\n    'STRING_SPLIT_REGEX',\n    'STRING_TO_ARRAY',\n    'STRIP_ACCENTS',\n    'STRLEN',\n    'STRPOS',\n    'STRPTIME',\n    'STRUCT_EXTRACT',\n    'STRUCT_INSERT',\n    'STRUCT_PACK',\n    'STR_SPLIT',\n    'STR_SPLIT_REGEX',\n    'SUBSTR',\n    'SUBSTRING',\n    'SUBSTRING_GRAPHEME',\n    'SUBTRACT',\n    'SUFFIX',\n    'SUM',\n    'SUMKAHAN',\n    'SUMMARY',\n    'SUM_NO_OVERFLOW',\n    'TABLE_INFO',\n    'TAN',\n    'TEST_ALL_TYPES',\n    'TEST_VECTOR_TYPES',\n    'TIMEZONE',\n    'TIMEZONE_HOUR',\n    'TIMEZONE_MINUTE',\n    'TIME_BUCKET',\n    'TODAY',\n    'TO_BASE',\n    'TO_BASE64',\n    'TO_BINARY',\n    'TO_CENTURIES',\n    'TO_DAYS',\n    'TO_DECADES',\n    'TO_HEX',\n    'TO_HOURS',\n    'TO_JSON',\n    'TO_MICROSECONDS',\n    'TO_MILLENNIA',\n    'TO_MILLISECONDS',\n    'TO_MINUTES',\n    'TO_MONTHS',\n    'TO_SECONDS',\n    'TO_TIMESTAMP',\n    'TO_WEEKS',\n    'TO_YEARS',\n    'TRANSACTION_TIMESTAMP',\n    'TRANSLATE',\n    'TRIM',\n    'TRUNC',\n    'TRY_STRPTIME',\n    'TXID_CURRENT',\n    'TYPEOF',\n    'UCASE',\n    'UNBIN',\n    'UNHEX',\n    'UNICODE',\n    'UNION_EXTRACT',\n    'UNION_TAG',\n    'UNION_VALUE',\n    'UNNEST',\n    'UNPIVOT_LIST',\n    'UPPER',\n    'USER',\n    'USER_AGENT',\n    'UUID',\n    'VARIANCE',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VECTOR_TYPE',\n    'VERIFY_EXTERNAL',\n    'VERIFY_FETCH_ROW',\n    'VERIFY_PARALLELISM',\n    'VERIFY_SERIALIZER',\n    'VERSION',\n    'WEEK',\n    'WEEKDAY',\n    'WEEKOFYEAR',\n    'WHICH_SECRET',\n    'WRITEFILE',\n    'XOR',\n    'YEAR',\n    'YEARWEEK',\n    // Keywords that also need to be listed as functions\n    'CAST',\n    'COALESCE',\n    // 'NULL', we really prefer treating it as keyword\n    'RANK',\n    'ROW_NUMBER',\n];\n//# sourceMappingURL=duckdb.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './hive.functions.js';\nimport { dataTypes, keywords } from './hive.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'SORT BY',\n    'CLUSTER BY',\n    'DISTRIBUTE BY',\n    'LIMIT',\n    // Data manipulation\n    // - insert:\n    //   Hive does not actually support plain INSERT INTO, only INSERT INTO TABLE\n    //   but it's a nuisance to not support it, as all other dialects do.\n    'INSERT INTO [TABLE]',\n    'VALUES',\n    // - update:\n    'SET',\n    // - merge:\n    'MERGE INTO',\n    'WHEN [NOT] MATCHED [THEN]',\n    'UPDATE SET',\n    'INSERT [VALUES]',\n    // - insert overwrite directory:\n    //   https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DML#LanguageManualDML-Writingdataintothefilesystemfromqueries\n    'INSERT OVERWRITE [LOCAL] DIRECTORY',\n    // - load:\n    //   https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DML#LanguageManualDML-Loadingfilesintotables\n    'LOAD DATA [LOCAL] INPATH',\n    '[OVERWRITE] INTO TABLE',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS]',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]',\n    // - update:\n    'UPDATE',\n    // - delete:\n    'DELETE FROM',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE',\n    'RENAME TO',\n    // - truncate:\n    'TRUNCATE [TABLE]',\n    // other\n    'ALTER',\n    'CREATE',\n    'USE',\n    'DESCRIBE',\n    'DROP',\n    'FETCH',\n    'SHOW',\n    'STORED AS',\n    'STORED BY',\n    'ROW FORMAT',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL | DISTINCT]']);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    // non-standard joins\n    'LEFT SEMI JOIN',\n]);\nconst reservedPhrases = expandPhrases(['{ROWS | RANGE} BETWEEN']);\nconst reservedDataTypePhrases = expandPhrases([]);\n// https://cwiki.apache.org/confluence/display/Hive/LanguageManual\nexport const hive = {\n    name: 'hive',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedKeywordPhrases: reservedPhrases,\n        reservedDataTypePhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        extraParens: ['[]'],\n        stringTypes: ['\"\"-bs', \"''-bs\"],\n        identTypes: ['``'],\n        variableTypes: [{ quote: '{}', prefixes: ['$'], requirePrefix: true }],\n        operators: ['%', '~', '^', '|', '&', '<=>', '==', '!', '||'],\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=hive.formatter.js.map","export const keywords = [\n    // https://cwiki.apache.org/confluence/display/hive/languagemanual+ddl\n    // Non-reserved keywords have proscribed meanings in. HiveQL, but can still be used as table or column names\n    'ADD',\n    'ADMIN',\n    'AFTER',\n    'ANALYZE',\n    'ARCHIVE',\n    'ASC',\n    'BEFORE',\n    'BUCKET',\n    'BUCKETS',\n    'CASCADE',\n    'CHANGE',\n    'CLUSTER',\n    'CLUSTERED',\n    'CLUSTERSTATUS',\n    'COLLECTION',\n    'COLUMNS',\n    'COMMENT',\n    'COMPACT',\n    'COMPACTIONS',\n    'COMPUTE',\n    'CONCATENATE',\n    'CONTINUE',\n    'DATA',\n    'DATABASES',\n    'DATETIME',\n    'DAY',\n    'DBPROPERTIES',\n    'DEFERRED',\n    'DEFINED',\n    'DELIMITED',\n    'DEPENDENCY',\n    'DESC',\n    'DIRECTORIES',\n    'DIRECTORY',\n    'DISABLE',\n    'DISTRIBUTE',\n    'ELEM_TYPE',\n    'ENABLE',\n    'ESCAPED',\n    'EXCLUSIVE',\n    'EXPLAIN',\n    'EXPORT',\n    'FIELDS',\n    'FILE',\n    'FILEFORMAT',\n    'FIRST',\n    'FORMAT',\n    'FORMATTED',\n    'FUNCTIONS',\n    'HOLD_DDLTIME',\n    'HOUR',\n    'IDXPROPERTIES',\n    'IGNORE',\n    'INDEX',\n    'INDEXES',\n    'INPATH',\n    'INPUTDRIVER',\n    'INPUTFORMAT',\n    'ITEMS',\n    'JAR',\n    'KEYS',\n    'KEY_TYPE',\n    'LIMIT',\n    'LINES',\n    'LOAD',\n    'LOCATION',\n    'LOCK',\n    'LOCKS',\n    'LOGICAL',\n    'LONG',\n    'MAPJOIN',\n    'MATERIALIZED',\n    'METADATA',\n    'MINUS',\n    'MINUTE',\n    'MONTH',\n    'MSCK',\n    'NOSCAN',\n    'NO_DROP',\n    'OFFLINE',\n    'OPTION',\n    'OUTPUTDRIVER',\n    'OUTPUTFORMAT',\n    'OVERWRITE',\n    'OWNER',\n    'PARTITIONED',\n    'PARTITIONS',\n    'PLUS',\n    'PRETTY',\n    'PRINCIPALS',\n    'PROTECTION',\n    'PURGE',\n    'READ',\n    'READONLY',\n    'REBUILD',\n    'RECORDREADER',\n    'RECORDWRITER',\n    'RELOAD',\n    'RENAME',\n    'REPAIR',\n    'REPLACE',\n    'REPLICATION',\n    'RESTRICT',\n    'REWRITE',\n    'ROLE',\n    'ROLES',\n    'SCHEMA',\n    'SCHEMAS',\n    'SECOND',\n    'SEMI',\n    'SERDE',\n    'SERDEPROPERTIES',\n    'SERVER',\n    'SETS',\n    'SHARED',\n    'SHOW',\n    'SHOW_DATABASE',\n    'SKEWED',\n    'SORT',\n    'SORTED',\n    'SSL',\n    'STATISTICS',\n    'STORED',\n    'STREAMTABLE',\n    'STRING',\n    'TABLES',\n    'TBLPROPERTIES',\n    'TEMPORARY',\n    'TERMINATED',\n    'TINYINT',\n    'TOUCH',\n    'TRANSACTIONS',\n    'UNARCHIVE',\n    'UNDO',\n    'UNIONTYPE',\n    'UNLOCK',\n    'UNSET',\n    'UNSIGNED',\n    'URI',\n    'USE',\n    'UTC',\n    'UTCTIMESTAMP',\n    'VALUE_TYPE',\n    'VIEW',\n    'WHILE',\n    'YEAR',\n    'AUTOCOMMIT',\n    'ISOLATION',\n    'LEVEL',\n    'OFFSET',\n    'SNAPSHOT',\n    'TRANSACTION',\n    'WORK',\n    'WRITE',\n    'ABORT',\n    'KEY',\n    'LAST',\n    'NORELY',\n    'NOVALIDATE',\n    'NULLS',\n    'RELY',\n    'VALIDATE',\n    'DETAIL',\n    'DOW',\n    'EXPRESSION',\n    'OPERATOR',\n    'QUARTER',\n    'SUMMARY',\n    'VECTORIZATION',\n    'WEEK',\n    'YEARS',\n    'MONTHS',\n    'WEEKS',\n    'DAYS',\n    'HOURS',\n    'MINUTES',\n    'SECONDS',\n    'TIMESTAMPTZ',\n    'ZONE',\n    // reserved\n    'ALL',\n    'ALTER',\n    'AND',\n    'AS',\n    'AUTHORIZATION',\n    'BETWEEN',\n    'BOTH',\n    'BY',\n    'CASE',\n    'CAST',\n    'COLUMN',\n    'CONF',\n    'CREATE',\n    'CROSS',\n    'CUBE',\n    'CURRENT',\n    'CURRENT_DATE',\n    'CURRENT_TIMESTAMP',\n    'CURSOR',\n    'DATABASE',\n    'DELETE',\n    'DESCRIBE',\n    'DISTINCT',\n    'DROP',\n    'ELSE',\n    'END',\n    'EXCHANGE',\n    'EXISTS',\n    'EXTENDED',\n    'EXTERNAL',\n    'FALSE',\n    'FETCH',\n    'FOLLOWING',\n    'FOR',\n    'FROM',\n    'FULL',\n    'FUNCTION',\n    'GRANT',\n    'GROUP',\n    'GROUPING',\n    'HAVING',\n    'IF',\n    'IMPORT',\n    'IN',\n    'INNER',\n    'INSERT',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'JOIN',\n    'LATERAL',\n    'LEFT',\n    'LESS',\n    'LIKE',\n    'LOCAL',\n    'MACRO',\n    'MORE',\n    'NONE',\n    'NOT',\n    'NULL',\n    'OF',\n    'ON',\n    'OR',\n    'ORDER',\n    'OUT',\n    'OUTER',\n    'OVER',\n    'PARTIALSCAN',\n    'PARTITION',\n    'PERCENT',\n    'PRECEDING',\n    'PRESERVE',\n    'PROCEDURE',\n    'RANGE',\n    'READS',\n    'REDUCE',\n    'REVOKE',\n    'RIGHT',\n    'ROLLUP',\n    'ROW',\n    'ROWS',\n    'SELECT',\n    'SET',\n    'TABLE',\n    'TABLESAMPLE',\n    'THEN',\n    'TO',\n    'TRANSFORM',\n    'TRIGGER',\n    'TRUE',\n    'TRUNCATE',\n    'UNBOUNDED',\n    'UNION',\n    'UNIQUEJOIN',\n    'UPDATE',\n    'USER',\n    'USING',\n    'UTC_TMESTAMP',\n    'VALUES',\n    'WHEN',\n    'WHERE',\n    'WINDOW',\n    'WITH',\n    'COMMIT',\n    'ONLY',\n    'REGEXP',\n    'RLIKE',\n    'ROLLBACK',\n    'START',\n    'CACHE',\n    'CONSTRAINT',\n    'FOREIGN',\n    'PRIMARY',\n    'REFERENCES',\n    'DAYOFWEEK',\n    'EXTRACT',\n    'FLOOR',\n    'VIEWS',\n    'TIME',\n    'SYNC',\n    // fileTypes\n    'TEXTFILE',\n    'SEQUENCEFILE',\n    'ORC',\n    'CSV',\n    'TSV',\n    'PARQUET',\n    'AVRO',\n    'RCFILE',\n    'JSONFILE',\n    'INPUTFORMAT',\n    'OUTPUTFORMAT',\n];\nexport const dataTypes = [\n    // https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Types\n    'ARRAY',\n    'BIGINT',\n    'BINARY',\n    'BOOLEAN',\n    'CHAR',\n    'DATE',\n    'DECIMAL',\n    'DOUBLE',\n    'FLOAT',\n    'INT',\n    'INTEGER',\n    'INTERVAL',\n    'MAP',\n    'NUMERIC',\n    'PRECISION',\n    'SMALLINT',\n    'STRUCT',\n    'TIMESTAMP',\n    'VARCHAR',\n];\n//# sourceMappingURL=hive.keywords.js.map","export const functions = [\n    // https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF\n    // math\n    'ABS',\n    'ACOS',\n    'ASIN',\n    'ATAN',\n    'BIN',\n    'BROUND',\n    'CBRT',\n    'CEIL',\n    'CEILING',\n    'CONV',\n    'COS',\n    'DEGREES',\n    // 'E',\n    'EXP',\n    'FACTORIAL',\n    'FLOOR',\n    'GREATEST',\n    'HEX',\n    'LEAST',\n    'LN',\n    'LOG',\n    'LOG10',\n    'LOG2',\n    'NEGATIVE',\n    'PI',\n    'PMOD',\n    'POSITIVE',\n    'POW',\n    'POWER',\n    'RADIANS',\n    'RAND',\n    'ROUND',\n    'SHIFTLEFT',\n    'SHIFTRIGHT',\n    'SHIFTRIGHTUNSIGNED',\n    'SIGN',\n    'SIN',\n    'SQRT',\n    'TAN',\n    'UNHEX',\n    'WIDTH_BUCKET',\n    // array\n    'ARRAY_CONTAINS',\n    'MAP_KEYS',\n    'MAP_VALUES',\n    'SIZE',\n    'SORT_ARRAY',\n    // conversion\n    'BINARY',\n    'CAST',\n    // date\n    'ADD_MONTHS',\n    'DATE',\n    'DATE_ADD',\n    'DATE_FORMAT',\n    'DATE_SUB',\n    'DATEDIFF',\n    'DAY',\n    'DAYNAME',\n    'DAYOFMONTH',\n    'DAYOFYEAR',\n    'EXTRACT',\n    'FROM_UNIXTIME',\n    'FROM_UTC_TIMESTAMP',\n    'HOUR',\n    'LAST_DAY',\n    'MINUTE',\n    'MONTH',\n    'MONTHS_BETWEEN',\n    'NEXT_DAY',\n    'QUARTER',\n    'SECOND',\n    'TIMESTAMP',\n    'TO_DATE',\n    'TO_UTC_TIMESTAMP',\n    'TRUNC',\n    'UNIX_TIMESTAMP',\n    'WEEKOFYEAR',\n    'YEAR',\n    // conditional\n    'ASSERT_TRUE',\n    'COALESCE',\n    'IF',\n    'ISNOTNULL',\n    'ISNULL',\n    'NULLIF',\n    'NVL',\n    // string\n    'ASCII',\n    'BASE64',\n    'CHARACTER_LENGTH',\n    'CHR',\n    'CONCAT',\n    'CONCAT_WS',\n    'CONTEXT_NGRAMS',\n    'DECODE',\n    'ELT',\n    'ENCODE',\n    'FIELD',\n    'FIND_IN_SET',\n    'FORMAT_NUMBER',\n    'GET_JSON_OBJECT',\n    'IN_FILE',\n    'INITCAP',\n    'INSTR',\n    'LCASE',\n    'LENGTH',\n    'LEVENSHTEIN',\n    'LOCATE',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'NGRAMS',\n    'OCTET_LENGTH',\n    'PARSE_URL',\n    'PRINTF',\n    'QUOTE',\n    'REGEXP_EXTRACT',\n    'REGEXP_REPLACE',\n    'REPEAT',\n    'REVERSE',\n    'RPAD',\n    'RTRIM',\n    'SENTENCES',\n    'SOUNDEX',\n    'SPACE',\n    'SPLIT',\n    'STR_TO_MAP',\n    'SUBSTR',\n    'SUBSTRING',\n    'TRANSLATE',\n    'TRIM',\n    'UCASE',\n    'UNBASE64',\n    'UPPER',\n    // masking\n    'MASK',\n    'MASK_FIRST_N',\n    'MASK_HASH',\n    'MASK_LAST_N',\n    'MASK_SHOW_FIRST_N',\n    'MASK_SHOW_LAST_N',\n    // misc\n    'AES_DECRYPT',\n    'AES_ENCRYPT',\n    'CRC32',\n    'CURRENT_DATABASE',\n    'CURRENT_USER',\n    'HASH',\n    'JAVA_METHOD',\n    'LOGGED_IN_USER',\n    'MD5',\n    'REFLECT',\n    'SHA',\n    'SHA1',\n    'SHA2',\n    'SURROGATE_KEY',\n    'VERSION',\n    // aggregate\n    'AVG',\n    'COLLECT_LIST',\n    'COLLECT_SET',\n    'CORR',\n    'COUNT',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'HISTOGRAM_NUMERIC',\n    'MAX',\n    'MIN',\n    'NTILE',\n    'PERCENTILE',\n    'PERCENTILE_APPROX',\n    'REGR_AVGX',\n    'REGR_AVGY',\n    'REGR_COUNT',\n    'REGR_INTERCEPT',\n    'REGR_R2',\n    'REGR_SLOPE',\n    'REGR_SXX',\n    'REGR_SXY',\n    'REGR_SYY',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'SUM',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VARIANCE',\n    // table\n    'EXPLODE',\n    'INLINE',\n    'JSON_TUPLE',\n    'PARSE_URL_TUPLE',\n    'POSEXPLODE',\n    'STACK',\n    // https://cwiki.apache.org/confluence/display/Hive/LanguageManual+WindowingAndAnalytics\n    'LEAD',\n    'LAG',\n    'FIRST_VALUE',\n    'LAST_VALUE',\n    'RANK',\n    'ROW_NUMBER',\n    'DENSE_RANK',\n    'CUME_DIST',\n    'PERCENT_RANK',\n    'NTILE',\n];\n//# sourceMappingURL=hive.functions.js.map","import { EOF_TOKEN, isToken, TokenType } from '../../lexer/token.js';\n// Shared functionality used by all MariaDB-like SQL dialects.\nexport function postProcess(tokens) {\n    return tokens.map((token, i) => {\n        const nextToken = tokens[i + 1] || EOF_TOKEN;\n        if (isToken.SET(token) && nextToken.text === '(') {\n            // This is SET datatype, not SET statement\n            return Object.assign(Object.assign({}, token), { type: TokenType.RESERVED_FUNCTION_NAME });\n        }\n        const prevToken = tokens[i - 1] || EOF_TOKEN;\n        if (isToken.VALUES(token) && prevToken.text === '=') {\n            // This is VALUES() function, not VALUES clause\n            return Object.assign(Object.assign({}, token), { type: TokenType.RESERVED_FUNCTION_NAME });\n        }\n        return token;\n    });\n}\n//# sourceMappingURL=likeMariaDb.js.map","export const keywords = [\n    // https://mariadb.com/kb/en/reserved-words/\n    'ACCESSIBLE',\n    'ADD',\n    'ALL',\n    'ALTER',\n    'ANALYZE',\n    'AND',\n    'AS',\n    'ASC',\n    'ASENSITIVE',\n    'BEFORE',\n    'BETWEEN',\n    'BOTH',\n    'BY',\n    'CALL',\n    'CASCADE',\n    'CASE',\n    'CHANGE',\n    'CHECK',\n    'COLLATE',\n    'COLUMN',\n    'CONDITION',\n    'CONSTRAINT',\n    'CONTINUE',\n    'CONVERT',\n    'CREATE',\n    'CROSS',\n    'CURRENT_DATE',\n    'CURRENT_ROLE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'CURSOR',\n    'DATABASE',\n    'DATABASES',\n    'DAY_HOUR',\n    'DAY_MICROSECOND',\n    'DAY_MINUTE',\n    'DAY_SECOND',\n    'DECLARE',\n    'DEFAULT',\n    'DELAYED',\n    'DELETE',\n    'DELETE_DOMAIN_ID',\n    'DESC',\n    'DESCRIBE',\n    'DETERMINISTIC',\n    'DISTINCT',\n    'DISTINCTROW',\n    'DIV',\n    'DO_DOMAIN_IDS',\n    'DROP',\n    'DUAL',\n    'EACH',\n    'ELSE',\n    'ELSEIF',\n    'ENCLOSED',\n    'ESCAPED',\n    'EXCEPT',\n    'EXISTS',\n    'EXIT',\n    'EXPLAIN',\n    'FALSE',\n    'FETCH',\n    'FOR',\n    'FORCE',\n    'FOREIGN',\n    'FROM',\n    'FULLTEXT',\n    'GENERAL',\n    'GRANT',\n    'GROUP',\n    'HAVING',\n    'HIGH_PRIORITY',\n    'HOUR_MICROSECOND',\n    'HOUR_MINUTE',\n    'HOUR_SECOND',\n    'IF',\n    'IGNORE',\n    'IGNORE_DOMAIN_IDS',\n    'IGNORE_SERVER_IDS',\n    'IN',\n    'INDEX',\n    'INFILE',\n    'INNER',\n    'INOUT',\n    'INSENSITIVE',\n    'INSERT',\n    'INTERSECT',\n    'INTERVAL',\n    'INTO',\n    'IS',\n    'ITERATE',\n    'JOIN',\n    'KEY',\n    'KEYS',\n    'KILL',\n    'LEADING',\n    'LEAVE',\n    'LEFT',\n    'LIKE',\n    'LIMIT',\n    'LINEAR',\n    'LINES',\n    'LOAD',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOCK',\n    'LOOP',\n    'LOW_PRIORITY',\n    'MASTER_HEARTBEAT_PERIOD',\n    'MASTER_SSL_VERIFY_SERVER_CERT',\n    'MATCH',\n    'MAXVALUE',\n    'MINUTE_MICROSECOND',\n    'MINUTE_SECOND',\n    'MOD',\n    'MODIFIES',\n    'NATURAL',\n    'NOT',\n    'NO_WRITE_TO_BINLOG',\n    'NULL',\n    'OFFSET',\n    'ON',\n    'OPTIMIZE',\n    'OPTION',\n    'OPTIONALLY',\n    'OR',\n    'ORDER',\n    'OUT',\n    'OUTER',\n    'OUTFILE',\n    'OVER',\n    'PAGE_CHECKSUM',\n    'PARSE_VCOL_EXPR',\n    'PARTITION',\n    'POSITION',\n    'PRIMARY',\n    'PROCEDURE',\n    'PURGE',\n    'RANGE',\n    'READ',\n    'READS',\n    'READ_WRITE',\n    'RECURSIVE',\n    'REF_SYSTEM_ID',\n    'REFERENCES',\n    'REGEXP',\n    'RELEASE',\n    'RENAME',\n    'REPEAT',\n    'REPLACE',\n    'REQUIRE',\n    'RESIGNAL',\n    'RESTRICT',\n    'RETURN',\n    'RETURNING',\n    'REVOKE',\n    'RIGHT',\n    'RLIKE',\n    'ROW_NUMBER',\n    'ROWS',\n    'SCHEMA',\n    'SCHEMAS',\n    'SECOND_MICROSECOND',\n    'SELECT',\n    'SENSITIVE',\n    'SEPARATOR',\n    'SET',\n    'SHOW',\n    'SIGNAL',\n    'SLOW',\n    'SPATIAL',\n    'SPECIFIC',\n    'SQL',\n    'SQLEXCEPTION',\n    'SQLSTATE',\n    'SQLWARNING',\n    'SQL_BIG_RESULT',\n    'SQL_CALC_FOUND_ROWS',\n    'SQL_SMALL_RESULT',\n    'SSL',\n    'STARTING',\n    'STATS_AUTO_RECALC',\n    'STATS_PERSISTENT',\n    'STATS_SAMPLE_PAGES',\n    'STRAIGHT_JOIN',\n    'TABLE',\n    'TERMINATED',\n    'THEN',\n    'TO',\n    'TRAILING',\n    'TRIGGER',\n    'TRUE',\n    'UNDO',\n    'UNION',\n    'UNIQUE',\n    'UNLOCK',\n    'UNSIGNED',\n    'UPDATE',\n    'USAGE',\n    'USE',\n    'USING',\n    'UTC_DATE',\n    'UTC_TIME',\n    'UTC_TIMESTAMP',\n    'VALUES',\n    'WHEN',\n    'WHERE',\n    'WHILE',\n    'WINDOW',\n    'WITH',\n    'WRITE',\n    'XOR',\n    'YEAR_MONTH',\n    'ZEROFILL',\n];\nexport const dataTypes = [\n    // https://mariadb.com/kb/en/data-types/\n    'BIGINT',\n    'BINARY',\n    'BIT',\n    'BLOB',\n    'CHAR BYTE',\n    'CHAR',\n    'CHARACTER',\n    'DATETIME',\n    'DEC',\n    'DECIMAL',\n    'DOUBLE PRECISION',\n    'DOUBLE',\n    'ENUM',\n    'FIXED',\n    'FLOAT',\n    'FLOAT4',\n    'FLOAT8',\n    'INT',\n    'INT1',\n    'INT2',\n    'INT3',\n    'INT4',\n    'INT8',\n    'INTEGER',\n    'LONG',\n    'LONGBLOB',\n    'LONGTEXT',\n    'MEDIUMBLOB',\n    'MEDIUMINT',\n    'MEDIUMTEXT',\n    'MIDDLEINT',\n    'NATIONAL CHAR',\n    'NATIONAL VARCHAR',\n    'NUMERIC',\n    'PRECISION',\n    'REAL',\n    'SMALLINT',\n    'TEXT',\n    'TIMESTAMP',\n    'TINYBLOB',\n    'TINYINT',\n    'TINYTEXT',\n    'VARBINARY',\n    'VARCHAR',\n    'VARCHARACTER',\n    'VARYING',\n    'YEAR',\n    // 'NUMBER', // ?? In oracle mode only\n    // 'SET' // handled as special-case in postProcess\n];\n//# sourceMappingURL=mariadb.keywords.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { postProcess } from './likeMariaDb.js';\nimport { dataTypes, keywords } from './mariadb.keywords.js';\nimport { functions } from './mariadb.functions.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT | DISTINCTROW]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    'FETCH {FIRST | NEXT}',\n    // Data manipulation\n    // - insert:\n    'INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]',\n    'REPLACE [LOW_PRIORITY | DELAYED] [INTO]',\n    'VALUES',\n    'ON DUPLICATE KEY UPDATE',\n    // - update:\n    'SET',\n    // other\n    'RETURNING',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [OR REPLACE] [TEMPORARY] TABLE [IF NOT EXISTS]',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]',\n    // - update:\n    'UPDATE [LOW_PRIORITY] [IGNORE]',\n    // - delete:\n    'DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM',\n    // - drop table:\n    'DROP [TEMPORARY] TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER [ONLINE] [IGNORE] TABLE [IF EXISTS]',\n    'ADD [COLUMN] [IF NOT EXISTS]',\n    '{CHANGE | MODIFY} [COLUMN] [IF EXISTS]',\n    'DROP [COLUMN] [IF EXISTS]',\n    'RENAME [TO]',\n    'RENAME COLUMN',\n    'ALTER [COLUMN]',\n    '{SET | DROP} DEFAULT',\n    'SET {VISIBLE | INVISIBLE}',\n    // - truncate:\n    'TRUNCATE [TABLE]',\n    // https://mariadb.com/docs/reference/mdb/sql-statements/\n    'ALTER DATABASE',\n    'ALTER DATABASE COMMENT',\n    'ALTER EVENT',\n    'ALTER FUNCTION',\n    'ALTER PROCEDURE',\n    'ALTER SCHEMA',\n    'ALTER SCHEMA COMMENT',\n    'ALTER SEQUENCE',\n    'ALTER SERVER',\n    'ALTER USER',\n    'ALTER VIEW',\n    'ANALYZE',\n    'ANALYZE TABLE',\n    'BACKUP LOCK',\n    'BACKUP STAGE',\n    'BACKUP UNLOCK',\n    'BEGIN',\n    'BINLOG',\n    'CACHE INDEX',\n    'CALL',\n    'CHANGE MASTER TO',\n    'CHECK TABLE',\n    'CHECK VIEW',\n    'CHECKSUM TABLE',\n    'COMMIT',\n    'CREATE AGGREGATE FUNCTION',\n    'CREATE DATABASE',\n    'CREATE EVENT',\n    'CREATE FUNCTION',\n    'CREATE INDEX',\n    'CREATE PROCEDURE',\n    'CREATE ROLE',\n    'CREATE SEQUENCE',\n    'CREATE SERVER',\n    'CREATE SPATIAL INDEX',\n    'CREATE TRIGGER',\n    'CREATE UNIQUE INDEX',\n    'CREATE USER',\n    'DEALLOCATE PREPARE',\n    'DESCRIBE',\n    'DROP DATABASE',\n    'DROP EVENT',\n    'DROP FUNCTION',\n    'DROP INDEX',\n    'DROP PREPARE',\n    'DROP PROCEDURE',\n    'DROP ROLE',\n    'DROP SEQUENCE',\n    'DROP SERVER',\n    'DROP TRIGGER',\n    'DROP USER',\n    'DROP VIEW',\n    'EXECUTE',\n    'EXPLAIN',\n    'FLUSH',\n    'GET DIAGNOSTICS',\n    'GET DIAGNOSTICS CONDITION',\n    'GRANT',\n    'HANDLER',\n    'HELP',\n    'INSTALL PLUGIN',\n    'INSTALL SONAME',\n    'KILL',\n    'LOAD DATA INFILE',\n    'LOAD INDEX INTO CACHE',\n    'LOAD XML INFILE',\n    'LOCK TABLE',\n    'OPTIMIZE TABLE',\n    'PREPARE',\n    'PURGE BINARY LOGS',\n    'PURGE MASTER LOGS',\n    'RELEASE SAVEPOINT',\n    'RENAME TABLE',\n    'RENAME USER',\n    'REPAIR TABLE',\n    'REPAIR VIEW',\n    'RESET MASTER',\n    'RESET QUERY CACHE',\n    'RESET REPLICA',\n    'RESET SLAVE',\n    'RESIGNAL',\n    'REVOKE',\n    'ROLLBACK',\n    'SAVEPOINT',\n    'SET CHARACTER SET',\n    'SET DEFAULT ROLE',\n    'SET GLOBAL TRANSACTION',\n    'SET NAMES',\n    'SET PASSWORD',\n    'SET ROLE',\n    'SET STATEMENT',\n    'SET TRANSACTION',\n    'SHOW',\n    'SHOW ALL REPLICAS STATUS',\n    'SHOW ALL SLAVES STATUS',\n    'SHOW AUTHORS',\n    'SHOW BINARY LOGS',\n    'SHOW BINLOG EVENTS',\n    'SHOW BINLOG STATUS',\n    'SHOW CHARACTER SET',\n    'SHOW CLIENT_STATISTICS',\n    'SHOW COLLATION',\n    'SHOW COLUMNS',\n    'SHOW CONTRIBUTORS',\n    'SHOW CREATE DATABASE',\n    'SHOW CREATE EVENT',\n    'SHOW CREATE FUNCTION',\n    'SHOW CREATE PACKAGE',\n    'SHOW CREATE PACKAGE BODY',\n    'SHOW CREATE PROCEDURE',\n    'SHOW CREATE SEQUENCE',\n    'SHOW CREATE TABLE',\n    'SHOW CREATE TRIGGER',\n    'SHOW CREATE USER',\n    'SHOW CREATE VIEW',\n    'SHOW DATABASES',\n    'SHOW ENGINE',\n    'SHOW ENGINE INNODB STATUS',\n    'SHOW ENGINES',\n    'SHOW ERRORS',\n    'SHOW EVENTS',\n    'SHOW EXPLAIN',\n    'SHOW FUNCTION CODE',\n    'SHOW FUNCTION STATUS',\n    'SHOW GRANTS',\n    'SHOW INDEX',\n    'SHOW INDEXES',\n    'SHOW INDEX_STATISTICS',\n    'SHOW KEYS',\n    'SHOW LOCALES',\n    'SHOW MASTER LOGS',\n    'SHOW MASTER STATUS',\n    'SHOW OPEN TABLES',\n    'SHOW PACKAGE BODY CODE',\n    'SHOW PACKAGE BODY STATUS',\n    'SHOW PACKAGE STATUS',\n    'SHOW PLUGINS',\n    'SHOW PLUGINS SONAME',\n    'SHOW PRIVILEGES',\n    'SHOW PROCEDURE CODE',\n    'SHOW PROCEDURE STATUS',\n    'SHOW PROCESSLIST',\n    'SHOW PROFILE',\n    'SHOW PROFILES',\n    'SHOW QUERY_RESPONSE_TIME',\n    'SHOW RELAYLOG EVENTS',\n    'SHOW REPLICA',\n    'SHOW REPLICA HOSTS',\n    'SHOW REPLICA STATUS',\n    'SHOW SCHEMAS',\n    'SHOW SLAVE',\n    'SHOW SLAVE HOSTS',\n    'SHOW SLAVE STATUS',\n    'SHOW STATUS',\n    'SHOW STORAGE ENGINES',\n    'SHOW TABLE STATUS',\n    'SHOW TABLES',\n    'SHOW TRIGGERS',\n    'SHOW USER_STATISTICS',\n    'SHOW VARIABLES',\n    'SHOW WARNINGS',\n    'SHOW WSREP_MEMBERSHIP',\n    'SHOW WSREP_STATUS',\n    'SHUTDOWN',\n    'SIGNAL',\n    'START ALL REPLICAS',\n    'START ALL SLAVES',\n    'START REPLICA',\n    'START SLAVE',\n    'START TRANSACTION',\n    'STOP ALL REPLICAS',\n    'STOP ALL SLAVES',\n    'STOP REPLICA',\n    'STOP SLAVE',\n    'UNINSTALL PLUGIN',\n    'UNINSTALL SONAME',\n    'UNLOCK TABLE',\n    'USE',\n    'XA BEGIN',\n    'XA COMMIT',\n    'XA END',\n    'XA PREPARE',\n    'XA RECOVER',\n    'XA ROLLBACK',\n    'XA START',\n]);\nconst reservedSetOperations = expandPhrases([\n    'UNION [ALL | DISTINCT]',\n    'EXCEPT [ALL | DISTINCT]',\n    'INTERSECT [ALL | DISTINCT]',\n    'MINUS [ALL | DISTINCT]',\n]);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL JOIN',\n    'NATURAL {LEFT | RIGHT} [OUTER] JOIN',\n    // non-standard joins\n    'STRAIGHT_JOIN',\n]);\nconst reservedKeywordPhrases = expandPhrases([\n    'ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]',\n    'CHARACTER SET',\n    '{ROWS | RANGE} BETWEEN',\n    'IDENTIFIED BY',\n]);\nconst reservedDataTypePhrases = expandPhrases([]);\n// For reference: https://mariadb.com/kb/en/sql-statements-structure/\nexport const mariadb = {\n    name: 'mariadb',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedKeywordPhrases,\n        reservedDataTypePhrases,\n        supportsXor: true,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        // TODO: support _ char set prefixes such as _utf8, _latin1, _binary, _utf8mb4, etc.\n        stringTypes: [\n            '\"\"-qq-bs',\n            \"''-qq-bs\",\n            { quote: \"''-raw\", prefixes: ['B', 'X'], requirePrefix: true },\n        ],\n        identTypes: ['``'],\n        identChars: { first: '$', rest: '$', allowFirstCharNumber: true },\n        variableTypes: [\n            { regex: '@@?[A-Za-z0-9_.$]+' },\n            { quote: '\"\"-qq-bs', prefixes: ['@'], requirePrefix: true },\n            { quote: \"''-qq-bs\", prefixes: ['@'], requirePrefix: true },\n            { quote: '``', prefixes: ['@'], requirePrefix: true },\n        ],\n        paramTypes: { positional: true },\n        lineCommentTypes: ['--', '#'],\n        operators: [\n            '%',\n            ':=',\n            '&',\n            '|',\n            '^',\n            '~',\n            '<<',\n            '>>',\n            '<=>',\n            '&&',\n            '||',\n            '!',\n            '*.*', // Not actually an operator\n        ],\n        postProcess,\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=mariadb.formatter.js.map","export const functions = [\n    // https://mariadb.com/kb/en/information-schema-sql_functions-table/\n    'ADDDATE',\n    'ADD_MONTHS',\n    'BIT_AND',\n    'BIT_OR',\n    'BIT_XOR',\n    'CAST',\n    'COUNT',\n    'CUME_DIST',\n    'CURDATE',\n    'CURTIME',\n    'DATE_ADD',\n    'DATE_SUB',\n    'DATE_FORMAT',\n    'DECODE',\n    'DENSE_RANK',\n    'EXTRACT',\n    'FIRST_VALUE',\n    'GROUP_CONCAT',\n    'JSON_ARRAYAGG',\n    'JSON_OBJECTAGG',\n    'LAG',\n    'LEAD',\n    'MAX',\n    'MEDIAN',\n    'MID',\n    'MIN',\n    'NOW',\n    'NTH_VALUE',\n    'NTILE',\n    'POSITION',\n    'PERCENT_RANK',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'RANK',\n    'ROW_NUMBER',\n    'SESSION_USER',\n    'STD',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'SUBDATE',\n    'SUBSTR',\n    'SUBSTRING',\n    'SUM',\n    'SYSTEM_USER',\n    'TRIM',\n    'TRIM_ORACLE',\n    'VARIANCE',\n    'VAR_POP',\n    'VAR_SAMP',\n    'ABS',\n    'ACOS',\n    'ADDTIME',\n    'AES_DECRYPT',\n    'AES_ENCRYPT',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'BENCHMARK',\n    'BIN',\n    'BINLOG_GTID_POS',\n    'BIT_COUNT',\n    'BIT_LENGTH',\n    'CEIL',\n    'CEILING',\n    'CHARACTER_LENGTH',\n    'CHAR_LENGTH',\n    'CHR',\n    'COERCIBILITY',\n    'COLUMN_CHECK',\n    'COLUMN_EXISTS',\n    'COLUMN_LIST',\n    'COLUMN_JSON',\n    'COMPRESS',\n    'CONCAT',\n    'CONCAT_OPERATOR_ORACLE',\n    'CONCAT_WS',\n    'CONNECTION_ID',\n    'CONV',\n    'CONVERT_TZ',\n    'COS',\n    'COT',\n    'CRC32',\n    'DATEDIFF',\n    'DAYNAME',\n    'DAYOFMONTH',\n    'DAYOFWEEK',\n    'DAYOFYEAR',\n    'DEGREES',\n    'DECODE_HISTOGRAM',\n    'DECODE_ORACLE',\n    'DES_DECRYPT',\n    'DES_ENCRYPT',\n    'ELT',\n    'ENCODE',\n    'ENCRYPT',\n    'EXP',\n    'EXPORT_SET',\n    'EXTRACTVALUE',\n    'FIELD',\n    'FIND_IN_SET',\n    'FLOOR',\n    'FORMAT',\n    'FOUND_ROWS',\n    'FROM_BASE64',\n    'FROM_DAYS',\n    'FROM_UNIXTIME',\n    'GET_LOCK',\n    'GREATEST',\n    'HEX',\n    'IFNULL',\n    'INSTR',\n    'ISNULL',\n    'IS_FREE_LOCK',\n    'IS_USED_LOCK',\n    'JSON_ARRAY',\n    'JSON_ARRAY_APPEND',\n    'JSON_ARRAY_INSERT',\n    'JSON_COMPACT',\n    'JSON_CONTAINS',\n    'JSON_CONTAINS_PATH',\n    'JSON_DEPTH',\n    'JSON_DETAILED',\n    'JSON_EXISTS',\n    'JSON_EXTRACT',\n    'JSON_INSERT',\n    'JSON_KEYS',\n    'JSON_LENGTH',\n    'JSON_LOOSE',\n    'JSON_MERGE',\n    'JSON_MERGE_PATCH',\n    'JSON_MERGE_PRESERVE',\n    'JSON_QUERY',\n    'JSON_QUOTE',\n    'JSON_OBJECT',\n    'JSON_REMOVE',\n    'JSON_REPLACE',\n    'JSON_SET',\n    'JSON_SEARCH',\n    'JSON_TYPE',\n    'JSON_UNQUOTE',\n    'JSON_VALID',\n    'JSON_VALUE',\n    'LAST_DAY',\n    'LAST_INSERT_ID',\n    'LCASE',\n    'LEAST',\n    'LENGTH',\n    'LENGTHB',\n    'LN',\n    'LOAD_FILE',\n    'LOCATE',\n    'LOG',\n    'LOG10',\n    'LOG2',\n    'LOWER',\n    'LPAD',\n    'LPAD_ORACLE',\n    'LTRIM',\n    'LTRIM_ORACLE',\n    'MAKEDATE',\n    'MAKETIME',\n    'MAKE_SET',\n    'MASTER_GTID_WAIT',\n    'MASTER_POS_WAIT',\n    'MD5',\n    'MONTHNAME',\n    'NAME_CONST',\n    'NVL',\n    'NVL2',\n    'OCT',\n    'OCTET_LENGTH',\n    'ORD',\n    'PERIOD_ADD',\n    'PERIOD_DIFF',\n    'PI',\n    'POW',\n    'POWER',\n    'QUOTE',\n    'REGEXP_INSTR',\n    'REGEXP_REPLACE',\n    'REGEXP_SUBSTR',\n    'RADIANS',\n    'RAND',\n    'RELEASE_ALL_LOCKS',\n    'RELEASE_LOCK',\n    'REPLACE_ORACLE',\n    'REVERSE',\n    'ROUND',\n    'RPAD',\n    'RPAD_ORACLE',\n    'RTRIM',\n    'RTRIM_ORACLE',\n    'SEC_TO_TIME',\n    'SHA',\n    'SHA1',\n    'SHA2',\n    'SIGN',\n    'SIN',\n    'SLEEP',\n    'SOUNDEX',\n    'SPACE',\n    'SQRT',\n    'STRCMP',\n    'STR_TO_DATE',\n    'SUBSTR_ORACLE',\n    'SUBSTRING_INDEX',\n    'SUBTIME',\n    'SYS_GUID',\n    'TAN',\n    'TIMEDIFF',\n    'TIME_FORMAT',\n    'TIME_TO_SEC',\n    'TO_BASE64',\n    'TO_CHAR',\n    'TO_DAYS',\n    'TO_SECONDS',\n    'UCASE',\n    'UNCOMPRESS',\n    'UNCOMPRESSED_LENGTH',\n    'UNHEX',\n    'UNIX_TIMESTAMP',\n    'UPDATEXML',\n    'UPPER',\n    'UUID',\n    'UUID_SHORT',\n    'VERSION',\n    'WEEKDAY',\n    'WEEKOFYEAR',\n    'WSREP_LAST_WRITTEN_GTID',\n    'WSREP_LAST_SEEN_GTID',\n    'WSREP_SYNC_WAIT_UPTO_GTID',\n    'YEARWEEK',\n    // CASE expression shorthands\n    'COALESCE',\n    'NULLIF',\n];\n//# sourceMappingURL=mariadb.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { postProcess } from '../mariadb/likeMariaDb.js';\nimport { dataTypes, keywords } from './mysql.keywords.js';\nimport { functions } from './mysql.functions.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT | DISTINCTROW]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    // Data manipulation\n    // - insert:\n    'INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]',\n    'REPLACE [LOW_PRIORITY | DELAYED] [INTO]',\n    'VALUES',\n    'ON DUPLICATE KEY UPDATE',\n    // - update:\n    'SET',\n]);\nconst standardOnelineClauses = expandPhrases(['CREATE [TEMPORARY] TABLE [IF NOT EXISTS]']);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]',\n    // - update:\n    'UPDATE [LOW_PRIORITY] [IGNORE]',\n    // - delete:\n    'DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM',\n    // - drop table:\n    'DROP [TEMPORARY] TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE',\n    'ADD [COLUMN]',\n    '{CHANGE | MODIFY} [COLUMN]',\n    'DROP [COLUMN]',\n    'RENAME [TO | AS]',\n    'RENAME COLUMN',\n    'ALTER [COLUMN]',\n    '{SET | DROP} DEFAULT',\n    // - truncate:\n    'TRUNCATE [TABLE]',\n    // https://dev.mysql.com/doc/refman/8.0/en/sql-statements.html\n    'ALTER DATABASE',\n    'ALTER EVENT',\n    'ALTER FUNCTION',\n    'ALTER INSTANCE',\n    'ALTER LOGFILE GROUP',\n    'ALTER PROCEDURE',\n    'ALTER RESOURCE GROUP',\n    'ALTER SERVER',\n    'ALTER TABLESPACE',\n    'ALTER USER',\n    'ALTER VIEW',\n    'ANALYZE TABLE',\n    'BINLOG',\n    'CACHE INDEX',\n    'CALL',\n    'CHANGE MASTER TO',\n    'CHANGE REPLICATION FILTER',\n    'CHANGE REPLICATION SOURCE TO',\n    'CHECK TABLE',\n    'CHECKSUM TABLE',\n    'CLONE',\n    'COMMIT',\n    'CREATE DATABASE',\n    'CREATE EVENT',\n    'CREATE FUNCTION',\n    'CREATE FUNCTION',\n    'CREATE INDEX',\n    'CREATE LOGFILE GROUP',\n    'CREATE PROCEDURE',\n    'CREATE RESOURCE GROUP',\n    'CREATE ROLE',\n    'CREATE SERVER',\n    'CREATE SPATIAL REFERENCE SYSTEM',\n    'CREATE TABLESPACE',\n    'CREATE TRIGGER',\n    'CREATE USER',\n    'DEALLOCATE PREPARE',\n    'DESCRIBE',\n    'DROP DATABASE',\n    'DROP EVENT',\n    'DROP FUNCTION',\n    'DROP FUNCTION',\n    'DROP INDEX',\n    'DROP LOGFILE GROUP',\n    'DROP PROCEDURE',\n    'DROP RESOURCE GROUP',\n    'DROP ROLE',\n    'DROP SERVER',\n    'DROP SPATIAL REFERENCE SYSTEM',\n    'DROP TABLESPACE',\n    'DROP TRIGGER',\n    'DROP USER',\n    'DROP VIEW',\n    'EXECUTE',\n    'EXPLAIN',\n    'FLUSH',\n    'GRANT',\n    'HANDLER',\n    'HELP',\n    'IMPORT TABLE',\n    'INSTALL COMPONENT',\n    'INSTALL PLUGIN',\n    'KILL',\n    'LOAD DATA',\n    'LOAD INDEX INTO CACHE',\n    'LOAD XML',\n    'LOCK INSTANCE FOR BACKUP',\n    'LOCK TABLES',\n    'MASTER_POS_WAIT',\n    'OPTIMIZE TABLE',\n    'PREPARE',\n    'PURGE BINARY LOGS',\n    'RELEASE SAVEPOINT',\n    'RENAME TABLE',\n    'RENAME USER',\n    'REPAIR TABLE',\n    'RESET',\n    'RESET MASTER',\n    'RESET PERSIST',\n    'RESET REPLICA',\n    'RESET SLAVE',\n    'RESTART',\n    'REVOKE',\n    'ROLLBACK',\n    'ROLLBACK TO SAVEPOINT',\n    'SAVEPOINT',\n    'SET CHARACTER SET',\n    'SET DEFAULT ROLE',\n    'SET NAMES',\n    'SET PASSWORD',\n    'SET RESOURCE GROUP',\n    'SET ROLE',\n    'SET TRANSACTION',\n    'SHOW',\n    'SHOW BINARY LOGS',\n    'SHOW BINLOG EVENTS',\n    'SHOW CHARACTER SET',\n    'SHOW COLLATION',\n    'SHOW COLUMNS',\n    'SHOW CREATE DATABASE',\n    'SHOW CREATE EVENT',\n    'SHOW CREATE FUNCTION',\n    'SHOW CREATE PROCEDURE',\n    'SHOW CREATE TABLE',\n    'SHOW CREATE TRIGGER',\n    'SHOW CREATE USER',\n    'SHOW CREATE VIEW',\n    'SHOW DATABASES',\n    'SHOW ENGINE',\n    'SHOW ENGINES',\n    'SHOW ERRORS',\n    'SHOW EVENTS',\n    'SHOW FUNCTION CODE',\n    'SHOW FUNCTION STATUS',\n    'SHOW GRANTS',\n    'SHOW INDEX',\n    'SHOW MASTER STATUS',\n    'SHOW OPEN TABLES',\n    'SHOW PLUGINS',\n    'SHOW PRIVILEGES',\n    'SHOW PROCEDURE CODE',\n    'SHOW PROCEDURE STATUS',\n    'SHOW PROCESSLIST',\n    'SHOW PROFILE',\n    'SHOW PROFILES',\n    'SHOW RELAYLOG EVENTS',\n    'SHOW REPLICA STATUS',\n    'SHOW REPLICAS',\n    'SHOW SLAVE',\n    'SHOW SLAVE HOSTS',\n    'SHOW STATUS',\n    'SHOW TABLE STATUS',\n    'SHOW TABLES',\n    'SHOW TRIGGERS',\n    'SHOW VARIABLES',\n    'SHOW WARNINGS',\n    'SHUTDOWN',\n    'SOURCE_POS_WAIT',\n    'START GROUP_REPLICATION',\n    'START REPLICA',\n    'START SLAVE',\n    'START TRANSACTION',\n    'STOP GROUP_REPLICATION',\n    'STOP REPLICA',\n    'STOP SLAVE',\n    'TABLE',\n    'UNINSTALL COMPONENT',\n    'UNINSTALL PLUGIN',\n    'UNLOCK INSTANCE',\n    'UNLOCK TABLES',\n    'USE',\n    'XA',\n    // flow control\n    // 'IF',\n    'ITERATE',\n    'LEAVE',\n    'LOOP',\n    'REPEAT',\n    'RETURN',\n    'WHILE',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL | DISTINCT]']);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL [INNER] JOIN',\n    'NATURAL {LEFT | RIGHT} [OUTER] JOIN',\n    // non-standard joins\n    'STRAIGHT_JOIN',\n]);\nconst reservedKeywordPhrases = expandPhrases([\n    'ON {UPDATE | DELETE} [SET NULL]',\n    'CHARACTER SET',\n    '{ROWS | RANGE} BETWEEN',\n    'IDENTIFIED BY',\n]);\nconst reservedDataTypePhrases = expandPhrases([]);\n// https://dev.mysql.com/doc/refman/8.0/en/\nexport const mysql = {\n    name: 'mysql',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedKeywordPhrases,\n        reservedDataTypePhrases,\n        supportsXor: true,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        // TODO: support _ char set prefixes such as _utf8, _latin1, _binary, _utf8mb4, etc.\n        stringTypes: [\n            '\"\"-qq-bs',\n            { quote: \"''-qq-bs\", prefixes: ['N'] },\n            { quote: \"''-raw\", prefixes: ['B', 'X'], requirePrefix: true },\n        ],\n        identTypes: ['``'],\n        identChars: { first: '$', rest: '$', allowFirstCharNumber: true },\n        variableTypes: [\n            { regex: '@@?[A-Za-z0-9_.$]+' },\n            { quote: '\"\"-qq-bs', prefixes: ['@'], requirePrefix: true },\n            { quote: \"''-qq-bs\", prefixes: ['@'], requirePrefix: true },\n            { quote: '``', prefixes: ['@'], requirePrefix: true },\n        ],\n        paramTypes: { positional: true },\n        lineCommentTypes: ['--', '#'],\n        operators: [\n            '%',\n            ':=',\n            '&',\n            '|',\n            '^',\n            '~',\n            '<<',\n            '>>',\n            '<=>',\n            '->',\n            '->>',\n            '&&',\n            '||',\n            '!',\n            '*.*', // Not actually an operator\n        ],\n        postProcess,\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=mysql.formatter.js.map","export const keywords = [\n    // https://dev.mysql.com/doc/refman/8.0/en/keywords.html\n    'ACCESSIBLE',\n    'ADD',\n    'ALL',\n    'ALTER',\n    'ANALYZE',\n    'AND',\n    'AS',\n    'ASC',\n    'ASENSITIVE',\n    'BEFORE',\n    'BETWEEN',\n    'BOTH',\n    'BY',\n    'CALL',\n    'CASCADE',\n    'CASE',\n    'CHANGE',\n    'CHECK',\n    'COLLATE',\n    'COLUMN',\n    'CONDITION',\n    'CONSTRAINT',\n    'CONTINUE',\n    'CONVERT',\n    'CREATE',\n    'CROSS',\n    'CUBE',\n    'CUME_DIST',\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'CURSOR',\n    'DATABASE',\n    'DATABASES',\n    'DAY_HOUR',\n    'DAY_MICROSECOND',\n    'DAY_MINUTE',\n    'DAY_SECOND',\n    'DECLARE',\n    'DEFAULT',\n    'DELAYED',\n    'DELETE',\n    'DENSE_RANK',\n    'DESC',\n    'DESCRIBE',\n    'DETERMINISTIC',\n    'DISTINCT',\n    'DISTINCTROW',\n    'DIV',\n    'DROP',\n    'DUAL',\n    'EACH',\n    'ELSE',\n    'ELSEIF',\n    'EMPTY',\n    'ENCLOSED',\n    'ESCAPED',\n    'EXCEPT',\n    'EXISTS',\n    'EXIT',\n    'EXPLAIN',\n    'FALSE',\n    'FETCH',\n    'FIRST_VALUE',\n    'FOR',\n    'FORCE',\n    'FOREIGN',\n    'FROM',\n    'FULLTEXT',\n    'FUNCTION',\n    'GENERATED',\n    'GET',\n    'GRANT',\n    'GROUP',\n    'GROUPING',\n    'GROUPS',\n    'HAVING',\n    'HIGH_PRIORITY',\n    'HOUR_MICROSECOND',\n    'HOUR_MINUTE',\n    'HOUR_SECOND',\n    'IF',\n    'IGNORE',\n    'IN',\n    'INDEX',\n    'INFILE',\n    'INNER',\n    'INOUT',\n    'INSENSITIVE',\n    'INSERT',\n    'IN',\n    'INTERSECT',\n    'INTERVAL',\n    'INTO',\n    'IO_AFTER_GTIDS',\n    'IO_BEFORE_GTIDS',\n    'IS',\n    'ITERATE',\n    'JOIN',\n    'JSON_TABLE',\n    'KEY',\n    'KEYS',\n    'KILL',\n    'LAG',\n    'LAST_VALUE',\n    'LATERAL',\n    'LEAD',\n    'LEADING',\n    'LEAVE',\n    'LEFT',\n    'LIKE',\n    'LIMIT',\n    'LINEAR',\n    'LINES',\n    'LOAD',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOCK',\n    'LONG',\n    'LOOP',\n    'LOW_PRIORITY',\n    'MASTER_BIND',\n    'MASTER_SSL_VERIFY_SERVER_CERT',\n    'MATCH',\n    'MAXVALUE',\n    'MINUTE_MICROSECOND',\n    'MINUTE_SECOND',\n    'MOD',\n    'MODIFIES',\n    'NATURAL',\n    'NOT',\n    'NO_WRITE_TO_BINLOG',\n    'NTH_VALUE',\n    'NTILE',\n    'NULL',\n    'OF',\n    'ON',\n    'OPTIMIZE',\n    'OPTIMIZER_COSTS',\n    'OPTION',\n    'OPTIONALLY',\n    'OR',\n    'ORDER',\n    'OUT',\n    'OUTER',\n    'OUTFILE',\n    'OVER',\n    'PARTITION',\n    'PERCENT_RANK',\n    'PRIMARY',\n    'PROCEDURE',\n    'PURGE',\n    'RANGE',\n    'RANK',\n    'READ',\n    'READS',\n    'READ_WRITE',\n    'RECURSIVE',\n    'REFERENCES',\n    'REGEXP',\n    'RELEASE',\n    'RENAME',\n    'REPEAT',\n    'REPLACE',\n    'REQUIRE',\n    'RESIGNAL',\n    'RESTRICT',\n    'RETURN',\n    'REVOKE',\n    'RIGHT',\n    'RLIKE',\n    'ROW',\n    'ROWS',\n    'ROW_NUMBER',\n    'SCHEMA',\n    'SCHEMAS',\n    'SECOND_MICROSECOND',\n    'SELECT',\n    'SENSITIVE',\n    'SEPARATOR',\n    'SET',\n    'SHOW',\n    'SIGNAL',\n    'SPATIAL',\n    'SPECIFIC',\n    'SQL',\n    'SQLEXCEPTION',\n    'SQLSTATE',\n    'SQLWARNING',\n    'SQL_BIG_RESULT',\n    'SQL_CALC_FOUND_ROWS',\n    'SQL_SMALL_RESULT',\n    'SSL',\n    'STARTING',\n    'STORED',\n    'STRAIGHT_JOIN',\n    'SYSTEM',\n    'TABLE',\n    'TERMINATED',\n    'THEN',\n    'TO',\n    'TRAILING',\n    'TRIGGER',\n    'TRUE',\n    'UNDO',\n    'UNION',\n    'UNIQUE',\n    'UNLOCK',\n    'UNSIGNED',\n    'UPDATE',\n    'USAGE',\n    'USE',\n    'USING',\n    'UTC_DATE',\n    'UTC_TIME',\n    'UTC_TIMESTAMP',\n    'VALUES',\n    'VIRTUAL',\n    'WHEN',\n    'WHERE',\n    'WHILE',\n    'WINDOW',\n    'WITH',\n    'WRITE',\n    'XOR',\n    'YEAR_MONTH',\n    'ZEROFILL', // (R)\n];\nexport const dataTypes = [\n    // https://dev.mysql.com/doc/refman/8.0/en/data-types.html\n    'BIGINT',\n    'BINARY',\n    'BIT',\n    'BLOB',\n    'BOOL',\n    'BOOLEAN',\n    'CHAR',\n    'CHARACTER',\n    'DATE',\n    'DATETIME',\n    'DEC',\n    'DECIMAL',\n    'DOUBLE PRECISION',\n    'DOUBLE',\n    'ENUM',\n    'FIXED',\n    'FLOAT',\n    'FLOAT4',\n    'FLOAT8',\n    'INT',\n    'INT1',\n    'INT2',\n    'INT3',\n    'INT4',\n    'INT8',\n    'INTEGER',\n    'LONGBLOB',\n    'LONGTEXT',\n    'MEDIUMBLOB',\n    'MEDIUMINT',\n    'MEDIUMTEXT',\n    'MIDDLEINT',\n    'NATIONAL CHAR',\n    'NATIONAL VARCHAR',\n    'NUMERIC',\n    'PRECISION',\n    'REAL',\n    'SMALLINT',\n    'TEXT',\n    'TIME',\n    'TIMESTAMP',\n    'TINYBLOB',\n    'TINYINT',\n    'TINYTEXT',\n    'VARBINARY',\n    'VARCHAR',\n    'VARCHARACTER',\n    'VARYING',\n    'YEAR',\n    // 'SET' // handled as special-case in postProcess\n];\n//# sourceMappingURL=mysql.keywords.js.map","export const functions = [\n    // https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html\n    'ABS',\n    'ACOS',\n    'ADDDATE',\n    'ADDTIME',\n    'AES_DECRYPT',\n    'AES_ENCRYPT',\n    // 'AND',\n    'ANY_VALUE',\n    'ASCII',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'AVG',\n    'BENCHMARK',\n    'BIN',\n    'BIN_TO_UUID',\n    'BINARY',\n    'BIT_AND',\n    'BIT_COUNT',\n    'BIT_LENGTH',\n    'BIT_OR',\n    'BIT_XOR',\n    'CAN_ACCESS_COLUMN',\n    'CAN_ACCESS_DATABASE',\n    'CAN_ACCESS_TABLE',\n    'CAN_ACCESS_USER',\n    'CAN_ACCESS_VIEW',\n    'CAST',\n    'CEIL',\n    'CEILING',\n    'CHAR',\n    'CHAR_LENGTH',\n    'CHARACTER_LENGTH',\n    'CHARSET',\n    'COALESCE',\n    'COERCIBILITY',\n    'COLLATION',\n    'COMPRESS',\n    'CONCAT',\n    'CONCAT_WS',\n    'CONNECTION_ID',\n    'CONV',\n    'CONVERT',\n    'CONVERT_TZ',\n    'COS',\n    'COT',\n    'COUNT',\n    'CRC32',\n    'CUME_DIST',\n    'CURDATE',\n    'CURRENT_DATE',\n    'CURRENT_ROLE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'CURTIME',\n    'DATABASE',\n    'DATE',\n    'DATE_ADD',\n    'DATE_FORMAT',\n    'DATE_SUB',\n    'DATEDIFF',\n    'DAY',\n    'DAYNAME',\n    'DAYOFMONTH',\n    'DAYOFWEEK',\n    'DAYOFYEAR',\n    'DEFAULT',\n    'DEGREES',\n    'DENSE_RANK',\n    'DIV',\n    'ELT',\n    'EXP',\n    'EXPORT_SET',\n    'EXTRACT',\n    'EXTRACTVALUE',\n    'FIELD',\n    'FIND_IN_SET',\n    'FIRST_VALUE',\n    'FLOOR',\n    'FORMAT',\n    'FORMAT_BYTES',\n    'FORMAT_PICO_TIME',\n    'FOUND_ROWS',\n    'FROM_BASE64',\n    'FROM_DAYS',\n    'FROM_UNIXTIME',\n    'GEOMCOLLECTION',\n    'GEOMETRYCOLLECTION',\n    'GET_DD_COLUMN_PRIVILEGES',\n    'GET_DD_CREATE_OPTIONS',\n    'GET_DD_INDEX_SUB_PART_LENGTH',\n    'GET_FORMAT',\n    'GET_LOCK',\n    'GREATEST',\n    'GROUP_CONCAT',\n    'GROUPING',\n    'GTID_SUBSET',\n    'GTID_SUBTRACT',\n    'HEX',\n    'HOUR',\n    'ICU_VERSION',\n    'IF',\n    'IFNULL',\n    // 'IN',\n    'INET_ATON',\n    'INET_NTOA',\n    'INET6_ATON',\n    'INET6_NTOA',\n    'INSERT',\n    'INSTR',\n    'INTERNAL_AUTO_INCREMENT',\n    'INTERNAL_AVG_ROW_LENGTH',\n    'INTERNAL_CHECK_TIME',\n    'INTERNAL_CHECKSUM',\n    'INTERNAL_DATA_FREE',\n    'INTERNAL_DATA_LENGTH',\n    'INTERNAL_DD_CHAR_LENGTH',\n    'INTERNAL_GET_COMMENT_OR_ERROR',\n    'INTERNAL_GET_ENABLED_ROLE_JSON',\n    'INTERNAL_GET_HOSTNAME',\n    'INTERNAL_GET_USERNAME',\n    'INTERNAL_GET_VIEW_WARNING_OR_ERROR',\n    'INTERNAL_INDEX_COLUMN_CARDINALITY',\n    'INTERNAL_INDEX_LENGTH',\n    'INTERNAL_IS_ENABLED_ROLE',\n    'INTERNAL_IS_MANDATORY_ROLE',\n    'INTERNAL_KEYS_DISABLED',\n    'INTERNAL_MAX_DATA_LENGTH',\n    'INTERNAL_TABLE_ROWS',\n    'INTERNAL_UPDATE_TIME',\n    'INTERVAL',\n    'IS',\n    'IS_FREE_LOCK',\n    'IS_IPV4',\n    'IS_IPV4_COMPAT',\n    'IS_IPV4_MAPPED',\n    'IS_IPV6',\n    'IS NOT',\n    'IS NOT NULL',\n    'IS NULL',\n    'IS_USED_LOCK',\n    'IS_UUID',\n    'ISNULL',\n    'JSON_ARRAY',\n    'JSON_ARRAY_APPEND',\n    'JSON_ARRAY_INSERT',\n    'JSON_ARRAYAGG',\n    'JSON_CONTAINS',\n    'JSON_CONTAINS_PATH',\n    'JSON_DEPTH',\n    'JSON_EXTRACT',\n    'JSON_INSERT',\n    'JSON_KEYS',\n    'JSON_LENGTH',\n    'JSON_MERGE',\n    'JSON_MERGE_PATCH',\n    'JSON_MERGE_PRESERVE',\n    'JSON_OBJECT',\n    'JSON_OBJECTAGG',\n    'JSON_OVERLAPS',\n    'JSON_PRETTY',\n    'JSON_QUOTE',\n    'JSON_REMOVE',\n    'JSON_REPLACE',\n    'JSON_SCHEMA_VALID',\n    'JSON_SCHEMA_VALIDATION_REPORT',\n    'JSON_SEARCH',\n    'JSON_SET',\n    'JSON_STORAGE_FREE',\n    'JSON_STORAGE_SIZE',\n    'JSON_TABLE',\n    'JSON_TYPE',\n    'JSON_UNQUOTE',\n    'JSON_VALID',\n    'JSON_VALUE',\n    'LAG',\n    'LAST_DAY',\n    'LAST_INSERT_ID',\n    'LAST_VALUE',\n    'LCASE',\n    'LEAD',\n    'LEAST',\n    'LEFT',\n    'LENGTH',\n    'LIKE',\n    'LINESTRING',\n    'LN',\n    'LOAD_FILE',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOCATE',\n    'LOG',\n    'LOG10',\n    'LOG2',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'MAKE_SET',\n    'MAKEDATE',\n    'MAKETIME',\n    'MASTER_POS_WAIT',\n    'MATCH',\n    'MAX',\n    'MBRCONTAINS',\n    'MBRCOVEREDBY',\n    'MBRCOVERS',\n    'MBRDISJOINT',\n    'MBREQUALS',\n    'MBRINTERSECTS',\n    'MBROVERLAPS',\n    'MBRTOUCHES',\n    'MBRWITHIN',\n    'MD5',\n    'MEMBER OF',\n    'MICROSECOND',\n    'MID',\n    'MIN',\n    'MINUTE',\n    'MOD',\n    'MONTH',\n    'MONTHNAME',\n    'MULTILINESTRING',\n    'MULTIPOINT',\n    'MULTIPOLYGON',\n    'NAME_CONST',\n    'NOT',\n    'NOT IN',\n    'NOT LIKE',\n    'NOT REGEXP',\n    'NOW',\n    'NTH_VALUE',\n    'NTILE',\n    'NULLIF',\n    'OCT',\n    'OCTET_LENGTH',\n    // 'OR',\n    'ORD',\n    'PERCENT_RANK',\n    'PERIOD_ADD',\n    'PERIOD_DIFF',\n    'PI',\n    'POINT',\n    'POLYGON',\n    'POSITION',\n    'POW',\n    'POWER',\n    'PS_CURRENT_THREAD_ID',\n    'PS_THREAD_ID',\n    'QUARTER',\n    'QUOTE',\n    'RADIANS',\n    'RAND',\n    'RANDOM_BYTES',\n    'RANK',\n    'REGEXP',\n    'REGEXP_INSTR',\n    'REGEXP_LIKE',\n    'REGEXP_REPLACE',\n    'REGEXP_SUBSTR',\n    'RELEASE_ALL_LOCKS',\n    'RELEASE_LOCK',\n    'REPEAT',\n    'REPLACE',\n    'REVERSE',\n    'RIGHT',\n    'RLIKE',\n    'ROLES_GRAPHML',\n    'ROUND',\n    'ROW_COUNT',\n    'ROW_NUMBER',\n    'RPAD',\n    'RTRIM',\n    'SCHEMA',\n    'SEC_TO_TIME',\n    'SECOND',\n    'SESSION_USER',\n    'SHA1',\n    'SHA2',\n    'SIGN',\n    'SIN',\n    'SLEEP',\n    'SOUNDEX',\n    'SOUNDS LIKE',\n    'SOURCE_POS_WAIT',\n    'SPACE',\n    'SQRT',\n    'ST_AREA',\n    'ST_ASBINARY',\n    'ST_ASGEOJSON',\n    'ST_ASTEXT',\n    'ST_BUFFER',\n    'ST_BUFFER_STRATEGY',\n    'ST_CENTROID',\n    'ST_COLLECT',\n    'ST_CONTAINS',\n    'ST_CONVEXHULL',\n    'ST_CROSSES',\n    'ST_DIFFERENCE',\n    'ST_DIMENSION',\n    'ST_DISJOINT',\n    'ST_DISTANCE',\n    'ST_DISTANCE_SPHERE',\n    'ST_ENDPOINT',\n    'ST_ENVELOPE',\n    'ST_EQUALS',\n    'ST_EXTERIORRING',\n    'ST_FRECHETDISTANCE',\n    'ST_GEOHASH',\n    'ST_GEOMCOLLFROMTEXT',\n    'ST_GEOMCOLLFROMWKB',\n    'ST_GEOMETRYN',\n    'ST_GEOMETRYTYPE',\n    'ST_GEOMFROMGEOJSON',\n    'ST_GEOMFROMTEXT',\n    'ST_GEOMFROMWKB',\n    'ST_HAUSDORFFDISTANCE',\n    'ST_INTERIORRINGN',\n    'ST_INTERSECTION',\n    'ST_INTERSECTS',\n    'ST_ISCLOSED',\n    'ST_ISEMPTY',\n    'ST_ISSIMPLE',\n    'ST_ISVALID',\n    'ST_LATFROMGEOHASH',\n    'ST_LATITUDE',\n    'ST_LENGTH',\n    'ST_LINEFROMTEXT',\n    'ST_LINEFROMWKB',\n    'ST_LINEINTERPOLATEPOINT',\n    'ST_LINEINTERPOLATEPOINTS',\n    'ST_LONGFROMGEOHASH',\n    'ST_LONGITUDE',\n    'ST_MAKEENVELOPE',\n    'ST_MLINEFROMTEXT',\n    'ST_MLINEFROMWKB',\n    'ST_MPOINTFROMTEXT',\n    'ST_MPOINTFROMWKB',\n    'ST_MPOLYFROMTEXT',\n    'ST_MPOLYFROMWKB',\n    'ST_NUMGEOMETRIES',\n    'ST_NUMINTERIORRING',\n    'ST_NUMPOINTS',\n    'ST_OVERLAPS',\n    'ST_POINTATDISTANCE',\n    'ST_POINTFROMGEOHASH',\n    'ST_POINTFROMTEXT',\n    'ST_POINTFROMWKB',\n    'ST_POINTN',\n    'ST_POLYFROMTEXT',\n    'ST_POLYFROMWKB',\n    'ST_SIMPLIFY',\n    'ST_SRID',\n    'ST_STARTPOINT',\n    'ST_SWAPXY',\n    'ST_SYMDIFFERENCE',\n    'ST_TOUCHES',\n    'ST_TRANSFORM',\n    'ST_UNION',\n    'ST_VALIDATE',\n    'ST_WITHIN',\n    'ST_X',\n    'ST_Y',\n    'STATEMENT_DIGEST',\n    'STATEMENT_DIGEST_TEXT',\n    'STD',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STR_TO_DATE',\n    'STRCMP',\n    'SUBDATE',\n    'SUBSTR',\n    'SUBSTRING',\n    'SUBSTRING_INDEX',\n    'SUBTIME',\n    'SUM',\n    'SYSDATE',\n    'SYSTEM_USER',\n    'TAN',\n    'TIME',\n    'TIME_FORMAT',\n    'TIME_TO_SEC',\n    'TIMEDIFF',\n    'TIMESTAMP',\n    'TIMESTAMPADD',\n    'TIMESTAMPDIFF',\n    'TO_BASE64',\n    'TO_DAYS',\n    'TO_SECONDS',\n    'TRIM',\n    'TRUNCATE',\n    'UCASE',\n    'UNCOMPRESS',\n    'UNCOMPRESSED_LENGTH',\n    'UNHEX',\n    'UNIX_TIMESTAMP',\n    'UPDATEXML',\n    'UPPER',\n    // 'USER',\n    'UTC_DATE',\n    'UTC_TIME',\n    'UTC_TIMESTAMP',\n    'UUID',\n    'UUID_SHORT',\n    'UUID_TO_BIN',\n    'VALIDATE_PASSWORD_STRENGTH',\n    'VALUES',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VARIANCE',\n    'VERSION',\n    'WAIT_FOR_EXECUTED_GTID_SET',\n    'WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS',\n    'WEEK',\n    'WEEKDAY',\n    'WEEKOFYEAR',\n    'WEIGHT_STRING',\n    // 'XOR',\n    'YEAR',\n    'YEARWEEK',\n];\n//# sourceMappingURL=mysql.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { postProcess } from '../mariadb/likeMariaDb.js';\nimport { dataTypes, keywords } from './tidb.keywords.js';\nimport { functions } from './tidb.functions.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT | DISTINCTROW]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    // Data manipulation\n    // - insert:\n    'INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]',\n    'REPLACE [LOW_PRIORITY | DELAYED] [INTO]',\n    'VALUES',\n    'ON DUPLICATE KEY UPDATE',\n    // - update:\n    'SET',\n]);\nconst standardOnelineClauses = expandPhrases(['CREATE [TEMPORARY] TABLE [IF NOT EXISTS]']);\nconst tabularOnelineClauses = expandPhrases([\n    // https://docs.pingcap.com/tidb/stable/sql-statement-create-view\n    'CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-update\n    'UPDATE [LOW_PRIORITY] [IGNORE]',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-delete\n    'DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-drop-table\n    'DROP [TEMPORARY] TABLE [IF EXISTS]',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-alter-table\n    'ALTER TABLE',\n    'ADD [COLUMN]',\n    '{CHANGE | MODIFY} [COLUMN]',\n    'DROP [COLUMN]',\n    'RENAME [TO | AS]',\n    'RENAME COLUMN',\n    'ALTER [COLUMN]',\n    '{SET | DROP} DEFAULT',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-truncate\n    'TRUNCATE [TABLE]',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-alter-database\n    'ALTER DATABASE',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-alter-instance\n    'ALTER INSTANCE',\n    'ALTER RESOURCE GROUP',\n    'ALTER SEQUENCE',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-alter-user\n    'ALTER USER',\n    'ALTER VIEW',\n    'ANALYZE TABLE',\n    'CHECK TABLE',\n    'CHECKSUM TABLE',\n    'COMMIT',\n    'CREATE DATABASE',\n    'CREATE INDEX',\n    'CREATE RESOURCE GROUP',\n    'CREATE ROLE',\n    'CREATE SEQUENCE',\n    'CREATE USER',\n    'DEALLOCATE PREPARE',\n    'DESCRIBE',\n    'DROP DATABASE',\n    'DROP INDEX',\n    'DROP RESOURCE GROUP',\n    'DROP ROLE',\n    'DROP TABLESPACE',\n    'DROP USER',\n    'DROP VIEW',\n    'EXPLAIN',\n    'FLUSH',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-grant-privileges\n    'GRANT',\n    'IMPORT TABLE',\n    'INSTALL COMPONENT',\n    'INSTALL PLUGIN',\n    'KILL',\n    'LOAD DATA',\n    'LOCK INSTANCE FOR BACKUP',\n    'LOCK TABLES',\n    'OPTIMIZE TABLE',\n    'PREPARE',\n    'RELEASE SAVEPOINT',\n    'RENAME TABLE',\n    'RENAME USER',\n    'REPAIR TABLE',\n    'RESET',\n    'REVOKE',\n    'ROLLBACK',\n    'ROLLBACK TO SAVEPOINT',\n    'SAVEPOINT',\n    'SET CHARACTER SET',\n    'SET DEFAULT ROLE',\n    'SET NAMES',\n    'SET PASSWORD',\n    'SET RESOURCE GROUP',\n    'SET ROLE',\n    'SET TRANSACTION',\n    'SHOW',\n    'SHOW BINARY LOGS',\n    'SHOW BINLOG EVENTS',\n    'SHOW CHARACTER SET',\n    'SHOW COLLATION',\n    'SHOW COLUMNS',\n    'SHOW CREATE DATABASE',\n    'SHOW CREATE TABLE',\n    'SHOW CREATE USER',\n    'SHOW CREATE VIEW',\n    'SHOW DATABASES',\n    'SHOW ENGINE',\n    'SHOW ENGINES',\n    'SHOW ERRORS',\n    'SHOW EVENTS',\n    'SHOW GRANTS',\n    'SHOW INDEX',\n    'SHOW MASTER STATUS',\n    'SHOW OPEN TABLES',\n    'SHOW PLUGINS',\n    'SHOW PRIVILEGES',\n    'SHOW PROCESSLIST',\n    'SHOW PROFILE',\n    'SHOW PROFILES',\n    'SHOW STATUS',\n    'SHOW TABLE STATUS',\n    'SHOW TABLES',\n    'SHOW TRIGGERS',\n    'SHOW VARIABLES',\n    'SHOW WARNINGS',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-table\n    'TABLE',\n    'UNINSTALL COMPONENT',\n    'UNINSTALL PLUGIN',\n    'UNLOCK INSTANCE',\n    'UNLOCK TABLES',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-use\n    'USE',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL | DISTINCT]']);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL [INNER] JOIN',\n    'NATURAL {LEFT | RIGHT} [OUTER] JOIN',\n    // non-standard joins\n    'STRAIGHT_JOIN',\n]);\nconst reservedKeywordPhrases = expandPhrases([\n    'ON {UPDATE | DELETE} [SET NULL]',\n    'CHARACTER SET',\n    '{ROWS | RANGE} BETWEEN',\n    'IDENTIFIED BY',\n]);\nconst reservedDataTypePhrases = expandPhrases([]);\n// https://docs.pingcap.com/tidb/stable/basic-features\nexport const tidb = {\n    name: 'tidb',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedKeywordPhrases,\n        reservedDataTypePhrases,\n        supportsXor: true,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        // TODO: support _ char set prefixes such as _utf8, _latin1, _binary, _utf8mb4, etc.\n        stringTypes: [\n            '\"\"-qq-bs',\n            { quote: \"''-qq-bs\", prefixes: ['N'] },\n            { quote: \"''-raw\", prefixes: ['B', 'X'], requirePrefix: true },\n        ],\n        identTypes: ['``'],\n        identChars: { first: '$', rest: '$', allowFirstCharNumber: true },\n        variableTypes: [\n            { regex: '@@?[A-Za-z0-9_.$]+' },\n            { quote: '\"\"-qq-bs', prefixes: ['@'], requirePrefix: true },\n            { quote: \"''-qq-bs\", prefixes: ['@'], requirePrefix: true },\n            { quote: '``', prefixes: ['@'], requirePrefix: true },\n        ],\n        paramTypes: { positional: true },\n        lineCommentTypes: ['--', '#'],\n        operators: [\n            '%',\n            ':=',\n            '&',\n            '|',\n            '^',\n            '~',\n            '<<',\n            '>>',\n            '<=>',\n            '->',\n            '->>',\n            '&&',\n            '||',\n            '!',\n            '*.*', // Not actually an operator\n        ],\n        postProcess,\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=tidb.formatter.js.map","export const keywords = [\n    // https://docs.pingcap.com/tidb/stable/keywords\n    'ADD',\n    'ALL',\n    'ALTER',\n    'ANALYZE',\n    'AND',\n    'ARRAY',\n    'AS',\n    'ASC',\n    'BETWEEN',\n    'BOTH',\n    'BY',\n    'CALL',\n    'CASCADE',\n    'CASE',\n    'CHANGE',\n    'CHECK',\n    'COLLATE',\n    'COLUMN',\n    'CONSTRAINT',\n    'CONTINUE',\n    'CONVERT',\n    'CREATE',\n    'CROSS',\n    'CURRENT_DATE',\n    'CURRENT_ROLE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'CURSOR',\n    'DATABASE',\n    'DATABASES',\n    'DAY_HOUR',\n    'DAY_MICROSECOND',\n    'DAY_MINUTE',\n    'DAY_SECOND',\n    'DEFAULT',\n    'DELAYED',\n    'DELETE',\n    'DESC',\n    'DESCRIBE',\n    'DISTINCT',\n    'DISTINCTROW',\n    'DIV',\n    'DOUBLE',\n    'DROP',\n    'DUAL',\n    'ELSE',\n    'ELSEIF',\n    'ENCLOSED',\n    'ESCAPED',\n    'EXCEPT',\n    'EXISTS',\n    'EXIT',\n    'EXPLAIN',\n    'FALSE',\n    'FETCH',\n    'FOR',\n    'FORCE',\n    'FOREIGN',\n    'FROM',\n    'FULLTEXT',\n    'GENERATED',\n    'GRANT',\n    'GROUP',\n    'GROUPS',\n    'HAVING',\n    'HIGH_PRIORITY',\n    'HOUR_MICROSECOND',\n    'HOUR_MINUTE',\n    'HOUR_SECOND',\n    'IF',\n    'IGNORE',\n    'ILIKE',\n    'IN',\n    'INDEX',\n    'INFILE',\n    'INNER',\n    'INOUT',\n    'INSERT',\n    'INTERSECT',\n    'INTERVAL',\n    'INTO',\n    'IS',\n    'ITERATE',\n    'JOIN',\n    'KEY',\n    'KEYS',\n    'KILL',\n    'LEADING',\n    'LEAVE',\n    'LEFT',\n    'LIKE',\n    'LIMIT',\n    'LINEAR',\n    'LINES',\n    'LOAD',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOCK',\n    'LONG',\n    'LOW_PRIORITY',\n    'MATCH',\n    'MAXVALUE',\n    'MINUTE_MICROSECOND',\n    'MINUTE_SECOND',\n    'MOD',\n    'NATURAL',\n    'NOT',\n    'NO_WRITE_TO_BINLOG',\n    'NULL',\n    'OF',\n    'ON',\n    'OPTIMIZE',\n    'OPTION',\n    'OPTIONALLY',\n    'OR',\n    'ORDER',\n    'OUT',\n    'OUTER',\n    'OUTFILE',\n    'OVER',\n    'PARTITION',\n    'PRIMARY',\n    'PROCEDURE',\n    'RANGE',\n    'READ',\n    'RECURSIVE',\n    'REFERENCES',\n    'REGEXP',\n    'RELEASE',\n    'RENAME',\n    'REPEAT',\n    'REPLACE',\n    'REQUIRE',\n    'RESTRICT',\n    'REVOKE',\n    'RIGHT',\n    'RLIKE',\n    'ROW',\n    'ROWS',\n    'SECOND_MICROSECOND',\n    'SELECT',\n    'SET',\n    'SHOW',\n    'SPATIAL',\n    'SQL',\n    'SQLEXCEPTION',\n    'SQLSTATE',\n    'SQLWARNING',\n    'SQL_BIG_RESULT',\n    'SQL_CALC_FOUND_ROWS',\n    'SQL_SMALL_RESULT',\n    'SSL',\n    'STARTING',\n    'STATS_EXTENDED',\n    'STORED',\n    'STRAIGHT_JOIN',\n    'TABLE',\n    'TABLESAMPLE',\n    'TERMINATED',\n    'THEN',\n    'TO',\n    'TRAILING',\n    'TRIGGER',\n    'TRUE',\n    'TiDB_CURRENT_TSO',\n    'UNION',\n    'UNIQUE',\n    'UNLOCK',\n    'UNSIGNED',\n    'UNTIL',\n    'UPDATE',\n    'USAGE',\n    'USE',\n    'USING',\n    'UTC_DATE',\n    'UTC_TIME',\n    'UTC_TIMESTAMP',\n    'VALUES',\n    'VIRTUAL',\n    'WHEN',\n    'WHERE',\n    'WHILE',\n    'WINDOW',\n    'WITH',\n    'WRITE',\n    'XOR',\n    'YEAR_MONTH',\n    'ZEROFILL', // (R)\n];\nexport const dataTypes = [\n    // https://docs.pingcap.com/tidb/stable/data-type-overview\n    'BIGINT',\n    'BINARY',\n    'BIT',\n    'BLOB',\n    'BOOL',\n    'BOOLEAN',\n    'CHAR',\n    'CHARACTER',\n    'DATE',\n    'DATETIME',\n    'DEC',\n    'DECIMAL',\n    'DOUBLE PRECISION',\n    'DOUBLE',\n    'ENUM',\n    'FIXED',\n    'INT',\n    'INT1',\n    'INT2',\n    'INT3',\n    'INT4',\n    'INT8',\n    'INTEGER',\n    'LONGBLOB',\n    'LONGTEXT',\n    'MEDIUMBLOB',\n    'MEDIUMINT',\n    'MIDDLEINT',\n    'NATIONAL CHAR',\n    'NATIONAL VARCHAR',\n    'NUMERIC',\n    'PRECISION',\n    'SMALLINT',\n    'TEXT',\n    'TIME',\n    'TIMESTAMP',\n    'TINYBLOB',\n    'TINYINT',\n    'TINYTEXT',\n    'VARBINARY',\n    'VARCHAR',\n    'VARCHARACTER',\n    'VARYING',\n    'YEAR',\n    // 'SET' // handled as special-case in postProcess\n];\n//# sourceMappingURL=tidb.keywords.js.map","export const functions = [\n    // https://docs.pingcap.com/tidb/stable/sql-statement-show-builtins\n    // https://docs.pingcap.com/tidb/stable/functions-and-operators-overview\n    // + MySQL aggregate functions: https://dev.mysql.com/doc/refman/8.0/en/aggregate-functions.html\n    // + MySQL window functions: https://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html\n    'ABS',\n    'ACOS',\n    'ADDDATE',\n    'ADDTIME',\n    'AES_DECRYPT',\n    'AES_ENCRYPT',\n    // 'AND',\n    'ANY_VALUE',\n    'ASCII',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'AVG',\n    'BENCHMARK',\n    'BIN',\n    'BIN_TO_UUID',\n    'BIT_AND',\n    'BIT_COUNT',\n    'BIT_LENGTH',\n    'BIT_OR',\n    'BIT_XOR',\n    'BITAND',\n    'BITNEG',\n    'BITOR',\n    'BITXOR',\n    'CASE',\n    'CAST',\n    'CEIL',\n    'CEILING',\n    'CHAR_FUNC',\n    'CHAR_LENGTH',\n    'CHARACTER_LENGTH',\n    'CHARSET',\n    'COALESCE',\n    'COERCIBILITY',\n    'COLLATION',\n    'COMPRESS',\n    'CONCAT',\n    'CONCAT_WS',\n    'CONNECTION_ID',\n    'CONV',\n    'CONVERT',\n    'CONVERT_TZ',\n    'COS',\n    'COT',\n    'COUNT',\n    'CRC32',\n    'CUME_DIST',\n    'CURDATE',\n    'CURRENT_DATE',\n    'CURRENT_RESOURCE_GROUP',\n    'CURRENT_ROLE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'CURTIME',\n    'DATABASE',\n    'DATE',\n    'DATE_ADD',\n    'DATE_FORMAT',\n    'DATE_SUB',\n    'DATEDIFF',\n    'DAY',\n    'DAYNAME',\n    'DAYOFMONTH',\n    'DAYOFWEEK',\n    'DAYOFYEAR',\n    'DECODE',\n    'DEFAULT_FUNC',\n    'DEGREES',\n    'DENSE_RANK',\n    'DES_DECRYPT',\n    'DES_ENCRYPT',\n    'DIV',\n    'ELT',\n    'ENCODE',\n    'ENCRYPT',\n    'EQ',\n    'EXP',\n    'EXPORT_SET',\n    'EXTRACT',\n    'FIELD',\n    'FIND_IN_SET',\n    'FIRST_VALUE',\n    'FLOOR',\n    'FORMAT',\n    'FORMAT_BYTES',\n    'FORMAT_NANO_TIME',\n    'FOUND_ROWS',\n    'FROM_BASE64',\n    'FROM_DAYS',\n    'FROM_UNIXTIME',\n    'GE',\n    'GET_FORMAT',\n    'GET_LOCK',\n    'GETPARAM',\n    'GREATEST',\n    'GROUP_CONCAT',\n    'GROUPING',\n    'GT',\n    'HEX',\n    'HOUR',\n    'IF',\n    'IFNULL',\n    'ILIKE',\n    // 'IN',\n    'INET6_ATON',\n    'INET6_NTOA',\n    'INET_ATON',\n    'INET_NTOA',\n    'INSERT_FUNC',\n    'INSTR',\n    'INTDIV',\n    'INTERVAL',\n    'IS_FREE_LOCK',\n    'IS_IPV4',\n    'IS_IPV4_COMPAT',\n    'IS_IPV4_MAPPED',\n    'IS_IPV6',\n    'IS_USED_LOCK',\n    'IS_UUID',\n    'ISFALSE',\n    'ISNULL',\n    'ISTRUE',\n    'JSON_ARRAY',\n    'JSON_ARRAYAGG',\n    'JSON_ARRAY_APPEND',\n    'JSON_ARRAY_INSERT',\n    'JSON_CONTAINS',\n    'JSON_CONTAINS_PATH',\n    'JSON_DEPTH',\n    'JSON_EXTRACT',\n    'JSON_INSERT',\n    'JSON_KEYS',\n    'JSON_LENGTH',\n    'JSON_MEMBEROF',\n    'JSON_MERGE',\n    'JSON_MERGE_PATCH',\n    'JSON_MERGE_PRESERVE',\n    'JSON_OBJECT',\n    'JSON_OBJECTAGG',\n    'JSON_OVERLAPS',\n    'JSON_PRETTY',\n    'JSON_QUOTE',\n    'JSON_REMOVE',\n    'JSON_REPLACE',\n    'JSON_SEARCH',\n    'JSON_SET',\n    'JSON_STORAGE_FREE',\n    'JSON_STORAGE_SIZE',\n    'JSON_TYPE',\n    'JSON_UNQUOTE',\n    'JSON_VALID',\n    'LAG',\n    'LAST_DAY',\n    'LAST_INSERT_ID',\n    'LAST_VALUE',\n    'LASTVAL',\n    'LCASE',\n    'LE',\n    'LEAD',\n    'LEAST',\n    'LEFT',\n    'LEFTSHIFT',\n    'LENGTH',\n    'LIKE',\n    'LN',\n    'LOAD_FILE',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOCATE',\n    'LOG',\n    'LOG10',\n    'LOG2',\n    'LOWER',\n    'LPAD',\n    'LT',\n    'LTRIM',\n    'MAKE_SET',\n    'MAKEDATE',\n    'MAKETIME',\n    'MASTER_POS_WAIT',\n    'MAX',\n    'MD5',\n    'MICROSECOND',\n    'MID',\n    'MIN',\n    'MINUS',\n    'MINUTE',\n    'MOD',\n    'MONTH',\n    'MONTHNAME',\n    'MUL',\n    'NAME_CONST',\n    'NE',\n    'NEXTVAL',\n    'NOT',\n    'NOW',\n    'NTH_VALUE',\n    'NTILE',\n    'NULLEQ',\n    'OCT',\n    'OCTET_LENGTH',\n    'OLD_PASSWORD',\n    // 'OR',\n    'ORD',\n    'PASSWORD_FUNC',\n    'PERCENT_RANK',\n    'PERIOD_ADD',\n    'PERIOD_DIFF',\n    'PI',\n    'PLUS',\n    'POSITION',\n    'POW',\n    'POWER',\n    'QUARTER',\n    'QUOTE',\n    'RADIANS',\n    'RAND',\n    'RANDOM_BYTES',\n    'RANK',\n    'REGEXP',\n    'REGEXP_INSTR',\n    'REGEXP_LIKE',\n    'REGEXP_REPLACE',\n    'REGEXP_SUBSTR',\n    'RELEASE_ALL_LOCKS',\n    'RELEASE_LOCK',\n    'REPEAT',\n    'REPLACE',\n    'REVERSE',\n    'RIGHT',\n    'RIGHTSHIFT',\n    'ROUND',\n    'ROW_COUNT',\n    'ROW_NUMBER',\n    'RPAD',\n    'RTRIM',\n    'SCHEMA',\n    'SEC_TO_TIME',\n    'SECOND',\n    'SESSION_USER',\n    'SETVAL',\n    'SETVAR',\n    'SHA',\n    'SHA1',\n    'SHA2',\n    'SIGN',\n    'SIN',\n    'SLEEP',\n    'SM3',\n    'SPACE',\n    'SQRT',\n    'STD',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STR_TO_DATE',\n    'STRCMP',\n    'SUBDATE',\n    'SUBSTR',\n    'SUBSTRING',\n    'SUBSTRING_INDEX',\n    'SUBTIME',\n    'SUM',\n    'SYSDATE',\n    'SYSTEM_USER',\n    'TAN',\n    'TIDB_BOUNDED_STALENESS',\n    'TIDB_CURRENT_TSO',\n    'TIDB_DECODE_BINARY_PLAN',\n    'TIDB_DECODE_KEY',\n    'TIDB_DECODE_PLAN',\n    'TIDB_DECODE_SQL_DIGESTS',\n    'TIDB_ENCODE_SQL_DIGEST',\n    'TIDB_IS_DDL_OWNER',\n    'TIDB_PARSE_TSO',\n    'TIDB_PARSE_TSO_LOGICAL',\n    'TIDB_ROW_CHECKSUM',\n    'TIDB_SHARD',\n    'TIDB_VERSION',\n    'TIME',\n    'TIME_FORMAT',\n    'TIME_TO_SEC',\n    'TIMEDIFF',\n    'TIMESTAMP',\n    'TIMESTAMPADD',\n    'TIMESTAMPDIFF',\n    'TO_BASE64',\n    'TO_DAYS',\n    'TO_SECONDS',\n    'TRANSLATE',\n    'TRIM',\n    'TRUNCATE',\n    'UCASE',\n    'UNARYMINUS',\n    'UNCOMPRESS',\n    'UNCOMPRESSED_LENGTH',\n    'UNHEX',\n    'UNIX_TIMESTAMP',\n    'UPPER',\n    // 'USER',\n    'UTC_DATE',\n    'UTC_TIME',\n    'UTC_TIMESTAMP',\n    'UUID',\n    'UUID_SHORT',\n    'UUID_TO_BIN',\n    'VALIDATE_PASSWORD_STRENGTH',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VARIANCE',\n    'VERSION',\n    'VITESS_HASH',\n    'WEEK',\n    'WEEKDAY',\n    'WEEKOFYEAR',\n    'WEIGHT_STRING',\n    // 'XOR',\n    'YEAR',\n    'YEARWEEK',\n];\n//# sourceMappingURL=tidb.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './n1ql.functions.js';\nimport { dataTypes, keywords } from './n1ql.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    // Data manipulation\n    // - insert:\n    'INSERT INTO',\n    'VALUES',\n    // - update:\n    'SET',\n    // - merge:\n    'MERGE INTO',\n    'WHEN [NOT] MATCHED THEN',\n    'UPDATE SET',\n    'INSERT',\n    // other\n    'NEST',\n    'UNNEST',\n    'RETURNING',\n]);\nconst onelineClauses = expandPhrases([\n    // - update:\n    'UPDATE',\n    // - delete:\n    'DELETE FROM',\n    // - set schema:\n    'SET SCHEMA',\n    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html\n    'ADVISE',\n    'ALTER INDEX',\n    'BEGIN TRANSACTION',\n    'BUILD INDEX',\n    'COMMIT TRANSACTION',\n    'CREATE COLLECTION',\n    'CREATE FUNCTION',\n    'CREATE INDEX',\n    'CREATE PRIMARY INDEX',\n    'CREATE SCOPE',\n    'DROP COLLECTION',\n    'DROP FUNCTION',\n    'DROP INDEX',\n    'DROP PRIMARY INDEX',\n    'DROP SCOPE',\n    'EXECUTE',\n    'EXECUTE FUNCTION',\n    'EXPLAIN',\n    'GRANT',\n    'INFER',\n    'PREPARE',\n    'REVOKE',\n    'ROLLBACK TRANSACTION',\n    'SAVEPOINT',\n    'SET TRANSACTION',\n    'UPDATE STATISTICS',\n    'UPSERT',\n    // other\n    'LET',\n    'SET CURRENT SCHEMA',\n    'SHOW',\n    'USE [PRIMARY] KEYS',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'EXCEPT [ALL]', 'INTERSECT [ALL]']);\nconst reservedJoins = expandPhrases(['JOIN', '{LEFT | RIGHT} [OUTER] JOIN', 'INNER JOIN']);\nconst reservedKeywordPhrases = expandPhrases(['{ROWS | RANGE | GROUPS} BETWEEN']);\nconst reservedDataTypePhrases = expandPhrases([]);\n// For reference: http://docs.couchbase.com.s3-website-us-west-1.amazonaws.com/server/6.0/n1ql/n1ql-language-reference/index.html\nexport const n1ql = {\n    name: 'n1ql',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...onelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedKeywordPhrases,\n        reservedDataTypePhrases,\n        supportsXor: true,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        // NOTE: single quotes are actually not supported in N1QL,\n        // but we support them anyway as all other SQL dialects do,\n        // which simplifies writing tests that are shared between all dialects.\n        stringTypes: ['\"\"-bs', \"''-bs\"],\n        identTypes: ['``'],\n        extraParens: ['[]', '{}'],\n        paramTypes: { positional: true, numbered: ['$'], named: ['$'] },\n        lineCommentTypes: ['#', '--'],\n        operators: ['%', '==', ':', '||'],\n    },\n    formatOptions: {\n        onelineClauses,\n    },\n};\n//# sourceMappingURL=n1ql.formatter.js.map","export const keywords = [\n    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html\n    'ADVISE',\n    'ALL',\n    'ALTER',\n    'ANALYZE',\n    'AND',\n    'ANY',\n    'ARRAY',\n    'AS',\n    'ASC',\n    'AT',\n    'BEGIN',\n    'BETWEEN',\n    'BINARY',\n    'BOOLEAN',\n    'BREAK',\n    'BUCKET',\n    'BUILD',\n    'BY',\n    'CALL',\n    'CASE',\n    'CAST',\n    'CLUSTER',\n    'COLLATE',\n    'COLLECTION',\n    'COMMIT',\n    'COMMITTED',\n    'CONNECT',\n    'CONTINUE',\n    'CORRELATED',\n    'COVER',\n    'CREATE',\n    'CURRENT',\n    'DATABASE',\n    'DATASET',\n    'DATASTORE',\n    'DECLARE',\n    'DECREMENT',\n    'DELETE',\n    'DERIVED',\n    'DESC',\n    'DESCRIBE',\n    'DISTINCT',\n    'DO',\n    'DROP',\n    'EACH',\n    'ELEMENT',\n    'ELSE',\n    'END',\n    'EVERY',\n    'EXCEPT',\n    'EXCLUDE',\n    'EXECUTE',\n    'EXISTS',\n    'EXPLAIN',\n    'FALSE',\n    'FETCH',\n    'FILTER',\n    'FIRST',\n    'FLATTEN',\n    'FLUSH',\n    'FOLLOWING',\n    'FOR',\n    'FORCE',\n    'FROM',\n    'FTS',\n    'FUNCTION',\n    'GOLANG',\n    'GRANT',\n    'GROUP',\n    'GROUPS',\n    'GSI',\n    'HASH',\n    'HAVING',\n    'IF',\n    'IGNORE',\n    'ILIKE',\n    'IN',\n    'INCLUDE',\n    'INCREMENT',\n    'INDEX',\n    'INFER',\n    'INLINE',\n    'INNER',\n    'INSERT',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'ISOLATION',\n    'JAVASCRIPT',\n    'JOIN',\n    'KEY',\n    'KEYS',\n    'KEYSPACE',\n    'KNOWN',\n    'LANGUAGE',\n    'LAST',\n    'LEFT',\n    'LET',\n    'LETTING',\n    'LEVEL',\n    'LIKE',\n    'LIMIT',\n    'LSM',\n    'MAP',\n    'MAPPING',\n    'MATCHED',\n    'MATERIALIZED',\n    'MERGE',\n    'MINUS',\n    'MISSING',\n    'NAMESPACE',\n    'NEST',\n    'NL',\n    'NO',\n    'NOT',\n    'NTH_VALUE',\n    'NULL',\n    'NULLS',\n    'NUMBER',\n    'OBJECT',\n    'OFFSET',\n    'ON',\n    'OPTION',\n    'OPTIONS',\n    'OR',\n    'ORDER',\n    'OTHERS',\n    'OUTER',\n    'OVER',\n    'PARSE',\n    'PARTITION',\n    'PASSWORD',\n    'PATH',\n    'POOL',\n    'PRECEDING',\n    'PREPARE',\n    'PRIMARY',\n    'PRIVATE',\n    'PRIVILEGE',\n    'PROBE',\n    'PROCEDURE',\n    'PUBLIC',\n    'RANGE',\n    'RAW',\n    'REALM',\n    'REDUCE',\n    'RENAME',\n    'RESPECT',\n    'RETURN',\n    'RETURNING',\n    'REVOKE',\n    'RIGHT',\n    'ROLE',\n    'ROLLBACK',\n    'ROW',\n    'ROWS',\n    'SATISFIES',\n    'SAVEPOINT',\n    'SCHEMA',\n    'SCOPE',\n    'SELECT',\n    'SELF',\n    'SEMI',\n    'SET',\n    'SHOW',\n    'SOME',\n    'START',\n    'STATISTICS',\n    'STRING',\n    'SYSTEM',\n    'THEN',\n    'TIES',\n    'TO',\n    'TRAN',\n    'TRANSACTION',\n    'TRIGGER',\n    'TRUE',\n    'TRUNCATE',\n    'UNBOUNDED',\n    'UNDER',\n    'UNION',\n    'UNIQUE',\n    'UNKNOWN',\n    'UNNEST',\n    'UNSET',\n    'UPDATE',\n    'UPSERT',\n    'USE',\n    'USER',\n    'USING',\n    'VALIDATE',\n    'VALUE',\n    'VALUED',\n    'VALUES',\n    'VIA',\n    'VIEW',\n    'WHEN',\n    'WHERE',\n    'WHILE',\n    'WINDOW',\n    'WITH',\n    'WITHIN',\n    'WORK',\n    'XOR',\n];\nexport const dataTypes = [\n// N1QL does not support any way of declaring types for columns.\n// It does not support the CREATE TABLE statement nor the CAST() expression.\n//\n// It does have several keywords like ARRAY and OBJECT, which seem to refer to types,\n// but they are used as operators. It also reserves several words like STRING and NUMBER,\n// which it actually doesn't use.\n//\n// https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/datatypes.html\n];\n//# sourceMappingURL=n1ql.keywords.js.map","export const functions = [\n    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/functions.html\n    'ABORT',\n    'ABS',\n    'ACOS',\n    'ADVISOR',\n    'ARRAY_AGG',\n    'ARRAY_AGG',\n    'ARRAY_APPEND',\n    'ARRAY_AVG',\n    'ARRAY_BINARY_SEARCH',\n    'ARRAY_CONCAT',\n    'ARRAY_CONTAINS',\n    'ARRAY_COUNT',\n    'ARRAY_DISTINCT',\n    'ARRAY_EXCEPT',\n    'ARRAY_FLATTEN',\n    'ARRAY_IFNULL',\n    'ARRAY_INSERT',\n    'ARRAY_INTERSECT',\n    'ARRAY_LENGTH',\n    'ARRAY_MAX',\n    'ARRAY_MIN',\n    'ARRAY_MOVE',\n    'ARRAY_POSITION',\n    'ARRAY_PREPEND',\n    'ARRAY_PUT',\n    'ARRAY_RANGE',\n    'ARRAY_REMOVE',\n    'ARRAY_REPEAT',\n    'ARRAY_REPLACE',\n    'ARRAY_REVERSE',\n    'ARRAY_SORT',\n    'ARRAY_STAR',\n    'ARRAY_SUM',\n    'ARRAY_SYMDIFF',\n    'ARRAY_SYMDIFF1',\n    'ARRAY_SYMDIFFN',\n    'ARRAY_UNION',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'AVG',\n    'BASE64',\n    'BASE64_DECODE',\n    'BASE64_ENCODE',\n    'BITAND ',\n    'BITCLEAR ',\n    'BITNOT ',\n    'BITOR ',\n    'BITSET ',\n    'BITSHIFT ',\n    'BITTEST ',\n    'BITXOR ',\n    'CEIL',\n    'CLOCK_LOCAL',\n    'CLOCK_MILLIS',\n    'CLOCK_STR',\n    'CLOCK_TZ',\n    'CLOCK_UTC',\n    'COALESCE',\n    'CONCAT',\n    'CONCAT2',\n    'CONTAINS',\n    'CONTAINS_TOKEN',\n    'CONTAINS_TOKEN_LIKE',\n    'CONTAINS_TOKEN_REGEXP',\n    'COS',\n    'COUNT',\n    'COUNT',\n    'COUNTN',\n    'CUME_DIST',\n    'CURL',\n    'DATE_ADD_MILLIS',\n    'DATE_ADD_STR',\n    'DATE_DIFF_MILLIS',\n    'DATE_DIFF_STR',\n    'DATE_FORMAT_STR',\n    'DATE_PART_MILLIS',\n    'DATE_PART_STR',\n    'DATE_RANGE_MILLIS',\n    'DATE_RANGE_STR',\n    'DATE_TRUNC_MILLIS',\n    'DATE_TRUNC_STR',\n    'DECODE',\n    'DECODE_JSON',\n    'DEGREES',\n    'DENSE_RANK',\n    'DURATION_TO_STR',\n    // 'E',\n    'ENCODED_SIZE',\n    'ENCODE_JSON',\n    'EXP',\n    'FIRST_VALUE',\n    'FLOOR',\n    'GREATEST',\n    'HAS_TOKEN',\n    'IFINF',\n    'IFMISSING',\n    'IFMISSINGORNULL',\n    'IFNAN',\n    'IFNANORINF',\n    'IFNULL',\n    'INITCAP',\n    'ISARRAY',\n    'ISATOM',\n    'ISBITSET',\n    'ISBOOLEAN',\n    'ISNUMBER',\n    'ISOBJECT',\n    'ISSTRING',\n    'LAG',\n    'LAST_VALUE',\n    'LEAD',\n    'LEAST',\n    'LENGTH',\n    'LN',\n    'LOG',\n    'LOWER',\n    'LTRIM',\n    'MAX',\n    'MEAN',\n    'MEDIAN',\n    'META',\n    'MILLIS',\n    'MILLIS_TO_LOCAL',\n    'MILLIS_TO_STR',\n    'MILLIS_TO_TZ',\n    'MILLIS_TO_UTC',\n    'MILLIS_TO_ZONE_NAME',\n    'MIN',\n    'MISSINGIF',\n    'NANIF',\n    'NEGINFIF',\n    'NOW_LOCAL',\n    'NOW_MILLIS',\n    'NOW_STR',\n    'NOW_TZ',\n    'NOW_UTC',\n    'NTH_VALUE',\n    'NTILE',\n    'NULLIF',\n    'NVL',\n    'NVL2',\n    'OBJECT_ADD',\n    'OBJECT_CONCAT',\n    'OBJECT_INNER_PAIRS',\n    'OBJECT_INNER_VALUES',\n    'OBJECT_LENGTH',\n    'OBJECT_NAMES',\n    'OBJECT_PAIRS',\n    'OBJECT_PUT',\n    'OBJECT_REMOVE',\n    'OBJECT_RENAME',\n    'OBJECT_REPLACE',\n    'OBJECT_UNWRAP',\n    'OBJECT_VALUES',\n    'PAIRS',\n    'PERCENT_RANK',\n    'PI',\n    'POLY_LENGTH',\n    'POSINFIF',\n    'POSITION',\n    'POWER',\n    'RADIANS',\n    'RANDOM',\n    'RANK',\n    'RATIO_TO_REPORT',\n    'REGEXP_CONTAINS',\n    'REGEXP_LIKE',\n    'REGEXP_MATCHES',\n    'REGEXP_POSITION',\n    'REGEXP_REPLACE',\n    'REGEXP_SPLIT',\n    'REGEX_CONTAINS',\n    'REGEX_LIKE',\n    'REGEX_MATCHES',\n    'REGEX_POSITION',\n    'REGEX_REPLACE',\n    'REGEX_SPLIT',\n    'REPEAT',\n    'REPLACE',\n    'REVERSE',\n    'ROUND',\n    'ROW_NUMBER',\n    'RTRIM',\n    'SEARCH',\n    'SEARCH_META',\n    'SEARCH_SCORE',\n    'SIGN',\n    'SIN',\n    'SPLIT',\n    'SQRT',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STR_TO_DURATION',\n    'STR_TO_MILLIS',\n    'STR_TO_TZ',\n    'STR_TO_UTC',\n    'STR_TO_ZONE_NAME',\n    'SUBSTR',\n    'SUFFIXES',\n    'SUM',\n    'TAN',\n    'TITLE',\n    'TOARRAY',\n    'TOATOM',\n    'TOBOOLEAN',\n    'TOKENS',\n    'TOKENS',\n    'TONUMBER',\n    'TOOBJECT',\n    'TOSTRING',\n    'TRIM',\n    'TRUNC',\n    // 'TYPE', // disabled\n    'UPPER',\n    'UUID',\n    'VARIANCE',\n    'VARIANCE_POP',\n    'VARIANCE_SAMP',\n    'VAR_POP',\n    'VAR_SAMP',\n    'WEEKDAY_MILLIS',\n    'WEEKDAY_STR',\n    // type casting\n    // not implemented in N1QL, but added here now for the sake of tests\n    // https://docs.couchbase.com/server/current/analytics/3_query.html#Vs_SQL-92\n    'CAST',\n];\n//# sourceMappingURL=n1ql.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { EOF_TOKEN, isReserved, isToken, TokenType } from '../../lexer/token.js';\nimport { dataTypes, keywords } from './plsql.keywords.js';\nimport { functions } from './plsql.functions.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT | UNIQUE]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'PARTITION BY',\n    'ORDER [SIBLINGS] BY',\n    'OFFSET',\n    'FETCH {FIRST | NEXT}',\n    'FOR UPDATE [OF]',\n    // Data manipulation\n    // - insert:\n    'INSERT [INTO | ALL INTO]',\n    'VALUES',\n    // - update:\n    'SET',\n    // - merge:\n    'MERGE [INTO]',\n    'WHEN [NOT] MATCHED [THEN]',\n    'UPDATE SET',\n    // other\n    'RETURNING',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [GLOBAL TEMPORARY | PRIVATE TEMPORARY | SHARDED | DUPLICATED | IMMUTABLE BLOCKCHAIN | BLOCKCHAIN | IMMUTABLE] TABLE',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR REPLACE] [NO FORCE | FORCE] [EDITIONING | EDITIONABLE | EDITIONABLE EDITIONING | NONEDITIONABLE] VIEW',\n    'CREATE MATERIALIZED VIEW',\n    // - update:\n    'UPDATE [ONLY]',\n    // - delete:\n    'DELETE FROM [ONLY]',\n    // - drop table:\n    'DROP TABLE',\n    // - alter table:\n    'ALTER TABLE',\n    'ADD',\n    'DROP {COLUMN | UNUSED COLUMNS | COLUMNS CONTINUE}',\n    'MODIFY',\n    'RENAME TO',\n    'RENAME COLUMN',\n    // - truncate:\n    'TRUNCATE TABLE',\n    // other\n    'SET SCHEMA',\n    'BEGIN',\n    'CONNECT BY',\n    'DECLARE',\n    'EXCEPT',\n    'EXCEPTION',\n    'LOOP',\n    'START WITH',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'MINUS', 'INTERSECT']);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL [INNER] JOIN',\n    'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN',\n    // non-standard joins\n    '{CROSS | OUTER} APPLY',\n]);\nconst reservedKeywordPhrases = expandPhrases([\n    'ON {UPDATE | DELETE} [SET NULL]',\n    'ON COMMIT',\n    '{ROWS | RANGE} BETWEEN',\n]);\nconst reservedDataTypePhrases = expandPhrases([]);\nexport const plsql = {\n    name: 'plsql',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedKeywordPhrases,\n        reservedDataTypePhrases,\n        supportsXor: true,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        stringTypes: [\n            { quote: \"''-qq\", prefixes: ['N'] },\n            { quote: \"q''\", prefixes: ['N'] },\n        ],\n        // PL/SQL doesn't actually support escaping of quotes in identifiers,\n        // but for the sake of simpler testing we'll support this anyway\n        // as all other SQL dialects with \"identifiers\" do.\n        identTypes: [`\"\"-qq`],\n        identChars: { rest: '$#' },\n        variableTypes: [{ regex: '&{1,2}[A-Za-z][A-Za-z0-9_$#]*' }],\n        paramTypes: { numbered: [':'], named: [':'] },\n        operators: [\n            '**',\n            ':=',\n            '%',\n            '~=',\n            '^=',\n            // '..', // Conflicts with float followed by dot (so \"2..3\" gets parsed as [\"2.\", \".\", \"3\"])\n            '>>',\n            '<<',\n            '=>',\n            '@',\n            '||',\n        ],\n        postProcess,\n    },\n    formatOptions: {\n        alwaysDenseOperators: ['@'],\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\nfunction postProcess(tokens) {\n    let previousReservedToken = EOF_TOKEN;\n    return tokens.map(token => {\n        // BY [SET]\n        if (isToken.SET(token) && isToken.BY(previousReservedToken)) {\n            return Object.assign(Object.assign({}, token), { type: TokenType.RESERVED_KEYWORD });\n        }\n        if (isReserved(token.type)) {\n            previousReservedToken = token;\n        }\n        return token;\n    });\n}\n//# sourceMappingURL=plsql.formatter.js.map","export const keywords = [\n    // https://docs.oracle.com/cd/B19306_01/appdev.102/b14261/reservewords.htm\n    // 'A',\n    'ADD',\n    'AGENT',\n    'AGGREGATE',\n    'ALL',\n    'ALTER',\n    'AND',\n    'ANY',\n    'ARROW',\n    'AS',\n    'ASC',\n    'AT',\n    'ATTRIBUTE',\n    'AUTHID',\n    'AVG',\n    'BEGIN',\n    'BETWEEN',\n    'BLOCK',\n    'BODY',\n    'BOTH',\n    'BOUND',\n    'BULK',\n    'BY',\n    'BYTE',\n    // 'C',\n    'CALL',\n    'CALLING',\n    'CASCADE',\n    'CASE',\n    'CHARSET',\n    'CHARSETFORM',\n    'CHARSETID',\n    'CHECK',\n    'CLOSE',\n    'CLUSTER',\n    'CLUSTERS',\n    'COLAUTH',\n    'COLLECT',\n    'COLUMNS',\n    'COMMENT',\n    'COMMIT',\n    'COMMITTED',\n    'COMPILED',\n    'COMPRESS',\n    'CONNECT',\n    'CONSTANT',\n    'CONSTRUCTOR',\n    'CONTEXT',\n    'CONVERT',\n    'COUNT',\n    'CRASH',\n    'CREATE',\n    'CURRENT',\n    'CURSOR',\n    'CUSTOMDATUM',\n    'DANGLING',\n    'DATA',\n    'DAY',\n    'DECLARE',\n    'DEFAULT',\n    'DEFINE',\n    'DELETE',\n    'DESC',\n    'DETERMINISTIC',\n    'DISTINCT',\n    'DROP',\n    'DURATION',\n    'ELEMENT',\n    'ELSE',\n    'ELSIF',\n    'EMPTY',\n    'END',\n    'ESCAPE',\n    'EXCEPT',\n    'EXCEPTION',\n    'EXCEPTIONS',\n    'EXCLUSIVE',\n    'EXECUTE',\n    'EXISTS',\n    'EXIT',\n    'EXTERNAL',\n    'FETCH',\n    'FINAL',\n    'FIXED',\n    'FOR',\n    'FORALL',\n    'FORCE',\n    'FORM',\n    'FROM',\n    'FUNCTION',\n    'GENERAL',\n    'GOTO',\n    'GRANT',\n    'GROUP',\n    'HASH',\n    'HAVING',\n    'HEAP',\n    'HIDDEN',\n    'HOUR',\n    'IDENTIFIED',\n    'IF',\n    'IMMEDIATE',\n    'IN',\n    'INCLUDING',\n    'INDEX',\n    'INDEXES',\n    'INDICATOR',\n    'INDICES',\n    'INFINITE',\n    'INSERT',\n    'INSTANTIABLE',\n    'INTERFACE',\n    'INTERSECT',\n    'INTERVAL',\n    'INTO',\n    'INVALIDATE',\n    'IS',\n    'ISOLATION',\n    'JAVA',\n    'LANGUAGE',\n    'LARGE',\n    'LEADING',\n    'LENGTH',\n    'LEVEL',\n    'LIBRARY',\n    'LIKE',\n    'LIKE2',\n    'LIKE4',\n    'LIKEC',\n    'LIMIT',\n    'LIMITED',\n    'LOCAL',\n    'LOCK',\n    'LOOP',\n    'MAP',\n    'MAX',\n    'MAXLEN',\n    'MEMBER',\n    'MERGE',\n    'MIN',\n    'MINUS',\n    'MINUTE',\n    'MOD',\n    'MODE',\n    'MODIFY',\n    'MONTH',\n    'MULTISET',\n    'NAME',\n    'NAN',\n    'NATIONAL',\n    'NATIVE',\n    'NEW',\n    'NOCOMPRESS',\n    'NOCOPY',\n    'NOT',\n    'NOWAIT',\n    'NULL',\n    'OBJECT',\n    'OCICOLL',\n    'OCIDATE',\n    'OCIDATETIME',\n    'OCIDURATION',\n    'OCIINTERVAL',\n    'OCILOBLOCATOR',\n    'OCINUMBER',\n    'OCIRAW',\n    'OCIREF',\n    'OCIREFCURSOR',\n    'OCIROWID',\n    'OCISTRING',\n    'OCITYPE',\n    'OF',\n    'ON',\n    'ONLY',\n    'OPAQUE',\n    'OPEN',\n    'OPERATOR',\n    'OPTION',\n    'OR',\n    'ORACLE',\n    'ORADATA',\n    'ORDER',\n    'OVERLAPS',\n    'ORGANIZATION',\n    'ORLANY',\n    'ORLVARY',\n    'OTHERS',\n    'OUT',\n    'OVERRIDING',\n    'PACKAGE',\n    'PARALLEL_ENABLE',\n    'PARAMETER',\n    'PARAMETERS',\n    'PARTITION',\n    'PASCAL',\n    'PIPE',\n    'PIPELINED',\n    'PRAGMA',\n    'PRIOR',\n    'PRIVATE',\n    'PROCEDURE',\n    'PUBLIC',\n    'RAISE',\n    'RANGE',\n    'READ',\n    'RECORD',\n    'REF',\n    'REFERENCE',\n    'REM',\n    'REMAINDER',\n    'RENAME',\n    'RESOURCE',\n    'RESULT',\n    'RETURN',\n    'RETURNING',\n    'REVERSE',\n    'REVOKE',\n    'ROLLBACK',\n    'ROW',\n    'SAMPLE',\n    'SAVE',\n    'SAVEPOINT',\n    'SB1',\n    'SB2',\n    'SB4',\n    'SECOND',\n    'SEGMENT',\n    'SELECT',\n    'SELF',\n    'SEPARATE',\n    'SEQUENCE',\n    'SERIALIZABLE',\n    'SET',\n    'SHARE',\n    'SHORT',\n    'SIZE',\n    'SIZE_T',\n    'SOME',\n    'SPARSE',\n    'SQL',\n    'SQLCODE',\n    'SQLDATA',\n    'SQLNAME',\n    'SQLSTATE',\n    'STANDARD',\n    'START',\n    'STATIC',\n    'STDDEV',\n    'STORED',\n    'STRING',\n    'STRUCT',\n    'STYLE',\n    'SUBMULTISET',\n    'SUBPARTITION',\n    'SUBSTITUTABLE',\n    'SUBTYPE',\n    'SUM',\n    'SYNONYM',\n    'TABAUTH',\n    'TABLE',\n    'TDO',\n    'THE',\n    'THEN',\n    'TIME',\n    'TIMEZONE_ABBR',\n    'TIMEZONE_HOUR',\n    'TIMEZONE_MINUTE',\n    'TIMEZONE_REGION',\n    'TO',\n    'TRAILING',\n    'TRANSAC',\n    'TRANSACTIONAL',\n    'TRUSTED',\n    'TYPE',\n    'UB1',\n    'UB2',\n    'UB4',\n    'UNDER',\n    'UNION',\n    'UNIQUE',\n    'UNSIGNED',\n    'UNTRUSTED',\n    'UPDATE',\n    'USE',\n    'USING',\n    'VALIST',\n    'VALUE',\n    'VALUES',\n    'VARIABLE',\n    'VARIANCE',\n    'VARRAY',\n    'VIEW',\n    'VIEWS',\n    'VOID',\n    'WHEN',\n    'WHERE',\n    'WHILE',\n    'WITH',\n    'WORK',\n    'WRAPPED',\n    'WRITE',\n    'YEAR',\n    'ZONE',\n];\nexport const dataTypes = [\n    // https://www.ibm.com/docs/en/db2/10.5?topic=plsql-data-types\n    'ARRAY',\n    'BFILE_BASE',\n    'BINARY',\n    'BLOB_BASE',\n    'CHAR VARYING',\n    'CHAR_BASE',\n    'CHAR',\n    'CHARACTER VARYING',\n    'CHARACTER',\n    'CLOB_BASE',\n    'DATE_BASE',\n    'DATE',\n    'DECIMAL',\n    'DOUBLE',\n    'FLOAT',\n    'INT',\n    'INTERVAL DAY',\n    'INTERVAL YEAR',\n    'LONG',\n    'NATIONAL CHAR VARYING',\n    'NATIONAL CHAR',\n    'NATIONAL CHARACTER VARYING',\n    'NATIONAL CHARACTER',\n    'NCHAR VARYING',\n    'NCHAR',\n    'NCHAR',\n    'NUMBER_BASE',\n    'NUMBER',\n    'NUMBERIC',\n    'NVARCHAR',\n    'PRECISION',\n    'RAW',\n    'TIMESTAMP',\n    'UROWID',\n    'VARCHAR',\n    'VARCHAR2',\n];\n//# sourceMappingURL=plsql.keywords.js.map","export const functions = [\n    // https://docs.oracle.com/cd/B19306_01/server.102/b14200/functions001.htm\n    // numeric\n    'ABS',\n    'ACOS',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'BITAND',\n    'CEIL',\n    'COS',\n    'COSH',\n    'EXP',\n    'FLOOR',\n    'LN',\n    'LOG',\n    'MOD',\n    'NANVL',\n    'POWER',\n    'REMAINDER',\n    'ROUND',\n    'SIGN',\n    'SIN',\n    'SINH',\n    'SQRT',\n    'TAN',\n    'TANH',\n    'TRUNC',\n    'WIDTH_BUCKET',\n    // character\n    'CHR',\n    'CONCAT',\n    'INITCAP',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'NLS_INITCAP',\n    'NLS_LOWER',\n    'NLSSORT',\n    'NLS_UPPER',\n    'REGEXP_REPLACE',\n    'REGEXP_SUBSTR',\n    'REPLACE',\n    'RPAD',\n    'RTRIM',\n    'SOUNDEX',\n    'SUBSTR',\n    'TRANSLATE',\n    'TREAT',\n    'TRIM',\n    'UPPER',\n    'NLS_CHARSET_DECL_LEN',\n    'NLS_CHARSET_ID',\n    'NLS_CHARSET_NAME',\n    'ASCII',\n    'INSTR',\n    'LENGTH',\n    'REGEXP_INSTR',\n    // datetime\n    'ADD_MONTHS',\n    'CURRENT_DATE',\n    'CURRENT_TIMESTAMP',\n    'DBTIMEZONE',\n    'EXTRACT',\n    'FROM_TZ',\n    'LAST_DAY',\n    'LOCALTIMESTAMP',\n    'MONTHS_BETWEEN',\n    'NEW_TIME',\n    'NEXT_DAY',\n    'NUMTODSINTERVAL',\n    'NUMTOYMINTERVAL',\n    'ROUND',\n    'SESSIONTIMEZONE',\n    'SYS_EXTRACT_UTC',\n    'SYSDATE',\n    'SYSTIMESTAMP',\n    'TO_CHAR',\n    'TO_TIMESTAMP',\n    'TO_TIMESTAMP_TZ',\n    'TO_DSINTERVAL',\n    'TO_YMINTERVAL',\n    'TRUNC',\n    'TZ_OFFSET',\n    // comparison\n    'GREATEST',\n    'LEAST',\n    // conversion\n    'ASCIISTR',\n    'BIN_TO_NUM',\n    'CAST',\n    'CHARTOROWID',\n    'COMPOSE',\n    'CONVERT',\n    'DECOMPOSE',\n    'HEXTORAW',\n    'NUMTODSINTERVAL',\n    'NUMTOYMINTERVAL',\n    'RAWTOHEX',\n    'RAWTONHEX',\n    'ROWIDTOCHAR',\n    'ROWIDTONCHAR',\n    'SCN_TO_TIMESTAMP',\n    'TIMESTAMP_TO_SCN',\n    'TO_BINARY_DOUBLE',\n    'TO_BINARY_FLOAT',\n    'TO_CHAR',\n    'TO_CLOB',\n    'TO_DATE',\n    'TO_DSINTERVAL',\n    'TO_LOB',\n    'TO_MULTI_BYTE',\n    'TO_NCHAR',\n    'TO_NCLOB',\n    'TO_NUMBER',\n    'TO_DSINTERVAL',\n    'TO_SINGLE_BYTE',\n    'TO_TIMESTAMP',\n    'TO_TIMESTAMP_TZ',\n    'TO_YMINTERVAL',\n    'TO_YMINTERVAL',\n    'TRANSLATE',\n    'UNISTR',\n    // largeObject\n    'BFILENAME',\n    'EMPTY_BLOB,',\n    'EMPTY_CLOB',\n    // collection\n    'CARDINALITY',\n    'COLLECT',\n    'POWERMULTISET',\n    'POWERMULTISET_BY_CARDINALITY',\n    'SET',\n    // hierarchical\n    'SYS_CONNECT_BY_PATH',\n    // dataMining\n    'CLUSTER_ID',\n    'CLUSTER_PROBABILITY',\n    'CLUSTER_SET',\n    'FEATURE_ID',\n    'FEATURE_SET',\n    'FEATURE_VALUE',\n    'PREDICTION',\n    'PREDICTION_COST',\n    'PREDICTION_DETAILS',\n    'PREDICTION_PROBABILITY',\n    'PREDICTION_SET',\n    // xml\n    'APPENDCHILDXML',\n    'DELETEXML',\n    'DEPTH',\n    'EXTRACT',\n    'EXISTSNODE',\n    'EXTRACTVALUE',\n    'INSERTCHILDXML',\n    'INSERTXMLBEFORE',\n    'PATH',\n    'SYS_DBURIGEN',\n    'SYS_XMLAGG',\n    'SYS_XMLGEN',\n    'UPDATEXML',\n    'XMLAGG',\n    'XMLCDATA',\n    'XMLCOLATTVAL',\n    'XMLCOMMENT',\n    'XMLCONCAT',\n    'XMLFOREST',\n    'XMLPARSE',\n    'XMLPI',\n    'XMLQUERY',\n    'XMLROOT',\n    'XMLSEQUENCE',\n    'XMLSERIALIZE',\n    'XMLTABLE',\n    'XMLTRANSFORM',\n    // encoding\n    'DECODE',\n    'DUMP',\n    'ORA_HASH',\n    'VSIZE',\n    // nullRelated\n    'COALESCE',\n    'LNNVL',\n    'NULLIF',\n    'NVL',\n    'NVL2',\n    // env\n    'SYS_CONTEXT',\n    'SYS_GUID',\n    'SYS_TYPEID',\n    'UID',\n    'USER',\n    'USERENV',\n    // aggregate\n    'AVG',\n    'COLLECT',\n    'CORR',\n    'CORR_S',\n    'CORR_K',\n    'COUNT',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'CUME_DIST',\n    'DENSE_RANK',\n    'FIRST',\n    'GROUP_ID',\n    'GROUPING',\n    'GROUPING_ID',\n    'LAST',\n    'MAX',\n    'MEDIAN',\n    'MIN',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'PERCENT_RANK',\n    'RANK',\n    'REGR_SLOPE',\n    'REGR_INTERCEPT',\n    'REGR_COUNT',\n    'REGR_R2',\n    'REGR_AVGX',\n    'REGR_AVGY',\n    'REGR_SXX',\n    'REGR_SYY',\n    'REGR_SXY',\n    'STATS_BINOMIAL_TEST',\n    'STATS_CROSSTAB',\n    'STATS_F_TEST',\n    'STATS_KS_TEST',\n    'STATS_MODE',\n    'STATS_MW_TEST',\n    'STATS_ONE_WAY_ANOVA',\n    'STATS_T_TEST_ONE',\n    'STATS_T_TEST_PAIRED',\n    'STATS_T_TEST_INDEP',\n    'STATS_T_TEST_INDEPU',\n    'STATS_WSR_TEST',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'SUM',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VARIANCE',\n    // Windowing functions (minus the ones already listed in aggregates)\n    // window\n    'FIRST_VALUE',\n    'LAG',\n    'LAST_VALUE',\n    'LEAD',\n    'NTILE',\n    'RATIO_TO_REPORT',\n    'ROW_NUMBER',\n    // objectReference\n    'DEREF',\n    'MAKE_REF',\n    'REF',\n    'REFTOHEX',\n    'VALUE',\n    // model\n    'CV',\n    'ITERATION_NUMBER',\n    'PRESENTNNV',\n    'PRESENTV',\n    'PREVIOUS',\n];\n//# sourceMappingURL=plsql.functions.js.map","export const functions = [\n    // https://www.postgresql.org/docs/14/functions.html\n    //\n    // https://www.postgresql.org/docs/14/functions-math.html\n    'ABS',\n    'ACOS',\n    'ACOSD',\n    'ACOSH',\n    'ASIN',\n    'ASIND',\n    'ASINH',\n    'ATAN',\n    'ATAN2',\n    'ATAN2D',\n    'ATAND',\n    'ATANH',\n    'CBRT',\n    'CEIL',\n    'CEILING',\n    'COS',\n    'COSD',\n    'COSH',\n    'COT',\n    'COTD',\n    'DEGREES',\n    'DIV',\n    'EXP',\n    'FACTORIAL',\n    'FLOOR',\n    'GCD',\n    'LCM',\n    'LN',\n    'LOG',\n    'LOG10',\n    'MIN_SCALE',\n    'MOD',\n    'PI',\n    'POWER',\n    'RADIANS',\n    'RANDOM',\n    'ROUND',\n    'SCALE',\n    'SETSEED',\n    'SIGN',\n    'SIN',\n    'SIND',\n    'SINH',\n    'SQRT',\n    'TAN',\n    'TAND',\n    'TANH',\n    'TRIM_SCALE',\n    'TRUNC',\n    'WIDTH_BUCKET',\n    // https://www.postgresql.org/docs/14/functions-string.html\n    'ABS',\n    'ASCII',\n    'BIT_LENGTH',\n    'BTRIM',\n    'CHARACTER_LENGTH',\n    'CHAR_LENGTH',\n    'CHR',\n    'CONCAT',\n    'CONCAT_WS',\n    'FORMAT',\n    'INITCAP',\n    'LEFT',\n    'LENGTH',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'MD5',\n    'NORMALIZE',\n    'OCTET_LENGTH',\n    'OVERLAY',\n    'PARSE_IDENT',\n    'PG_CLIENT_ENCODING',\n    'POSITION',\n    'QUOTE_IDENT',\n    'QUOTE_LITERAL',\n    'QUOTE_NULLABLE',\n    'REGEXP_MATCH',\n    'REGEXP_MATCHES',\n    'REGEXP_REPLACE',\n    'REGEXP_SPLIT_TO_ARRAY',\n    'REGEXP_SPLIT_TO_TABLE',\n    'REPEAT',\n    'REPLACE',\n    'REVERSE',\n    'RIGHT',\n    'RPAD',\n    'RTRIM',\n    'SPLIT_PART',\n    'SPRINTF',\n    'STARTS_WITH',\n    'STRING_AGG',\n    'STRING_TO_ARRAY',\n    'STRING_TO_TABLE',\n    'STRPOS',\n    'SUBSTR',\n    'SUBSTRING',\n    'TO_ASCII',\n    'TO_HEX',\n    'TRANSLATE',\n    'TRIM',\n    'UNISTR',\n    'UPPER',\n    // https://www.postgresql.org/docs/14/functions-binarystring.html\n    'BIT_COUNT',\n    'BIT_LENGTH',\n    'BTRIM',\n    'CONVERT',\n    'CONVERT_FROM',\n    'CONVERT_TO',\n    'DECODE',\n    'ENCODE',\n    'GET_BIT',\n    'GET_BYTE',\n    'LENGTH',\n    'LTRIM',\n    'MD5',\n    'OCTET_LENGTH',\n    'OVERLAY',\n    'POSITION',\n    'RTRIM',\n    'SET_BIT',\n    'SET_BYTE',\n    'SHA224',\n    'SHA256',\n    'SHA384',\n    'SHA512',\n    'STRING_AGG',\n    'SUBSTR',\n    'SUBSTRING',\n    'TRIM',\n    // https://www.postgresql.org/docs/14/functions-bitstring.html\n    'BIT_COUNT',\n    'BIT_LENGTH',\n    'GET_BIT',\n    'LENGTH',\n    'OCTET_LENGTH',\n    'OVERLAY',\n    'POSITION',\n    'SET_BIT',\n    'SUBSTRING',\n    // https://www.postgresql.org/docs/14/functions-matching.html\n    'REGEXP_MATCH',\n    'REGEXP_MATCHES',\n    'REGEXP_REPLACE',\n    'REGEXP_SPLIT_TO_ARRAY',\n    'REGEXP_SPLIT_TO_TABLE',\n    // https://www.postgresql.org/docs/14/functions-formatting.html\n    'TO_CHAR',\n    'TO_DATE',\n    'TO_NUMBER',\n    'TO_TIMESTAMP',\n    // https://www.postgresql.org/docs/14/functions-datetime.html\n    // 'AGE',\n    'CLOCK_TIMESTAMP',\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'DATE_BIN',\n    'DATE_PART',\n    'DATE_TRUNC',\n    'EXTRACT',\n    'ISFINITE',\n    'JUSTIFY_DAYS',\n    'JUSTIFY_HOURS',\n    'JUSTIFY_INTERVAL',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'MAKE_DATE',\n    'MAKE_INTERVAL',\n    'MAKE_TIME',\n    'MAKE_TIMESTAMP',\n    'MAKE_TIMESTAMPTZ',\n    'NOW',\n    'PG_SLEEP',\n    'PG_SLEEP_FOR',\n    'PG_SLEEP_UNTIL',\n    'STATEMENT_TIMESTAMP',\n    'TIMEOFDAY',\n    'TO_TIMESTAMP',\n    'TRANSACTION_TIMESTAMP',\n    // https://www.postgresql.org/docs/14/functions-enum.html\n    'ENUM_FIRST',\n    'ENUM_LAST',\n    'ENUM_RANGE',\n    // https://www.postgresql.org/docs/14/functions-geometry.html\n    'AREA',\n    'BOUND_BOX',\n    'BOX',\n    'CENTER',\n    'CIRCLE',\n    'DIAGONAL',\n    'DIAMETER',\n    'HEIGHT',\n    'ISCLOSED',\n    'ISOPEN',\n    'LENGTH',\n    'LINE',\n    'LSEG',\n    'NPOINTS',\n    'PATH',\n    'PCLOSE',\n    'POINT',\n    'POLYGON',\n    'POPEN',\n    'RADIUS',\n    'SLOPE',\n    'WIDTH',\n    // https://www.postgresql.org/docs/14/functions-net.html\n    'ABBREV',\n    'BROADCAST',\n    'FAMILY',\n    'HOST',\n    'HOSTMASK',\n    'INET_MERGE',\n    'INET_SAME_FAMILY',\n    'MACADDR8_SET7BIT',\n    'MASKLEN',\n    'NETMASK',\n    'NETWORK',\n    'SET_MASKLEN',\n    // 'TEXT', // excluded because it's also a data type name\n    'TRUNC',\n    // https://www.postgresql.org/docs/14/functions-textsearch.html\n    'ARRAY_TO_TSVECTOR',\n    'GET_CURRENT_TS_CONFIG',\n    'JSONB_TO_TSVECTOR',\n    'JSON_TO_TSVECTOR',\n    'LENGTH',\n    'NUMNODE',\n    'PHRASETO_TSQUERY',\n    'PLAINTO_TSQUERY',\n    'QUERYTREE',\n    'SETWEIGHT',\n    'STRIP',\n    'TO_TSQUERY',\n    'TO_TSVECTOR',\n    'TSQUERY_PHRASE',\n    'TSVECTOR_TO_ARRAY',\n    'TS_DEBUG',\n    'TS_DELETE',\n    'TS_FILTER',\n    'TS_HEADLINE',\n    'TS_LEXIZE',\n    'TS_PARSE',\n    'TS_RANK',\n    'TS_RANK_CD',\n    'TS_REWRITE',\n    'TS_STAT',\n    'TS_TOKEN_TYPE',\n    'WEBSEARCH_TO_TSQUERY',\n    // https://www.postgresql.org/docs/14/functions-uuid.html\n    'GEN_RANDOM_UUID',\n    // https://www.postgresql.org/docs/14/functions-xml.html\n    'CURSOR_TO_XML',\n    'CURSOR_TO_XMLSCHEMA',\n    'DATABASE_TO_XML',\n    'DATABASE_TO_XMLSCHEMA',\n    'DATABASE_TO_XML_AND_XMLSCHEMA',\n    'NEXTVAL',\n    'QUERY_TO_XML',\n    'QUERY_TO_XMLSCHEMA',\n    'QUERY_TO_XML_AND_XMLSCHEMA',\n    'SCHEMA_TO_XML',\n    'SCHEMA_TO_XMLSCHEMA',\n    'SCHEMA_TO_XML_AND_XMLSCHEMA',\n    'STRING',\n    'TABLE_TO_XML',\n    'TABLE_TO_XMLSCHEMA',\n    'TABLE_TO_XML_AND_XMLSCHEMA',\n    'XMLAGG',\n    'XMLCOMMENT',\n    'XMLCONCAT',\n    'XMLELEMENT',\n    'XMLEXISTS',\n    'XMLFOREST',\n    'XMLPARSE',\n    'XMLPI',\n    'XMLROOT',\n    'XMLSERIALIZE',\n    'XMLTABLE',\n    'XML_IS_WELL_FORMED',\n    'XML_IS_WELL_FORMED_CONTENT',\n    'XML_IS_WELL_FORMED_DOCUMENT',\n    'XPATH',\n    'XPATH_EXISTS',\n    // https://www.postgresql.org/docs/14/functions-json.html\n    'ARRAY_TO_JSON',\n    'JSONB_AGG',\n    'JSONB_ARRAY_ELEMENTS',\n    'JSONB_ARRAY_ELEMENTS_TEXT',\n    'JSONB_ARRAY_LENGTH',\n    'JSONB_BUILD_ARRAY',\n    'JSONB_BUILD_OBJECT',\n    'JSONB_EACH',\n    'JSONB_EACH_TEXT',\n    'JSONB_EXTRACT_PATH',\n    'JSONB_EXTRACT_PATH_TEXT',\n    'JSONB_INSERT',\n    'JSONB_OBJECT',\n    'JSONB_OBJECT_AGG',\n    'JSONB_OBJECT_KEYS',\n    'JSONB_PATH_EXISTS',\n    'JSONB_PATH_EXISTS_TZ',\n    'JSONB_PATH_MATCH',\n    'JSONB_PATH_MATCH_TZ',\n    'JSONB_PATH_QUERY',\n    'JSONB_PATH_QUERY_ARRAY',\n    'JSONB_PATH_QUERY_ARRAY_TZ',\n    'JSONB_PATH_QUERY_FIRST',\n    'JSONB_PATH_QUERY_FIRST_TZ',\n    'JSONB_PATH_QUERY_TZ',\n    'JSONB_POPULATE_RECORD',\n    'JSONB_POPULATE_RECORDSET',\n    'JSONB_PRETTY',\n    'JSONB_SET',\n    'JSONB_SET_LAX',\n    'JSONB_STRIP_NULLS',\n    'JSONB_TO_RECORD',\n    'JSONB_TO_RECORDSET',\n    'JSONB_TYPEOF',\n    'JSON_AGG',\n    'JSON_ARRAY_ELEMENTS',\n    'JSON_ARRAY_ELEMENTS_TEXT',\n    'JSON_ARRAY_LENGTH',\n    'JSON_BUILD_ARRAY',\n    'JSON_BUILD_OBJECT',\n    'JSON_EACH',\n    'JSON_EACH_TEXT',\n    'JSON_EXTRACT_PATH',\n    'JSON_EXTRACT_PATH_TEXT',\n    'JSON_OBJECT',\n    'JSON_OBJECT_AGG',\n    'JSON_OBJECT_KEYS',\n    'JSON_POPULATE_RECORD',\n    'JSON_POPULATE_RECORDSET',\n    'JSON_STRIP_NULLS',\n    'JSON_TO_RECORD',\n    'JSON_TO_RECORDSET',\n    'JSON_TYPEOF',\n    'ROW_TO_JSON',\n    'TO_JSON',\n    'TO_JSONB',\n    'TO_TIMESTAMP',\n    // https://www.postgresql.org/docs/14/functions-sequence.html\n    'CURRVAL',\n    'LASTVAL',\n    'NEXTVAL',\n    'SETVAL',\n    // https://www.postgresql.org/docs/14/functions-conditional.html\n    // 'CASE',\n    'COALESCE',\n    'GREATEST',\n    'LEAST',\n    'NULLIF',\n    // https://www.postgresql.org/docs/14/functions-array.html\n    'ARRAY_AGG',\n    'ARRAY_APPEND',\n    'ARRAY_CAT',\n    'ARRAY_DIMS',\n    'ARRAY_FILL',\n    'ARRAY_LENGTH',\n    'ARRAY_LOWER',\n    'ARRAY_NDIMS',\n    'ARRAY_POSITION',\n    'ARRAY_POSITIONS',\n    'ARRAY_PREPEND',\n    'ARRAY_REMOVE',\n    'ARRAY_REPLACE',\n    'ARRAY_TO_STRING',\n    'ARRAY_UPPER',\n    'CARDINALITY',\n    'STRING_TO_ARRAY',\n    'TRIM_ARRAY',\n    'UNNEST',\n    // https://www.postgresql.org/docs/14/functions-range.html\n    'ISEMPTY',\n    'LOWER',\n    'LOWER_INC',\n    'LOWER_INF',\n    'MULTIRANGE',\n    'RANGE_MERGE',\n    'UPPER',\n    'UPPER_INC',\n    'UPPER_INF',\n    // https://www.postgresql.org/docs/14/functions-aggregate.html\n    // 'ANY',\n    'ARRAY_AGG',\n    'AVG',\n    'BIT_AND',\n    'BIT_OR',\n    'BIT_XOR',\n    'BOOL_AND',\n    'BOOL_OR',\n    'COALESCE',\n    'CORR',\n    'COUNT',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'CUME_DIST',\n    'DENSE_RANK',\n    'EVERY',\n    'GROUPING',\n    'JSONB_AGG',\n    'JSONB_OBJECT_AGG',\n    'JSON_AGG',\n    'JSON_OBJECT_AGG',\n    'MAX',\n    'MIN',\n    'MODE',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'PERCENT_RANK',\n    'RANGE_AGG',\n    'RANGE_INTERSECT_AGG',\n    'RANK',\n    'REGR_AVGX',\n    'REGR_AVGY',\n    'REGR_COUNT',\n    'REGR_INTERCEPT',\n    'REGR_R2',\n    'REGR_SLOPE',\n    'REGR_SXX',\n    'REGR_SXY',\n    'REGR_SYY',\n    // 'SOME',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STRING_AGG',\n    'SUM',\n    'TO_JSON',\n    'TO_JSONB',\n    'VARIANCE',\n    'VAR_POP',\n    'VAR_SAMP',\n    'XMLAGG',\n    // https://www.postgresql.org/docs/14/functions-window.html\n    'CUME_DIST',\n    'DENSE_RANK',\n    'FIRST_VALUE',\n    'LAG',\n    'LAST_VALUE',\n    'LEAD',\n    'NTH_VALUE',\n    'NTILE',\n    'PERCENT_RANK',\n    'RANK',\n    'ROW_NUMBER',\n    // https://www.postgresql.org/docs/14/functions-srf.html\n    'GENERATE_SERIES',\n    'GENERATE_SUBSCRIPTS',\n    // https://www.postgresql.org/docs/14/functions-info.html\n    'ACLDEFAULT',\n    'ACLEXPLODE',\n    'COL_DESCRIPTION',\n    'CURRENT_CATALOG',\n    'CURRENT_DATABASE',\n    'CURRENT_QUERY',\n    'CURRENT_ROLE',\n    'CURRENT_SCHEMA',\n    'CURRENT_SCHEMAS',\n    'CURRENT_USER',\n    'FORMAT_TYPE',\n    'HAS_ANY_COLUMN_PRIVILEGE',\n    'HAS_COLUMN_PRIVILEGE',\n    'HAS_DATABASE_PRIVILEGE',\n    'HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE',\n    'HAS_FUNCTION_PRIVILEGE',\n    'HAS_LANGUAGE_PRIVILEGE',\n    'HAS_SCHEMA_PRIVILEGE',\n    'HAS_SEQUENCE_PRIVILEGE',\n    'HAS_SERVER_PRIVILEGE',\n    'HAS_TABLESPACE_PRIVILEGE',\n    'HAS_TABLE_PRIVILEGE',\n    'HAS_TYPE_PRIVILEGE',\n    'INET_CLIENT_ADDR',\n    'INET_CLIENT_PORT',\n    'INET_SERVER_ADDR',\n    'INET_SERVER_PORT',\n    'MAKEACLITEM',\n    'OBJ_DESCRIPTION',\n    'PG_BACKEND_PID',\n    'PG_BLOCKING_PIDS',\n    'PG_COLLATION_IS_VISIBLE',\n    'PG_CONF_LOAD_TIME',\n    'PG_CONTROL_CHECKPOINT',\n    'PG_CONTROL_INIT',\n    'PG_CONTROL_SYSTEM',\n    'PG_CONVERSION_IS_VISIBLE',\n    'PG_CURRENT_LOGFILE',\n    'PG_CURRENT_SNAPSHOT',\n    'PG_CURRENT_XACT_ID',\n    'PG_CURRENT_XACT_ID_IF_ASSIGNED',\n    'PG_DESCRIBE_OBJECT',\n    'PG_FUNCTION_IS_VISIBLE',\n    'PG_GET_CATALOG_FOREIGN_KEYS',\n    'PG_GET_CONSTRAINTDEF',\n    'PG_GET_EXPR',\n    'PG_GET_FUNCTIONDEF',\n    'PG_GET_FUNCTION_ARGUMENTS',\n    'PG_GET_FUNCTION_IDENTITY_ARGUMENTS',\n    'PG_GET_FUNCTION_RESULT',\n    'PG_GET_INDEXDEF',\n    'PG_GET_KEYWORDS',\n    'PG_GET_OBJECT_ADDRESS',\n    'PG_GET_OWNED_SEQUENCE',\n    'PG_GET_RULEDEF',\n    'PG_GET_SERIAL_SEQUENCE',\n    'PG_GET_STATISTICSOBJDEF',\n    'PG_GET_TRIGGERDEF',\n    'PG_GET_USERBYID',\n    'PG_GET_VIEWDEF',\n    'PG_HAS_ROLE',\n    'PG_IDENTIFY_OBJECT',\n    'PG_IDENTIFY_OBJECT_AS_ADDRESS',\n    'PG_INDEXAM_HAS_PROPERTY',\n    'PG_INDEX_COLUMN_HAS_PROPERTY',\n    'PG_INDEX_HAS_PROPERTY',\n    'PG_IS_OTHER_TEMP_SCHEMA',\n    'PG_JIT_AVAILABLE',\n    'PG_LAST_COMMITTED_XACT',\n    'PG_LISTENING_CHANNELS',\n    'PG_MY_TEMP_SCHEMA',\n    'PG_NOTIFICATION_QUEUE_USAGE',\n    'PG_OPCLASS_IS_VISIBLE',\n    'PG_OPERATOR_IS_VISIBLE',\n    'PG_OPFAMILY_IS_VISIBLE',\n    'PG_OPTIONS_TO_TABLE',\n    'PG_POSTMASTER_START_TIME',\n    'PG_SAFE_SNAPSHOT_BLOCKING_PIDS',\n    'PG_SNAPSHOT_XIP',\n    'PG_SNAPSHOT_XMAX',\n    'PG_SNAPSHOT_XMIN',\n    'PG_STATISTICS_OBJ_IS_VISIBLE',\n    'PG_TABLESPACE_DATABASES',\n    'PG_TABLESPACE_LOCATION',\n    'PG_TABLE_IS_VISIBLE',\n    'PG_TRIGGER_DEPTH',\n    'PG_TS_CONFIG_IS_VISIBLE',\n    'PG_TS_DICT_IS_VISIBLE',\n    'PG_TS_PARSER_IS_VISIBLE',\n    'PG_TS_TEMPLATE_IS_VISIBLE',\n    'PG_TYPEOF',\n    'PG_TYPE_IS_VISIBLE',\n    'PG_VISIBLE_IN_SNAPSHOT',\n    'PG_XACT_COMMIT_TIMESTAMP',\n    'PG_XACT_COMMIT_TIMESTAMP_ORIGIN',\n    'PG_XACT_STATUS',\n    'PQSERVERVERSION',\n    'ROW_SECURITY_ACTIVE',\n    'SESSION_USER',\n    'SHOBJ_DESCRIPTION',\n    'TO_REGCLASS',\n    'TO_REGCOLLATION',\n    'TO_REGNAMESPACE',\n    'TO_REGOPER',\n    'TO_REGOPERATOR',\n    'TO_REGPROC',\n    'TO_REGPROCEDURE',\n    'TO_REGROLE',\n    'TO_REGTYPE',\n    'TXID_CURRENT',\n    'TXID_CURRENT_IF_ASSIGNED',\n    'TXID_CURRENT_SNAPSHOT',\n    'TXID_SNAPSHOT_XIP',\n    'TXID_SNAPSHOT_XMAX',\n    'TXID_SNAPSHOT_XMIN',\n    'TXID_STATUS',\n    'TXID_VISIBLE_IN_SNAPSHOT',\n    'USER',\n    'VERSION',\n    // https://www.postgresql.org/docs/14/functions-admin.html\n    'BRIN_DESUMMARIZE_RANGE',\n    'BRIN_SUMMARIZE_NEW_VALUES',\n    'BRIN_SUMMARIZE_RANGE',\n    'CONVERT_FROM',\n    'CURRENT_SETTING',\n    'GIN_CLEAN_PENDING_LIST',\n    'PG_ADVISORY_LOCK',\n    'PG_ADVISORY_LOCK_SHARED',\n    'PG_ADVISORY_UNLOCK',\n    'PG_ADVISORY_UNLOCK_ALL',\n    'PG_ADVISORY_UNLOCK_SHARED',\n    'PG_ADVISORY_XACT_LOCK',\n    'PG_ADVISORY_XACT_LOCK_SHARED',\n    'PG_BACKUP_START_TIME',\n    'PG_CANCEL_BACKEND',\n    'PG_COLLATION_ACTUAL_VERSION',\n    'PG_COLUMN_COMPRESSION',\n    'PG_COLUMN_SIZE',\n    'PG_COPY_LOGICAL_REPLICATION_SLOT',\n    'PG_COPY_PHYSICAL_REPLICATION_SLOT',\n    'PG_CREATE_LOGICAL_REPLICATION_SLOT',\n    'PG_CREATE_PHYSICAL_REPLICATION_SLOT',\n    'PG_CREATE_RESTORE_POINT',\n    'PG_CURRENT_WAL_FLUSH_LSN',\n    'PG_CURRENT_WAL_INSERT_LSN',\n    'PG_CURRENT_WAL_LSN',\n    'PG_DATABASE_SIZE',\n    'PG_DROP_REPLICATION_SLOT',\n    'PG_EXPORT_SNAPSHOT',\n    'PG_FILENODE_RELATION',\n    'PG_GET_WAL_REPLAY_PAUSE_STATE',\n    'PG_IMPORT_SYSTEM_COLLATIONS',\n    'PG_INDEXES_SIZE',\n    'PG_IS_IN_BACKUP',\n    'PG_IS_IN_RECOVERY',\n    'PG_IS_WAL_REPLAY_PAUSED',\n    'PG_LAST_WAL_RECEIVE_LSN',\n    'PG_LAST_WAL_REPLAY_LSN',\n    'PG_LAST_XACT_REPLAY_TIMESTAMP',\n    'PG_LOGICAL_EMIT_MESSAGE',\n    'PG_LOGICAL_SLOT_GET_BINARY_CHANGES',\n    'PG_LOGICAL_SLOT_GET_CHANGES',\n    'PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES',\n    'PG_LOGICAL_SLOT_PEEK_CHANGES',\n    'PG_LOG_BACKEND_MEMORY_CONTEXTS',\n    'PG_LS_ARCHIVE_STATUSDIR',\n    'PG_LS_DIR',\n    'PG_LS_LOGDIR',\n    'PG_LS_TMPDIR',\n    'PG_LS_WALDIR',\n    'PG_PARTITION_ANCESTORS',\n    'PG_PARTITION_ROOT',\n    'PG_PARTITION_TREE',\n    'PG_PROMOTE',\n    'PG_READ_BINARY_FILE',\n    'PG_READ_FILE',\n    'PG_RELATION_FILENODE',\n    'PG_RELATION_FILEPATH',\n    'PG_RELATION_SIZE',\n    'PG_RELOAD_CONF',\n    'PG_REPLICATION_ORIGIN_ADVANCE',\n    'PG_REPLICATION_ORIGIN_CREATE',\n    'PG_REPLICATION_ORIGIN_DROP',\n    'PG_REPLICATION_ORIGIN_OID',\n    'PG_REPLICATION_ORIGIN_PROGRESS',\n    'PG_REPLICATION_ORIGIN_SESSION_IS_SETUP',\n    'PG_REPLICATION_ORIGIN_SESSION_PROGRESS',\n    'PG_REPLICATION_ORIGIN_SESSION_RESET',\n    'PG_REPLICATION_ORIGIN_SESSION_SETUP',\n    'PG_REPLICATION_ORIGIN_XACT_RESET',\n    'PG_REPLICATION_ORIGIN_XACT_SETUP',\n    'PG_REPLICATION_SLOT_ADVANCE',\n    'PG_ROTATE_LOGFILE',\n    'PG_SIZE_BYTES',\n    'PG_SIZE_PRETTY',\n    'PG_START_BACKUP',\n    'PG_STAT_FILE',\n    'PG_STOP_BACKUP',\n    'PG_SWITCH_WAL',\n    'PG_TABLESPACE_SIZE',\n    'PG_TABLE_SIZE',\n    'PG_TERMINATE_BACKEND',\n    'PG_TOTAL_RELATION_SIZE',\n    'PG_TRY_ADVISORY_LOCK',\n    'PG_TRY_ADVISORY_LOCK_SHARED',\n    'PG_TRY_ADVISORY_XACT_LOCK',\n    'PG_TRY_ADVISORY_XACT_LOCK_SHARED',\n    'PG_WALFILE_NAME',\n    'PG_WALFILE_NAME_OFFSET',\n    'PG_WAL_LSN_DIFF',\n    'PG_WAL_REPLAY_PAUSE',\n    'PG_WAL_REPLAY_RESUME',\n    'SET_CONFIG',\n    // https://www.postgresql.org/docs/14/functions-trigger.html\n    'SUPPRESS_REDUNDANT_UPDATES_TRIGGER',\n    'TSVECTOR_UPDATE_TRIGGER',\n    'TSVECTOR_UPDATE_TRIGGER_COLUMN',\n    // https://www.postgresql.org/docs/14/functions-event-triggers.html\n    'PG_EVENT_TRIGGER_DDL_COMMANDS',\n    'PG_EVENT_TRIGGER_DROPPED_OBJECTS',\n    'PG_EVENT_TRIGGER_TABLE_REWRITE_OID',\n    'PG_EVENT_TRIGGER_TABLE_REWRITE_REASON',\n    'PG_GET_OBJECT_ADDRESS',\n    // https://www.postgresql.org/docs/14/functions-statistics.html\n    'PG_MCV_LIST_ITEMS',\n    // cast\n    'CAST',\n];\n//# sourceMappingURL=postgresql.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './postgresql.functions.js';\nimport { dataTypes, keywords } from './postgresql.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY [ALL | DISTINCT]',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    'FETCH {FIRST | NEXT}',\n    'FOR {UPDATE | NO KEY UPDATE | SHARE | KEY SHARE} [OF]',\n    // Data manipulation\n    // - insert:\n    'INSERT INTO',\n    'VALUES',\n    'DEFAULT VALUES',\n    // - update:\n    'SET',\n    // other\n    'RETURNING',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [GLOBAL | LOCAL] [TEMPORARY | TEMP | UNLOGGED] TABLE [IF NOT EXISTS]',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // - create\n    'CREATE [OR REPLACE] [TEMP | TEMPORARY] [RECURSIVE] VIEW',\n    'CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]',\n    // - update:\n    'UPDATE [ONLY]',\n    'WHERE CURRENT OF',\n    // - insert:\n    'ON CONFLICT',\n    // - delete:\n    'DELETE FROM [ONLY]',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE [IF EXISTS] [ONLY]',\n    'ALTER TABLE ALL IN TABLESPACE',\n    'RENAME [COLUMN]',\n    'RENAME TO',\n    'ADD [COLUMN] [IF NOT EXISTS]',\n    'DROP [COLUMN] [IF EXISTS]',\n    'ALTER [COLUMN]',\n    'SET DATA TYPE',\n    '{SET | DROP} DEFAULT',\n    '{SET | DROP} NOT NULL',\n    // - truncate:\n    'TRUNCATE [TABLE] [ONLY]',\n    // other\n    'SET SCHEMA',\n    'AFTER',\n    // https://www.postgresql.org/docs/14/sql-commands.html\n    'ABORT',\n    'ALTER AGGREGATE',\n    'ALTER COLLATION',\n    'ALTER CONVERSION',\n    'ALTER DATABASE',\n    'ALTER DEFAULT PRIVILEGES',\n    'ALTER DOMAIN',\n    'ALTER EVENT TRIGGER',\n    'ALTER EXTENSION',\n    'ALTER FOREIGN DATA WRAPPER',\n    'ALTER FOREIGN TABLE',\n    'ALTER FUNCTION',\n    'ALTER GROUP',\n    'ALTER INDEX',\n    'ALTER LANGUAGE',\n    'ALTER LARGE OBJECT',\n    'ALTER MATERIALIZED VIEW',\n    'ALTER OPERATOR',\n    'ALTER OPERATOR CLASS',\n    'ALTER OPERATOR FAMILY',\n    'ALTER POLICY',\n    'ALTER PROCEDURE',\n    'ALTER PUBLICATION',\n    'ALTER ROLE',\n    'ALTER ROUTINE',\n    'ALTER RULE',\n    'ALTER SCHEMA',\n    'ALTER SEQUENCE',\n    'ALTER SERVER',\n    'ALTER STATISTICS',\n    'ALTER SUBSCRIPTION',\n    'ALTER SYSTEM',\n    'ALTER TABLESPACE',\n    'ALTER TEXT SEARCH CONFIGURATION',\n    'ALTER TEXT SEARCH DICTIONARY',\n    'ALTER TEXT SEARCH PARSER',\n    'ALTER TEXT SEARCH TEMPLATE',\n    'ALTER TRIGGER',\n    'ALTER TYPE',\n    'ALTER USER',\n    'ALTER USER MAPPING',\n    'ALTER VIEW',\n    'ANALYZE',\n    'BEGIN',\n    'CALL',\n    'CHECKPOINT',\n    'CLOSE',\n    'CLUSTER',\n    'COMMIT',\n    'COMMIT PREPARED',\n    'COPY',\n    'CREATE ACCESS METHOD',\n    'CREATE [OR REPLACE] AGGREGATE',\n    'CREATE CAST',\n    'CREATE COLLATION',\n    'CREATE [DEFAULT] CONVERSION',\n    'CREATE DATABASE',\n    'CREATE DOMAIN',\n    'CREATE EVENT TRIGGER',\n    'CREATE EXTENSION',\n    'CREATE FOREIGN DATA WRAPPER',\n    'CREATE FOREIGN TABLE',\n    'CREATE [OR REPLACE] FUNCTION',\n    'CREATE GROUP',\n    'CREATE [UNIQUE] INDEX',\n    'CREATE [OR REPLACE] [TRUSTED] [PROCEDURAL] LANGUAGE',\n    'CREATE OPERATOR',\n    'CREATE OPERATOR CLASS',\n    'CREATE OPERATOR FAMILY',\n    'CREATE POLICY',\n    'CREATE [OR REPLACE] PROCEDURE',\n    'CREATE PUBLICATION',\n    'CREATE ROLE',\n    'CREATE [OR REPLACE] RULE',\n    'CREATE SCHEMA [AUTHORIZATION]',\n    'CREATE [TEMPORARY | TEMP | UNLOGGED] SEQUENCE',\n    'CREATE SERVER',\n    'CREATE STATISTICS',\n    'CREATE SUBSCRIPTION',\n    'CREATE TABLESPACE',\n    'CREATE TEXT SEARCH CONFIGURATION',\n    'CREATE TEXT SEARCH DICTIONARY',\n    'CREATE TEXT SEARCH PARSER',\n    'CREATE TEXT SEARCH TEMPLATE',\n    'CREATE [OR REPLACE] TRANSFORM',\n    'CREATE [OR REPLACE] [CONSTRAINT] TRIGGER',\n    'CREATE TYPE',\n    'CREATE USER',\n    'CREATE USER MAPPING',\n    'DEALLOCATE',\n    'DECLARE',\n    'DISCARD',\n    'DROP ACCESS METHOD',\n    'DROP AGGREGATE',\n    'DROP CAST',\n    'DROP COLLATION',\n    'DROP CONVERSION',\n    'DROP DATABASE',\n    'DROP DOMAIN',\n    'DROP EVENT TRIGGER',\n    'DROP EXTENSION',\n    'DROP FOREIGN DATA WRAPPER',\n    'DROP FOREIGN TABLE',\n    'DROP FUNCTION',\n    'DROP GROUP',\n    'DROP IDENTITY',\n    'DROP INDEX',\n    'DROP LANGUAGE',\n    'DROP MATERIALIZED VIEW [IF EXISTS]',\n    'DROP OPERATOR',\n    'DROP OPERATOR CLASS',\n    'DROP OPERATOR FAMILY',\n    'DROP OWNED',\n    'DROP POLICY',\n    'DROP PROCEDURE',\n    'DROP PUBLICATION',\n    'DROP ROLE',\n    'DROP ROUTINE',\n    'DROP RULE',\n    'DROP SCHEMA',\n    'DROP SEQUENCE',\n    'DROP SERVER',\n    'DROP STATISTICS',\n    'DROP SUBSCRIPTION',\n    'DROP TABLESPACE',\n    'DROP TEXT SEARCH CONFIGURATION',\n    'DROP TEXT SEARCH DICTIONARY',\n    'DROP TEXT SEARCH PARSER',\n    'DROP TEXT SEARCH TEMPLATE',\n    'DROP TRANSFORM',\n    'DROP TRIGGER',\n    'DROP TYPE',\n    'DROP USER',\n    'DROP USER MAPPING',\n    'DROP VIEW',\n    'EXECUTE',\n    'EXPLAIN',\n    'FETCH',\n    'GRANT',\n    'IMPORT FOREIGN SCHEMA',\n    'LISTEN',\n    'LOAD',\n    'LOCK',\n    'MOVE',\n    'NOTIFY',\n    'OVERRIDING SYSTEM VALUE',\n    'PREPARE',\n    'PREPARE TRANSACTION',\n    'REASSIGN OWNED',\n    'REFRESH MATERIALIZED VIEW',\n    'REINDEX',\n    'RELEASE SAVEPOINT',\n    'RESET [ALL|ROLE|SESSION AUTHORIZATION]',\n    'REVOKE',\n    'ROLLBACK',\n    'ROLLBACK PREPARED',\n    'ROLLBACK TO SAVEPOINT',\n    'SAVEPOINT',\n    'SECURITY LABEL',\n    'SELECT INTO',\n    'SET CONSTRAINTS',\n    'SET ROLE',\n    'SET SESSION AUTHORIZATION',\n    'SET TRANSACTION',\n    'SHOW',\n    'START TRANSACTION',\n    'UNLISTEN',\n    'VACUUM',\n]);\nconst reservedSetOperations = expandPhrases([\n    'UNION [ALL | DISTINCT]',\n    'EXCEPT [ALL | DISTINCT]',\n    'INTERSECT [ALL | DISTINCT]',\n]);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL [INNER] JOIN',\n    'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN',\n]);\nconst reservedKeywordPhrases = expandPhrases([\n    'PRIMARY KEY',\n    'GENERATED {ALWAYS | BY DEFAULT} AS IDENTITY',\n    'ON {UPDATE | DELETE} [NO ACTION | RESTRICT | CASCADE | SET NULL | SET DEFAULT]',\n    'DO {NOTHING | UPDATE}',\n    'AS MATERIALIZED',\n    '{ROWS | RANGE | GROUPS} BETWEEN',\n    // comparison operator\n    'IS [NOT] DISTINCT FROM',\n    'NULLS {FIRST | LAST}',\n    'WITH ORDINALITY',\n]);\nconst reservedDataTypePhrases = expandPhrases([\n    // https://www.postgresql.org/docs/current/datatype-datetime.html\n    '[TIMESTAMP | TIME] {WITH | WITHOUT} TIME ZONE',\n]);\n// https://www.postgresql.org/docs/14/index.html\nexport const postgresql = {\n    name: 'postgresql',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedKeywordPhrases,\n        reservedDataTypePhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        nestedBlockComments: true,\n        extraParens: ['[]'],\n        underscoresInNumbers: true,\n        stringTypes: [\n            '$$',\n            { quote: \"''-qq\", prefixes: ['U&'] },\n            { quote: \"''-qq-bs\", prefixes: ['E'], requirePrefix: true },\n            { quote: \"''-raw\", prefixes: ['B', 'X'], requirePrefix: true },\n        ],\n        identTypes: [{ quote: '\"\"-qq', prefixes: ['U&'] }],\n        identChars: { rest: '$' },\n        paramTypes: { numbered: ['$'] },\n        operators: [\n            // Arithmetic\n            '%',\n            '^',\n            '|/',\n            '||/',\n            '@',\n            // Assignment\n            ':=',\n            // Bitwise\n            '&',\n            '|',\n            '#',\n            '~',\n            '<<',\n            '>>',\n            // Byte comparison\n            '~>~',\n            '~<~',\n            '~>=~',\n            '~<=~',\n            // Geometric\n            '@-@',\n            '@@',\n            '##',\n            '<->',\n            '&&',\n            '&<',\n            '&>',\n            '<<|',\n            '&<|',\n            '|>>',\n            '|&>',\n            '<^',\n            '^>',\n            '?#',\n            '?-',\n            '?|',\n            '?-|',\n            '?||',\n            '@>',\n            '<@',\n            '~=',\n            // JSON\n            '?',\n            '@?',\n            '?&',\n            '->',\n            '->>',\n            '#>',\n            '#>>',\n            '#-',\n            // Named function params\n            '=>',\n            // Network address\n            '>>=',\n            '<<=',\n            // Pattern matching\n            '~~',\n            '~~*',\n            '!~~',\n            '!~~*',\n            // POSIX RegExp\n            '~',\n            '~*',\n            '!~',\n            '!~*',\n            // Range/multirange\n            '-|-',\n            // String concatenation\n            '||',\n            // Text search\n            '@@@',\n            '!!',\n            '^@',\n            // Trigram/trigraph\n            '<%',\n            '%>',\n            '<<%',\n            '%>>',\n            '<<->',\n            '<->>',\n            '<<<->',\n            '<->>>',\n            // Type cast\n            '::',\n            ':',\n            // Custom operators defined by pgvector extension\n            // https://github.com/pgvector/pgvector#querying\n            '<#>',\n            '<=>',\n            '<+>',\n            '<~>',\n            '<%>',\n        ],\n        operatorKeyword: true,\n    },\n    formatOptions: {\n        alwaysDenseOperators: ['::', ':'],\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=postgresql.formatter.js.map","export const keywords = [\n    // https://www.postgresql.org/docs/14/sql-keywords-appendix.html\n    'ALL',\n    'ANALYSE',\n    'ANALYZE',\n    'AND',\n    'ANY',\n    'AS',\n    'ASC',\n    'ASYMMETRIC',\n    'AUTHORIZATION',\n    'BETWEEN',\n    'BINARY',\n    'BOTH',\n    'CASE',\n    'CAST',\n    'CHECK',\n    'COLLATE',\n    'COLLATION',\n    'COLUMN',\n    'CONCURRENTLY',\n    'CONSTRAINT',\n    'CREATE',\n    'CROSS',\n    'CURRENT_CATALOG',\n    'CURRENT_DATE',\n    'CURRENT_ROLE',\n    'CURRENT_SCHEMA',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'DAY',\n    'DEFAULT',\n    'DEFERRABLE',\n    'DESC',\n    'DISTINCT',\n    'DO',\n    'ELSE',\n    'END',\n    'EXCEPT',\n    'EXISTS',\n    'FALSE',\n    'FETCH',\n    'FILTER',\n    'FOR',\n    'FOREIGN',\n    'FREEZE',\n    'FROM',\n    'FULL',\n    'GRANT',\n    'GROUP',\n    'HAVING',\n    'HOUR',\n    'ILIKE',\n    'IN',\n    'INITIALLY',\n    'INNER',\n    'INOUT',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'ISNULL',\n    'JOIN',\n    'LATERAL',\n    'LEADING',\n    'LEFT',\n    'LIKE',\n    'LIMIT',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'MINUTE',\n    'MONTH',\n    'NATURAL',\n    'NOT',\n    'NOTNULL',\n    'NULL',\n    'NULLIF',\n    'OFFSET',\n    'ON',\n    'ONLY',\n    'OR',\n    'ORDER',\n    'OUT',\n    'OUTER',\n    'OVER',\n    'OVERLAPS',\n    'PLACING',\n    'PRIMARY',\n    'REFERENCES',\n    'RETURNING',\n    'RIGHT',\n    'ROW',\n    'SECOND',\n    'SELECT',\n    'SESSION_USER',\n    'SIMILAR',\n    'SOME',\n    'SYMMETRIC',\n    'TABLE',\n    'TABLESAMPLE',\n    'THEN',\n    'TO',\n    'TRAILING',\n    'TRUE',\n    'UNION',\n    'UNIQUE',\n    'USER',\n    'USING',\n    'VALUES',\n    'VARIADIC',\n    'VERBOSE',\n    'WHEN',\n    'WHERE',\n    'WINDOW',\n    'WITH',\n    'WITHIN',\n    'WITHOUT',\n    'YEAR', // requires AS\n];\nexport const dataTypes = [\n    // https://www.postgresql.org/docs/current/datatype.html\n    'ARRAY',\n    'BIGINT',\n    'BIT',\n    'BIT VARYING',\n    'BOOL',\n    'BOOLEAN',\n    'CHAR',\n    'CHARACTER',\n    'CHARACTER VARYING',\n    'DECIMAL',\n    'DEC',\n    'DOUBLE',\n    'ENUM',\n    'FLOAT',\n    'INT',\n    'INTEGER',\n    'INTERVAL',\n    'NCHAR',\n    'NUMERIC',\n    'JSON',\n    'JSONB',\n    'PRECISION',\n    'REAL',\n    'SMALLINT',\n    'TEXT',\n    'TIME',\n    'TIMESTAMP',\n    'TIMESTAMPTZ',\n    'UUID',\n    'VARCHAR',\n    'XML',\n    'ZONE',\n];\n//# sourceMappingURL=postgresql.keywords.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './redshift.functions.js';\nimport { dataTypes, keywords } from './redshift.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'QUALIFY',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    // Data manipulation\n    // - insert:\n    'INSERT INTO',\n    'VALUES',\n    // - update:\n    'SET',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [TEMPORARY | TEMP | LOCAL TEMPORARY | LOCAL TEMP] TABLE [IF NOT EXISTS]',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR REPLACE | MATERIALIZED] VIEW',\n    // - update:\n    'UPDATE',\n    // - delete:\n    'DELETE [FROM]',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE',\n    'ALTER TABLE APPEND',\n    'ADD [COLUMN]',\n    'DROP [COLUMN]',\n    'RENAME TO',\n    'RENAME COLUMN',\n    'ALTER COLUMN',\n    'TYPE',\n    'ENCODE',\n    // - truncate:\n    'TRUNCATE [TABLE]',\n    // https://docs.aws.amazon.com/redshift/latest/dg/c_SQL_commands.html\n    'ABORT',\n    'ALTER DATABASE',\n    'ALTER DATASHARE',\n    'ALTER DEFAULT PRIVILEGES',\n    'ALTER GROUP',\n    'ALTER MATERIALIZED VIEW',\n    'ALTER PROCEDURE',\n    'ALTER SCHEMA',\n    'ALTER USER',\n    'ANALYSE',\n    'ANALYZE',\n    'ANALYSE COMPRESSION',\n    'ANALYZE COMPRESSION',\n    'BEGIN',\n    'CALL',\n    'CANCEL',\n    'CLOSE',\n    'COMMIT',\n    'COPY',\n    'CREATE DATABASE',\n    'CREATE DATASHARE',\n    'CREATE EXTERNAL FUNCTION',\n    'CREATE EXTERNAL SCHEMA',\n    'CREATE EXTERNAL TABLE',\n    'CREATE FUNCTION',\n    'CREATE GROUP',\n    'CREATE LIBRARY',\n    'CREATE MODEL',\n    'CREATE PROCEDURE',\n    'CREATE SCHEMA',\n    'CREATE USER',\n    'DEALLOCATE',\n    'DECLARE',\n    'DESC DATASHARE',\n    'DROP DATABASE',\n    'DROP DATASHARE',\n    'DROP FUNCTION',\n    'DROP GROUP',\n    'DROP LIBRARY',\n    'DROP MODEL',\n    'DROP MATERIALIZED VIEW',\n    'DROP PROCEDURE',\n    'DROP SCHEMA',\n    'DROP USER',\n    'DROP VIEW',\n    'DROP',\n    'EXECUTE',\n    'EXPLAIN',\n    'FETCH',\n    'GRANT',\n    'LOCK',\n    'PREPARE',\n    'REFRESH MATERIALIZED VIEW',\n    'RESET',\n    'REVOKE',\n    'ROLLBACK',\n    'SELECT INTO',\n    'SET SESSION AUTHORIZATION',\n    'SET SESSION CHARACTERISTICS',\n    'SHOW',\n    'SHOW EXTERNAL TABLE',\n    'SHOW MODEL',\n    'SHOW DATASHARES',\n    'SHOW PROCEDURE',\n    'SHOW TABLE',\n    'SHOW VIEW',\n    'START TRANSACTION',\n    'UNLOAD',\n    'VACUUM',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'EXCEPT', 'INTERSECT', 'MINUS']);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL [INNER] JOIN',\n    'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN',\n]);\nconst reservedKeywordPhrases = expandPhrases([\n    // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-conversion.html\n    'NULL AS',\n    // https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_SCHEMA.html\n    'DATA CATALOG',\n    'HIVE METASTORE',\n    // in window specifications\n    '{ROWS | RANGE} BETWEEN',\n]);\nconst reservedDataTypePhrases = expandPhrases([]);\n// https://docs.aws.amazon.com/redshift/latest/dg/cm_chap_SQLCommandRef.html\nexport const redshift = {\n    name: 'redshift',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedKeywordPhrases,\n        reservedDataTypePhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        extraParens: ['[]'],\n        stringTypes: [\"''-qq\"],\n        identTypes: [`\"\"-qq`],\n        identChars: { first: '#' },\n        paramTypes: { numbered: ['$'] },\n        operators: [\n            '^',\n            '%',\n            '@',\n            '|/',\n            '||/',\n            '&',\n            '|',\n            // '#', conflicts with first char of identifier\n            '~',\n            '<<',\n            '>>',\n            '||',\n            '::',\n        ],\n    },\n    formatOptions: {\n        alwaysDenseOperators: ['::'],\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=redshift.formatter.js.map","export const keywords = [\n    // https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html\n    'AES128',\n    'AES256',\n    'ALL',\n    'ALLOWOVERWRITE',\n    'ANY',\n    'AS',\n    'ASC',\n    'AUTHORIZATION',\n    'BACKUP',\n    'BETWEEN',\n    'BINARY',\n    'BOTH',\n    'CHECK',\n    'COLUMN',\n    'CONSTRAINT',\n    'CREATE',\n    'CROSS',\n    'DEFAULT',\n    'DEFERRABLE',\n    'DEFLATE',\n    'DEFRAG',\n    'DESC',\n    'DISABLE',\n    'DISTINCT',\n    'DO',\n    'ENABLE',\n    'ENCODE',\n    'ENCRYPT',\n    'ENCRYPTION',\n    'EXPLICIT',\n    'FALSE',\n    'FOR',\n    'FOREIGN',\n    'FREEZE',\n    'FROM',\n    'FULL',\n    'GLOBALDICT256',\n    'GLOBALDICT64K',\n    'GROUP',\n    'IDENTITY',\n    'IGNORE',\n    'ILIKE',\n    'IN',\n    'INITIALLY',\n    'INNER',\n    'INTO',\n    'IS',\n    'ISNULL',\n    'LANGUAGE',\n    'LEADING',\n    'LIKE',\n    'LIMIT',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LUN',\n    'LUNS',\n    'MINUS',\n    'NATURAL',\n    'NEW',\n    'NOT',\n    'NOTNULL',\n    'NULL',\n    'NULLS',\n    'OFF',\n    'OFFLINE',\n    'OFFSET',\n    'OID',\n    'OLD',\n    'ON',\n    'ONLY',\n    'OPEN',\n    'ORDER',\n    'OUTER',\n    'OVERLAPS',\n    'PARALLEL',\n    'PARTITION',\n    'PERCENT',\n    'PERMISSIONS',\n    'PLACING',\n    'PRIMARY',\n    'RECOVER',\n    'REFERENCES',\n    'REJECTLOG',\n    'RESORT',\n    'RESPECT',\n    'RESTORE',\n    'SIMILAR',\n    'SNAPSHOT',\n    'SOME',\n    'SYSTEM',\n    'TABLE',\n    'TAG',\n    'TDES',\n    'THEN',\n    'TIMESTAMP',\n    'TO',\n    'TOP',\n    'TRAILING',\n    'TRUE',\n    'UNIQUE',\n    'USING',\n    'VERBOSE',\n    'WALLET',\n    'WITHOUT',\n    // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-conversion.html\n    'ACCEPTANYDATE',\n    'ACCEPTINVCHARS',\n    'BLANKSASNULL',\n    'DATEFORMAT',\n    'EMPTYASNULL',\n    'ENCODING',\n    'ESCAPE',\n    'EXPLICIT_IDS',\n    'FILLRECORD',\n    'IGNOREBLANKLINES',\n    'IGNOREHEADER',\n    'REMOVEQUOTES',\n    'ROUNDEC',\n    'TIMEFORMAT',\n    'TRIMBLANKS',\n    'TRUNCATECOLUMNS',\n    // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-load.html\n    'COMPROWS',\n    'COMPUPDATE',\n    'MAXERROR',\n    'NOLOAD',\n    'STATUPDATE',\n    // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-format.html\n    'FORMAT',\n    'CSV',\n    'DELIMITER',\n    'FIXEDWIDTH',\n    'SHAPEFILE',\n    'AVRO',\n    'JSON',\n    'PARQUET',\n    'ORC',\n    // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-authorization.html\n    'ACCESS_KEY_ID',\n    'CREDENTIALS',\n    'ENCRYPTED',\n    'IAM_ROLE',\n    'MASTER_SYMMETRIC_KEY',\n    'SECRET_ACCESS_KEY',\n    'SESSION_TOKEN',\n    // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-file-compression.html\n    'BZIP2',\n    'GZIP',\n    'LZOP',\n    'ZSTD',\n    // https://docs.aws.amazon.com/redshift/latest/dg/r_COPY-alphabetical-parm-list.html\n    'MANIFEST',\n    'READRATIO',\n    'REGION',\n    'SSH',\n    // https://docs.aws.amazon.com/redshift/latest/dg/c_Compression_encodings.html\n    'RAW',\n    'AZ64',\n    'BYTEDICT',\n    'DELTA',\n    'DELTA32K',\n    'LZO',\n    'MOSTLY8',\n    'MOSTLY16',\n    'MOSTLY32',\n    'RUNLENGTH',\n    'TEXT255',\n    'TEXT32K',\n    // misc\n    // CREATE EXTERNAL SCHEMA (https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_SCHEMA.html)\n    'CATALOG_ROLE',\n    'SECRET_ARN',\n    'EXTERNAL',\n    // https://docs.aws.amazon.com/redshift/latest/dg/c_choosing_dist_sort.html\n    'AUTO',\n    'EVEN',\n    'KEY',\n    'PREDICATE',\n    // unknown\n    'COMPRESSION',\n    /**\n     * Other keywords not included:\n     * STL: https://docs.aws.amazon.com/redshift/latest/dg/c_intro_STL_tables.html\n     * SVCS: https://docs.aws.amazon.com/redshift/latest/dg/svcs_views.html\n     * SVL: https://docs.aws.amazon.com/redshift/latest/dg/svl_views.html\n     * SVV: https://docs.aws.amazon.com/redshift/latest/dg/svv_views.html\n     */\n];\nexport const dataTypes = [\n    // https://docs.aws.amazon.com/redshift/latest/dg/r_Character_types.html#r_Character_types-text-and-bpchar-types\n    'ARRAY',\n    'BIGINT',\n    'BPCHAR',\n    'CHAR',\n    'CHARACTER VARYING',\n    'CHARACTER',\n    'DECIMAL',\n    'INT',\n    'INT2',\n    'INT4',\n    'INT8',\n    'INTEGER',\n    'NCHAR',\n    'NUMERIC',\n    'NVARCHAR',\n    'SMALLINT',\n    'TEXT',\n    'VARBYTE',\n    'VARCHAR',\n];\n//# sourceMappingURL=redshift.keywords.js.map","export const functions = [\n    // https://docs.aws.amazon.com/redshift/latest/dg/c_Aggregate_Functions.html\n    'ANY_VALUE',\n    'APPROXIMATE PERCENTILE_DISC',\n    'AVG',\n    'COUNT',\n    'LISTAGG',\n    'MAX',\n    'MEDIAN',\n    'MIN',\n    'PERCENTILE_CONT',\n    'STDDEV_SAMP',\n    'STDDEV_POP',\n    'SUM',\n    'VAR_SAMP',\n    'VAR_POP',\n    // https://docs.aws.amazon.com/redshift/latest/dg/c_Array_Functions.html\n    // 'array',\n    'array_concat',\n    'array_flatten',\n    'get_array_length',\n    'split_to_array',\n    'subarray',\n    // https://docs.aws.amazon.com/redshift/latest/dg/c_bitwise_aggregate_functions.html\n    'BIT_AND',\n    'BIT_OR',\n    'BOOL_AND',\n    'BOOL_OR',\n    // https://docs.aws.amazon.com/redshift/latest/dg/c_conditional_expressions.html\n    'COALESCE',\n    'DECODE',\n    'GREATEST',\n    'LEAST',\n    'NVL',\n    'NVL2',\n    'NULLIF',\n    // https://docs.aws.amazon.com/redshift/latest/dg/Date_functions_header.html\n    'ADD_MONTHS',\n    'AT TIME ZONE',\n    'CONVERT_TIMEZONE',\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'DATE_CMP',\n    'DATE_CMP_TIMESTAMP',\n    'DATE_CMP_TIMESTAMPTZ',\n    'DATE_PART_YEAR',\n    'DATEADD',\n    'DATEDIFF',\n    'DATE_PART',\n    'DATE_TRUNC',\n    'EXTRACT',\n    'GETDATE',\n    'INTERVAL_CMP',\n    'LAST_DAY',\n    'MONTHS_BETWEEN',\n    'NEXT_DAY',\n    'SYSDATE',\n    'TIMEOFDAY',\n    'TIMESTAMP_CMP',\n    'TIMESTAMP_CMP_DATE',\n    'TIMESTAMP_CMP_TIMESTAMPTZ',\n    'TIMESTAMPTZ_CMP',\n    'TIMESTAMPTZ_CMP_DATE',\n    'TIMESTAMPTZ_CMP_TIMESTAMP',\n    'TIMEZONE',\n    'TO_TIMESTAMP',\n    'TRUNC',\n    // https://docs.aws.amazon.com/redshift/latest/dg/geospatial-functions.html\n    'AddBBox',\n    'DropBBox',\n    'GeometryType',\n    'ST_AddPoint',\n    'ST_Angle',\n    'ST_Area',\n    'ST_AsBinary',\n    'ST_AsEWKB',\n    'ST_AsEWKT',\n    'ST_AsGeoJSON',\n    'ST_AsText',\n    'ST_Azimuth',\n    'ST_Boundary',\n    'ST_Collect',\n    'ST_Contains',\n    'ST_ContainsProperly',\n    'ST_ConvexHull',\n    'ST_CoveredBy',\n    'ST_Covers',\n    'ST_Crosses',\n    'ST_Dimension',\n    'ST_Disjoint',\n    'ST_Distance',\n    'ST_DistanceSphere',\n    'ST_DWithin',\n    'ST_EndPoint',\n    'ST_Envelope',\n    'ST_Equals',\n    'ST_ExteriorRing',\n    'ST_Force2D',\n    'ST_Force3D',\n    'ST_Force3DM',\n    'ST_Force3DZ',\n    'ST_Force4D',\n    'ST_GeometryN',\n    'ST_GeometryType',\n    'ST_GeomFromEWKB',\n    'ST_GeomFromEWKT',\n    'ST_GeomFromText',\n    'ST_GeomFromWKB',\n    'ST_InteriorRingN',\n    'ST_Intersects',\n    'ST_IsPolygonCCW',\n    'ST_IsPolygonCW',\n    'ST_IsClosed',\n    'ST_IsCollection',\n    'ST_IsEmpty',\n    'ST_IsSimple',\n    'ST_IsValid',\n    'ST_Length',\n    'ST_LengthSphere',\n    'ST_Length2D',\n    'ST_LineFromMultiPoint',\n    'ST_LineInterpolatePoint',\n    'ST_M',\n    'ST_MakeEnvelope',\n    'ST_MakeLine',\n    'ST_MakePoint',\n    'ST_MakePolygon',\n    'ST_MemSize',\n    'ST_MMax',\n    'ST_MMin',\n    'ST_Multi',\n    'ST_NDims',\n    'ST_NPoints',\n    'ST_NRings',\n    'ST_NumGeometries',\n    'ST_NumInteriorRings',\n    'ST_NumPoints',\n    'ST_Perimeter',\n    'ST_Perimeter2D',\n    'ST_Point',\n    'ST_PointN',\n    'ST_Points',\n    'ST_Polygon',\n    'ST_RemovePoint',\n    'ST_Reverse',\n    'ST_SetPoint',\n    'ST_SetSRID',\n    'ST_Simplify',\n    'ST_SRID',\n    'ST_StartPoint',\n    'ST_Touches',\n    'ST_Within',\n    'ST_X',\n    'ST_XMax',\n    'ST_XMin',\n    'ST_Y',\n    'ST_YMax',\n    'ST_YMin',\n    'ST_Z',\n    'ST_ZMax',\n    'ST_ZMin',\n    'SupportsBBox',\n    // https://docs.aws.amazon.com/redshift/latest/dg/hash-functions.html\n    'CHECKSUM',\n    'FUNC_SHA1',\n    'FNV_HASH',\n    'MD5',\n    'SHA',\n    'SHA1',\n    'SHA2',\n    // https://docs.aws.amazon.com/redshift/latest/dg/hyperloglog-functions.html\n    'HLL',\n    'HLL_CREATE_SKETCH',\n    'HLL_CARDINALITY',\n    'HLL_COMBINE',\n    // https://docs.aws.amazon.com/redshift/latest/dg/json-functions.html\n    'IS_VALID_JSON',\n    'IS_VALID_JSON_ARRAY',\n    'JSON_ARRAY_LENGTH',\n    'JSON_EXTRACT_ARRAY_ELEMENT_TEXT',\n    'JSON_EXTRACT_PATH_TEXT',\n    'JSON_PARSE',\n    'JSON_SERIALIZE',\n    // https://docs.aws.amazon.com/redshift/latest/dg/Math_functions.html\n    'ABS',\n    'ACOS',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'CBRT',\n    'CEILING',\n    'CEIL',\n    'COS',\n    'COT',\n    'DEGREES',\n    'DEXP',\n    'DLOG1',\n    'DLOG10',\n    'EXP',\n    'FLOOR',\n    'LN',\n    'LOG',\n    'MOD',\n    'PI',\n    'POWER',\n    'RADIANS',\n    'RANDOM',\n    'ROUND',\n    'SIN',\n    'SIGN',\n    'SQRT',\n    'TAN',\n    'TO_HEX',\n    'TRUNC',\n    // https://docs.aws.amazon.com/redshift/latest/dg/ml-function.html\n    'EXPLAIN_MODEL',\n    // https://docs.aws.amazon.com/redshift/latest/dg/String_functions_header.html\n    'ASCII',\n    'BPCHARCMP',\n    'BTRIM',\n    'BTTEXT_PATTERN_CMP',\n    'CHAR_LENGTH',\n    'CHARACTER_LENGTH',\n    'CHARINDEX',\n    'CHR',\n    'COLLATE',\n    'CONCAT',\n    'CRC32',\n    'DIFFERENCE',\n    'INITCAP',\n    'LEFT',\n    'RIGHT',\n    'LEN',\n    'LENGTH',\n    'LOWER',\n    'LPAD',\n    'RPAD',\n    'LTRIM',\n    'OCTETINDEX',\n    'OCTET_LENGTH',\n    'POSITION',\n    'QUOTE_IDENT',\n    'QUOTE_LITERAL',\n    'REGEXP_COUNT',\n    'REGEXP_INSTR',\n    'REGEXP_REPLACE',\n    'REGEXP_SUBSTR',\n    'REPEAT',\n    'REPLACE',\n    'REPLICATE',\n    'REVERSE',\n    'RTRIM',\n    'SOUNDEX',\n    'SPLIT_PART',\n    'STRPOS',\n    'STRTOL',\n    'SUBSTRING',\n    'TEXTLEN',\n    'TRANSLATE',\n    'TRIM',\n    'UPPER',\n    // https://docs.aws.amazon.com/redshift/latest/dg/c_Type_Info_Functions.html\n    'decimal_precision',\n    'decimal_scale',\n    'is_array',\n    'is_bigint',\n    'is_boolean',\n    'is_char',\n    'is_decimal',\n    'is_float',\n    'is_integer',\n    'is_object',\n    'is_scalar',\n    'is_smallint',\n    'is_varchar',\n    'json_typeof',\n    // https://docs.aws.amazon.com/redshift/latest/dg/c_Window_functions.html\n    'AVG',\n    'COUNT',\n    'CUME_DIST',\n    'DENSE_RANK',\n    'FIRST_VALUE',\n    'LAST_VALUE',\n    'LAG',\n    'LEAD',\n    'LISTAGG',\n    'MAX',\n    'MEDIAN',\n    'MIN',\n    'NTH_VALUE',\n    'NTILE',\n    'PERCENT_RANK',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'RANK',\n    'RATIO_TO_REPORT',\n    'ROW_NUMBER',\n    'STDDEV_SAMP',\n    'STDDEV_POP',\n    'SUM',\n    'VAR_SAMP',\n    'VAR_POP',\n    // https://docs.aws.amazon.com/redshift/latest/dg/r_Data_type_formatting.html\n    'CAST',\n    'CONVERT',\n    'TO_CHAR',\n    'TO_DATE',\n    'TO_NUMBER',\n    'TEXT_TO_INT_ALT',\n    'TEXT_TO_NUMERIC_ALT',\n    // https://docs.aws.amazon.com/redshift/latest/dg/r_System_administration_functions.html\n    'CHANGE_QUERY_PRIORITY',\n    'CHANGE_SESSION_PRIORITY',\n    'CHANGE_USER_PRIORITY',\n    'CURRENT_SETTING',\n    'PG_CANCEL_BACKEND',\n    'PG_TERMINATE_BACKEND',\n    'REBOOT_CLUSTER',\n    'SET_CONFIG',\n    // https://docs.aws.amazon.com/redshift/latest/dg/r_System_information_functions.html\n    'CURRENT_AWS_ACCOUNT',\n    'CURRENT_DATABASE',\n    'CURRENT_NAMESPACE',\n    'CURRENT_SCHEMA',\n    'CURRENT_SCHEMAS',\n    'CURRENT_USER',\n    'CURRENT_USER_ID',\n    'HAS_ASSUMEROLE_PRIVILEGE',\n    'HAS_DATABASE_PRIVILEGE',\n    'HAS_SCHEMA_PRIVILEGE',\n    'HAS_TABLE_PRIVILEGE',\n    'PG_BACKEND_PID',\n    'PG_GET_COLS',\n    'PG_GET_GRANTEE_BY_IAM_ROLE',\n    'PG_GET_IAM_ROLE_BY_USER',\n    'PG_GET_LATE_BINDING_VIEW_COLS',\n    'PG_LAST_COPY_COUNT',\n    'PG_LAST_COPY_ID',\n    'PG_LAST_UNLOAD_ID',\n    'PG_LAST_QUERY_ID',\n    'PG_LAST_UNLOAD_COUNT',\n    'SESSION_USER',\n    'SLICE_NUM',\n    'USER',\n    'VERSION',\n];\n//# sourceMappingURL=redshift.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { EOF_TOKEN, isToken, TokenType } from '../../lexer/token.js';\nimport { dataTypes, keywords } from './spark.keywords.js';\nimport { functions } from './spark.functions.js';\n// http://spark.apache.org/docs/latest/sql-ref-syntax.html\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'SORT BY',\n    'CLUSTER BY',\n    'DISTRIBUTE BY',\n    'LIMIT',\n    // Data manipulation\n    // - insert:\n    'INSERT [INTO | OVERWRITE] [TABLE]',\n    'VALUES',\n    // - insert overwrite directory:\n    //   https://spark.apache.org/docs/latest/sql-ref-syntax-dml-insert-overwrite-directory.html\n    'INSERT OVERWRITE [LOCAL] DIRECTORY',\n    // - load:\n    //   https://spark.apache.org/docs/latest/sql-ref-syntax-dml-load.html\n    'LOAD DATA [LOCAL] INPATH',\n    '[OVERWRITE] INTO TABLE',\n]);\nconst standardOnelineClauses = expandPhrases(['CREATE [EXTERNAL] TABLE [IF NOT EXISTS]']);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR REPLACE] [GLOBAL TEMPORARY | TEMPORARY] VIEW [IF NOT EXISTS]',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE',\n    'ADD COLUMNS',\n    'DROP {COLUMN | COLUMNS}',\n    'RENAME TO',\n    'RENAME COLUMN',\n    'ALTER COLUMN',\n    // - truncate:\n    'TRUNCATE TABLE',\n    // other\n    'LATERAL VIEW',\n    'ALTER DATABASE',\n    'ALTER VIEW',\n    'CREATE DATABASE',\n    'CREATE FUNCTION',\n    'DROP DATABASE',\n    'DROP FUNCTION',\n    'DROP VIEW',\n    'REPAIR TABLE',\n    'USE DATABASE',\n    // Data Retrieval\n    'TABLESAMPLE',\n    'PIVOT',\n    'TRANSFORM',\n    'EXPLAIN',\n    // Auxiliary\n    'ADD FILE',\n    'ADD JAR',\n    'ANALYZE TABLE',\n    'CACHE TABLE',\n    'CLEAR CACHE',\n    'DESCRIBE DATABASE',\n    'DESCRIBE FUNCTION',\n    'DESCRIBE QUERY',\n    'DESCRIBE TABLE',\n    'LIST FILE',\n    'LIST JAR',\n    'REFRESH',\n    'REFRESH TABLE',\n    'REFRESH FUNCTION',\n    'RESET',\n    'SHOW COLUMNS',\n    'SHOW CREATE TABLE',\n    'SHOW DATABASES',\n    'SHOW FUNCTIONS',\n    'SHOW PARTITIONS',\n    'SHOW TABLE EXTENDED',\n    'SHOW TABLES',\n    'SHOW TBLPROPERTIES',\n    'SHOW VIEWS',\n    'UNCACHE TABLE',\n]);\nconst reservedSetOperations = expandPhrases([\n    'UNION [ALL | DISTINCT]',\n    'EXCEPT [ALL | DISTINCT]',\n    'INTERSECT [ALL | DISTINCT]',\n]);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL [INNER] JOIN',\n    'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN',\n    // non-standard-joins\n    '[LEFT] {ANTI | SEMI} JOIN',\n    'NATURAL [LEFT] {ANTI | SEMI} JOIN',\n]);\nconst reservedKeywordPhrases = expandPhrases([\n    'ON DELETE',\n    'ON UPDATE',\n    'CURRENT ROW',\n    '{ROWS | RANGE} BETWEEN',\n]);\nconst reservedDataTypePhrases = expandPhrases([]);\n// http://spark.apache.org/docs/latest/sql-programming-guide.html\nexport const spark = {\n    name: 'spark',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedKeywordPhrases,\n        reservedDataTypePhrases,\n        supportsXor: true,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        extraParens: ['[]'],\n        stringTypes: [\n            \"''-bs\",\n            '\"\"-bs',\n            { quote: \"''-raw\", prefixes: ['R', 'X'], requirePrefix: true },\n            { quote: '\"\"-raw', prefixes: ['R', 'X'], requirePrefix: true },\n        ],\n        identTypes: ['``'],\n        identChars: { allowFirstCharNumber: true },\n        variableTypes: [{ quote: '{}', prefixes: ['$'], requirePrefix: true }],\n        operators: ['%', '~', '^', '|', '&', '<=>', '==', '!', '||', '->'],\n        postProcess,\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\nfunction postProcess(tokens) {\n    return tokens.map((token, i) => {\n        const prevToken = tokens[i - 1] || EOF_TOKEN;\n        const nextToken = tokens[i + 1] || EOF_TOKEN;\n        // [WINDOW](...)\n        if (isToken.WINDOW(token) && nextToken.type === TokenType.OPEN_PAREN) {\n            // This is a function call, treat it as a reserved function name\n            return Object.assign(Object.assign({}, token), { type: TokenType.RESERVED_FUNCTION_NAME });\n        }\n        // TODO: deprecate this once ITEMS is merged with COLLECTION\n        if (token.text === 'ITEMS' && token.type === TokenType.RESERVED_KEYWORD) {\n            if (!(prevToken.text === 'COLLECTION' && nextToken.text === 'TERMINATED')) {\n                // this is a word and not COLLECTION ITEMS\n                return Object.assign(Object.assign({}, token), { type: TokenType.IDENTIFIER, text: token.raw });\n            }\n        }\n        return token;\n    });\n}\n//# sourceMappingURL=spark.formatter.js.map","export const keywords = [\n    // https://deepkb.com/CO_000013/en/kb/IMPORT-fbfa59f0-2bf1-31fe-bb7b-0f9efe9932c6/spark-sql-keywords\n    'ADD',\n    'AFTER',\n    'ALL',\n    'ALTER',\n    'ANALYZE',\n    'AND',\n    'ANTI',\n    'ANY',\n    'ARCHIVE',\n    'AS',\n    'ASC',\n    'AT',\n    'AUTHORIZATION',\n    'BETWEEN',\n    'BOTH',\n    'BUCKET',\n    'BUCKETS',\n    'BY',\n    'CACHE',\n    'CASCADE',\n    'CAST',\n    'CHANGE',\n    'CHECK',\n    'CLEAR',\n    'CLUSTER',\n    'CLUSTERED',\n    'CODEGEN',\n    'COLLATE',\n    'COLLECTION',\n    'COLUMN',\n    'COLUMNS',\n    'COMMENT',\n    'COMMIT',\n    'COMPACT',\n    'COMPACTIONS',\n    'COMPUTE',\n    'CONCATENATE',\n    'CONSTRAINT',\n    'COST',\n    'CREATE',\n    'CROSS',\n    'CUBE',\n    'CURRENT',\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'DATA',\n    'DATABASE',\n    'DATABASES',\n    'DAY',\n    'DBPROPERTIES',\n    'DEFINED',\n    'DELETE',\n    'DELIMITED',\n    'DESC',\n    'DESCRIBE',\n    'DFS',\n    'DIRECTORIES',\n    'DIRECTORY',\n    'DISTINCT',\n    'DISTRIBUTE',\n    'DIV',\n    'DROP',\n    'ESCAPE',\n    'ESCAPED',\n    'EXCEPT',\n    'EXCHANGE',\n    'EXISTS',\n    'EXPORT',\n    'EXTENDED',\n    'EXTERNAL',\n    'EXTRACT',\n    'FALSE',\n    'FETCH',\n    'FIELDS',\n    'FILTER',\n    'FILEFORMAT',\n    'FIRST',\n    'FIRST_VALUE',\n    'FOLLOWING',\n    'FOR',\n    'FOREIGN',\n    'FORMAT',\n    'FORMATTED',\n    'FULL',\n    'FUNCTION',\n    'FUNCTIONS',\n    'GLOBAL',\n    'GRANT',\n    'GROUP',\n    'GROUPING',\n    'HOUR',\n    'IF',\n    'IGNORE',\n    'IMPORT',\n    'IN',\n    'INDEX',\n    'INDEXES',\n    'INNER',\n    'INPATH',\n    'INPUTFORMAT',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'ITEMS',\n    'KEYS',\n    'LAST',\n    'LAST_VALUE',\n    'LATERAL',\n    'LAZY',\n    'LEADING',\n    'LEFT',\n    'LIKE',\n    'LINES',\n    'LIST',\n    'LOCAL',\n    'LOCATION',\n    'LOCK',\n    'LOCKS',\n    'LOGICAL',\n    'MACRO',\n    'MATCHED',\n    'MERGE',\n    'MINUTE',\n    'MONTH',\n    'MSCK',\n    'NAMESPACE',\n    'NAMESPACES',\n    'NATURAL',\n    'NO',\n    'NOT',\n    'NULL',\n    'NULLS',\n    'OF',\n    'ONLY',\n    'OPTION',\n    'OPTIONS',\n    'OR',\n    'ORDER',\n    'OUT',\n    'OUTER',\n    'OUTPUTFORMAT',\n    'OVER',\n    'OVERLAPS',\n    'OVERLAY',\n    'OVERWRITE',\n    'OWNER',\n    'PARTITION',\n    'PARTITIONED',\n    'PARTITIONS',\n    'PERCENT',\n    'PLACING',\n    'POSITION',\n    'PRECEDING',\n    'PRIMARY',\n    'PRINCIPALS',\n    'PROPERTIES',\n    'PURGE',\n    'QUERY',\n    'RANGE',\n    'RECORDREADER',\n    'RECORDWRITER',\n    'RECOVER',\n    'REDUCE',\n    'REFERENCES',\n    'RENAME',\n    'REPAIR',\n    'REPLACE',\n    'RESPECT',\n    'RESTRICT',\n    'REVOKE',\n    'RIGHT',\n    'RLIKE',\n    'ROLE',\n    'ROLES',\n    'ROLLBACK',\n    'ROLLUP',\n    'ROW',\n    'ROWS',\n    'SCHEMA',\n    'SECOND',\n    'SELECT',\n    'SEMI',\n    'SEPARATED',\n    'SERDE',\n    'SERDEPROPERTIES',\n    'SESSION_USER',\n    'SETS',\n    'SHOW',\n    'SKEWED',\n    'SOME',\n    'SORT',\n    'SORTED',\n    'START',\n    'STATISTICS',\n    'STORED',\n    'STRATIFY',\n    'SUBSTR',\n    'SUBSTRING',\n    'TABLE',\n    'TABLES',\n    'TBLPROPERTIES',\n    'TEMPORARY',\n    'TERMINATED',\n    'THEN',\n    'TO',\n    'TOUCH',\n    'TRAILING',\n    'TRANSACTION',\n    'TRANSACTIONS',\n    'TRIM',\n    'TRUE',\n    'TRUNCATE',\n    'UNARCHIVE',\n    'UNBOUNDED',\n    'UNCACHE',\n    'UNIQUE',\n    'UNKNOWN',\n    'UNLOCK',\n    'UNSET',\n    'USE',\n    'USER',\n    'USING',\n    'VIEW',\n    'WINDOW',\n    'YEAR',\n    // other\n    'ANALYSE',\n    'ARRAY_ZIP',\n    'COALESCE',\n    'CONTAINS',\n    'CONVERT',\n    'DAYS',\n    'DAY_HOUR',\n    'DAY_MINUTE',\n    'DAY_SECOND',\n    'DECODE',\n    'DEFAULT',\n    'DISTINCTROW',\n    'ENCODE',\n    'EXPLODE',\n    'EXPLODE_OUTER',\n    'FIXED',\n    'GREATEST',\n    'GROUP_CONCAT',\n    'HOURS',\n    'HOUR_MINUTE',\n    'HOUR_SECOND',\n    'IFNULL',\n    'LEAST',\n    'LEVEL',\n    'MINUTE_SECOND',\n    'NULLIF',\n    'OFFSET',\n    'ON',\n    'OPTIMIZE',\n    'REGEXP',\n    'SEPARATOR',\n    'SIZE',\n    'TYPE',\n    'TYPES',\n    'UNSIGNED',\n    'VARIABLES',\n    'YEAR_MONTH',\n];\nexport const dataTypes = [\n    // https://spark.apache.org/docs/latest/sql-ref-datatypes.html\n    'ARRAY',\n    'BIGINT',\n    'BINARY',\n    'BOOLEAN',\n    'BYTE',\n    'CHAR',\n    'DATE',\n    'DEC',\n    'DECIMAL',\n    'DOUBLE',\n    'FLOAT',\n    'INT',\n    'INTEGER',\n    'INTERVAL',\n    'LONG',\n    'MAP',\n    'NUMERIC',\n    'REAL',\n    'SHORT',\n    'SMALLINT',\n    'STRING',\n    'STRUCT',\n    'TIMESTAMP_LTZ',\n    'TIMESTAMP_NTZ',\n    'TIMESTAMP',\n    'TINYINT',\n    'VARCHAR', // No varchar type in Spark, only STRING. Added for the sake of tests\n];\n//# sourceMappingURL=spark.keywords.js.map","export const functions = [\n    // http://spark.apache.org/docs/latest/sql-ref-functions.html\n    //\n    // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#aggregate-functions\n    // 'ANY',\n    'APPROX_COUNT_DISTINCT',\n    'APPROX_PERCENTILE',\n    'AVG',\n    'BIT_AND',\n    'BIT_OR',\n    'BIT_XOR',\n    'BOOL_AND',\n    'BOOL_OR',\n    'COLLECT_LIST',\n    'COLLECT_SET',\n    'CORR',\n    'COUNT',\n    'COUNT',\n    'COUNT',\n    'COUNT_IF',\n    'COUNT_MIN_SKETCH',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'EVERY',\n    'FIRST',\n    'FIRST_VALUE',\n    'GROUPING',\n    'GROUPING_ID',\n    'KURTOSIS',\n    'LAST',\n    'LAST_VALUE',\n    'MAX',\n    'MAX_BY',\n    'MEAN',\n    'MIN',\n    'MIN_BY',\n    'PERCENTILE',\n    'PERCENTILE',\n    'PERCENTILE_APPROX',\n    'SKEWNESS',\n    // 'SOME',\n    'STD',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'SUM',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VARIANCE',\n    // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#window-functions\n    'CUME_DIST',\n    'DENSE_RANK',\n    'LAG',\n    'LEAD',\n    'NTH_VALUE',\n    'NTILE',\n    'PERCENT_RANK',\n    'RANK',\n    'ROW_NUMBER',\n    // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#array-functions\n    'ARRAY',\n    'ARRAY_CONTAINS',\n    'ARRAY_DISTINCT',\n    'ARRAY_EXCEPT',\n    'ARRAY_INTERSECT',\n    'ARRAY_JOIN',\n    'ARRAY_MAX',\n    'ARRAY_MIN',\n    'ARRAY_POSITION',\n    'ARRAY_REMOVE',\n    'ARRAY_REPEAT',\n    'ARRAY_UNION',\n    'ARRAYS_OVERLAP',\n    'ARRAYS_ZIP',\n    'FLATTEN',\n    'SEQUENCE',\n    'SHUFFLE',\n    'SLICE',\n    'SORT_ARRAY',\n    // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#map-functions\n    'ELEMENT_AT',\n    'ELEMENT_AT',\n    'MAP_CONCAT',\n    'MAP_ENTRIES',\n    'MAP_FROM_ARRAYS',\n    'MAP_FROM_ENTRIES',\n    'MAP_KEYS',\n    'MAP_VALUES',\n    'STR_TO_MAP',\n    // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#date-and-timestamp-functions\n    'ADD_MONTHS',\n    'CURRENT_DATE',\n    'CURRENT_DATE',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_TIMEZONE',\n    'DATE_ADD',\n    'DATE_FORMAT',\n    'DATE_FROM_UNIX_DATE',\n    'DATE_PART',\n    'DATE_SUB',\n    'DATE_TRUNC',\n    'DATEDIFF',\n    'DAY',\n    'DAYOFMONTH',\n    'DAYOFWEEK',\n    'DAYOFYEAR',\n    'EXTRACT',\n    'FROM_UNIXTIME',\n    'FROM_UTC_TIMESTAMP',\n    'HOUR',\n    'LAST_DAY',\n    'MAKE_DATE',\n    'MAKE_DT_INTERVAL',\n    'MAKE_INTERVAL',\n    'MAKE_TIMESTAMP',\n    'MAKE_YM_INTERVAL',\n    'MINUTE',\n    'MONTH',\n    'MONTHS_BETWEEN',\n    'NEXT_DAY',\n    'NOW',\n    'QUARTER',\n    'SECOND',\n    'SESSION_WINDOW',\n    'TIMESTAMP_MICROS',\n    'TIMESTAMP_MILLIS',\n    'TIMESTAMP_SECONDS',\n    'TO_DATE',\n    'TO_TIMESTAMP',\n    'TO_UNIX_TIMESTAMP',\n    'TO_UTC_TIMESTAMP',\n    'TRUNC',\n    'UNIX_DATE',\n    'UNIX_MICROS',\n    'UNIX_MILLIS',\n    'UNIX_SECONDS',\n    'UNIX_TIMESTAMP',\n    'WEEKDAY',\n    'WEEKOFYEAR',\n    'WINDOW',\n    'YEAR',\n    // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#json-functions\n    'FROM_JSON',\n    'GET_JSON_OBJECT',\n    'JSON_ARRAY_LENGTH',\n    'JSON_OBJECT_KEYS',\n    'JSON_TUPLE',\n    'SCHEMA_OF_JSON',\n    'TO_JSON',\n    // http://spark.apache.org/docs/latest/api/sql/index.html\n    'ABS',\n    'ACOS',\n    'ACOSH',\n    'AGGREGATE',\n    'ARRAY_SORT',\n    'ASCII',\n    'ASIN',\n    'ASINH',\n    'ASSERT_TRUE',\n    'ATAN',\n    'ATAN2',\n    'ATANH',\n    'BASE64',\n    'BIN',\n    'BIT_COUNT',\n    'BIT_GET',\n    'BIT_LENGTH',\n    'BROUND',\n    'BTRIM',\n    'CARDINALITY',\n    'CBRT',\n    'CEIL',\n    'CEILING',\n    'CHAR_LENGTH',\n    'CHARACTER_LENGTH',\n    'CHR',\n    'CONCAT',\n    'CONCAT_WS',\n    'CONV',\n    'COS',\n    'COSH',\n    'COT',\n    'CRC32',\n    'CURRENT_CATALOG',\n    'CURRENT_DATABASE',\n    'CURRENT_USER',\n    'DEGREES',\n    // 'E',\n    'ELT',\n    'EXP',\n    'EXPM1',\n    'FACTORIAL',\n    'FIND_IN_SET',\n    'FLOOR',\n    'FORALL',\n    'FORMAT_NUMBER',\n    'FORMAT_STRING',\n    'FROM_CSV',\n    'GETBIT',\n    'HASH',\n    'HEX',\n    'HYPOT',\n    'INITCAP',\n    'INLINE',\n    'INLINE_OUTER',\n    'INPUT_FILE_BLOCK_LENGTH',\n    'INPUT_FILE_BLOCK_START',\n    'INPUT_FILE_NAME',\n    'INSTR',\n    'ISNAN',\n    'ISNOTNULL',\n    'ISNULL',\n    'JAVA_METHOD',\n    'LCASE',\n    'LEFT',\n    'LENGTH',\n    'LEVENSHTEIN',\n    'LN',\n    'LOCATE',\n    'LOG',\n    'LOG10',\n    'LOG1P',\n    'LOG2',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'MAP_FILTER',\n    'MAP_ZIP_WITH',\n    'MD5',\n    'MOD',\n    'MONOTONICALLY_INCREASING_ID',\n    'NAMED_STRUCT',\n    'NANVL',\n    'NEGATIVE',\n    'NVL',\n    'NVL2',\n    'OCTET_LENGTH',\n    'OVERLAY',\n    'PARSE_URL',\n    'PI',\n    'PMOD',\n    'POSEXPLODE',\n    'POSEXPLODE_OUTER',\n    'POSITION',\n    'POSITIVE',\n    'POW',\n    'POWER',\n    'PRINTF',\n    'RADIANS',\n    'RAISE_ERROR',\n    'RAND',\n    'RANDN',\n    'RANDOM',\n    'REFLECT',\n    'REGEXP_EXTRACT',\n    'REGEXP_EXTRACT_ALL',\n    'REGEXP_LIKE',\n    'REGEXP_REPLACE',\n    'REPEAT',\n    'REPLACE',\n    'REVERSE',\n    'RIGHT',\n    'RINT',\n    'ROUND',\n    'RPAD',\n    'RTRIM',\n    'SCHEMA_OF_CSV',\n    'SENTENCES',\n    'SHA',\n    'SHA1',\n    'SHA2',\n    'SHIFTLEFT',\n    'SHIFTRIGHT',\n    'SHIFTRIGHTUNSIGNED',\n    'SIGN',\n    'SIGNUM',\n    'SIN',\n    'SINH',\n    'SOUNDEX',\n    'SPACE',\n    'SPARK_PARTITION_ID',\n    'SPLIT',\n    'SQRT',\n    'STACK',\n    'SUBSTR',\n    'SUBSTRING',\n    'SUBSTRING_INDEX',\n    'TAN',\n    'TANH',\n    'TO_CSV',\n    'TRANSFORM_KEYS',\n    'TRANSFORM_VALUES',\n    'TRANSLATE',\n    'TRIM',\n    'TRY_ADD',\n    'TRY_DIVIDE',\n    'TYPEOF',\n    'UCASE',\n    'UNBASE64',\n    'UNHEX',\n    'UPPER',\n    'UUID',\n    'VERSION',\n    'WIDTH_BUCKET',\n    'XPATH',\n    'XPATH_BOOLEAN',\n    'XPATH_DOUBLE',\n    'XPATH_FLOAT',\n    'XPATH_INT',\n    'XPATH_LONG',\n    'XPATH_NUMBER',\n    'XPATH_SHORT',\n    'XPATH_STRING',\n    'XXHASH64',\n    'ZIP_WITH',\n    // cast\n    'CAST',\n    // Shorthand functions to use in place of CASE expression\n    'COALESCE',\n    'NULLIF',\n];\n//# sourceMappingURL=spark.functions.js.map","export const functions = [\n    // https://www.sqlite.org/lang_corefunc.html\n    'ABS',\n    'CHANGES',\n    'CHAR',\n    'COALESCE',\n    'FORMAT',\n    'GLOB',\n    'HEX',\n    'IFNULL',\n    'IIF',\n    'INSTR',\n    'LAST_INSERT_ROWID',\n    'LENGTH',\n    'LIKE',\n    'LIKELIHOOD',\n    'LIKELY',\n    'LOAD_EXTENSION',\n    'LOWER',\n    'LTRIM',\n    'NULLIF',\n    'PRINTF',\n    'QUOTE',\n    'RANDOM',\n    'RANDOMBLOB',\n    'REPLACE',\n    'ROUND',\n    'RTRIM',\n    'SIGN',\n    'SOUNDEX',\n    'SQLITE_COMPILEOPTION_GET',\n    'SQLITE_COMPILEOPTION_USED',\n    'SQLITE_OFFSET',\n    'SQLITE_SOURCE_ID',\n    'SQLITE_VERSION',\n    'SUBSTR',\n    'SUBSTRING',\n    'TOTAL_CHANGES',\n    'TRIM',\n    'TYPEOF',\n    'UNICODE',\n    'UNLIKELY',\n    'UPPER',\n    'ZEROBLOB',\n    // https://www.sqlite.org/lang_aggfunc.html\n    'AVG',\n    'COUNT',\n    'GROUP_CONCAT',\n    'MAX',\n    'MIN',\n    'SUM',\n    'TOTAL',\n    // https://www.sqlite.org/lang_datefunc.html\n    'DATE',\n    'TIME',\n    'DATETIME',\n    'JULIANDAY',\n    'UNIXEPOCH',\n    'STRFTIME',\n    // https://www.sqlite.org/windowfunctions.html#biwinfunc\n    'row_number',\n    'rank',\n    'dense_rank',\n    'percent_rank',\n    'cume_dist',\n    'ntile',\n    'lag',\n    'lead',\n    'first_value',\n    'last_value',\n    'nth_value',\n    // https://www.sqlite.org/lang_mathfunc.html\n    'ACOS',\n    'ACOSH',\n    'ASIN',\n    'ASINH',\n    'ATAN',\n    'ATAN2',\n    'ATANH',\n    'CEIL',\n    'CEILING',\n    'COS',\n    'COSH',\n    'DEGREES',\n    'EXP',\n    'FLOOR',\n    'LN',\n    'LOG',\n    'LOG',\n    'LOG10',\n    'LOG2',\n    'MOD',\n    'PI',\n    'POW',\n    'POWER',\n    'RADIANS',\n    'SIN',\n    'SINH',\n    'SQRT',\n    'TAN',\n    'TANH',\n    'TRUNC',\n    // https://www.sqlite.org/json1.html\n    'JSON',\n    'JSON_ARRAY',\n    'JSON_ARRAY_LENGTH',\n    'JSON_ARRAY_LENGTH',\n    'JSON_EXTRACT',\n    'JSON_INSERT',\n    'JSON_OBJECT',\n    'JSON_PATCH',\n    'JSON_REMOVE',\n    'JSON_REPLACE',\n    'JSON_SET',\n    'JSON_TYPE',\n    'JSON_TYPE',\n    'JSON_VALID',\n    'JSON_QUOTE',\n    'JSON_GROUP_ARRAY',\n    'JSON_GROUP_OBJECT',\n    'JSON_EACH',\n    'JSON_TREE',\n    // cast\n    'CAST',\n];\n//# sourceMappingURL=sqlite.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './sqlite.functions.js';\nimport { dataTypes, keywords } from './sqlite.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    // Data manipulation\n    // - insert:\n    'INSERT [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK] INTO',\n    'REPLACE INTO',\n    'VALUES',\n    // - update:\n    'SET',\n    // other:\n    'RETURNING',\n]);\nconst standardOnelineClauses = expandPhrases(['CREATE [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]']);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]',\n    // - update:\n    'UPDATE [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK]',\n    // - insert:\n    'ON CONFLICT',\n    // - delete:\n    'DELETE FROM',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE',\n    'ADD [COLUMN]',\n    'DROP [COLUMN]',\n    'RENAME [COLUMN]',\n    'RENAME TO',\n    // - set schema\n    'SET SCHEMA',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'EXCEPT', 'INTERSECT']);\n// joins - https://www.sqlite.org/syntax/join-operator.html\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL [INNER] JOIN',\n    'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN',\n]);\nconst reservedKeywordPhrases = expandPhrases([\n    'ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]',\n    '{ROWS | RANGE | GROUPS} BETWEEN',\n    'DO UPDATE',\n]);\nconst reservedDataTypePhrases = expandPhrases([]);\nexport const sqlite = {\n    name: 'sqlite',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedKeywordPhrases,\n        reservedDataTypePhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        stringTypes: [\n            \"''-qq\",\n            { quote: \"''-raw\", prefixes: ['X'], requirePrefix: true },\n            // Depending on context SQLite also supports double-quotes for strings,\n            // and single-quotes for identifiers.\n        ],\n        identTypes: [`\"\"-qq`, '``', '[]'],\n        // https://www.sqlite.org/lang_expr.html#parameters\n        paramTypes: { positional: true, numbered: ['?'], named: [':', '@', '$'] },\n        operators: ['%', '~', '&', '|', '<<', '>>', '==', '->', '->>', '||'],\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=sqlite.formatter.js.map","export const keywords = [\n    // https://www.sqlite.org/lang_keywords.html\n    // Note: The keywords listed on that URL are not all reserved keywords.\n    // We'll need to clean up this list to only include reserved keywords.\n    'ABORT',\n    'ACTION',\n    'ADD',\n    'AFTER',\n    'ALL',\n    'ALTER',\n    'AND',\n    'ARE',\n    'ALWAYS',\n    'ANALYZE',\n    'AS',\n    'ASC',\n    'ATTACH',\n    'AUTOINCREMENT',\n    'BEFORE',\n    'BEGIN',\n    'BETWEEN',\n    'BY',\n    'CASCADE',\n    'CASE',\n    'CAST',\n    'CHECK',\n    'COLLATE',\n    'COLUMN',\n    'COMMIT',\n    'CONFLICT',\n    'CONSTRAINT',\n    'CREATE',\n    'CROSS',\n    'CURRENT',\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'DATABASE',\n    'DEFAULT',\n    'DEFERRABLE',\n    'DEFERRED',\n    'DELETE',\n    'DESC',\n    'DETACH',\n    'DISTINCT',\n    'DO',\n    'DROP',\n    'EACH',\n    'ELSE',\n    'END',\n    'ESCAPE',\n    'EXCEPT',\n    'EXCLUDE',\n    'EXCLUSIVE',\n    'EXISTS',\n    'EXPLAIN',\n    'FAIL',\n    'FILTER',\n    'FIRST',\n    'FOLLOWING',\n    'FOR',\n    'FOREIGN',\n    'FROM',\n    'FULL',\n    'GENERATED',\n    'GLOB',\n    'GROUP',\n    'HAVING',\n    'IF',\n    'IGNORE',\n    'IMMEDIATE',\n    'IN',\n    'INDEX',\n    'INDEXED',\n    'INITIALLY',\n    'INNER',\n    'INSERT',\n    'INSTEAD',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'ISNULL',\n    'JOIN',\n    'KEY',\n    'LAST',\n    'LEFT',\n    'LIKE',\n    'LIMIT',\n    'MATCH',\n    'MATERIALIZED',\n    'NATURAL',\n    'NO',\n    'NOT',\n    'NOTHING',\n    'NOTNULL',\n    'NULL',\n    'NULLS',\n    'OF',\n    'OFFSET',\n    'ON',\n    'ONLY',\n    'OPEN',\n    'OR',\n    'ORDER',\n    'OTHERS',\n    'OUTER',\n    'OVER',\n    'PARTITION',\n    'PLAN',\n    'PRAGMA',\n    'PRECEDING',\n    'PRIMARY',\n    'QUERY',\n    'RAISE',\n    'RANGE',\n    'RECURSIVE',\n    'REFERENCES',\n    'REGEXP',\n    'REINDEX',\n    'RELEASE',\n    'RENAME',\n    'REPLACE',\n    'RESTRICT',\n    'RETURNING',\n    'RIGHT',\n    'ROLLBACK',\n    'ROW',\n    'ROWS',\n    'SAVEPOINT',\n    'SELECT',\n    'SET',\n    'TABLE',\n    'TEMP',\n    'TEMPORARY',\n    'THEN',\n    'TIES',\n    'TO',\n    'TRANSACTION',\n    'TRIGGER',\n    'UNBOUNDED',\n    'UNION',\n    'UNIQUE',\n    'UPDATE',\n    'USING',\n    'VACUUM',\n    'VALUES',\n    'VIEW',\n    'VIRTUAL',\n    'WHEN',\n    'WHERE',\n    'WINDOW',\n    'WITH',\n    'WITHOUT',\n];\nexport const dataTypes = [\n    // SQLite allows any word as a data type, e.g. CREATE TABLE foo (col1 madeupname(123));\n    // Here we just list some common ones as SQL Formatter\n    // is only able to detect a predefined list of data types.\n    // https://www.sqlite.org/stricttables.html\n    // https://www.sqlite.org/datatype3.html\n    'ANY',\n    'ARRAY',\n    'BLOB',\n    'CHARACTER',\n    'DECIMAL',\n    'INT',\n    'INTEGER',\n    'NATIVE CHARACTER',\n    'NCHAR',\n    'NUMERIC',\n    'NVARCHAR',\n    'REAL',\n    'TEXT',\n    'VARCHAR',\n    'VARYING CHARACTER',\n];\n//# sourceMappingURL=sqlite.keywords.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './sql.functions.js';\nimport { dataTypes, keywords } from './sql.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY [ALL | DISTINCT]',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    'FETCH {FIRST | NEXT}',\n    // Data manipulation\n    // - insert:\n    'INSERT INTO',\n    'VALUES',\n    // - update:\n    'SET',\n]);\nconst standardOnelineClauses = expandPhrases(['CREATE [GLOBAL TEMPORARY | LOCAL TEMPORARY] TABLE']);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [RECURSIVE] VIEW',\n    // - update:\n    'UPDATE',\n    'WHERE CURRENT OF',\n    // - delete:\n    'DELETE FROM',\n    // - drop table:\n    'DROP TABLE',\n    // - alter table:\n    'ALTER TABLE',\n    'ADD COLUMN',\n    'DROP [COLUMN]',\n    'RENAME COLUMN',\n    'RENAME TO',\n    'ALTER [COLUMN]',\n    '{SET | DROP} DEFAULT',\n    'ADD SCOPE',\n    'DROP SCOPE {CASCADE | RESTRICT}',\n    'RESTART WITH',\n    // - truncate:\n    'TRUNCATE TABLE',\n    // other\n    'SET SCHEMA',\n]);\nconst reservedSetOperations = expandPhrases([\n    'UNION [ALL | DISTINCT]',\n    'EXCEPT [ALL | DISTINCT]',\n    'INTERSECT [ALL | DISTINCT]',\n]);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL [INNER] JOIN',\n    'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN',\n]);\nconst reservedKeywordPhrases = expandPhrases([\n    'ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]',\n    '{ROWS | RANGE} BETWEEN',\n]);\nconst reservedDataTypePhrases = expandPhrases([]);\nexport const sql = {\n    name: 'sql',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedKeywordPhrases,\n        reservedDataTypePhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        stringTypes: [\n            { quote: \"''-qq-bs\", prefixes: ['N', 'U&'] },\n            { quote: \"''-raw\", prefixes: ['X'], requirePrefix: true },\n        ],\n        identTypes: [`\"\"-qq`, '``'],\n        paramTypes: { positional: true },\n        operators: ['||'],\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=sql.formatter.js.map","export const keywords = [\n    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#reserved-word\n    'ALL',\n    'ALLOCATE',\n    'ALTER',\n    'ANY',\n    'ARE',\n    'AS',\n    'ASC',\n    'ASENSITIVE',\n    'ASYMMETRIC',\n    'AT',\n    'ATOMIC',\n    'AUTHORIZATION',\n    'BEGIN',\n    'BETWEEN',\n    'BOTH',\n    'BY',\n    'CALL',\n    'CALLED',\n    'CASCADED',\n    'CAST',\n    'CHECK',\n    'CLOSE',\n    'COALESCE',\n    'COLLATE',\n    'COLUMN',\n    'COMMIT',\n    'CONDITION',\n    'CONNECT',\n    'CONSTRAINT',\n    'CORRESPONDING',\n    'CREATE',\n    'CROSS',\n    'CUBE',\n    'CURRENT',\n    'CURRENT_CATALOG',\n    'CURRENT_DEFAULT_TRANSFORM_GROUP',\n    'CURRENT_PATH',\n    'CURRENT_ROLE',\n    'CURRENT_SCHEMA',\n    'CURRENT_TRANSFORM_GROUP_FOR_TYPE',\n    'CURRENT_USER',\n    'CURSOR',\n    'CYCLE',\n    'DEALLOCATE',\n    'DAY',\n    'DECLARE',\n    'DEFAULT',\n    'DELETE',\n    'DEREF',\n    'DESC',\n    'DESCRIBE',\n    'DETERMINISTIC',\n    'DISCONNECT',\n    'DISTINCT',\n    'DROP',\n    'DYNAMIC',\n    'EACH',\n    'ELEMENT',\n    'END-EXEC',\n    'ESCAPE',\n    'EVERY',\n    'EXCEPT',\n    'EXEC',\n    'EXECUTE',\n    'EXISTS',\n    'EXTERNAL',\n    'FALSE',\n    'FETCH',\n    'FILTER',\n    'FOR',\n    'FOREIGN',\n    'FREE',\n    'FROM',\n    'FULL',\n    'FUNCTION',\n    'GET',\n    'GLOBAL',\n    'GRANT',\n    'GROUP',\n    'HAVING',\n    'HOLD',\n    'HOUR',\n    'IDENTITY',\n    'IN',\n    'INDICATOR',\n    'INNER',\n    'INOUT',\n    'INSENSITIVE',\n    'INSERT',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'LANGUAGE',\n    'LARGE',\n    'LATERAL',\n    'LEADING',\n    'LEFT',\n    'LIKE',\n    'LIKE_REGEX',\n    'LOCAL',\n    'MATCH',\n    'MEMBER',\n    'MERGE',\n    'METHOD',\n    'MINUTE',\n    'MODIFIES',\n    'MODULE',\n    'MONTH',\n    'NATURAL',\n    'NEW',\n    'NO',\n    'NONE',\n    'NOT',\n    'NULL',\n    'NULLIF',\n    'OF',\n    'OLD',\n    'ON',\n    'ONLY',\n    'OPEN',\n    'ORDER',\n    'OUT',\n    'OUTER',\n    'OVER',\n    'OVERLAPS',\n    'PARAMETER',\n    'PARTITION',\n    'PRECISION',\n    'PREPARE',\n    'PRIMARY',\n    'PROCEDURE',\n    'RANGE',\n    'READS',\n    'REAL',\n    'RECURSIVE',\n    'REF',\n    'REFERENCES',\n    'REFERENCING',\n    'RELEASE',\n    'RESULT',\n    'RETURN',\n    'RETURNS',\n    'REVOKE',\n    'RIGHT',\n    'ROLLBACK',\n    'ROLLUP',\n    'ROW',\n    'ROWS',\n    'SAVEPOINT',\n    'SCOPE',\n    'SCROLL',\n    'SEARCH',\n    'SECOND',\n    'SELECT',\n    'SENSITIVE',\n    'SESSION_USER',\n    'SET',\n    'SIMILAR',\n    'SOME',\n    'SPECIFIC',\n    'SQL',\n    'SQLEXCEPTION',\n    'SQLSTATE',\n    'SQLWARNING',\n    'START',\n    'STATIC',\n    'SUBMULTISET',\n    'SYMMETRIC',\n    'SYSTEM',\n    'SYSTEM_USER',\n    'TABLE',\n    'TABLESAMPLE',\n    'THEN',\n    'TIMEZONE_HOUR',\n    'TIMEZONE_MINUTE',\n    'TO',\n    'TRAILING',\n    'TRANSLATION',\n    'TREAT',\n    'TRIGGER',\n    'TRUE',\n    'UESCAPE',\n    'UNION',\n    'UNIQUE',\n    'UNKNOWN',\n    'UNNEST',\n    'UPDATE',\n    'USER',\n    'USING',\n    'VALUE',\n    'VALUES',\n    'WHENEVER',\n    'WINDOW',\n    'WITHIN',\n    'WITHOUT',\n    'YEAR',\n];\nexport const dataTypes = [\n    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_1_data_type\n    'ARRAY',\n    'BIGINT',\n    'BINARY LARGE OBJECT',\n    'BINARY VARYING',\n    'BINARY',\n    'BLOB',\n    'BOOLEAN',\n    'CHAR LARGE OBJECT',\n    'CHAR VARYING',\n    'CHAR',\n    'CHARACTER LARGE OBJECT',\n    'CHARACTER VARYING',\n    'CHARACTER',\n    'CLOB',\n    'DATE',\n    'DEC',\n    'DECIMAL',\n    'DOUBLE',\n    'FLOAT',\n    'INT',\n    'INTEGER',\n    'INTERVAL',\n    'MULTISET',\n    'NATIONAL CHAR VARYING',\n    'NATIONAL CHAR',\n    'NATIONAL CHARACTER LARGE OBJECT',\n    'NATIONAL CHARACTER VARYING',\n    'NATIONAL CHARACTER',\n    'NCHAR LARGE OBJECT',\n    'NCHAR VARYING',\n    'NCHAR',\n    'NCLOB',\n    'NUMERIC',\n    'SMALLINT',\n    'TIME',\n    'TIMESTAMP',\n    'VARBINARY',\n    'VARCHAR',\n];\n//# sourceMappingURL=sql.keywords.js.map","export const functions = [\n    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_9_set_function_specification\n    'GROUPING',\n    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_10_window_function\n    'RANK',\n    'DENSE_RANK',\n    'PERCENT_RANK',\n    'CUME_DIST',\n    'ROW_NUMBER',\n    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_27_numeric_value_function\n    'POSITION',\n    'OCCURRENCES_REGEX',\n    'POSITION_REGEX',\n    'EXTRACT',\n    'CHAR_LENGTH',\n    'CHARACTER_LENGTH',\n    'OCTET_LENGTH',\n    'CARDINALITY',\n    'ABS',\n    'MOD',\n    'LN',\n    'EXP',\n    'POWER',\n    'SQRT',\n    'FLOOR',\n    'CEIL',\n    'CEILING',\n    'WIDTH_BUCKET',\n    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_29_string_value_function\n    'SUBSTRING',\n    'SUBSTRING_REGEX',\n    'UPPER',\n    'LOWER',\n    'CONVERT',\n    'TRANSLATE',\n    'TRANSLATE_REGEX',\n    'TRIM',\n    'OVERLAY',\n    'NORMALIZE',\n    'SPECIFICTYPE',\n    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_31_datetime_value_function\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'LOCALTIME',\n    'CURRENT_TIMESTAMP',\n    'LOCALTIMESTAMP',\n    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_38_multiset_value_function\n    // SET serves multiple roles: a SET() function and a SET keyword e.g. in UPDATE table SET ...\n    // multiset\n    // 'SET', (disabled for now)\n    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_10_9_aggregate_function\n    'COUNT',\n    'AVG',\n    'MAX',\n    'MIN',\n    'SUM',\n    // 'EVERY',\n    // 'ANY',\n    // 'SOME',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'VAR_SAMP',\n    'VAR_POP',\n    'COLLECT',\n    'FUSION',\n    'INTERSECTION',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'CORR',\n    'REGR_SLOPE',\n    'REGR_INTERCEPT',\n    'REGR_COUNT',\n    'REGR_R2',\n    'REGR_AVGX',\n    'REGR_AVGY',\n    'REGR_SXX',\n    'REGR_SYY',\n    'REGR_SXY',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    // CAST is a pretty complex case, involving multiple forms:\n    // - CAST(col AS int)\n    // - CAST(...) WITH ...\n    // - CAST FROM int\n    // - CREATE CAST(mycol AS int) WITH ...\n    'CAST',\n    // Shorthand functions to use in place of CASE expression\n    'COALESCE',\n    'NULLIF',\n    // Non-standard functions that have widespread support\n    'ROUND',\n    'SIN',\n    'COS',\n    'TAN',\n    'ASIN',\n    'ACOS',\n    'ATAN',\n];\n//# sourceMappingURL=sql.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './trino.functions.js';\nimport { dataTypes, keywords } from './trino.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\n// https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L41\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY [ALL | DISTINCT]',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    'FETCH {FIRST | NEXT}',\n    // Data manipulation\n    // - insert:\n    'INSERT INTO',\n    'VALUES',\n    // - update:\n    'SET',\n    // MATCH_RECOGNIZE\n    'MATCH_RECOGNIZE',\n    'MEASURES',\n    'ONE ROW PER MATCH',\n    'ALL ROWS PER MATCH',\n    'AFTER MATCH',\n    'PATTERN',\n    'SUBSET',\n    'DEFINE',\n]);\nconst standardOnelineClauses = expandPhrases(['CREATE TABLE [IF NOT EXISTS]']);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR REPLACE] [MATERIALIZED] VIEW',\n    // - update:\n    'UPDATE',\n    // - delete:\n    'DELETE FROM',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE [IF EXISTS]',\n    'ADD COLUMN [IF NOT EXISTS]',\n    'DROP COLUMN [IF EXISTS]',\n    'RENAME COLUMN [IF EXISTS]',\n    'RENAME TO',\n    'SET AUTHORIZATION [USER | ROLE]',\n    'SET PROPERTIES',\n    'EXECUTE',\n    // - truncate:\n    'TRUNCATE TABLE',\n    // other\n    'ALTER SCHEMA',\n    'ALTER MATERIALIZED VIEW',\n    'ALTER VIEW',\n    'CREATE SCHEMA',\n    'CREATE ROLE',\n    'DROP SCHEMA',\n    'DROP MATERIALIZED VIEW',\n    'DROP VIEW',\n    'DROP ROLE',\n    // Auxiliary\n    'EXPLAIN',\n    'ANALYZE',\n    'EXPLAIN ANALYZE',\n    'EXPLAIN ANALYZE VERBOSE',\n    'USE',\n    'DESCRIBE INPUT',\n    'DESCRIBE OUTPUT',\n    'REFRESH MATERIALIZED VIEW',\n    'RESET SESSION',\n    'SET SESSION',\n    'SET PATH',\n    'SET TIME ZONE',\n    'SHOW GRANTS',\n    'SHOW CREATE TABLE',\n    'SHOW CREATE SCHEMA',\n    'SHOW CREATE VIEW',\n    'SHOW CREATE MATERIALIZED VIEW',\n    'SHOW TABLES',\n    'SHOW SCHEMAS',\n    'SHOW CATALOGS',\n    'SHOW COLUMNS',\n    'SHOW STATS FOR',\n    'SHOW ROLES',\n    'SHOW CURRENT ROLES',\n    'SHOW ROLE GRANTS',\n    'SHOW FUNCTIONS',\n    'SHOW SESSION',\n]);\n// https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L231-L235\n// https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L288-L291\nconst reservedSetOperations = expandPhrases([\n    'UNION [ALL | DISTINCT]',\n    'EXCEPT [ALL | DISTINCT]',\n    'INTERSECT [ALL | DISTINCT]',\n]);\n// https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L299-L313\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL [INNER] JOIN',\n    'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN',\n]);\nconst reservedKeywordPhrases = expandPhrases([\n    '{ROWS | RANGE | GROUPS} BETWEEN',\n    // comparison operator\n    'IS [NOT] DISTINCT FROM',\n]);\nconst reservedDataTypePhrases = expandPhrases([]);\nexport const trino = {\n    name: 'trino',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedKeywordPhrases,\n        reservedDataTypePhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        // Trino also supports {- ... -} parenthesis.\n        // The formatting of these currently works out as a result of { and -\n        // not getting a space added in-between.\n        // https://trino.io/docs/current/sql/match-recognize.html#row-pattern-syntax\n        extraParens: ['[]', '{}'],\n        // https://trino.io/docs/current/language/types.html#string\n        // https://trino.io/docs/current/language/types.html#varbinary\n        stringTypes: [\n            { quote: \"''-qq\", prefixes: ['U&'] },\n            { quote: \"''-raw\", prefixes: ['X'], requirePrefix: true },\n        ],\n        // https://trino.io/docs/current/language/reserved.html\n        identTypes: ['\"\"-qq'],\n        paramTypes: { positional: true },\n        operators: [\n            '%',\n            '->',\n            '=>',\n            ':',\n            '||',\n            // Row pattern syntax\n            '|',\n            '^',\n            '$',\n            // '?', conflicts with positional placeholders\n        ],\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=trino.formatter.js.map","export const keywords = [\n    // https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L858-L1128\n    'ABSENT',\n    'ADD',\n    'ADMIN',\n    'AFTER',\n    'ALL',\n    'ALTER',\n    'ANALYZE',\n    'AND',\n    'ANY',\n    'AS',\n    'ASC',\n    'AT',\n    'AUTHORIZATION',\n    'BERNOULLI',\n    'BETWEEN',\n    'BOTH',\n    'BY',\n    'CALL',\n    'CASCADE',\n    'CASE',\n    'CATALOGS',\n    'COLUMN',\n    'COLUMNS',\n    'COMMENT',\n    'COMMIT',\n    'COMMITTED',\n    'CONDITIONAL',\n    'CONSTRAINT',\n    'COPARTITION',\n    'CREATE',\n    'CROSS',\n    'CUBE',\n    'CURRENT',\n    'CURRENT_PATH',\n    'CURRENT_ROLE',\n    'DATA',\n    'DEALLOCATE',\n    'DEFAULT',\n    'DEFINE',\n    'DEFINER',\n    'DELETE',\n    'DENY',\n    'DESC',\n    'DESCRIBE',\n    'DESCRIPTOR',\n    'DISTINCT',\n    'DISTRIBUTED',\n    'DOUBLE',\n    'DROP',\n    'ELSE',\n    'EMPTY',\n    'ENCODING',\n    'END',\n    'ERROR',\n    'ESCAPE',\n    'EXCEPT',\n    'EXCLUDING',\n    'EXECUTE',\n    'EXISTS',\n    'EXPLAIN',\n    'FALSE',\n    'FETCH',\n    'FINAL',\n    'FIRST',\n    'FOLLOWING',\n    'FOR',\n    'FROM',\n    'FULL',\n    'FUNCTIONS',\n    'GRANT',\n    'GRANTED',\n    'GRANTS',\n    'GRAPHVIZ',\n    'GROUP',\n    'GROUPING',\n    'GROUPS',\n    'HAVING',\n    'IGNORE',\n    'IN',\n    'INCLUDING',\n    'INITIAL',\n    'INNER',\n    'INPUT',\n    'INSERT',\n    'INTERSECT',\n    'INTERVAL',\n    'INTO',\n    'INVOKER',\n    'IO',\n    'IS',\n    'ISOLATION',\n    'JOIN',\n    'JSON',\n    'JSON_ARRAY',\n    'JSON_OBJECT',\n    'KEEP',\n    'KEY',\n    'KEYS',\n    'LAST',\n    'LATERAL',\n    'LEADING',\n    'LEFT',\n    'LEVEL',\n    'LIKE',\n    'LIMIT',\n    'LOCAL',\n    'LOGICAL',\n    'MATCH',\n    'MATCHED',\n    'MATCHES',\n    'MATCH_RECOGNIZE',\n    'MATERIALIZED',\n    'MEASURES',\n    'NATURAL',\n    'NEXT',\n    'NFC',\n    'NFD',\n    'NFKC',\n    'NFKD',\n    'NO',\n    'NONE',\n    'NOT',\n    'NULL',\n    'NULLS',\n    'OBJECT',\n    'OF',\n    'OFFSET',\n    'OMIT',\n    'ON',\n    'ONE',\n    'ONLY',\n    'OPTION',\n    'OR',\n    'ORDER',\n    'ORDINALITY',\n    'OUTER',\n    'OUTPUT',\n    'OVER',\n    'OVERFLOW',\n    'PARTITION',\n    'PARTITIONS',\n    'PASSING',\n    'PAST',\n    'PATH',\n    'PATTERN',\n    'PER',\n    'PERMUTE',\n    'PRECEDING',\n    'PRECISION',\n    'PREPARE',\n    'PRIVILEGES',\n    'PROPERTIES',\n    'PRUNE',\n    'QUOTES',\n    'RANGE',\n    'READ',\n    'RECURSIVE',\n    'REFRESH',\n    'RENAME',\n    'REPEATABLE',\n    'RESET',\n    'RESPECT',\n    'RESTRICT',\n    'RETURNING',\n    'REVOKE',\n    'RIGHT',\n    'ROLE',\n    'ROLES',\n    'ROLLBACK',\n    'ROLLUP',\n    'ROW',\n    'ROWS',\n    'RUNNING',\n    'SCALAR',\n    'SCHEMA',\n    'SCHEMAS',\n    'SECURITY',\n    'SEEK',\n    'SELECT',\n    'SERIALIZABLE',\n    'SESSION',\n    'SET',\n    'SETS',\n    'SHOW',\n    'SKIP',\n    'SOME',\n    'START',\n    'STATS',\n    'STRING',\n    'SUBSET',\n    'SYSTEM',\n    'TABLE',\n    'TABLES',\n    'TABLESAMPLE',\n    'TEXT',\n    'THEN',\n    'TIES',\n    'TIME',\n    'TIMESTAMP',\n    'TO',\n    'TRAILING',\n    'TRANSACTION',\n    'TRUE',\n    'TYPE',\n    'UESCAPE',\n    'UNBOUNDED',\n    'UNCOMMITTED',\n    'UNCONDITIONAL',\n    'UNION',\n    'UNIQUE',\n    'UNKNOWN',\n    'UNMATCHED',\n    'UNNEST',\n    'UPDATE',\n    'USE',\n    'USER',\n    'USING',\n    'UTF16',\n    'UTF32',\n    'UTF8',\n    'VALIDATE',\n    'VALUE',\n    'VALUES',\n    'VERBOSE',\n    'VIEW',\n    'WHEN',\n    'WHERE',\n    'WINDOW',\n    'WITH',\n    'WITHIN',\n    'WITHOUT',\n    'WORK',\n    'WRAPPER',\n    'WRITE',\n    'ZONE',\n];\nexport const dataTypes = [\n    // https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-main/src/main/java/io/trino/metadata/TypeRegistry.java#L131-L168\n    // or https://trino.io/docs/current/language/types.html\n    'BIGINT',\n    'INT',\n    'INTEGER',\n    'SMALLINT',\n    'TINYINT',\n    'BOOLEAN',\n    'DATE',\n    'DECIMAL',\n    'REAL',\n    'DOUBLE',\n    'HYPERLOGLOG',\n    'QDIGEST',\n    'TDIGEST',\n    'P4HYPERLOGLOG',\n    'INTERVAL',\n    'TIMESTAMP',\n    'TIME',\n    'VARBINARY',\n    'VARCHAR',\n    'CHAR',\n    'ROW',\n    'ARRAY',\n    'MAP',\n    'JSON',\n    'JSON2016',\n    'IPADDRESS',\n    'GEOMETRY',\n    'UUID',\n    'SETDIGEST',\n    'JONIREGEXP',\n    'RE2JREGEXP',\n    'LIKEPATTERN',\n    'COLOR',\n    'CODEPOINTS',\n    'FUNCTION',\n    'JSONPATH',\n];\n//# sourceMappingURL=trino.keywords.js.map","export const functions = [\n    // https://github.com/trinodb/trino/tree/432d2897bdef99388c1a47188743a061c4ac1f34/docs/src/main/sphinx/functions\n    // rg '^\\.\\. function::' ./docs/src/main/sphinx/functions | cut -d' ' -f 3 | cut -d '(' -f 1 | sort | uniq\n    // rg '\\* ' ./docs/src/main/sphinx/functions/list-by-topic.rst | grep    '\\* :func:' | cut -d'`' -f 2\n    // rg '\\* ' ./docs/src/main/sphinx/functions/list-by-topic.rst | grep -v '\\* :func:'\n    // grep -e '^- ' ./docs/src/main/sphinx/functions/list.rst | grep  -e '^- :func:' | cut -d'`' -f2\n    // grep -e '^- ' ./docs/src/main/sphinx/functions/list.rst | grep -ve '^- :func:'\n    'ABS',\n    'ACOS',\n    'ALL_MATCH',\n    'ANY_MATCH',\n    'APPROX_DISTINCT',\n    'APPROX_MOST_FREQUENT',\n    'APPROX_PERCENTILE',\n    'APPROX_SET',\n    'ARBITRARY',\n    'ARRAYS_OVERLAP',\n    'ARRAY_AGG',\n    'ARRAY_DISTINCT',\n    'ARRAY_EXCEPT',\n    'ARRAY_INTERSECT',\n    'ARRAY_JOIN',\n    'ARRAY_MAX',\n    'ARRAY_MIN',\n    'ARRAY_POSITION',\n    'ARRAY_REMOVE',\n    'ARRAY_SORT',\n    'ARRAY_UNION',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'AT_TIMEZONE',\n    'AVG',\n    'BAR',\n    'BETA_CDF',\n    'BING_TILE',\n    'BING_TILES_AROUND',\n    'BING_TILE_AT',\n    'BING_TILE_COORDINATES',\n    'BING_TILE_POLYGON',\n    'BING_TILE_QUADKEY',\n    'BING_TILE_ZOOM_LEVEL',\n    'BITWISE_AND',\n    'BITWISE_AND_AGG',\n    'BITWISE_LEFT_SHIFT',\n    'BITWISE_NOT',\n    'BITWISE_OR',\n    'BITWISE_OR_AGG',\n    'BITWISE_RIGHT_SHIFT',\n    'BITWISE_RIGHT_SHIFT_ARITHMETIC',\n    'BITWISE_XOR',\n    'BIT_COUNT',\n    'BOOL_AND',\n    'BOOL_OR',\n    'CARDINALITY',\n    'CAST',\n    'CBRT',\n    'CEIL',\n    'CEILING',\n    'CHAR2HEXINT',\n    'CHECKSUM',\n    'CHR',\n    'CLASSIFY',\n    'COALESCE',\n    'CODEPOINT',\n    'COLOR',\n    'COMBINATIONS',\n    'CONCAT',\n    'CONCAT_WS',\n    'CONTAINS',\n    'CONTAINS_SEQUENCE',\n    'CONVEX_HULL_AGG',\n    'CORR',\n    'COS',\n    'COSH',\n    'COSINE_SIMILARITY',\n    'COUNT',\n    'COUNT_IF',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'CRC32',\n    'CUME_DIST',\n    'CURRENT_CATALOG',\n    'CURRENT_DATE',\n    'CURRENT_GROUPS',\n    'CURRENT_SCHEMA',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_TIMEZONE',\n    'CURRENT_USER',\n    'DATE',\n    'DATE_ADD',\n    'DATE_DIFF',\n    'DATE_FORMAT',\n    'DATE_PARSE',\n    'DATE_TRUNC',\n    'DAY',\n    'DAY_OF_MONTH',\n    'DAY_OF_WEEK',\n    'DAY_OF_YEAR',\n    'DEGREES',\n    'DENSE_RANK',\n    'DOW',\n    'DOY',\n    'E',\n    'ELEMENT_AT',\n    'EMPTY_APPROX_SET',\n    'EVALUATE_CLASSIFIER_PREDICTIONS',\n    'EVERY',\n    'EXP',\n    'EXTRACT',\n    'FEATURES',\n    'FILTER',\n    'FIRST_VALUE',\n    'FLATTEN',\n    'FLOOR',\n    'FORMAT',\n    'FORMAT_DATETIME',\n    'FORMAT_NUMBER',\n    'FROM_BASE',\n    'FROM_BASE32',\n    'FROM_BASE64',\n    'FROM_BASE64URL',\n    'FROM_BIG_ENDIAN_32',\n    'FROM_BIG_ENDIAN_64',\n    'FROM_ENCODED_POLYLINE',\n    'FROM_GEOJSON_GEOMETRY',\n    'FROM_HEX',\n    'FROM_IEEE754_32',\n    'FROM_IEEE754_64',\n    'FROM_ISO8601_DATE',\n    'FROM_ISO8601_TIMESTAMP',\n    'FROM_ISO8601_TIMESTAMP_NANOS',\n    'FROM_UNIXTIME',\n    'FROM_UNIXTIME_NANOS',\n    'FROM_UTF8',\n    'GEOMETRIC_MEAN',\n    'GEOMETRY_FROM_HADOOP_SHAPE',\n    'GEOMETRY_INVALID_REASON',\n    'GEOMETRY_NEAREST_POINTS',\n    'GEOMETRY_TO_BING_TILES',\n    'GEOMETRY_UNION',\n    'GEOMETRY_UNION_AGG',\n    'GREATEST',\n    'GREAT_CIRCLE_DISTANCE',\n    'HAMMING_DISTANCE',\n    'HASH_COUNTS',\n    'HISTOGRAM',\n    'HMAC_MD5',\n    'HMAC_SHA1',\n    'HMAC_SHA256',\n    'HMAC_SHA512',\n    'HOUR',\n    'HUMAN_READABLE_SECONDS',\n    'IF',\n    'INDEX',\n    'INFINITY',\n    'INTERSECTION_CARDINALITY',\n    'INVERSE_BETA_CDF',\n    'INVERSE_NORMAL_CDF',\n    'IS_FINITE',\n    'IS_INFINITE',\n    'IS_JSON_SCALAR',\n    'IS_NAN',\n    'JACCARD_INDEX',\n    'JSON_ARRAY_CONTAINS',\n    'JSON_ARRAY_GET',\n    'JSON_ARRAY_LENGTH',\n    'JSON_EXISTS',\n    'JSON_EXTRACT',\n    'JSON_EXTRACT_SCALAR',\n    'JSON_FORMAT',\n    'JSON_PARSE',\n    'JSON_QUERY',\n    'JSON_SIZE',\n    'JSON_VALUE',\n    'KURTOSIS',\n    'LAG',\n    'LAST_DAY_OF_MONTH',\n    'LAST_VALUE',\n    'LEAD',\n    'LEARN_CLASSIFIER',\n    'LEARN_LIBSVM_CLASSIFIER',\n    'LEARN_LIBSVM_REGRESSOR',\n    'LEARN_REGRESSOR',\n    'LEAST',\n    'LENGTH',\n    'LEVENSHTEIN_DISTANCE',\n    'LINE_INTERPOLATE_POINT',\n    'LINE_INTERPOLATE_POINTS',\n    'LINE_LOCATE_POINT',\n    'LISTAGG',\n    'LN',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOG',\n    'LOG10',\n    'LOG2',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'LUHN_CHECK',\n    'MAKE_SET_DIGEST',\n    'MAP',\n    'MAP_AGG',\n    'MAP_CONCAT',\n    'MAP_ENTRIES',\n    'MAP_FILTER',\n    'MAP_FROM_ENTRIES',\n    'MAP_KEYS',\n    'MAP_UNION',\n    'MAP_VALUES',\n    'MAP_ZIP_WITH',\n    'MAX',\n    'MAX_BY',\n    'MD5',\n    'MERGE',\n    'MERGE_SET_DIGEST',\n    'MILLISECOND',\n    'MIN',\n    'MINUTE',\n    'MIN_BY',\n    'MOD',\n    'MONTH',\n    'MULTIMAP_AGG',\n    'MULTIMAP_FROM_ENTRIES',\n    'MURMUR3',\n    'NAN',\n    'NGRAMS',\n    'NONE_MATCH',\n    'NORMALIZE',\n    'NORMAL_CDF',\n    'NOW',\n    'NTH_VALUE',\n    'NTILE',\n    'NULLIF',\n    'NUMERIC_HISTOGRAM',\n    'OBJECTID',\n    'OBJECTID_TIMESTAMP',\n    'PARSE_DATA_SIZE',\n    'PARSE_DATETIME',\n    'PARSE_DURATION',\n    'PERCENT_RANK',\n    'PI',\n    'POSITION',\n    'POW',\n    'POWER',\n    'QDIGEST_AGG',\n    'QUARTER',\n    'RADIANS',\n    'RAND',\n    'RANDOM',\n    'RANK',\n    'REDUCE',\n    'REDUCE_AGG',\n    'REGEXP_COUNT',\n    'REGEXP_EXTRACT',\n    'REGEXP_EXTRACT_ALL',\n    'REGEXP_LIKE',\n    'REGEXP_POSITION',\n    'REGEXP_REPLACE',\n    'REGEXP_SPLIT',\n    'REGRESS',\n    'REGR_INTERCEPT',\n    'REGR_SLOPE',\n    'RENDER',\n    'REPEAT',\n    'REPLACE',\n    'REVERSE',\n    'RGB',\n    'ROUND',\n    'ROW_NUMBER',\n    'RPAD',\n    'RTRIM',\n    'SECOND',\n    'SEQUENCE',\n    'SHA1',\n    'SHA256',\n    'SHA512',\n    'SHUFFLE',\n    'SIGN',\n    'SIMPLIFY_GEOMETRY',\n    'SIN',\n    'SKEWNESS',\n    'SLICE',\n    'SOUNDEX',\n    'SPATIAL_PARTITIONING',\n    'SPATIAL_PARTITIONS',\n    'SPLIT',\n    'SPLIT_PART',\n    'SPLIT_TO_MAP',\n    'SPLIT_TO_MULTIMAP',\n    'SPOOKY_HASH_V2_32',\n    'SPOOKY_HASH_V2_64',\n    'SQRT',\n    'STARTS_WITH',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STRPOS',\n    'ST_AREA',\n    'ST_ASBINARY',\n    'ST_ASTEXT',\n    'ST_BOUNDARY',\n    'ST_BUFFER',\n    'ST_CENTROID',\n    'ST_CONTAINS',\n    'ST_CONVEXHULL',\n    'ST_COORDDIM',\n    'ST_CROSSES',\n    'ST_DIFFERENCE',\n    'ST_DIMENSION',\n    'ST_DISJOINT',\n    'ST_DISTANCE',\n    'ST_ENDPOINT',\n    'ST_ENVELOPE',\n    'ST_ENVELOPEASPTS',\n    'ST_EQUALS',\n    'ST_EXTERIORRING',\n    'ST_GEOMETRIES',\n    'ST_GEOMETRYFROMTEXT',\n    'ST_GEOMETRYN',\n    'ST_GEOMETRYTYPE',\n    'ST_GEOMFROMBINARY',\n    'ST_INTERIORRINGN',\n    'ST_INTERIORRINGS',\n    'ST_INTERSECTION',\n    'ST_INTERSECTS',\n    'ST_ISCLOSED',\n    'ST_ISEMPTY',\n    'ST_ISRING',\n    'ST_ISSIMPLE',\n    'ST_ISVALID',\n    'ST_LENGTH',\n    'ST_LINEFROMTEXT',\n    'ST_LINESTRING',\n    'ST_MULTIPOINT',\n    'ST_NUMGEOMETRIES',\n    'ST_NUMINTERIORRING',\n    'ST_NUMPOINTS',\n    'ST_OVERLAPS',\n    'ST_POINT',\n    'ST_POINTN',\n    'ST_POINTS',\n    'ST_POLYGON',\n    'ST_RELATE',\n    'ST_STARTPOINT',\n    'ST_SYMDIFFERENCE',\n    'ST_TOUCHES',\n    'ST_UNION',\n    'ST_WITHIN',\n    'ST_X',\n    'ST_XMAX',\n    'ST_XMIN',\n    'ST_Y',\n    'ST_YMAX',\n    'ST_YMIN',\n    'SUBSTR',\n    'SUBSTRING',\n    'SUM',\n    'TAN',\n    'TANH',\n    'TDIGEST_AGG',\n    'TIMESTAMP_OBJECTID',\n    'TIMEZONE_HOUR',\n    'TIMEZONE_MINUTE',\n    'TO_BASE',\n    'TO_BASE32',\n    'TO_BASE64',\n    'TO_BASE64URL',\n    'TO_BIG_ENDIAN_32',\n    'TO_BIG_ENDIAN_64',\n    'TO_CHAR',\n    'TO_DATE',\n    'TO_ENCODED_POLYLINE',\n    'TO_GEOJSON_GEOMETRY',\n    'TO_GEOMETRY',\n    'TO_HEX',\n    'TO_IEEE754_32',\n    'TO_IEEE754_64',\n    'TO_ISO8601',\n    'TO_MILLISECONDS',\n    'TO_SPHERICAL_GEOGRAPHY',\n    'TO_TIMESTAMP',\n    'TO_UNIXTIME',\n    'TO_UTF8',\n    'TRANSFORM',\n    'TRANSFORM_KEYS',\n    'TRANSFORM_VALUES',\n    'TRANSLATE',\n    'TRIM',\n    'TRIM_ARRAY',\n    'TRUNCATE',\n    'TRY',\n    'TRY_CAST',\n    'TYPEOF',\n    'UPPER',\n    'URL_DECODE',\n    'URL_ENCODE',\n    'URL_EXTRACT_FRAGMENT',\n    'URL_EXTRACT_HOST',\n    'URL_EXTRACT_PARAMETER',\n    'URL_EXTRACT_PATH',\n    'URL_EXTRACT_PORT',\n    'URL_EXTRACT_PROTOCOL',\n    'URL_EXTRACT_QUERY',\n    'UUID',\n    'VALUES_AT_QUANTILES',\n    'VALUE_AT_QUANTILE',\n    'VARIANCE',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VERSION',\n    'WEEK',\n    'WEEK_OF_YEAR',\n    'WIDTH_BUCKET',\n    'WILSON_INTERVAL_LOWER',\n    'WILSON_INTERVAL_UPPER',\n    'WITH_TIMEZONE',\n    'WORD_STEM',\n    'XXHASH64',\n    'YEAR',\n    'YEAR_OF_WEEK',\n    'YOW',\n    'ZIP',\n    'ZIP_WITH',\n    // https://trino.io/docs/current/sql/match-recognize.html#row-pattern-recognition-expressions\n    'CLASSIFIER',\n    'FIRST',\n    'LAST',\n    'MATCH_NUMBER',\n    'NEXT',\n    'PERMUTE',\n    'PREV',\n];\n//# sourceMappingURL=trino.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './transactsql.functions.js';\nimport { dataTypes, keywords } from './transactsql.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH',\n    'INTO',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'OFFSET',\n    'FETCH {FIRST | NEXT}',\n    'FOR {BROWSE | XML | JSON}',\n    'OPTION',\n    // Data manipulation\n    // - insert:\n    'INSERT [INTO]',\n    'VALUES',\n    // - update:\n    'SET',\n    // - merge:\n    'MERGE [INTO]',\n    'WHEN [NOT] MATCHED [BY TARGET | BY SOURCE] [THEN]',\n    'UPDATE SET',\n]);\nconst standardOnelineClauses = expandPhrases(['CREATE TABLE']);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR ALTER] [MATERIALIZED] VIEW',\n    // - update:\n    'UPDATE',\n    'WHERE CURRENT OF',\n    // - delete:\n    'DELETE [FROM]',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE',\n    'ADD',\n    'DROP COLUMN [IF EXISTS]',\n    'ALTER COLUMN',\n    // - truncate:\n    'TRUNCATE TABLE',\n    // indexes\n    'CREATE [UNIQUE] [CLUSTERED] INDEX',\n    // databases\n    'CREATE DATABASE',\n    'ALTER DATABASE',\n    'DROP DATABASE [IF EXISTS]',\n    // functions/procedures\n    'CREATE [OR ALTER] [PARTITION] {FUNCTION | PROCEDURE | PROC}',\n    'ALTER [PARTITION] {FUNCTION | PROCEDURE | PROC}',\n    'DROP [PARTITION] {FUNCTION | PROCEDURE | PROC} [IF EXISTS]',\n    // other statements\n    'GO',\n    'USE',\n    // https://docs.microsoft.com/en-us/sql/t-sql/statements/statements?view=sql-server-ver15\n    'ADD SENSITIVITY CLASSIFICATION',\n    'ADD SIGNATURE',\n    'AGGREGATE',\n    'ANSI_DEFAULTS',\n    'ANSI_NULLS',\n    'ANSI_NULL_DFLT_OFF',\n    'ANSI_NULL_DFLT_ON',\n    'ANSI_PADDING',\n    'ANSI_WARNINGS',\n    'APPLICATION ROLE',\n    'ARITHABORT',\n    'ARITHIGNORE',\n    'ASSEMBLY',\n    'ASYMMETRIC KEY',\n    'AUTHORIZATION',\n    'AVAILABILITY GROUP',\n    'BACKUP',\n    'BACKUP CERTIFICATE',\n    'BACKUP MASTER KEY',\n    'BACKUP SERVICE MASTER KEY',\n    'BEGIN CONVERSATION TIMER',\n    'BEGIN DIALOG CONVERSATION',\n    'BROKER PRIORITY',\n    'BULK INSERT',\n    'CERTIFICATE',\n    'CLOSE MASTER KEY',\n    'CLOSE SYMMETRIC KEY',\n    'COLUMN ENCRYPTION KEY',\n    'COLUMN MASTER KEY',\n    'COLUMNSTORE INDEX',\n    'CONCAT_NULL_YIELDS_NULL',\n    'CONTEXT_INFO',\n    'CONTRACT',\n    'CREDENTIAL',\n    'CRYPTOGRAPHIC PROVIDER',\n    'CURSOR_CLOSE_ON_COMMIT',\n    'DATABASE',\n    'DATABASE AUDIT SPECIFICATION',\n    'DATABASE ENCRYPTION KEY',\n    'DATABASE HADR',\n    'DATABASE SCOPED CONFIGURATION',\n    'DATABASE SCOPED CREDENTIAL',\n    'DATABASE SET',\n    'DATEFIRST',\n    'DATEFORMAT',\n    'DEADLOCK_PRIORITY',\n    'DENY',\n    'DENY XML',\n    'DISABLE TRIGGER',\n    'ENABLE TRIGGER',\n    'END CONVERSATION',\n    'ENDPOINT',\n    'EVENT NOTIFICATION',\n    'EVENT SESSION',\n    'EXECUTE AS',\n    'EXTERNAL DATA SOURCE',\n    'EXTERNAL FILE FORMAT',\n    'EXTERNAL LANGUAGE',\n    'EXTERNAL LIBRARY',\n    'EXTERNAL RESOURCE POOL',\n    'EXTERNAL TABLE',\n    'FIPS_FLAGGER',\n    'FMTONLY',\n    'FORCEPLAN',\n    'FULLTEXT CATALOG',\n    'FULLTEXT INDEX',\n    'FULLTEXT STOPLIST',\n    'GET CONVERSATION GROUP',\n    'GET_TRANSMISSION_STATUS',\n    'GRANT',\n    'GRANT XML',\n    'IDENTITY_INSERT',\n    'IMPLICIT_TRANSACTIONS',\n    'INDEX',\n    'LANGUAGE',\n    'LOCK_TIMEOUT',\n    'LOGIN',\n    'MASTER KEY',\n    'MESSAGE TYPE',\n    'MOVE CONVERSATION',\n    'NOCOUNT',\n    'NOEXEC',\n    'NUMERIC_ROUNDABORT',\n    'OFFSETS',\n    'OPEN MASTER KEY',\n    'OPEN SYMMETRIC KEY',\n    'PARSEONLY',\n    'PARTITION SCHEME',\n    'QUERY_GOVERNOR_COST_LIMIT',\n    'QUEUE',\n    'QUOTED_IDENTIFIER',\n    'RECEIVE',\n    'REMOTE SERVICE BINDING',\n    'REMOTE_PROC_TRANSACTIONS',\n    'RESOURCE GOVERNOR',\n    'RESOURCE POOL',\n    'RESTORE',\n    'RESTORE FILELISTONLY',\n    'RESTORE HEADERONLY',\n    'RESTORE LABELONLY',\n    'RESTORE MASTER KEY',\n    'RESTORE REWINDONLY',\n    'RESTORE SERVICE MASTER KEY',\n    'RESTORE VERIFYONLY',\n    'REVERT',\n    'REVOKE',\n    'REVOKE XML',\n    'ROLE',\n    'ROUTE',\n    'ROWCOUNT',\n    'RULE',\n    'SCHEMA',\n    'SEARCH PROPERTY LIST',\n    'SECURITY POLICY',\n    'SELECTIVE XML INDEX',\n    'SEND',\n    'SENSITIVITY CLASSIFICATION',\n    'SEQUENCE',\n    'SERVER AUDIT',\n    'SERVER AUDIT SPECIFICATION',\n    'SERVER CONFIGURATION',\n    'SERVER ROLE',\n    'SERVICE',\n    'SERVICE MASTER KEY',\n    'SETUSER',\n    'SHOWPLAN_ALL',\n    'SHOWPLAN_TEXT',\n    'SHOWPLAN_XML',\n    'SIGNATURE',\n    'SPATIAL INDEX',\n    'STATISTICS',\n    'STATISTICS IO',\n    'STATISTICS PROFILE',\n    'STATISTICS TIME',\n    'STATISTICS XML',\n    'SYMMETRIC KEY',\n    'SYNONYM',\n    'TABLE',\n    'TABLE IDENTITY',\n    'TEXTSIZE',\n    'TRANSACTION ISOLATION LEVEL',\n    'TRIGGER',\n    'TYPE',\n    'UPDATE STATISTICS',\n    'USER',\n    'WORKLOAD GROUP',\n    'XACT_ABORT',\n    'XML INDEX',\n    'XML SCHEMA COLLECTION',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'EXCEPT', 'INTERSECT']);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    // non-standard joins\n    '{CROSS | OUTER} APPLY',\n]);\nconst reservedKeywordPhrases = expandPhrases([\n    'ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]',\n    '{ROWS | RANGE} BETWEEN',\n]);\nconst reservedDataTypePhrases = expandPhrases([]);\n// https://docs.microsoft.com/en-us/sql/t-sql/language-reference?view=sql-server-ver15\nexport const transactsql = {\n    name: 'transactsql',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedKeywordPhrases,\n        reservedDataTypePhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        nestedBlockComments: true,\n        stringTypes: [{ quote: \"''-qq\", prefixes: ['N'] }, '{}'],\n        identTypes: [`\"\"-qq`, '[]'],\n        identChars: { first: '#@', rest: '#@$' },\n        paramTypes: { named: ['@'], quoted: ['@'] },\n        operators: [\n            '%',\n            '&',\n            '|',\n            '^',\n            '~',\n            '!<',\n            '!>',\n            '+=',\n            '-=',\n            '*=',\n            '/=',\n            '%=',\n            '|=',\n            '&=',\n            '^=',\n            '::',\n            ':',\n        ],\n        propertyAccessOperators: ['..'],\n        // TODO: Support for money constants\n    },\n    formatOptions: {\n        alwaysDenseOperators: ['::'],\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=transactsql.formatter.js.map","export const keywords = [\n    // https://docs.microsoft.com/en-us/sql/t-sql/language-elements/reserved-keywords-transact-sql?view=sql-server-ver15\n    // standard\n    'ADD',\n    'ALL',\n    'ALTER',\n    'AND',\n    'ANY',\n    'AS',\n    'ASC',\n    'AUTHORIZATION',\n    'BACKUP',\n    'BEGIN',\n    'BETWEEN',\n    'BREAK',\n    'BROWSE',\n    'BULK',\n    'BY',\n    'CASCADE',\n    'CHECK',\n    'CHECKPOINT',\n    'CLOSE',\n    'CLUSTERED',\n    'COALESCE',\n    'COLLATE',\n    'COLUMN',\n    'COMMIT',\n    'COMPUTE',\n    'CONSTRAINT',\n    'CONTAINS',\n    'CONTAINSTABLE',\n    'CONTINUE',\n    'CONVERT',\n    'CREATE',\n    'CROSS',\n    'CURRENT',\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'CURSOR',\n    'DATABASE',\n    'DBCC',\n    'DEALLOCATE',\n    'DECLARE',\n    'DEFAULT',\n    'DELETE',\n    'DENY',\n    'DESC',\n    'DISK',\n    'DISTINCT',\n    'DISTRIBUTED',\n    'DROP',\n    'DUMP',\n    'ERRLVL',\n    'ESCAPE',\n    'EXEC',\n    'EXECUTE',\n    'EXISTS',\n    'EXIT',\n    'EXTERNAL',\n    'FETCH',\n    'FILE',\n    'FILLFACTOR',\n    'FOR',\n    'FOREIGN',\n    'FREETEXT',\n    'FREETEXTTABLE',\n    'FROM',\n    'FULL',\n    'FUNCTION',\n    'GOTO',\n    'GRANT',\n    'GROUP',\n    'HAVING',\n    'HOLDLOCK',\n    'IDENTITY',\n    'IDENTITYCOL',\n    'IDENTITY_INSERT',\n    'IF',\n    'IN',\n    'INDEX',\n    'INNER',\n    'INSERT',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'JOIN',\n    'KEY',\n    'KILL',\n    'LEFT',\n    'LIKE',\n    'LINENO',\n    'LOAD',\n    'MERGE',\n    'NOCHECK',\n    'NONCLUSTERED',\n    'NOT',\n    'NULL',\n    'NULLIF',\n    'OF',\n    'OFF',\n    'OFFSETS',\n    'ON',\n    'OPEN',\n    'OPENDATASOURCE',\n    'OPENQUERY',\n    'OPENROWSET',\n    'OPENXML',\n    'OPTION',\n    'OR',\n    'ORDER',\n    'OUTER',\n    'OVER',\n    'PERCENT',\n    'PIVOT',\n    'PLAN',\n    'PRIMARY',\n    'PRINT',\n    'PROC',\n    'PROCEDURE',\n    'PUBLIC',\n    'RAISERROR',\n    'READ',\n    'READTEXT',\n    'RECONFIGURE',\n    'REFERENCES',\n    'REPLICATION',\n    'RESTORE',\n    'RESTRICT',\n    'RETURN',\n    'REVERT',\n    'REVOKE',\n    'RIGHT',\n    'ROLLBACK',\n    'ROWCOUNT',\n    'ROWGUIDCOL',\n    'RULE',\n    'SAVE',\n    'SCHEMA',\n    'SECURITYAUDIT',\n    'SELECT',\n    'SEMANTICKEYPHRASETABLE',\n    'SEMANTICSIMILARITYDETAILSTABLE',\n    'SEMANTICSIMILARITYTABLE',\n    'SESSION_USER',\n    'SET',\n    'SETUSER',\n    'SHUTDOWN',\n    'SOME',\n    'STATISTICS',\n    'SYSTEM_USER',\n    'TABLE',\n    'TABLESAMPLE',\n    'TEXTSIZE',\n    'THEN',\n    'TO',\n    'TOP',\n    'TRAN',\n    'TRANSACTION',\n    'TRIGGER',\n    'TRUNCATE',\n    'TRY_CONVERT',\n    'TSEQUAL',\n    'UNION',\n    'UNIQUE',\n    'UNPIVOT',\n    'UPDATE',\n    'UPDATETEXT',\n    'USE',\n    'USER',\n    'VALUES',\n    'VIEW',\n    'WAITFOR',\n    'WHERE',\n    'WHILE',\n    'WITH',\n    'WITHIN GROUP',\n    'WRITETEXT',\n    // https://learn.microsoft.com/en-us/sql/t-sql/queries/output-clause-transact-sql?view=sql-server-ver16#action\n    '$ACTION',\n];\nexport const dataTypes = [\n    // https://learn.microsoft.com/en-us/sql/t-sql/data-types/data-types-transact-sql?view=sql-server-ver15\n    'BINARY',\n    'BIT',\n    'CHAR',\n    'CHAR',\n    'CHARACTER',\n    'DATE',\n    'DATETIME2',\n    'DATETIMEOFFSET',\n    'DEC',\n    'DECIMAL',\n    'DOUBLE',\n    'FLOAT',\n    'INT',\n    'INTEGER',\n    'NATIONAL',\n    'NCHAR',\n    'NUMERIC',\n    'NVARCHAR',\n    'PRECISION',\n    'REAL',\n    'SMALLINT',\n    'TIME',\n    'TIMESTAMP',\n    'VARBINARY',\n    'VARCHAR',\n];\n//# sourceMappingURL=transactsql.keywords.js.map","export const functions = [\n    // https://docs.microsoft.com/en-us/sql/t-sql/functions/functions?view=sql-server-ver15\n    // aggregate\n    'APPROX_COUNT_DISTINCT',\n    'AVG',\n    'CHECKSUM_AGG',\n    'COUNT',\n    'COUNT_BIG',\n    'GROUPING',\n    'GROUPING_ID',\n    'MAX',\n    'MIN',\n    'STDEV',\n    'STDEVP',\n    'SUM',\n    'VAR',\n    'VARP',\n    // analytic\n    'CUME_DIST',\n    'FIRST_VALUE',\n    'LAG',\n    'LAST_VALUE',\n    'LEAD',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'PERCENT_RANK',\n    'Collation - COLLATIONPROPERTY',\n    'Collation - TERTIARY_WEIGHTS',\n    // configuration\n    '@@DBTS',\n    '@@LANGID',\n    '@@LANGUAGE',\n    '@@LOCK_TIMEOUT',\n    '@@MAX_CONNECTIONS',\n    '@@MAX_PRECISION',\n    '@@NESTLEVEL',\n    '@@OPTIONS',\n    '@@REMSERVER',\n    '@@SERVERNAME',\n    '@@SERVICENAME',\n    '@@SPID',\n    '@@TEXTSIZE',\n    '@@VERSION',\n    // conversion\n    'CAST',\n    'CONVERT',\n    'PARSE',\n    'TRY_CAST',\n    'TRY_CONVERT',\n    'TRY_PARSE',\n    // cryptographic\n    'ASYMKEY_ID',\n    'ASYMKEYPROPERTY',\n    'CERTPROPERTY',\n    'CERT_ID',\n    'CRYPT_GEN_RANDOM',\n    'DECRYPTBYASYMKEY',\n    'DECRYPTBYCERT',\n    'DECRYPTBYKEY',\n    'DECRYPTBYKEYAUTOASYMKEY',\n    'DECRYPTBYKEYAUTOCERT',\n    'DECRYPTBYPASSPHRASE',\n    'ENCRYPTBYASYMKEY',\n    'ENCRYPTBYCERT',\n    'ENCRYPTBYKEY',\n    'ENCRYPTBYPASSPHRASE',\n    'HASHBYTES',\n    'IS_OBJECTSIGNED',\n    'KEY_GUID',\n    'KEY_ID',\n    'KEY_NAME',\n    'SIGNBYASYMKEY',\n    'SIGNBYCERT',\n    'SYMKEYPROPERTY',\n    'VERIFYSIGNEDBYCERT',\n    'VERIFYSIGNEDBYASYMKEY',\n    // cursor\n    '@@CURSOR_ROWS',\n    '@@FETCH_STATUS',\n    'CURSOR_STATUS',\n    // dataType\n    'DATALENGTH',\n    'IDENT_CURRENT',\n    'IDENT_INCR',\n    'IDENT_SEED',\n    'IDENTITY',\n    'SQL_VARIANT_PROPERTY',\n    // datetime\n    '@@DATEFIRST',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_TIMEZONE',\n    'CURRENT_TIMEZONE_ID',\n    'DATEADD',\n    'DATEDIFF',\n    'DATEDIFF_BIG',\n    'DATEFROMPARTS',\n    'DATENAME',\n    'DATEPART',\n    'DATETIME2FROMPARTS',\n    'DATETIMEFROMPARTS',\n    'DATETIMEOFFSETFROMPARTS',\n    'DAY',\n    'EOMONTH',\n    'GETDATE',\n    'GETUTCDATE',\n    'ISDATE',\n    'MONTH',\n    'SMALLDATETIMEFROMPARTS',\n    'SWITCHOFFSET',\n    'SYSDATETIME',\n    'SYSDATETIMEOFFSET',\n    'SYSUTCDATETIME',\n    'TIMEFROMPARTS',\n    'TODATETIMEOFFSET',\n    'YEAR',\n    'JSON',\n    'ISJSON',\n    'JSON_VALUE',\n    'JSON_QUERY',\n    'JSON_MODIFY',\n    // mathematical\n    'ABS',\n    'ACOS',\n    'ASIN',\n    'ATAN',\n    'ATN2',\n    'CEILING',\n    'COS',\n    'COT',\n    'DEGREES',\n    'EXP',\n    'FLOOR',\n    'LOG',\n    'LOG10',\n    'PI',\n    'POWER',\n    'RADIANS',\n    'RAND',\n    'ROUND',\n    'SIGN',\n    'SIN',\n    'SQRT',\n    'SQUARE',\n    'TAN',\n    'CHOOSE',\n    'GREATEST',\n    'IIF',\n    'LEAST',\n    // metadata\n    '@@PROCID',\n    'APP_NAME',\n    'APPLOCK_MODE',\n    'APPLOCK_TEST',\n    'ASSEMBLYPROPERTY',\n    'COL_LENGTH',\n    'COL_NAME',\n    'COLUMNPROPERTY',\n    'DATABASEPROPERTYEX',\n    'DB_ID',\n    'DB_NAME',\n    'FILE_ID',\n    'FILE_IDEX',\n    'FILE_NAME',\n    'FILEGROUP_ID',\n    'FILEGROUP_NAME',\n    'FILEGROUPPROPERTY',\n    'FILEPROPERTY',\n    'FILEPROPERTYEX',\n    'FULLTEXTCATALOGPROPERTY',\n    'FULLTEXTSERVICEPROPERTY',\n    'INDEX_COL',\n    'INDEXKEY_PROPERTY',\n    'INDEXPROPERTY',\n    'NEXT VALUE FOR',\n    'OBJECT_DEFINITION',\n    'OBJECT_ID',\n    'OBJECT_NAME',\n    'OBJECT_SCHEMA_NAME',\n    'OBJECTPROPERTY',\n    'OBJECTPROPERTYEX',\n    'ORIGINAL_DB_NAME',\n    'PARSENAME',\n    'SCHEMA_ID',\n    'SCHEMA_NAME',\n    'SCOPE_IDENTITY',\n    'SERVERPROPERTY',\n    'STATS_DATE',\n    'TYPE_ID',\n    'TYPE_NAME',\n    'TYPEPROPERTY',\n    // ranking\n    'DENSE_RANK',\n    'NTILE',\n    'RANK',\n    'ROW_NUMBER',\n    'PUBLISHINGSERVERNAME',\n    // security\n    'CERTENCODED',\n    'CERTPRIVATEKEY',\n    'CURRENT_USER',\n    'DATABASE_PRINCIPAL_ID',\n    'HAS_DBACCESS',\n    'HAS_PERMS_BY_NAME',\n    'IS_MEMBER',\n    'IS_ROLEMEMBER',\n    'IS_SRVROLEMEMBER',\n    'LOGINPROPERTY',\n    'ORIGINAL_LOGIN',\n    'PERMISSIONS',\n    'PWDENCRYPT',\n    'PWDCOMPARE',\n    'SESSION_USER',\n    'SESSIONPROPERTY',\n    'SUSER_ID',\n    'SUSER_NAME',\n    'SUSER_SID',\n    'SUSER_SNAME',\n    'SYSTEM_USER',\n    'USER',\n    'USER_ID',\n    'USER_NAME',\n    // string\n    'ASCII',\n    'CHARINDEX',\n    'CONCAT',\n    'CONCAT_WS',\n    'DIFFERENCE',\n    'FORMAT',\n    'LEFT',\n    'LEN',\n    'LOWER',\n    'LTRIM',\n    'PATINDEX',\n    'QUOTENAME',\n    'REPLACE',\n    'REPLICATE',\n    'REVERSE',\n    'RIGHT',\n    'RTRIM',\n    'SOUNDEX',\n    'SPACE',\n    'STR',\n    'STRING_AGG',\n    'STRING_ESCAPE',\n    'STUFF',\n    'SUBSTRING',\n    'TRANSLATE',\n    'TRIM',\n    'UNICODE',\n    'UPPER',\n    // system\n    '$PARTITION',\n    '@@ERROR',\n    '@@IDENTITY',\n    '@@PACK_RECEIVED',\n    '@@ROWCOUNT',\n    '@@TRANCOUNT',\n    'BINARY_CHECKSUM',\n    'CHECKSUM',\n    'COMPRESS',\n    'CONNECTIONPROPERTY',\n    'CONTEXT_INFO',\n    'CURRENT_REQUEST_ID',\n    'CURRENT_TRANSACTION_ID',\n    'DECOMPRESS',\n    'ERROR_LINE',\n    'ERROR_MESSAGE',\n    'ERROR_NUMBER',\n    'ERROR_PROCEDURE',\n    'ERROR_SEVERITY',\n    'ERROR_STATE',\n    'FORMATMESSAGE',\n    'GET_FILESTREAM_TRANSACTION_CONTEXT',\n    'GETANSINULL',\n    'HOST_ID',\n    'HOST_NAME',\n    'ISNULL',\n    'ISNUMERIC',\n    'MIN_ACTIVE_ROWVERSION',\n    'NEWID',\n    'NEWSEQUENTIALID',\n    'ROWCOUNT_BIG',\n    'SESSION_CONTEXT',\n    'XACT_STATE',\n    // statistical\n    '@@CONNECTIONS',\n    '@@CPU_BUSY',\n    '@@IDLE',\n    '@@IO_BUSY',\n    '@@PACK_SENT',\n    '@@PACKET_ERRORS',\n    '@@TIMETICKS',\n    '@@TOTAL_ERRORS',\n    '@@TOTAL_READ',\n    '@@TOTAL_WRITE',\n    'TEXTPTR',\n    'TEXTVALID',\n    // trigger\n    'COLUMNS_UPDATED',\n    'EVENTDATA',\n    'TRIGGER_NESTLEVEL',\n    'UPDATE',\n    // Shorthand functions to use in place of CASE expression\n    'COALESCE',\n    'NULLIF',\n];\n//# sourceMappingURL=transactsql.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { postProcess } from '../mariadb/likeMariaDb.js';\nimport { dataTypes, keywords } from './singlestoredb.keywords.js';\nimport { functions } from './singlestoredb.functions.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT | DISTINCTROW]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    // Data manipulation\n    // - insert:\n    'INSERT [IGNORE] [INTO]',\n    'VALUES',\n    'REPLACE [INTO]',\n    'ON DUPLICATE KEY UPDATE',\n    // - update:\n    'SET',\n    // Data definition\n    'CREATE [OR REPLACE] [TEMPORARY] PROCEDURE [IF NOT EXISTS]',\n    'CREATE [OR REPLACE] [EXTERNAL] FUNCTION',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [ROWSTORE] [REFERENCE | TEMPORARY | GLOBAL TEMPORARY] TABLE [IF NOT EXISTS]',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE VIEW',\n    // - update:\n    'UPDATE',\n    // - delete:\n    'DELETE [FROM]',\n    // - drop table:\n    'DROP [TEMPORARY] TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER [ONLINE] TABLE',\n    'ADD [COLUMN]',\n    'ADD [UNIQUE] {INDEX | KEY}',\n    'DROP [COLUMN]',\n    'MODIFY [COLUMN]',\n    'CHANGE',\n    'RENAME [TO | AS]',\n    // - truncate:\n    'TRUNCATE [TABLE]',\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference.html\n    'ADD AGGREGATOR',\n    'ADD LEAF',\n    'AGGREGATOR SET AS MASTER',\n    'ALTER DATABASE',\n    'ALTER PIPELINE',\n    'ALTER RESOURCE POOL',\n    'ALTER USER',\n    'ALTER VIEW',\n    'ANALYZE TABLE',\n    'ATTACH DATABASE',\n    'ATTACH LEAF',\n    'ATTACH LEAF ALL',\n    'BACKUP DATABASE',\n    'BINLOG',\n    'BOOTSTRAP AGGREGATOR',\n    'CACHE INDEX',\n    'CALL',\n    'CHANGE',\n    'CHANGE MASTER TO',\n    'CHANGE REPLICATION FILTER',\n    'CHANGE REPLICATION SOURCE TO',\n    'CHECK BLOB CHECKSUM',\n    'CHECK TABLE',\n    'CHECKSUM TABLE',\n    'CLEAR ORPHAN DATABASES',\n    'CLONE',\n    'COMMIT',\n    'CREATE DATABASE',\n    'CREATE GROUP',\n    'CREATE INDEX',\n    'CREATE LINK',\n    'CREATE MILESTONE',\n    'CREATE PIPELINE',\n    'CREATE RESOURCE POOL',\n    'CREATE ROLE',\n    'CREATE USER',\n    'DEALLOCATE PREPARE',\n    'DESCRIBE',\n    'DETACH DATABASE',\n    'DETACH PIPELINE',\n    'DROP DATABASE',\n    'DROP FUNCTION',\n    'DROP INDEX',\n    'DROP LINK',\n    'DROP PIPELINE',\n    'DROP PROCEDURE',\n    'DROP RESOURCE POOL',\n    'DROP ROLE',\n    'DROP USER',\n    'DROP VIEW',\n    'EXECUTE',\n    'EXPLAIN',\n    'FLUSH',\n    'FORCE',\n    'GRANT',\n    'HANDLER',\n    'HELP',\n    'KILL CONNECTION',\n    'KILLALL QUERIES',\n    'LOAD DATA',\n    'LOAD INDEX INTO CACHE',\n    'LOAD XML',\n    'LOCK INSTANCE FOR BACKUP',\n    'LOCK TABLES',\n    'MASTER_POS_WAIT',\n    'OPTIMIZE TABLE',\n    'PREPARE',\n    'PURGE BINARY LOGS',\n    'REBALANCE PARTITIONS',\n    'RELEASE SAVEPOINT',\n    'REMOVE AGGREGATOR',\n    'REMOVE LEAF',\n    'REPAIR TABLE',\n    'REPLACE',\n    'REPLICATE DATABASE',\n    'RESET',\n    'RESET MASTER',\n    'RESET PERSIST',\n    'RESET REPLICA',\n    'RESET SLAVE',\n    'RESTART',\n    'RESTORE DATABASE',\n    'RESTORE REDUNDANCY',\n    'REVOKE',\n    'ROLLBACK',\n    'ROLLBACK TO SAVEPOINT',\n    'SAVEPOINT',\n    'SET CHARACTER SET',\n    'SET DEFAULT ROLE',\n    'SET NAMES',\n    'SET PASSWORD',\n    'SET RESOURCE GROUP',\n    'SET ROLE',\n    'SET TRANSACTION',\n    'SHOW',\n    'SHOW CHARACTER SET',\n    'SHOW COLLATION',\n    'SHOW COLUMNS',\n    'SHOW CREATE DATABASE',\n    'SHOW CREATE FUNCTION',\n    'SHOW CREATE PIPELINE',\n    'SHOW CREATE PROCEDURE',\n    'SHOW CREATE TABLE',\n    'SHOW CREATE USER',\n    'SHOW CREATE VIEW',\n    'SHOW DATABASES',\n    'SHOW ENGINE',\n    'SHOW ENGINES',\n    'SHOW ERRORS',\n    'SHOW FUNCTION CODE',\n    'SHOW FUNCTION STATUS',\n    'SHOW GRANTS',\n    'SHOW INDEX',\n    'SHOW MASTER STATUS',\n    'SHOW OPEN TABLES',\n    'SHOW PLUGINS',\n    'SHOW PRIVILEGES',\n    'SHOW PROCEDURE CODE',\n    'SHOW PROCEDURE STATUS',\n    'SHOW PROCESSLIST',\n    'SHOW PROFILE',\n    'SHOW PROFILES',\n    'SHOW RELAYLOG EVENTS',\n    'SHOW REPLICA STATUS',\n    'SHOW REPLICAS',\n    'SHOW SLAVE',\n    'SHOW SLAVE HOSTS',\n    'SHOW STATUS',\n    'SHOW TABLE STATUS',\n    'SHOW TABLES',\n    'SHOW VARIABLES',\n    'SHOW WARNINGS',\n    'SHUTDOWN',\n    'SNAPSHOT DATABASE',\n    'SOURCE_POS_WAIT',\n    'START GROUP_REPLICATION',\n    'START PIPELINE',\n    'START REPLICA',\n    'START SLAVE',\n    'START TRANSACTION',\n    'STOP GROUP_REPLICATION',\n    'STOP PIPELINE',\n    'STOP REPLICA',\n    'STOP REPLICATING',\n    'STOP SLAVE',\n    'TEST PIPELINE',\n    'UNLOCK INSTANCE',\n    'UNLOCK TABLES',\n    'USE',\n    'XA',\n    // flow control\n    'ITERATE',\n    'LEAVE',\n    'LOOP',\n    'REPEAT',\n    'RETURN',\n    'WHILE',\n]);\nconst reservedSetOperations = expandPhrases([\n    'UNION [ALL | DISTINCT]',\n    'EXCEPT',\n    'INTERSECT',\n    'MINUS',\n]);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL {LEFT | RIGHT} [OUTER] JOIN',\n    // non-standard joins\n    'STRAIGHT_JOIN',\n]);\nconst reservedKeywordPhrases = expandPhrases([\n    'ON DELETE',\n    'ON UPDATE',\n    'CHARACTER SET',\n    '{ROWS | RANGE} BETWEEN',\n    'IDENTIFIED BY',\n]);\nconst reservedDataTypePhrases = expandPhrases([]);\nexport const singlestoredb = {\n    name: 'singlestoredb',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedKeywordPhrases,\n        reservedDataTypePhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        // TODO: support _binary\"some string\" prefix\n        stringTypes: [\n            '\"\"-qq-bs',\n            \"''-qq-bs\",\n            { quote: \"''-raw\", prefixes: ['B', 'X'], requirePrefix: true },\n        ],\n        identTypes: ['``'],\n        identChars: { first: '$', rest: '$', allowFirstCharNumber: true },\n        variableTypes: [\n            { regex: '@@?[A-Za-z0-9_$]+' },\n            { quote: '``', prefixes: ['@'], requirePrefix: true },\n        ],\n        lineCommentTypes: ['--', '#'],\n        operators: [\n            ':=',\n            '&',\n            '|',\n            '^',\n            '~',\n            '<<',\n            '>>',\n            '<=>',\n            '&&',\n            '||',\n            '::',\n            '::$',\n            '::%',\n            ':>',\n            '!:>',\n            '*.*', // Not actually an operator\n        ],\n        postProcess,\n    },\n    formatOptions: {\n        alwaysDenseOperators: ['::', '::$', '::%'],\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=singlestoredb.formatter.js.map","export const keywords = [\n    // List of all keywords taken from:\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/restricted-keywords/list-of-restricted-keywords.html\n    // Then filtered down to reserved keywords by running\n    // > SELECT * AS <keyword>;\n    // for each keyword in that list and observing which of these produce an error.\n    'ADD',\n    'ALL',\n    'ALTER',\n    'ANALYZE',\n    'AND',\n    'AS',\n    'ASC',\n    'ASENSITIVE',\n    'BEFORE',\n    'BETWEEN',\n    '_BINARY',\n    'BOTH',\n    'BY',\n    'CALL',\n    'CASCADE',\n    'CASE',\n    'CHANGE',\n    'CHECK',\n    'COLLATE',\n    'COLUMN',\n    'CONDITION',\n    'CONSTRAINT',\n    'CONTINUE',\n    'CONVERT',\n    'CREATE',\n    'CROSS',\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'CURSOR',\n    'DATABASE',\n    'DATABASES',\n    'DAY_HOUR',\n    'DAY_MICROSECOND',\n    'DAY_MINUTE',\n    'DAY_SECOND',\n    'DECLARE',\n    'DEFAULT',\n    'DELAYED',\n    'DELETE',\n    'DESC',\n    'DESCRIBE',\n    'DETERMINISTIC',\n    'DISTINCT',\n    'DISTINCTROW',\n    'DIV',\n    'DROP',\n    'DUAL',\n    'EACH',\n    'ELSE',\n    'ELSEIF',\n    'ENCLOSED',\n    'ESCAPED',\n    'EXCEPT',\n    'EXISTS',\n    'EXIT',\n    'EXPLAIN',\n    'EXTRA_JOIN',\n    'FALSE',\n    'FETCH',\n    'FOR',\n    'FORCE',\n    'FORCE_COMPILED_MODE',\n    'FORCE_INTERPRETER_MODE',\n    'FOREIGN',\n    'FROM',\n    'FULL',\n    'FULLTEXT',\n    'GRANT',\n    'GROUP',\n    'HAVING',\n    'HEARTBEAT_NO_LOGGING',\n    'HIGH_PRIORITY',\n    'HOUR_MICROSECOND',\n    'HOUR_MINUTE',\n    'HOUR_SECOND',\n    'IF',\n    'IGNORE',\n    'IN',\n    'INDEX',\n    'INFILE',\n    'INNER',\n    'INOUT',\n    'INSENSITIVE',\n    'INSERT',\n    'IN',\n    '_INTERNAL_DYNAMIC_TYPECAST',\n    'INTERSECT',\n    'INTERVAL',\n    'INTO',\n    'ITERATE',\n    'JOIN',\n    'KEY',\n    'KEYS',\n    'KILL',\n    'LEADING',\n    'LEAVE',\n    'LEFT',\n    'LIKE',\n    'LIMIT',\n    'LINES',\n    'LOAD',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOCK',\n    'LOOP',\n    'LOW_PRIORITY',\n    'MATCH',\n    'MAXVALUE',\n    'MINUS',\n    'MINUTE_MICROSECOND',\n    'MINUTE_SECOND',\n    'MOD',\n    'MODIFIES',\n    'NATURAL',\n    'NO_QUERY_REWRITE',\n    'NOT',\n    'NO_WRITE_TO_BINLOG',\n    'NO_QUERY_REWRITE',\n    'NULL',\n    'ON',\n    'OPTIMIZE',\n    'OPTION',\n    'OPTIONALLY',\n    'OR',\n    'ORDER',\n    'OUT',\n    'OUTER',\n    'OUTFILE',\n    'OVER',\n    'PRIMARY',\n    'PROCEDURE',\n    'PURGE',\n    'RANGE',\n    'READ',\n    'READS',\n    'REFERENCES',\n    'REGEXP',\n    'RELEASE',\n    'RENAME',\n    'REPEAT',\n    'REPLACE',\n    'REQUIRE',\n    'RESTRICT',\n    'RETURN',\n    'REVOKE',\n    'RIGHT',\n    'RIGHT_ANTI_JOIN',\n    'RIGHT_SEMI_JOIN',\n    'RIGHT_STRAIGHT_JOIN',\n    'RLIKE',\n    'SCHEMA',\n    'SCHEMAS',\n    'SECOND_MICROSECOND',\n    'SELECT',\n    'SEMI_JOIN',\n    'SENSITIVE',\n    'SEPARATOR',\n    'SET',\n    'SHOW',\n    'SIGNAL',\n    'SPATIAL',\n    'SPECIFIC',\n    'SQL',\n    'SQL_BIG_RESULT',\n    'SQL_BUFFER_RESULT',\n    'SQL_CACHE',\n    'SQL_CALC_FOUND_ROWS',\n    'SQLEXCEPTION',\n    'SQL_NO_CACHE',\n    'SQL_NO_LOGGING',\n    'SQL_SMALL_RESULT',\n    'SQLSTATE',\n    'SQLWARNING',\n    'STRAIGHT_JOIN',\n    'TABLE',\n    'TERMINATED',\n    'THEN',\n    'TO',\n    'TRAILING',\n    'TRIGGER',\n    'TRUE',\n    'UNBOUNDED',\n    'UNDO',\n    'UNION',\n    'UNIQUE',\n    'UNLOCK',\n    'UPDATE',\n    'USAGE',\n    'USE',\n    'USING',\n    'UTC_DATE',\n    'UTC_TIME',\n    'UTC_TIMESTAMP',\n    '_UTF8',\n    'VALUES',\n    'WHEN',\n    'WHERE',\n    'WHILE',\n    'WINDOW',\n    'WITH',\n    'WITHIN',\n    'WRITE',\n    'XOR',\n    'YEAR_MONTH',\n    'ZEROFILL',\n];\nexport const dataTypes = [\n    // https://docs.singlestore.com/cloud/reference/sql-reference/data-types/\n    'BIGINT',\n    'BINARY',\n    'BIT',\n    'BLOB',\n    'CHAR',\n    'CHARACTER',\n    'DATETIME',\n    'DEC',\n    'DECIMAL',\n    'DOUBLE PRECISION',\n    'DOUBLE',\n    'ENUM',\n    'FIXED',\n    'FLOAT',\n    'FLOAT4',\n    'FLOAT8',\n    'INT',\n    'INT1',\n    'INT2',\n    'INT3',\n    'INT4',\n    'INT8',\n    'INTEGER',\n    'LONG',\n    'LONGBLOB',\n    'LONGTEXT',\n    'MEDIUMBLOB',\n    'MEDIUMINT',\n    'MEDIUMTEXT',\n    'MIDDLEINT',\n    'NATIONAL CHAR',\n    'NATIONAL VARCHAR',\n    'NUMERIC',\n    'PRECISION',\n    'REAL',\n    'SMALLINT',\n    'TEXT',\n    'TIME',\n    'TIMESTAMP',\n    'TINYBLOB',\n    'TINYINT',\n    'TINYTEXT',\n    'UNSIGNED',\n    'VARBINARY',\n    'VARCHAR',\n    'VARCHARACTER',\n    'YEAR',\n];\n//# sourceMappingURL=singlestoredb.keywords.js.map","export const functions = [\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/vector-functions/vector-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/window-functions/window-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/string-functions/string-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/conditional-functions/conditional-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/numeric-functions/numeric-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/geospatial-functions/geospatial-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/json-functions/json-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/information-functions/information-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/aggregate-functions/aggregate-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/time-series-functions/time-series-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/identifier-generation-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/date-and-time-functions/date-and-time-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/distinct-count-estimation-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/full-text-search-functions/full-text-search-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/regular-expression-functions.html\n    'ABS',\n    'ACOS',\n    'ADDDATE',\n    'ADDTIME',\n    'AES_DECRYPT',\n    'AES_ENCRYPT',\n    'ANY_VALUE',\n    'APPROX_COUNT_DISTINCT',\n    'APPROX_COUNT_DISTINCT_ACCUMULATE',\n    'APPROX_COUNT_DISTINCT_COMBINE',\n    'APPROX_COUNT_DISTINCT_ESTIMATE',\n    'APPROX_GEOGRAPHY_INTERSECTS',\n    'APPROX_PERCENTILE',\n    'ASCII',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'AVG',\n    'BIN',\n    'BINARY',\n    'BIT_AND',\n    'BIT_COUNT',\n    'BIT_OR',\n    'BIT_XOR',\n    'CAST',\n    'CEIL',\n    'CEILING',\n    'CHAR',\n    'CHARACTER_LENGTH',\n    'CHAR_LENGTH',\n    'CHARSET',\n    'COALESCE',\n    'COERCIBILITY',\n    'COLLATION',\n    'COLLECT',\n    'CONCAT',\n    'CONCAT_WS',\n    'CONNECTION_ID',\n    'CONV',\n    'CONVERT',\n    'CONVERT_TZ',\n    'COS',\n    'COT',\n    'COUNT',\n    'CUME_DIST',\n    'CURDATE',\n    'CURRENT_DATE',\n    'CURRENT_ROLE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'CURTIME',\n    'DATABASE',\n    'DATE',\n    'DATE_ADD',\n    'DATEDIFF',\n    'DATE_FORMAT',\n    'DATE_SUB',\n    'DATE_TRUNC',\n    'DAY',\n    'DAYNAME',\n    'DAYOFMONTH',\n    'DAYOFWEEK',\n    'DAYOFYEAR',\n    'DECODE',\n    'DEFAULT',\n    'DEGREES',\n    'DENSE_RANK',\n    'DIV',\n    'DOT_PRODUCT',\n    'ELT',\n    'EUCLIDEAN_DISTANCE',\n    'EXP',\n    'EXTRACT',\n    'FIELD',\n    'FIRST',\n    'FIRST_VALUE',\n    'FLOOR',\n    'FORMAT',\n    'FOUND_ROWS',\n    'FROM_BASE64',\n    'FROM_DAYS',\n    'FROM_UNIXTIME',\n    'GEOGRAPHY_AREA',\n    'GEOGRAPHY_CONTAINS',\n    'GEOGRAPHY_DISTANCE',\n    'GEOGRAPHY_INTERSECTS',\n    'GEOGRAPHY_LATITUDE',\n    'GEOGRAPHY_LENGTH',\n    'GEOGRAPHY_LONGITUDE',\n    'GEOGRAPHY_POINT',\n    'GEOGRAPHY_WITHIN_DISTANCE',\n    'GEOMETRY_AREA',\n    'GEOMETRY_CONTAINS',\n    'GEOMETRY_DISTANCE',\n    'GEOMETRY_FILTER',\n    'GEOMETRY_INTERSECTS',\n    'GEOMETRY_LENGTH',\n    'GEOMETRY_POINT',\n    'GEOMETRY_WITHIN_DISTANCE',\n    'GEOMETRY_X',\n    'GEOMETRY_Y',\n    'GREATEST',\n    'GROUPING',\n    'GROUP_CONCAT',\n    'HEX',\n    'HIGHLIGHT',\n    'HOUR',\n    'ICU_VERSION',\n    'IF',\n    'IFNULL',\n    'INET_ATON',\n    'INET_NTOA',\n    'INET6_ATON',\n    'INET6_NTOA',\n    'INITCAP',\n    'INSERT',\n    'INSTR',\n    'INTERVAL',\n    'IS',\n    'IS NULL',\n    'JSON_AGG',\n    'JSON_ARRAY_CONTAINS_DOUBLE',\n    'JSON_ARRAY_CONTAINS_JSON',\n    'JSON_ARRAY_CONTAINS_STRING',\n    'JSON_ARRAY_PUSH_DOUBLE',\n    'JSON_ARRAY_PUSH_JSON',\n    'JSON_ARRAY_PUSH_STRING',\n    'JSON_DELETE_KEY',\n    'JSON_EXTRACT_DOUBLE',\n    'JSON_EXTRACT_JSON',\n    'JSON_EXTRACT_STRING',\n    'JSON_EXTRACT_BIGINT',\n    'JSON_GET_TYPE',\n    'JSON_LENGTH',\n    'JSON_SET_DOUBLE',\n    'JSON_SET_JSON',\n    'JSON_SET_STRING',\n    'JSON_SPLICE_DOUBLE',\n    'JSON_SPLICE_JSON',\n    'JSON_SPLICE_STRING',\n    'LAG',\n    'LAST_DAY',\n    'LAST_VALUE',\n    'LCASE',\n    'LEAD',\n    'LEAST',\n    'LEFT',\n    'LENGTH',\n    'LIKE',\n    'LN',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOCATE',\n    'LOG',\n    'LOG10',\n    'LOG2',\n    'LPAD',\n    'LTRIM',\n    'MATCH',\n    'MAX',\n    'MD5',\n    'MEDIAN',\n    'MICROSECOND',\n    'MIN',\n    'MINUTE',\n    'MOD',\n    'MONTH',\n    'MONTHNAME',\n    'MONTHS_BETWEEN',\n    'NOT',\n    'NOW',\n    'NTH_VALUE',\n    'NTILE',\n    'NULLIF',\n    'OCTET_LENGTH',\n    'PERCENT_RANK',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'PI',\n    'PIVOT',\n    'POSITION',\n    'POW',\n    'POWER',\n    'QUARTER',\n    'QUOTE',\n    'RADIANS',\n    'RAND',\n    'RANK',\n    'REGEXP',\n    'REPEAT',\n    'REPLACE',\n    'REVERSE',\n    'RIGHT',\n    'RLIKE',\n    'ROUND',\n    'ROW_COUNT',\n    'ROW_NUMBER',\n    'RPAD',\n    'RTRIM',\n    'SCALAR',\n    'SCHEMA',\n    'SEC_TO_TIME',\n    'SHA1',\n    'SHA2',\n    'SIGMOID',\n    'SIGN',\n    'SIN',\n    'SLEEP',\n    'SPLIT',\n    'SOUNDEX',\n    'SOUNDS LIKE',\n    'SOURCE_POS_WAIT',\n    'SPACE',\n    'SQRT',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STR_TO_DATE',\n    'SUBDATE',\n    'SUBSTR',\n    'SUBSTRING',\n    'SUBSTRING_INDEX',\n    'SUM',\n    'SYS_GUID',\n    'TAN',\n    'TIME',\n    'TIMEDIFF',\n    'TIME_BUCKET',\n    'TIME_FORMAT',\n    'TIMESTAMP',\n    'TIMESTAMPADD',\n    'TIMESTAMPDIFF',\n    'TIME_TO_SEC',\n    'TO_BASE64',\n    'TO_CHAR',\n    'TO_DAYS',\n    'TO_JSON',\n    'TO_NUMBER',\n    'TO_SECONDS',\n    'TO_TIMESTAMP',\n    'TRIM',\n    'TRUNC',\n    'TRUNCATE',\n    'UCASE',\n    'UNHEX',\n    'UNIX_TIMESTAMP',\n    'UPDATEXML',\n    'UPPER',\n    // 'USER',\n    'UTC_DATE',\n    'UTC_TIME',\n    'UTC_TIMESTAMP',\n    'UUID',\n    'VALUES',\n    'VARIANCE',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VECTOR_SUB',\n    'VERSION',\n    'WEEK',\n    'WEEKDAY',\n    'WEEKOFYEAR',\n    'YEAR',\n];\n//# sourceMappingURL=singlestoredb.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './snowflake.functions.js';\nimport { dataTypes, keywords } from './snowflake.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'PARTITION BY',\n    'ORDER BY',\n    'QUALIFY',\n    'LIMIT',\n    'OFFSET',\n    'FETCH [FIRST | NEXT]',\n    // Data manipulation\n    // - insert:\n    'INSERT [OVERWRITE] [ALL INTO | INTO | ALL | FIRST]',\n    '{THEN | ELSE} INTO',\n    'VALUES',\n    // - update:\n    'SET',\n    'CLUSTER BY',\n    '[WITH] {MASKING POLICY | TAG | ROW ACCESS POLICY}',\n    'COPY GRANTS',\n    'USING TEMPLATE',\n    'MERGE INTO',\n    'WHEN MATCHED [AND]',\n    'THEN {UPDATE SET | DELETE}',\n    'WHEN NOT MATCHED THEN INSERT',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [OR REPLACE] [VOLATILE] TABLE [IF NOT EXISTS]',\n    'CREATE [OR REPLACE] [LOCAL | GLOBAL] {TEMP|TEMPORARY} TABLE [IF NOT EXISTS]',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR REPLACE] [SECURE] [RECURSIVE] VIEW [IF NOT EXISTS]',\n    // - update:\n    'UPDATE',\n    // - delete:\n    'DELETE FROM',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE [IF EXISTS]',\n    'RENAME TO',\n    'SWAP WITH',\n    '[SUSPEND | RESUME] RECLUSTER',\n    'DROP CLUSTERING KEY',\n    'ADD [COLUMN]',\n    'RENAME COLUMN',\n    '{ALTER | MODIFY} [COLUMN]',\n    'DROP [COLUMN]',\n    '{ADD | ALTER | MODIFY | DROP} [CONSTRAINT]',\n    'RENAME CONSTRAINT',\n    '{ADD | DROP} SEARCH OPTIMIZATION',\n    '{SET | UNSET} TAG',\n    '{ADD | DROP} ROW ACCESS POLICY',\n    'DROP ALL ROW ACCESS POLICIES',\n    '{SET | DROP} DEFAULT',\n    '{SET | DROP} NOT NULL',\n    'SET DATA TYPE',\n    'UNSET COMMENT',\n    '{SET | UNSET} MASKING POLICY',\n    // - truncate:\n    'TRUNCATE [TABLE] [IF EXISTS]',\n    // other\n    // https://docs.snowflake.com/en/sql-reference/sql-all.html\n    //\n    // 1. run in console on this page: $x('//tbody/tr/*[1]//a/span/text()').map(x => x.nodeValue)\n    // 2. delete all lines that contain a sting like '(.*)', they are already covered in the list\n    // 3. delete all lines that contain a sting like '<.*>', they are already covered in the list\n    // 4. delete all lines that contain '…', they are part of a regex statement that can't be covered here\n    // 5. Manually add 'COPY INTO'\n    // 6. Remove all lines that are already in `reservedClauses`\n    //\n    // Steps 1-4 can be combined by the following script in the developer console:\n    // $x('//tbody/tr/*[1]//a/span/text()').map(x => x.nodeValue) // Step 1\n    //   filter(x => !x.match(/\\(.*\\)/) && !x.match(/…/) && !x.match(/<.*>/)) // Step 2-4\n    'ALTER ACCOUNT',\n    'ALTER API INTEGRATION',\n    'ALTER CONNECTION',\n    'ALTER DATABASE',\n    'ALTER EXTERNAL TABLE',\n    'ALTER FAILOVER GROUP',\n    'ALTER FILE FORMAT',\n    'ALTER FUNCTION',\n    'ALTER INTEGRATION',\n    'ALTER MASKING POLICY',\n    'ALTER MATERIALIZED VIEW',\n    'ALTER NETWORK POLICY',\n    'ALTER NOTIFICATION INTEGRATION',\n    'ALTER PIPE',\n    'ALTER PROCEDURE',\n    'ALTER REPLICATION GROUP',\n    'ALTER RESOURCE MONITOR',\n    'ALTER ROLE',\n    'ALTER ROW ACCESS POLICY',\n    'ALTER SCHEMA',\n    'ALTER SECURITY INTEGRATION',\n    'ALTER SEQUENCE',\n    'ALTER SESSION',\n    'ALTER SESSION POLICY',\n    'ALTER SHARE',\n    'ALTER STAGE',\n    'ALTER STORAGE INTEGRATION',\n    'ALTER STREAM',\n    'ALTER TAG',\n    'ALTER TASK',\n    'ALTER USER',\n    'ALTER VIEW',\n    'ALTER WAREHOUSE',\n    'BEGIN',\n    'CALL',\n    'COMMIT',\n    'COPY INTO',\n    'CREATE ACCOUNT',\n    'CREATE API INTEGRATION',\n    'CREATE CONNECTION',\n    'CREATE DATABASE',\n    'CREATE EXTERNAL FUNCTION',\n    'CREATE EXTERNAL TABLE',\n    'CREATE FAILOVER GROUP',\n    'CREATE FILE FORMAT',\n    'CREATE FUNCTION',\n    'CREATE INTEGRATION',\n    'CREATE MANAGED ACCOUNT',\n    'CREATE MASKING POLICY',\n    'CREATE MATERIALIZED VIEW',\n    'CREATE NETWORK POLICY',\n    'CREATE NOTIFICATION INTEGRATION',\n    'CREATE PIPE',\n    'CREATE PROCEDURE',\n    'CREATE REPLICATION GROUP',\n    'CREATE RESOURCE MONITOR',\n    'CREATE ROLE',\n    'CREATE ROW ACCESS POLICY',\n    'CREATE SCHEMA',\n    'CREATE SECURITY INTEGRATION',\n    'CREATE SEQUENCE',\n    'CREATE SESSION POLICY',\n    'CREATE SHARE',\n    'CREATE STAGE',\n    'CREATE STORAGE INTEGRATION',\n    'CREATE STREAM',\n    'CREATE TAG',\n    'CREATE TASK',\n    'CREATE USER',\n    'CREATE WAREHOUSE',\n    'DELETE',\n    'DESCRIBE DATABASE',\n    'DESCRIBE EXTERNAL TABLE',\n    'DESCRIBE FILE FORMAT',\n    'DESCRIBE FUNCTION',\n    'DESCRIBE INTEGRATION',\n    'DESCRIBE MASKING POLICY',\n    'DESCRIBE MATERIALIZED VIEW',\n    'DESCRIBE NETWORK POLICY',\n    'DESCRIBE PIPE',\n    'DESCRIBE PROCEDURE',\n    'DESCRIBE RESULT',\n    'DESCRIBE ROW ACCESS POLICY',\n    'DESCRIBE SCHEMA',\n    'DESCRIBE SEQUENCE',\n    'DESCRIBE SESSION POLICY',\n    'DESCRIBE SHARE',\n    'DESCRIBE STAGE',\n    'DESCRIBE STREAM',\n    'DESCRIBE TABLE',\n    'DESCRIBE TASK',\n    'DESCRIBE TRANSACTION',\n    'DESCRIBE USER',\n    'DESCRIBE VIEW',\n    'DESCRIBE WAREHOUSE',\n    'DROP CONNECTION',\n    'DROP DATABASE',\n    'DROP EXTERNAL TABLE',\n    'DROP FAILOVER GROUP',\n    'DROP FILE FORMAT',\n    'DROP FUNCTION',\n    'DROP INTEGRATION',\n    'DROP MANAGED ACCOUNT',\n    'DROP MASKING POLICY',\n    'DROP MATERIALIZED VIEW',\n    'DROP NETWORK POLICY',\n    'DROP PIPE',\n    'DROP PROCEDURE',\n    'DROP REPLICATION GROUP',\n    'DROP RESOURCE MONITOR',\n    'DROP ROLE',\n    'DROP ROW ACCESS POLICY',\n    'DROP SCHEMA',\n    'DROP SEQUENCE',\n    'DROP SESSION POLICY',\n    'DROP SHARE',\n    'DROP STAGE',\n    'DROP STREAM',\n    'DROP TAG',\n    'DROP TASK',\n    'DROP USER',\n    'DROP VIEW',\n    'DROP WAREHOUSE',\n    'EXECUTE IMMEDIATE',\n    'EXECUTE TASK',\n    'EXPLAIN',\n    'GET',\n    'GRANT OWNERSHIP',\n    'GRANT ROLE',\n    'INSERT',\n    'LIST',\n    'MERGE',\n    'PUT',\n    'REMOVE',\n    'REVOKE ROLE',\n    'ROLLBACK',\n    'SHOW COLUMNS',\n    'SHOW CONNECTIONS',\n    'SHOW DATABASES',\n    'SHOW DATABASES IN FAILOVER GROUP',\n    'SHOW DATABASES IN REPLICATION GROUP',\n    'SHOW DELEGATED AUTHORIZATIONS',\n    'SHOW EXTERNAL FUNCTIONS',\n    'SHOW EXTERNAL TABLES',\n    'SHOW FAILOVER GROUPS',\n    'SHOW FILE FORMATS',\n    'SHOW FUNCTIONS',\n    'SHOW GLOBAL ACCOUNTS',\n    'SHOW GRANTS',\n    'SHOW INTEGRATIONS',\n    'SHOW LOCKS',\n    'SHOW MANAGED ACCOUNTS',\n    'SHOW MASKING POLICIES',\n    'SHOW MATERIALIZED VIEWS',\n    'SHOW NETWORK POLICIES',\n    'SHOW OBJECTS',\n    'SHOW ORGANIZATION ACCOUNTS',\n    'SHOW PARAMETERS',\n    'SHOW PIPES',\n    'SHOW PRIMARY KEYS',\n    'SHOW PROCEDURES',\n    'SHOW REGIONS',\n    'SHOW REPLICATION ACCOUNTS',\n    'SHOW REPLICATION DATABASES',\n    'SHOW REPLICATION GROUPS',\n    'SHOW RESOURCE MONITORS',\n    'SHOW ROLES',\n    'SHOW ROW ACCESS POLICIES',\n    'SHOW SCHEMAS',\n    'SHOW SEQUENCES',\n    'SHOW SESSION POLICIES',\n    'SHOW SHARES',\n    'SHOW SHARES IN FAILOVER GROUP',\n    'SHOW SHARES IN REPLICATION GROUP',\n    'SHOW STAGES',\n    'SHOW STREAMS',\n    'SHOW TABLES',\n    'SHOW TAGS',\n    'SHOW TASKS',\n    'SHOW TRANSACTIONS',\n    'SHOW USER FUNCTIONS',\n    'SHOW USERS',\n    'SHOW VARIABLES',\n    'SHOW VIEWS',\n    'SHOW WAREHOUSES',\n    'TRUNCATE MATERIALIZED VIEW',\n    'UNDROP DATABASE',\n    'UNDROP SCHEMA',\n    'UNDROP TABLE',\n    'UNDROP TAG',\n    'UNSET',\n    'USE DATABASE',\n    'USE ROLE',\n    'USE SCHEMA',\n    'USE SECONDARY ROLES',\n    'USE WAREHOUSE',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'MINUS', 'EXCEPT', 'INTERSECT']);\nconst reservedJoins = expandPhrases([\n    '[INNER] JOIN',\n    '[NATURAL] {LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{CROSS | NATURAL} JOIN',\n]);\nconst reservedKeywordPhrases = expandPhrases([\n    '{ROWS | RANGE} BETWEEN',\n    'ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]',\n]);\nconst reservedDataTypePhrases = expandPhrases([]);\nexport const snowflake = {\n    name: 'snowflake',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedKeywordPhrases,\n        reservedDataTypePhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        stringTypes: ['$$', `''-qq-bs`],\n        identTypes: ['\"\"-qq'],\n        variableTypes: [\n            // for accessing columns at certain positons in the table\n            { regex: '[$][1-9]\\\\d*' },\n            // identifier style syntax\n            { regex: '[$][_a-zA-Z][_a-zA-Z0-9$]*' },\n        ],\n        extraParens: ['[]'],\n        identChars: { rest: '$' },\n        lineCommentTypes: ['--', '//'],\n        operators: [\n            // Modulo\n            '%',\n            // Type cast\n            '::',\n            // String concat\n            '||',\n            // Generators: https://docs.snowflake.com/en/sql-reference/functions/generator.html#generator\n            '=>',\n            // Assignment https://docs.snowflake.com/en/sql-reference/snowflake-scripting/let\n            ':=',\n            // Lambda: https://docs.snowflake.com/en/user-guide/querying-semistructured#lambda-expressions\n            '->',\n        ],\n        propertyAccessOperators: [':'],\n    },\n    formatOptions: {\n        alwaysDenseOperators: ['::'],\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=snowflake.formatter.js.map","export const keywords = [\n    // https://docs.snowflake.com/en/sql-reference/reserved-keywords.html\n    //\n    // run in console on this page: $x('//tbody/tr/*[1]/p/text()').map(x => x.nodeValue)\n    'ACCOUNT',\n    'ALL',\n    'ALTER',\n    'AND',\n    'ANY',\n    'AS',\n    'BETWEEN',\n    'BY',\n    'CASE',\n    'CAST',\n    'CHECK',\n    'COLUMN',\n    'CONNECT',\n    'CONNECTION',\n    'CONSTRAINT',\n    'CREATE',\n    'CROSS',\n    'CURRENT',\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'DATABASE',\n    'DELETE',\n    'DISTINCT',\n    'DROP',\n    'ELSE',\n    'EXISTS',\n    'FALSE',\n    'FOLLOWING',\n    'FOR',\n    'FROM',\n    'FULL',\n    'GRANT',\n    'GROUP',\n    'GSCLUSTER',\n    'HAVING',\n    'ILIKE',\n    'IN',\n    'INCREMENT',\n    'INNER',\n    'INSERT',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'ISSUE',\n    'JOIN',\n    'LATERAL',\n    'LEFT',\n    'LIKE',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'MINUS',\n    'NATURAL',\n    'NOT',\n    'NULL',\n    'OF',\n    'ON',\n    'OR',\n    'ORDER',\n    'ORGANIZATION',\n    'QUALIFY',\n    'REGEXP',\n    'REVOKE',\n    'RIGHT',\n    'RLIKE',\n    'ROW',\n    'ROWS',\n    'SAMPLE',\n    'SCHEMA',\n    'SELECT',\n    'SET',\n    'SOME',\n    'START',\n    'TABLE',\n    'TABLESAMPLE',\n    'THEN',\n    'TO',\n    'TRIGGER',\n    'TRUE',\n    'TRY_CAST',\n    'UNION',\n    'UNIQUE',\n    'UPDATE',\n    'USING',\n    'VALUES',\n    'VIEW',\n    'WHEN',\n    'WHENEVER',\n    'WHERE',\n    'WITH',\n    // These are definitely keywords, but haven't found a definite list in the docs\n    'COMMENT',\n];\nexport const dataTypes = [\n    'NUMBER',\n    'DECIMAL',\n    'NUMERIC',\n    'INT',\n    'INTEGER',\n    'BIGINT',\n    'SMALLINT',\n    'TINYINT',\n    'BYTEINT',\n    'FLOAT',\n    'FLOAT4',\n    'FLOAT8',\n    'DOUBLE',\n    'DOUBLE PRECISION',\n    'REAL',\n    'VARCHAR',\n    'CHAR',\n    'CHARACTER',\n    'STRING',\n    'TEXT',\n    'BINARY',\n    'VARBINARY',\n    'BOOLEAN',\n    'DATE',\n    'DATETIME',\n    'TIME',\n    'TIMESTAMP',\n    'TIMESTAMP_LTZ',\n    'TIMESTAMP_NTZ',\n    'TIMESTAMP',\n    'TIMESTAMP_TZ',\n    'VARIANT',\n    'OBJECT',\n    'ARRAY',\n    'GEOGRAPHY',\n    'GEOMETRY',\n];\n//# sourceMappingURL=snowflake.keywords.js.map","export const functions = [\n    // https://docs.snowflake.com/en/sql-reference-functions.html\n    //\n    // https://docs.snowflake.com/en/sql-reference/functions-all.html\n    // 1. run in console on this page: $x('//tbody/tr/*[1]//a/span/text()').map(x => x.nodeValue)\n    // 2. split all lines that contain ',' or '/' into multiple lines\n    // 3. remove all '— Deprecated' parts from the strings\n    // 4. delete all strings that end with '<object_type>', they are already covered in the list\n    // 5. remove all strings that contain '[', they are operators not functions\n    // 6. fix all values that contain '*'\n    // 7. delete operatos ':', '::', '||'\n    //\n    // Steps 1-5 can be combined by the following script in the developer console:\n    // $x('//tbody/tr/*[1]//a/span/text()').map(x => x.nodeValue) // Step 1\n    //   .map(x => x.split(x.includes(',') ? ',' : '/')).flat().map(x => x.trim()) // Step 2\n    //   .map(x => x.replace('— Deprecated', '')) // Step 3\n    //   .filter(x => !x.endsWith('<object_type>')) // Step 4\n    //   .filter(x => !x.includes('[')) // Step 5\n    'ABS',\n    'ACOS',\n    'ACOSH',\n    'ADD_MONTHS',\n    'ALL_USER_NAMES',\n    'ANY_VALUE',\n    'APPROX_COUNT_DISTINCT',\n    'APPROX_PERCENTILE',\n    'APPROX_PERCENTILE_ACCUMULATE',\n    'APPROX_PERCENTILE_COMBINE',\n    'APPROX_PERCENTILE_ESTIMATE',\n    'APPROX_TOP_K',\n    'APPROX_TOP_K_ACCUMULATE',\n    'APPROX_TOP_K_COMBINE',\n    'APPROX_TOP_K_ESTIMATE',\n    'APPROXIMATE_JACCARD_INDEX',\n    'APPROXIMATE_SIMILARITY',\n    'ARRAY_AGG',\n    'ARRAY_APPEND',\n    'ARRAY_CAT',\n    'ARRAY_COMPACT',\n    'ARRAY_CONSTRUCT',\n    'ARRAY_CONSTRUCT_COMPACT',\n    'ARRAY_CONTAINS',\n    'ARRAY_INSERT',\n    'ARRAY_INTERSECTION',\n    'ARRAY_POSITION',\n    'ARRAY_PREPEND',\n    'ARRAY_SIZE',\n    'ARRAY_SLICE',\n    'ARRAY_TO_STRING',\n    'ARRAY_UNION_AGG',\n    'ARRAY_UNIQUE_AGG',\n    'ARRAYS_OVERLAP',\n    'AS_ARRAY',\n    'AS_BINARY',\n    'AS_BOOLEAN',\n    'AS_CHAR',\n    'AS_VARCHAR',\n    'AS_DATE',\n    'AS_DECIMAL',\n    'AS_NUMBER',\n    'AS_DOUBLE',\n    'AS_REAL',\n    'AS_INTEGER',\n    'AS_OBJECT',\n    'AS_TIME',\n    'AS_TIMESTAMP_LTZ',\n    'AS_TIMESTAMP_NTZ',\n    'AS_TIMESTAMP_TZ',\n    'ASCII',\n    'ASIN',\n    'ASINH',\n    'ATAN',\n    'ATAN2',\n    'ATANH',\n    'AUTO_REFRESH_REGISTRATION_HISTORY',\n    'AUTOMATIC_CLUSTERING_HISTORY',\n    'AVG',\n    'BASE64_DECODE_BINARY',\n    'BASE64_DECODE_STRING',\n    'BASE64_ENCODE',\n    'BIT_LENGTH',\n    'BITAND',\n    'BITAND_AGG',\n    'BITMAP_BIT_POSITION',\n    'BITMAP_BUCKET_NUMBER',\n    'BITMAP_CONSTRUCT_AGG',\n    'BITMAP_COUNT',\n    'BITMAP_OR_AGG',\n    'BITNOT',\n    'BITOR',\n    'BITOR_AGG',\n    'BITSHIFTLEFT',\n    'BITSHIFTRIGHT',\n    'BITXOR',\n    'BITXOR_AGG',\n    'BOOLAND',\n    'BOOLAND_AGG',\n    'BOOLNOT',\n    'BOOLOR',\n    'BOOLOR_AGG',\n    'BOOLXOR',\n    'BOOLXOR_AGG',\n    'BUILD_SCOPED_FILE_URL',\n    'BUILD_STAGE_FILE_URL',\n    'CASE',\n    'CAST',\n    'CBRT',\n    'CEIL',\n    'CHARINDEX',\n    'CHECK_JSON',\n    'CHECK_XML',\n    'CHR',\n    'CHAR',\n    'COALESCE',\n    'COLLATE',\n    'COLLATION',\n    'COMPLETE_TASK_GRAPHS',\n    'COMPRESS',\n    'CONCAT',\n    'CONCAT_WS',\n    'CONDITIONAL_CHANGE_EVENT',\n    'CONDITIONAL_TRUE_EVENT',\n    'CONTAINS',\n    'CONVERT_TIMEZONE',\n    'COPY_HISTORY',\n    'CORR',\n    'COS',\n    'COSH',\n    'COT',\n    'COUNT',\n    'COUNT_IF',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'CUME_DIST',\n    'CURRENT_ACCOUNT',\n    'CURRENT_AVAILABLE_ROLES',\n    'CURRENT_CLIENT',\n    'CURRENT_DATABASE',\n    'CURRENT_DATE',\n    'CURRENT_IP_ADDRESS',\n    'CURRENT_REGION',\n    'CURRENT_ROLE',\n    'CURRENT_SCHEMA',\n    'CURRENT_SCHEMAS',\n    'CURRENT_SECONDARY_ROLES',\n    'CURRENT_SESSION',\n    'CURRENT_STATEMENT',\n    'CURRENT_TASK_GRAPHS',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_TRANSACTION',\n    'CURRENT_USER',\n    'CURRENT_VERSION',\n    'CURRENT_WAREHOUSE',\n    'DATA_TRANSFER_HISTORY',\n    'DATABASE_REFRESH_HISTORY',\n    'DATABASE_REFRESH_PROGRESS',\n    'DATABASE_REFRESH_PROGRESS_BY_JOB',\n    'DATABASE_STORAGE_USAGE_HISTORY',\n    'DATE_FROM_PARTS',\n    'DATE_PART',\n    'DATE_TRUNC',\n    'DATEADD',\n    'DATEDIFF',\n    'DAYNAME',\n    'DECODE',\n    'DECOMPRESS_BINARY',\n    'DECOMPRESS_STRING',\n    'DECRYPT',\n    'DECRYPT_RAW',\n    'DEGREES',\n    'DENSE_RANK',\n    'DIV0',\n    'EDITDISTANCE',\n    'ENCRYPT',\n    'ENCRYPT_RAW',\n    'ENDSWITH',\n    'EQUAL_NULL',\n    'EXP',\n    'EXPLAIN_JSON',\n    'EXTERNAL_FUNCTIONS_HISTORY',\n    'EXTERNAL_TABLE_FILES',\n    'EXTERNAL_TABLE_FILE_REGISTRATION_HISTORY',\n    'EXTRACT',\n    'EXTRACT_SEMANTIC_CATEGORIES',\n    'FACTORIAL',\n    'FILTER',\n    'FIRST_VALUE',\n    'FLATTEN',\n    'FLOOR',\n    'GENERATE_COLUMN_DESCRIPTION',\n    'GENERATOR',\n    'GET',\n    'GET_ABSOLUTE_PATH',\n    'GET_DDL',\n    'GET_IGNORE_CASE',\n    'GET_OBJECT_REFERENCES',\n    'GET_PATH',\n    'GET_PRESIGNED_URL',\n    'GET_RELATIVE_PATH',\n    'GET_STAGE_LOCATION',\n    'GETBIT',\n    'GREATEST',\n    'GREATEST_IGNORE_NULLS',\n    'GROUPING',\n    'GROUPING_ID',\n    'HASH',\n    'HASH_AGG',\n    'HAVERSINE',\n    'HEX_DECODE_BINARY',\n    'HEX_DECODE_STRING',\n    'HEX_ENCODE',\n    'HLL',\n    'HLL_ACCUMULATE',\n    'HLL_COMBINE',\n    'HLL_ESTIMATE',\n    'HLL_EXPORT',\n    'HLL_IMPORT',\n    'HOUR',\n    'MINUTE',\n    'SECOND',\n    'IDENTIFIER',\n    'IFF',\n    'IFNULL',\n    'ILIKE',\n    'ILIKE ANY',\n    'INFER_SCHEMA',\n    'INITCAP',\n    'INSERT',\n    'INVOKER_ROLE',\n    'INVOKER_SHARE',\n    'IS_ARRAY',\n    'IS_BINARY',\n    'IS_BOOLEAN',\n    'IS_CHAR',\n    'IS_VARCHAR',\n    'IS_DATE',\n    'IS_DATE_VALUE',\n    'IS_DECIMAL',\n    'IS_DOUBLE',\n    'IS_REAL',\n    'IS_GRANTED_TO_INVOKER_ROLE',\n    'IS_INTEGER',\n    'IS_NULL_VALUE',\n    'IS_OBJECT',\n    'IS_ROLE_IN_SESSION',\n    'IS_TIME',\n    'IS_TIMESTAMP_LTZ',\n    'IS_TIMESTAMP_NTZ',\n    'IS_TIMESTAMP_TZ',\n    'JAROWINKLER_SIMILARITY',\n    'JSON_EXTRACT_PATH_TEXT',\n    'KURTOSIS',\n    'LAG',\n    'LAST_DAY',\n    'LAST_QUERY_ID',\n    'LAST_TRANSACTION',\n    'LAST_VALUE',\n    'LEAD',\n    'LEAST',\n    'LEFT',\n    'LENGTH',\n    'LEN',\n    'LIKE',\n    'LIKE ALL',\n    'LIKE ANY',\n    'LISTAGG',\n    'LN',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOG',\n    'LOGIN_HISTORY',\n    'LOGIN_HISTORY_BY_USER',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'MATERIALIZED_VIEW_REFRESH_HISTORY',\n    'MD5',\n    'MD5_HEX',\n    'MD5_BINARY',\n    'MD5_NUMBER — Obsoleted',\n    'MD5_NUMBER_LOWER64',\n    'MD5_NUMBER_UPPER64',\n    'MEDIAN',\n    'MIN',\n    'MAX',\n    'MINHASH',\n    'MINHASH_COMBINE',\n    'MOD',\n    'MODE',\n    'MONTHNAME',\n    'MONTHS_BETWEEN',\n    'NEXT_DAY',\n    'NORMAL',\n    'NTH_VALUE',\n    'NTILE',\n    'NULLIF',\n    'NULLIFZERO',\n    'NVL',\n    'NVL2',\n    'OBJECT_AGG',\n    'OBJECT_CONSTRUCT',\n    'OBJECT_CONSTRUCT_KEEP_NULL',\n    'OBJECT_DELETE',\n    'OBJECT_INSERT',\n    'OBJECT_KEYS',\n    'OBJECT_PICK',\n    'OCTET_LENGTH',\n    'PARSE_IP',\n    'PARSE_JSON',\n    'PARSE_URL',\n    'PARSE_XML',\n    'PERCENT_RANK',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'PI',\n    'PIPE_USAGE_HISTORY',\n    'POLICY_CONTEXT',\n    'POLICY_REFERENCES',\n    'POSITION',\n    'POW',\n    'POWER',\n    'PREVIOUS_DAY',\n    'QUERY_ACCELERATION_HISTORY',\n    'QUERY_HISTORY',\n    'QUERY_HISTORY_BY_SESSION',\n    'QUERY_HISTORY_BY_USER',\n    'QUERY_HISTORY_BY_WAREHOUSE',\n    'RADIANS',\n    'RANDOM',\n    'RANDSTR',\n    'RANK',\n    'RATIO_TO_REPORT',\n    'REGEXP',\n    'REGEXP_COUNT',\n    'REGEXP_INSTR',\n    'REGEXP_LIKE',\n    'REGEXP_REPLACE',\n    'REGEXP_SUBSTR',\n    'REGEXP_SUBSTR_ALL',\n    'REGR_AVGX',\n    'REGR_AVGY',\n    'REGR_COUNT',\n    'REGR_INTERCEPT',\n    'REGR_R2',\n    'REGR_SLOPE',\n    'REGR_SXX',\n    'REGR_SXY',\n    'REGR_SYY',\n    'REGR_VALX',\n    'REGR_VALY',\n    'REPEAT',\n    'REPLACE',\n    'REPLICATION_GROUP_REFRESH_HISTORY',\n    'REPLICATION_GROUP_REFRESH_PROGRESS',\n    'REPLICATION_GROUP_REFRESH_PROGRESS_BY_JOB',\n    'REPLICATION_GROUP_USAGE_HISTORY',\n    'REPLICATION_USAGE_HISTORY',\n    'REST_EVENT_HISTORY',\n    'RESULT_SCAN',\n    'REVERSE',\n    'RIGHT',\n    'RLIKE',\n    'ROUND',\n    'ROW_NUMBER',\n    'RPAD',\n    'RTRIM',\n    'RTRIMMED_LENGTH',\n    'SEARCH_OPTIMIZATION_HISTORY',\n    'SEQ1',\n    'SEQ2',\n    'SEQ4',\n    'SEQ8',\n    'SERVERLESS_TASK_HISTORY',\n    'SHA1',\n    'SHA1_HEX',\n    'SHA1_BINARY',\n    'SHA2',\n    'SHA2_HEX',\n    'SHA2_BINARY',\n    'SIGN',\n    'SIN',\n    'SINH',\n    'SKEW',\n    'SOUNDEX',\n    'SPACE',\n    'SPLIT',\n    'SPLIT_PART',\n    'SPLIT_TO_TABLE',\n    'SQRT',\n    'SQUARE',\n    'ST_AREA',\n    'ST_ASEWKB',\n    'ST_ASEWKT',\n    'ST_ASGEOJSON',\n    'ST_ASWKB',\n    'ST_ASBINARY',\n    'ST_ASWKT',\n    'ST_ASTEXT',\n    'ST_AZIMUTH',\n    'ST_CENTROID',\n    'ST_COLLECT',\n    'ST_CONTAINS',\n    'ST_COVEREDBY',\n    'ST_COVERS',\n    'ST_DIFFERENCE',\n    'ST_DIMENSION',\n    'ST_DISJOINT',\n    'ST_DISTANCE',\n    'ST_DWITHIN',\n    'ST_ENDPOINT',\n    'ST_ENVELOPE',\n    'ST_GEOGFROMGEOHASH',\n    'ST_GEOGPOINTFROMGEOHASH',\n    'ST_GEOGRAPHYFROMWKB',\n    'ST_GEOGRAPHYFROMWKT',\n    'ST_GEOHASH',\n    'ST_GEOMETRYFROMWKB',\n    'ST_GEOMETRYFROMWKT',\n    'ST_HAUSDORFFDISTANCE',\n    'ST_INTERSECTION',\n    'ST_INTERSECTS',\n    'ST_LENGTH',\n    'ST_MAKEGEOMPOINT',\n    'ST_GEOM_POINT',\n    'ST_MAKELINE',\n    'ST_MAKEPOINT',\n    'ST_POINT',\n    'ST_MAKEPOLYGON',\n    'ST_POLYGON',\n    'ST_NPOINTS',\n    'ST_NUMPOINTS',\n    'ST_PERIMETER',\n    'ST_POINTN',\n    'ST_SETSRID',\n    'ST_SIMPLIFY',\n    'ST_SRID',\n    'ST_STARTPOINT',\n    'ST_SYMDIFFERENCE',\n    'ST_UNION',\n    'ST_WITHIN',\n    'ST_X',\n    'ST_XMAX',\n    'ST_XMIN',\n    'ST_Y',\n    'ST_YMAX',\n    'ST_YMIN',\n    'STAGE_DIRECTORY_FILE_REGISTRATION_HISTORY',\n    'STAGE_STORAGE_USAGE_HISTORY',\n    'STARTSWITH',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STRIP_NULL_VALUE',\n    'STRTOK',\n    'STRTOK_SPLIT_TO_TABLE',\n    'STRTOK_TO_ARRAY',\n    'SUBSTR',\n    'SUBSTRING',\n    'SUM',\n    'SYSDATE',\n    'SYSTEM$ABORT_SESSION',\n    'SYSTEM$ABORT_TRANSACTION',\n    'SYSTEM$AUTHORIZE_PRIVATELINK',\n    'SYSTEM$AUTHORIZE_STAGE_PRIVATELINK_ACCESS',\n    'SYSTEM$BEHAVIOR_CHANGE_BUNDLE_STATUS',\n    'SYSTEM$CANCEL_ALL_QUERIES',\n    'SYSTEM$CANCEL_QUERY',\n    'SYSTEM$CLUSTERING_DEPTH',\n    'SYSTEM$CLUSTERING_INFORMATION',\n    'SYSTEM$CLUSTERING_RATIO ',\n    'SYSTEM$CURRENT_USER_TASK_NAME',\n    'SYSTEM$DATABASE_REFRESH_HISTORY ',\n    'SYSTEM$DATABASE_REFRESH_PROGRESS',\n    'SYSTEM$DATABASE_REFRESH_PROGRESS_BY_JOB ',\n    'SYSTEM$DISABLE_BEHAVIOR_CHANGE_BUNDLE',\n    'SYSTEM$DISABLE_DATABASE_REPLICATION',\n    'SYSTEM$ENABLE_BEHAVIOR_CHANGE_BUNDLE',\n    'SYSTEM$ESTIMATE_QUERY_ACCELERATION',\n    'SYSTEM$ESTIMATE_SEARCH_OPTIMIZATION_COSTS',\n    'SYSTEM$EXPLAIN_JSON_TO_TEXT',\n    'SYSTEM$EXPLAIN_PLAN_JSON',\n    'SYSTEM$EXTERNAL_TABLE_PIPE_STATUS',\n    'SYSTEM$GENERATE_SAML_CSR',\n    'SYSTEM$GENERATE_SCIM_ACCESS_TOKEN',\n    'SYSTEM$GET_AWS_SNS_IAM_POLICY',\n    'SYSTEM$GET_PREDECESSOR_RETURN_VALUE',\n    'SYSTEM$GET_PRIVATELINK',\n    'SYSTEM$GET_PRIVATELINK_AUTHORIZED_ENDPOINTS',\n    'SYSTEM$GET_PRIVATELINK_CONFIG',\n    'SYSTEM$GET_SNOWFLAKE_PLATFORM_INFO',\n    'SYSTEM$GET_TAG',\n    'SYSTEM$GET_TAG_ALLOWED_VALUES',\n    'SYSTEM$GET_TAG_ON_CURRENT_COLUMN',\n    'SYSTEM$GET_TAG_ON_CURRENT_TABLE',\n    'SYSTEM$GLOBAL_ACCOUNT_SET_PARAMETER',\n    'SYSTEM$LAST_CHANGE_COMMIT_TIME',\n    'SYSTEM$LINK_ACCOUNT_OBJECTS_BY_NAME',\n    'SYSTEM$MIGRATE_SAML_IDP_REGISTRATION',\n    'SYSTEM$PIPE_FORCE_RESUME',\n    'SYSTEM$PIPE_STATUS',\n    'SYSTEM$REVOKE_PRIVATELINK',\n    'SYSTEM$REVOKE_STAGE_PRIVATELINK_ACCESS',\n    'SYSTEM$SET_RETURN_VALUE',\n    'SYSTEM$SHOW_OAUTH_CLIENT_SECRETS',\n    'SYSTEM$STREAM_GET_TABLE_TIMESTAMP',\n    'SYSTEM$STREAM_HAS_DATA',\n    'SYSTEM$TASK_DEPENDENTS_ENABLE',\n    'SYSTEM$TYPEOF',\n    'SYSTEM$USER_TASK_CANCEL_ONGOING_EXECUTIONS',\n    'SYSTEM$VERIFY_EXTERNAL_OAUTH_TOKEN',\n    'SYSTEM$WAIT',\n    'SYSTEM$WHITELIST',\n    'SYSTEM$WHITELIST_PRIVATELINK',\n    'TAG_REFERENCES',\n    'TAG_REFERENCES_ALL_COLUMNS',\n    'TAG_REFERENCES_WITH_LINEAGE',\n    'TAN',\n    'TANH',\n    'TASK_DEPENDENTS',\n    'TASK_HISTORY',\n    'TIME_FROM_PARTS',\n    'TIME_SLICE',\n    'TIMEADD',\n    'TIMEDIFF',\n    'TIMESTAMP_FROM_PARTS',\n    'TIMESTAMPADD',\n    'TIMESTAMPDIFF',\n    'TO_ARRAY',\n    'TO_BINARY',\n    'TO_BOOLEAN',\n    'TO_CHAR',\n    'TO_VARCHAR',\n    'TO_DATE',\n    'DATE',\n    'TO_DECIMAL',\n    'TO_NUMBER',\n    'TO_NUMERIC',\n    'TO_DOUBLE',\n    'TO_GEOGRAPHY',\n    'TO_GEOMETRY',\n    'TO_JSON',\n    'TO_OBJECT',\n    'TO_TIME',\n    'TIME',\n    'TO_TIMESTAMP',\n    'TO_TIMESTAMP_LTZ',\n    'TO_TIMESTAMP_NTZ',\n    'TO_TIMESTAMP_TZ',\n    'TO_VARIANT',\n    'TO_XML',\n    'TRANSLATE',\n    'TRIM',\n    'TRUNCATE',\n    'TRUNC',\n    'TRUNC',\n    'TRY_BASE64_DECODE_BINARY',\n    'TRY_BASE64_DECODE_STRING',\n    'TRY_CAST',\n    'TRY_HEX_DECODE_BINARY',\n    'TRY_HEX_DECODE_STRING',\n    'TRY_PARSE_JSON',\n    'TRY_TO_BINARY',\n    'TRY_TO_BOOLEAN',\n    'TRY_TO_DATE',\n    'TRY_TO_DECIMAL',\n    'TRY_TO_NUMBER',\n    'TRY_TO_NUMERIC',\n    'TRY_TO_DOUBLE',\n    'TRY_TO_GEOGRAPHY',\n    'TRY_TO_GEOMETRY',\n    'TRY_TO_TIME',\n    'TRY_TO_TIMESTAMP',\n    'TRY_TO_TIMESTAMP_LTZ',\n    'TRY_TO_TIMESTAMP_NTZ',\n    'TRY_TO_TIMESTAMP_TZ',\n    'TYPEOF',\n    'UNICODE',\n    'UNIFORM',\n    'UPPER',\n    'UUID_STRING',\n    'VALIDATE',\n    'VALIDATE_PIPE_LOAD',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VARIANCE',\n    'VARIANCE_SAMP',\n    'VARIANCE_POP',\n    'WAREHOUSE_LOAD_HISTORY',\n    'WAREHOUSE_METERING_HISTORY',\n    'WIDTH_BUCKET',\n    'XMLGET',\n    'YEAR',\n    'YEAROFWEEK',\n    'YEAROFWEEKISO',\n    'DAY',\n    'DAYOFMONTH',\n    'DAYOFWEEK',\n    'DAYOFWEEKISO',\n    'DAYOFYEAR',\n    'WEEK',\n    'WEEK',\n    'WEEKOFYEAR',\n    'WEEKISO',\n    'MONTH',\n    'QUARTER',\n    'ZEROIFNULL',\n    'ZIPF',\n];\n//# sourceMappingURL=snowflake.functions.js.map","export const dedupe = (arr) => [...new Set(arr)];\n// Last element from array\nexport const last = (arr) => arr[arr.length - 1];\n// Sorts strings by length, so that longer ones are first\n// Also sorts alphabetically after sorting by length.\nexport const sortByLengthDesc = (strings) => strings.sort((a, b) => b.length - a.length || a.localeCompare(b));\n/** Get length of longest string in list of strings */\nexport const maxLength = (strings) => strings.reduce((max, cur) => Math.max(max, cur.length), 0);\n// replaces long whitespace sequences with just one space\nexport const equalizeWhitespace = (s) => s.replace(/\\s+/gu, ' ');\n// True when string contains multiple lines\nexport const isMultiline = (text) => /\\n/.test(text);\n//# sourceMappingURL=utils.js.map","// Escapes regex special chars\nexport const escapeRegExp = (string) => string.replace(/[.*+?^${}()|[\\]\\\\]/gu, '\\\\$&');\nexport const WHITESPACE_REGEX = /\\s+/uy;\nexport const patternToRegex = (pattern) => new RegExp(`(?:${pattern})`, 'uy');\n// Converts \"ab\" to \"[Aa][Bb]\"\nexport const toCaseInsensitivePattern = (prefix) => prefix\n    .split('')\n    .map(char => (/ /gu.test(char) ? '\\\\s+' : `[${char.toUpperCase()}${char.toLowerCase()}]`))\n    .join('');\nexport const withDashes = (pattern) => pattern + '(?:-' + pattern + ')*';\n// Converts [\"a\", \"b\"] to \"(?:[Aa]|[Bb]|)\" or \"(?:[Aa]|[Bb])\" when required = true\nexport const prefixesPattern = ({ prefixes, requirePrefix }) => `(?:${prefixes.map(toCaseInsensitivePattern).join('|')}${requirePrefix ? '' : '|'})`;\n//# sourceMappingURL=regexUtil.js.map","import { sortByLengthDesc } from '../utils.js';\nimport { escapeRegExp, patternToRegex, prefixesPattern, withDashes } from './regexUtil.js';\n/**\n * Builds a RegExp for valid line comments in a SQL dialect\n * @param {string[]} lineCommentTypes - list of character strings that denote line comments\n */\nexport const lineComment = (lineCommentTypes) => new RegExp(`(?:${lineCommentTypes.map(escapeRegExp).join('|')}).*?(?=\\r\\n|\\r|\\n|$)`, 'uy');\n/**\n * Builds a RegExp for matching either open- or close-parenthesis patterns\n */\nexport const parenthesis = (kind, extraParens = []) => {\n    const index = kind === 'open' ? 0 : 1;\n    const parens = ['()', ...extraParens].map(pair => pair[index]);\n    return patternToRegex(parens.map(escapeRegExp).join('|'));\n};\n/**\n * Builds a RegExp containing all operators for a SQL dialect\n */\nexport const operator = (operators) => patternToRegex(`${sortByLengthDesc(operators).map(escapeRegExp).join('|')}`);\n// Negative lookahead to avoid matching a keyword that's actually part of identifier,\n// which can happen when identifier allows word-boundary characters inside it.\n//\n// For example \"SELECT$ME\" should be tokenized as:\n// - [\"SELECT$ME\"] when $ is allowed inside identifiers\n// - [\"SELECT\", \"$\", \"ME\"] when $ can't be part of identifiers.\nconst rejectIdentCharsPattern = ({ rest, dashes }) => rest || dashes ? `(?![${rest || ''}${dashes ? '-' : ''}])` : '';\n/**\n * Builds a RegExp for all Reserved Keywords in a SQL dialect\n */\nexport const reservedWord = (reservedKeywords, identChars = {}) => {\n    if (reservedKeywords.length === 0) {\n        return /^\\b$/u;\n    }\n    const avoidIdentChars = rejectIdentCharsPattern(identChars);\n    const reservedKeywordsPattern = sortByLengthDesc(reservedKeywords)\n        .map(escapeRegExp)\n        .join('|')\n        .replace(/ /gu, '\\\\s+');\n    return new RegExp(`(?:${reservedKeywordsPattern})${avoidIdentChars}\\\\b`, 'iuy');\n};\n/**\n * Builds a RegExp for parameter placeholder patterns\n * @param {string[]} paramTypes - list of strings that denote placeholder types\n * @param {string} pattern - string that denotes placeholder pattern\n */\nexport const parameter = (paramTypes, pattern) => {\n    if (!paramTypes.length) {\n        return undefined;\n    }\n    const typesRegex = paramTypes.map(escapeRegExp).join('|');\n    return patternToRegex(`(?:${typesRegex})(?:${pattern})`);\n};\nconst buildQStringPatterns = () => {\n    const specialDelimiterMap = {\n        '<': '>',\n        '[': ']',\n        '(': ')',\n        '{': '}',\n    };\n    // base pattern for special delimiters, left must correspond with right\n    const singlePattern = \"{left}(?:(?!{right}').)*?{right}\";\n    // replace {left} and {right} with delimiters, collect as array\n    const patternList = Object.entries(specialDelimiterMap).map(([left, right]) => singlePattern.replace(/{left}/g, escapeRegExp(left)).replace(/{right}/g, escapeRegExp(right)));\n    const specialDelimiters = escapeRegExp(Object.keys(specialDelimiterMap).join(''));\n    // standard pattern for common delimiters, ignores special delimiters\n    const standardDelimiterPattern = String.raw `(?<tag>[^\\s${specialDelimiters}])(?:(?!\\k<tag>').)*?\\k<tag>`;\n    // constructs final pattern by joining all cases\n    const qStringPattern = `[Qq]'(?:${standardDelimiterPattern}|${patternList.join('|')})'`;\n    return qStringPattern;\n};\n// Regex patterns for all supported quote styles.\n//\n// Most of them have a single escaping-style built in,\n// but \"\" and '' support multiple versions of escapes,\n// which must be selected with suffixes: -qq, -bs, -qq-bs, -raw\nexport const quotePatterns = {\n    // - backtick quoted (using `` to escape)\n    '``': '(?:`[^`]*`)+',\n    // - Transact-SQL square bracket quoted (using ]] to escape)\n    '[]': String.raw `(?:\\[[^\\]]*\\])(?:\\][^\\]]*\\])*`,\n    // double-quoted\n    '\"\"-qq': String.raw `(?:\"[^\"]*\")+`,\n    '\"\"-bs': String.raw `(?:\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")`,\n    '\"\"-qq-bs': String.raw `(?:\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")+`,\n    '\"\"-raw': String.raw `(?:\"[^\"]*\")`,\n    // single-quoted\n    \"''-qq\": String.raw `(?:'[^']*')+`,\n    \"''-bs\": String.raw `(?:'[^'\\\\]*(?:\\\\.[^'\\\\]*)*')`,\n    \"''-qq-bs\": String.raw `(?:'[^'\\\\]*(?:\\\\.[^'\\\\]*)*')+`,\n    \"''-raw\": String.raw `(?:'[^']*')`,\n    // PostgreSQL dollar-quoted\n    '$$': String.raw `(?<tag>\\$\\w*\\$)[\\s\\S]*?\\k<tag>`,\n    // BigQuery '''triple-quoted''' (using \\' to escape)\n    \"'''..'''\": String.raw `'''[^\\\\]*?(?:\\\\.[^\\\\]*?)*?'''`,\n    // BigQuery \"\"\"triple-quoted\"\"\" (using \\\" to escape)\n    '\"\"\"..\"\"\"': String.raw `\"\"\"[^\\\\]*?(?:\\\\.[^\\\\]*?)*?\"\"\"`,\n    // Hive and Spark variables: ${name}\n    '{}': String.raw `(?:\\{[^\\}]*\\})`,\n    // Oracle q'' strings: q'<text>' q'|text|' ...\n    \"q''\": buildQStringPatterns(),\n};\nconst singleQuotePattern = (quoteTypes) => {\n    if (typeof quoteTypes === 'string') {\n        return quotePatterns[quoteTypes];\n    }\n    else if ('regex' in quoteTypes) {\n        return quoteTypes.regex;\n    }\n    else {\n        return prefixesPattern(quoteTypes) + quotePatterns[quoteTypes.quote];\n    }\n};\n/** Builds a RegExp for matching variables */\nexport const variable = (varTypes) => patternToRegex(varTypes\n    .map(varType => ('regex' in varType ? varType.regex : singleQuotePattern(varType)))\n    .join('|'));\n/** Builds a quote-delimited pattern for matching all given quote types */\nexport const stringPattern = (quoteTypes) => quoteTypes.map(singleQuotePattern).join('|');\n/** Builds a RegExp for matching quote-delimited patterns */\nexport const string = (quoteTypes) => patternToRegex(stringPattern(quoteTypes));\n/**\n * Builds a RegExp for valid identifiers in a SQL dialect\n */\nexport const identifier = (specialChars = {}) => patternToRegex(identifierPattern(specialChars));\n/**\n * Builds a RegExp string for valid identifiers in a SQL dialect\n */\nexport const identifierPattern = ({ first, rest, dashes, allowFirstCharNumber, } = {}) => {\n    // Unicode letters, diacritical marks and underscore\n    const letter = '\\\\p{Alphabetic}\\\\p{Mark}_';\n    // Numbers 0..9, plus various unicode numbers\n    const number = '\\\\p{Decimal_Number}';\n    const firstChars = escapeRegExp(first !== null && first !== void 0 ? first : '');\n    const restChars = escapeRegExp(rest !== null && rest !== void 0 ? rest : '');\n    const pattern = allowFirstCharNumber\n        ? `[${letter}${number}${firstChars}][${letter}${number}${restChars}]*`\n        : `[${letter}${firstChars}][${letter}${number}${restChars}]*`;\n    return dashes ? withDashes(pattern) : pattern;\n};\n//# sourceMappingURL=regexFactory.js.map","/**\n * Determines line and column number of character index in source code.\n */\nexport function lineColFromIndex(source, index) {\n    const lines = source.slice(0, index).split(/\\n/);\n    return { line: lines.length, col: lines[lines.length - 1].length + 1 };\n}\n//# sourceMappingURL=lineColFromIndex.js.map","import { lineColFromIndex } from './lineColFromIndex.js';\nimport { WHITESPACE_REGEX } from './regexUtil.js';\nexport default class TokenizerEngine {\n    constructor(rules, dialectName) {\n        this.rules = rules;\n        this.dialectName = dialectName;\n        this.input = ''; // The input SQL string to process\n        this.index = 0; // Current position in string\n    }\n    /**\n     * Takes a SQL string and breaks it into tokens.\n     * Each token is an object with type and value.\n     *\n     * @param {string} input - The SQL string\n     * @returns {Token[]} output token stream\n     */\n    tokenize(input) {\n        this.input = input;\n        this.index = 0;\n        const tokens = [];\n        let token;\n        // Keep processing the string until end is reached\n        while (this.index < this.input.length) {\n            // skip any preceding whitespace\n            const precedingWhitespace = this.getWhitespace();\n            if (this.index < this.input.length) {\n                // Get the next token and the token type\n                token = this.getNextToken();\n                if (!token) {\n                    throw this.createParseError();\n                }\n                tokens.push(Object.assign(Object.assign({}, token), { precedingWhitespace }));\n            }\n        }\n        return tokens;\n    }\n    createParseError() {\n        const text = this.input.slice(this.index, this.index + 10);\n        const { line, col } = lineColFromIndex(this.input, this.index);\n        return new Error(`Parse error: Unexpected \"${text}\" at line ${line} column ${col}.\\n${this.dialectInfo()}`);\n    }\n    dialectInfo() {\n        if (this.dialectName === 'sql') {\n            return (`This likely happens because you're using the default \"sql\" dialect.\\n` +\n                `If possible, please select a more specific dialect (like sqlite, postgresql, etc).`);\n        }\n        else {\n            return `SQL dialect used: \"${this.dialectName}\".`;\n        }\n    }\n    getWhitespace() {\n        WHITESPACE_REGEX.lastIndex = this.index;\n        const matches = WHITESPACE_REGEX.exec(this.input);\n        if (matches) {\n            // Advance current position by matched whitespace length\n            this.index += matches[0].length;\n            return matches[0];\n        }\n        return undefined;\n    }\n    getNextToken() {\n        for (const rule of this.rules) {\n            const token = this.match(rule);\n            if (token) {\n                return token;\n            }\n        }\n        return undefined;\n    }\n    // Attempts to match token rule regex at current position in input\n    match(rule) {\n        rule.regex.lastIndex = this.index;\n        const matches = rule.regex.exec(this.input);\n        if (matches) {\n            const matchedText = matches[0];\n            const token = {\n                type: rule.type,\n                raw: matchedText,\n                text: rule.text ? rule.text(matchedText) : matchedText,\n                start: this.index,\n            };\n            if (rule.key) {\n                token.key = rule.key(matchedText);\n            }\n            // Advance current position by matched token length\n            this.index += matchedText.length;\n            return token;\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=TokenizerEngine.js.map","const START = /\\/\\*/uy; // matches: /*\nconst ANY_CHAR = /[\\s\\S]/uy; // matches single character\nconst END = /\\*\\//uy; // matches: */\n/**\n * An object mimicking a regular expression,\n * for matching nested block-comments.\n */\nexport class NestedComment {\n    constructor() {\n        this.lastIndex = 0;\n    }\n    exec(input) {\n        let result = '';\n        let match;\n        let nestLevel = 0;\n        if ((match = this.matchSection(START, input))) {\n            result += match;\n            nestLevel++;\n        }\n        else {\n            return null;\n        }\n        while (nestLevel > 0) {\n            if ((match = this.matchSection(START, input))) {\n                result += match;\n                nestLevel++;\n            }\n            else if ((match = this.matchSection(END, input))) {\n                result += match;\n                nestLevel--;\n            }\n            else if ((match = this.matchSection(ANY_CHAR, input))) {\n                result += match;\n            }\n            else {\n                return null;\n            }\n        }\n        return [result];\n    }\n    matchSection(regex, input) {\n        regex.lastIndex = this.lastIndex;\n        const matches = regex.exec(input);\n        if (matches) {\n            this.lastIndex += matches[0].length;\n        }\n        return matches ? matches[0] : null;\n    }\n}\n//# sourceMappingURL=NestedComment.js.map","import { TokenType } from './token.js';\nimport * as regex from './regexFactory.js';\nimport TokenizerEngine from './TokenizerEngine.js';\nimport { escapeRegExp, patternToRegex } from './regexUtil.js';\nimport { equalizeWhitespace } from '../utils.js';\nimport { NestedComment } from './NestedComment.js';\nexport default class Tokenizer {\n    constructor(cfg, dialectName) {\n        this.cfg = cfg;\n        this.dialectName = dialectName;\n        this.rulesBeforeParams = this.buildRulesBeforeParams(cfg);\n        this.rulesAfterParams = this.buildRulesAfterParams(cfg);\n    }\n    tokenize(input, paramTypesOverrides) {\n        const rules = [\n            ...this.rulesBeforeParams,\n            ...this.buildParamRules(this.cfg, paramTypesOverrides),\n            ...this.rulesAfterParams,\n        ];\n        const tokens = new TokenizerEngine(rules, this.dialectName).tokenize(input);\n        return this.cfg.postProcess ? this.cfg.postProcess(tokens) : tokens;\n    }\n    // These rules can be cached as they only depend on\n    // the Tokenizer config options specified for each SQL dialect\n    buildRulesBeforeParams(cfg) {\n        var _a, _b, _c;\n        return this.validRules([\n            {\n                type: TokenType.DISABLE_COMMENT,\n                regex: /(\\/\\* *sql-formatter-disable *\\*\\/[\\s\\S]*?(?:\\/\\* *sql-formatter-enable *\\*\\/|$))/uy,\n            },\n            {\n                type: TokenType.BLOCK_COMMENT,\n                regex: cfg.nestedBlockComments ? new NestedComment() : /(\\/\\*[^]*?\\*\\/)/uy,\n            },\n            {\n                type: TokenType.LINE_COMMENT,\n                regex: regex.lineComment((_a = cfg.lineCommentTypes) !== null && _a !== void 0 ? _a : ['--']),\n            },\n            {\n                type: TokenType.QUOTED_IDENTIFIER,\n                regex: regex.string(cfg.identTypes),\n            },\n            {\n                type: TokenType.NUMBER,\n                regex: cfg.underscoresInNumbers\n                    ? /(?:0x[0-9a-fA-F_]+|0b[01_]+|(?:-\\s*)?(?:[0-9_]*\\.[0-9_]+|[0-9_]+(?:\\.[0-9_]*)?)(?:[eE][-+]?[0-9_]+(?:\\.[0-9_]+)?)?)(?![\\w\\p{Alphabetic}])/uy\n                    : /(?:0x[0-9a-fA-F]+|0b[01]+|(?:-\\s*)?(?:[0-9]*\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)(?:[eE][-+]?[0-9]+(?:\\.[0-9]+)?)?)(?![\\w\\p{Alphabetic}])/uy,\n            },\n            // RESERVED_KEYWORD_PHRASE and RESERVED_DATA_TYPE_PHRASE  is matched before all other keyword tokens\n            // to e.g. prioritize matching \"TIMESTAMP WITH TIME ZONE\" phrase over \"WITH\" clause.\n            {\n                type: TokenType.RESERVED_KEYWORD_PHRASE,\n                regex: regex.reservedWord((_b = cfg.reservedKeywordPhrases) !== null && _b !== void 0 ? _b : [], cfg.identChars),\n                text: toCanonical,\n            },\n            {\n                type: TokenType.RESERVED_DATA_TYPE_PHRASE,\n                regex: regex.reservedWord((_c = cfg.reservedDataTypePhrases) !== null && _c !== void 0 ? _c : [], cfg.identChars),\n                text: toCanonical,\n            },\n            {\n                type: TokenType.CASE,\n                regex: /CASE\\b/iuy,\n                text: toCanonical,\n            },\n            {\n                type: TokenType.END,\n                regex: /END\\b/iuy,\n                text: toCanonical,\n            },\n            {\n                type: TokenType.BETWEEN,\n                regex: /BETWEEN\\b/iuy,\n                text: toCanonical,\n            },\n            {\n                type: TokenType.LIMIT,\n                regex: cfg.reservedClauses.includes('LIMIT') ? /LIMIT\\b/iuy : undefined,\n                text: toCanonical,\n            },\n            {\n                type: TokenType.RESERVED_CLAUSE,\n                regex: regex.reservedWord(cfg.reservedClauses, cfg.identChars),\n                text: toCanonical,\n            },\n            {\n                type: TokenType.RESERVED_SELECT,\n                regex: regex.reservedWord(cfg.reservedSelect, cfg.identChars),\n                text: toCanonical,\n            },\n            {\n                type: TokenType.RESERVED_SET_OPERATION,\n                regex: regex.reservedWord(cfg.reservedSetOperations, cfg.identChars),\n                text: toCanonical,\n            },\n            {\n                type: TokenType.WHEN,\n                regex: /WHEN\\b/iuy,\n                text: toCanonical,\n            },\n            {\n                type: TokenType.ELSE,\n                regex: /ELSE\\b/iuy,\n                text: toCanonical,\n            },\n            {\n                type: TokenType.THEN,\n                regex: /THEN\\b/iuy,\n                text: toCanonical,\n            },\n            {\n                type: TokenType.RESERVED_JOIN,\n                regex: regex.reservedWord(cfg.reservedJoins, cfg.identChars),\n                text: toCanonical,\n            },\n            {\n                type: TokenType.AND,\n                regex: /AND\\b/iuy,\n                text: toCanonical,\n            },\n            {\n                type: TokenType.OR,\n                regex: /OR\\b/iuy,\n                text: toCanonical,\n            },\n            {\n                type: TokenType.XOR,\n                regex: cfg.supportsXor ? /XOR\\b/iuy : undefined,\n                text: toCanonical,\n            },\n            ...(cfg.operatorKeyword\n                ? [\n                    {\n                        type: TokenType.OPERATOR,\n                        regex: /OPERATOR *\\([^)]+\\)/iuy,\n                    },\n                ]\n                : []),\n            {\n                type: TokenType.RESERVED_FUNCTION_NAME,\n                regex: regex.reservedWord(cfg.reservedFunctionNames, cfg.identChars),\n                text: toCanonical,\n            },\n            {\n                type: TokenType.RESERVED_DATA_TYPE,\n                regex: regex.reservedWord(cfg.reservedDataTypes, cfg.identChars),\n                text: toCanonical,\n            },\n            {\n                type: TokenType.RESERVED_KEYWORD,\n                regex: regex.reservedWord(cfg.reservedKeywords, cfg.identChars),\n                text: toCanonical,\n            },\n        ]);\n    }\n    // These rules can also be cached as they only depend on\n    // the Tokenizer config options specified for each SQL dialect\n    buildRulesAfterParams(cfg) {\n        var _a, _b;\n        return this.validRules([\n            {\n                type: TokenType.VARIABLE,\n                regex: cfg.variableTypes ? regex.variable(cfg.variableTypes) : undefined,\n            },\n            { type: TokenType.STRING, regex: regex.string(cfg.stringTypes) },\n            {\n                type: TokenType.IDENTIFIER,\n                regex: regex.identifier(cfg.identChars),\n            },\n            { type: TokenType.DELIMITER, regex: /[;]/uy },\n            { type: TokenType.COMMA, regex: /[,]/y },\n            {\n                type: TokenType.OPEN_PAREN,\n                regex: regex.parenthesis('open', cfg.extraParens),\n            },\n            {\n                type: TokenType.CLOSE_PAREN,\n                regex: regex.parenthesis('close', cfg.extraParens),\n            },\n            {\n                type: TokenType.OPERATOR,\n                regex: regex.operator([\n                    // standard operators\n                    '+',\n                    '-',\n                    '/',\n                    '>',\n                    '<',\n                    '=',\n                    '<>',\n                    '<=',\n                    '>=',\n                    '!=',\n                    ...((_a = cfg.operators) !== null && _a !== void 0 ? _a : []),\n                ]),\n            },\n            { type: TokenType.ASTERISK, regex: /[*]/uy },\n            {\n                type: TokenType.PROPERTY_ACCESS_OPERATOR,\n                regex: regex.operator(['.', ...((_b = cfg.propertyAccessOperators) !== null && _b !== void 0 ? _b : [])]),\n            },\n        ]);\n    }\n    // These rules can't be blindly cached as the paramTypesOverrides object\n    // can differ on each invocation of the format() function.\n    buildParamRules(cfg, paramTypesOverrides) {\n        var _a, _b, _c, _d, _e;\n        // Each dialect has its own default parameter types (if any),\n        // but these can be overriden by the user of the library.\n        const paramTypes = {\n            named: (paramTypesOverrides === null || paramTypesOverrides === void 0 ? void 0 : paramTypesOverrides.named) || ((_a = cfg.paramTypes) === null || _a === void 0 ? void 0 : _a.named) || [],\n            quoted: (paramTypesOverrides === null || paramTypesOverrides === void 0 ? void 0 : paramTypesOverrides.quoted) || ((_b = cfg.paramTypes) === null || _b === void 0 ? void 0 : _b.quoted) || [],\n            numbered: (paramTypesOverrides === null || paramTypesOverrides === void 0 ? void 0 : paramTypesOverrides.numbered) || ((_c = cfg.paramTypes) === null || _c === void 0 ? void 0 : _c.numbered) || [],\n            positional: typeof (paramTypesOverrides === null || paramTypesOverrides === void 0 ? void 0 : paramTypesOverrides.positional) === 'boolean'\n                ? paramTypesOverrides.positional\n                : (_d = cfg.paramTypes) === null || _d === void 0 ? void 0 : _d.positional,\n            custom: (paramTypesOverrides === null || paramTypesOverrides === void 0 ? void 0 : paramTypesOverrides.custom) || ((_e = cfg.paramTypes) === null || _e === void 0 ? void 0 : _e.custom) || [],\n        };\n        return this.validRules([\n            {\n                type: TokenType.NAMED_PARAMETER,\n                regex: regex.parameter(paramTypes.named, regex.identifierPattern(cfg.paramChars || cfg.identChars)),\n                key: v => v.slice(1),\n            },\n            {\n                type: TokenType.QUOTED_PARAMETER,\n                regex: regex.parameter(paramTypes.quoted, regex.stringPattern(cfg.identTypes)),\n                key: v => (({ tokenKey, quoteChar }) => tokenKey.replace(new RegExp(escapeRegExp('\\\\' + quoteChar), 'gu'), quoteChar))({\n                    tokenKey: v.slice(2, -1),\n                    quoteChar: v.slice(-1),\n                }),\n            },\n            {\n                type: TokenType.NUMBERED_PARAMETER,\n                regex: regex.parameter(paramTypes.numbered, '[0-9]+'),\n                key: v => v.slice(1),\n            },\n            {\n                type: TokenType.POSITIONAL_PARAMETER,\n                regex: paramTypes.positional ? /[?]/y : undefined,\n            },\n            ...paramTypes.custom.map((customParam) => {\n                var _a;\n                return ({\n                    type: TokenType.CUSTOM_PARAMETER,\n                    regex: patternToRegex(customParam.regex),\n                    key: (_a = customParam.key) !== null && _a !== void 0 ? _a : (v => v),\n                });\n            }),\n        ]);\n    }\n    // filters out rules for token types whose regex is undefined\n    validRules(rules) {\n        return rules.filter((rule) => Boolean(rule.regex));\n    }\n}\n/**\n * Converts keywords (and keyword sequences) to canonical form:\n * - in uppercase\n * - single spaces between words\n */\nconst toCanonical = (v) => equalizeWhitespace(v.toUpperCase());\n//# sourceMappingURL=Tokenizer.js.map","import Tokenizer from './lexer/Tokenizer.js';\nconst cache = new Map();\n/**\n * Factory function for building Dialect objects.\n * When called repeatedly with same options object returns the cached Dialect,\n * to avoid the cost of creating it again.\n */\nexport const createDialect = (options) => {\n    let dialect = cache.get(options);\n    if (!dialect) {\n        dialect = dialectFromOptions(options);\n        cache.set(options, dialect);\n    }\n    return dialect;\n};\nconst dialectFromOptions = (dialectOptions) => ({\n    tokenizer: new Tokenizer(dialectOptions.tokenizerOptions, dialectOptions.name),\n    formatOptions: processDialectFormatOptions(dialectOptions.formatOptions),\n});\nconst processDialectFormatOptions = (options) => {\n    var _a;\n    return ({\n        alwaysDenseOperators: options.alwaysDenseOperators || [],\n        onelineClauses: Object.fromEntries(options.onelineClauses.map(name => [name, true])),\n        tabularOnelineClauses: Object.fromEntries(((_a = options.tabularOnelineClauses) !== null && _a !== void 0 ? _a : options.onelineClauses).map(name => [name, true])),\n    });\n};\n//# sourceMappingURL=dialect.js.map","// Utility functions for config options\n/**\n * Creates a string to use for one step of indentation.\n */\nexport function indentString(cfg) {\n    if (cfg.indentStyle === 'tabularLeft' || cfg.indentStyle === 'tabularRight') {\n        return ' '.repeat(10);\n    }\n    if (cfg.useTabs) {\n        return '\\t';\n    }\n    return ' '.repeat(cfg.tabWidth);\n}\n/**\n * True when indentStyle is one of the tabular ones.\n */\nexport function isTabularStyle(cfg) {\n    return cfg.indentStyle === 'tabularLeft' || cfg.indentStyle === 'tabularRight';\n}\n//# sourceMappingURL=config.js.map","/**\n * Handles placeholder replacement with given params.\n */\nexport default class Params {\n    constructor(params) {\n        this.params = params;\n        this.index = 0;\n    }\n    /**\n     * Returns param value that matches given placeholder with param key.\n     */\n    get({ key, text }) {\n        if (!this.params) {\n            return text;\n        }\n        if (key) {\n            return this.params[key];\n        }\n        return this.params[this.index++];\n    }\n    /**\n     * Returns index of current positional parameter.\n     */\n    getPositionalParameterIndex() {\n        return this.index;\n    }\n    /**\n     * Sets index of current positional parameter.\n     */\n    setPositionalParameterIndex(i) {\n        this.index = i;\n    }\n}\n//# sourceMappingURL=Params.js.map","import { isReserved, TokenType } from './token.js';\n/**\n * Ensures that no keyword token (RESERVED_*) is preceded or followed by a dot (.)\n * or any other property-access operator.\n *\n * Ensures that all RESERVED_FUNCTION_NAME tokens are followed by \"(\".\n * If they're not, converts the token to IDENTIFIER.\n *\n * Converts RESERVED_DATA_TYPE tokens followed by \"(\" to RESERVED_PARAMETERIZED_DATA_TYPE.\n *\n * When IDENTIFIER or RESERVED_DATA_TYPE token is followed by \"[\"\n * converts it to ARRAY_IDENTIFIER or ARRAY_KEYWORD accordingly.\n *\n * This is needed to avoid ambiguity in parser which expects function names\n * to always be followed by open-paren, and to distinguish between\n * array accessor `foo[1]` and array literal `[1, 2, 3]`.\n */\nexport function disambiguateTokens(tokens) {\n    return tokens\n        .map(propertyNameKeywordToIdent)\n        .map(funcNameToIdent)\n        .map(dataTypeToParameterizedDataType)\n        .map(identToArrayIdent)\n        .map(dataTypeToArrayKeyword);\n}\nconst propertyNameKeywordToIdent = (token, i, tokens) => {\n    if (isReserved(token.type)) {\n        const prevToken = prevNonCommentToken(tokens, i);\n        if (prevToken && prevToken.type === TokenType.PROPERTY_ACCESS_OPERATOR) {\n            return Object.assign(Object.assign({}, token), { type: TokenType.IDENTIFIER, text: token.raw });\n        }\n        const nextToken = nextNonCommentToken(tokens, i);\n        if (nextToken && nextToken.type === TokenType.PROPERTY_ACCESS_OPERATOR) {\n            return Object.assign(Object.assign({}, token), { type: TokenType.IDENTIFIER, text: token.raw });\n        }\n    }\n    return token;\n};\nconst funcNameToIdent = (token, i, tokens) => {\n    if (token.type === TokenType.RESERVED_FUNCTION_NAME) {\n        const nextToken = nextNonCommentToken(tokens, i);\n        if (!nextToken || !isOpenParen(nextToken)) {\n            return Object.assign(Object.assign({}, token), { type: TokenType.IDENTIFIER, text: token.raw });\n        }\n    }\n    return token;\n};\nconst dataTypeToParameterizedDataType = (token, i, tokens) => {\n    if (token.type === TokenType.RESERVED_DATA_TYPE) {\n        const nextToken = nextNonCommentToken(tokens, i);\n        if (nextToken && isOpenParen(nextToken)) {\n            return Object.assign(Object.assign({}, token), { type: TokenType.RESERVED_PARAMETERIZED_DATA_TYPE });\n        }\n    }\n    return token;\n};\nconst identToArrayIdent = (token, i, tokens) => {\n    if (token.type === TokenType.IDENTIFIER) {\n        const nextToken = nextNonCommentToken(tokens, i);\n        if (nextToken && isOpenBracket(nextToken)) {\n            return Object.assign(Object.assign({}, token), { type: TokenType.ARRAY_IDENTIFIER });\n        }\n    }\n    return token;\n};\nconst dataTypeToArrayKeyword = (token, i, tokens) => {\n    if (token.type === TokenType.RESERVED_DATA_TYPE) {\n        const nextToken = nextNonCommentToken(tokens, i);\n        if (nextToken && isOpenBracket(nextToken)) {\n            return Object.assign(Object.assign({}, token), { type: TokenType.ARRAY_KEYWORD });\n        }\n    }\n    return token;\n};\nconst prevNonCommentToken = (tokens, index) => nextNonCommentToken(tokens, index, -1);\nconst nextNonCommentToken = (tokens, index, dir = 1) => {\n    let i = 1;\n    while (tokens[index + i * dir] && isComment(tokens[index + i * dir])) {\n        i++;\n    }\n    return tokens[index + i * dir];\n};\nconst isOpenParen = (t) => t.type === TokenType.OPEN_PAREN && t.text === '(';\nconst isOpenBracket = (t) => t.type === TokenType.OPEN_PAREN && t.text === '[';\nconst isComment = (t) => t.type === TokenType.BLOCK_COMMENT || t.type === TokenType.LINE_COMMENT;\n//# sourceMappingURL=disambiguateTokens.js.map","import { lineColFromIndex } from '../lexer/lineColFromIndex.js';\nimport { TokenType } from '../lexer/token.js';\nexport default class LexerAdapter {\n    constructor(tokenize) {\n        this.tokenize = tokenize;\n        this.index = 0;\n        this.tokens = [];\n        this.input = '';\n    }\n    reset(chunk, _info) {\n        this.input = chunk;\n        this.index = 0;\n        this.tokens = this.tokenize(chunk);\n    }\n    next() {\n        return this.tokens[this.index++];\n    }\n    save() { }\n    formatError(token) {\n        const { line, col } = lineColFromIndex(this.input, token.start);\n        return `Parse error at token: ${token.text} at line ${line} column ${col}`;\n    }\n    has(name) {\n        return name in TokenType;\n    }\n}\n//# sourceMappingURL=LexerAdapter.js.map","export var NodeType;\n(function (NodeType) {\n    NodeType[\"statement\"] = \"statement\";\n    NodeType[\"clause\"] = \"clause\";\n    NodeType[\"set_operation\"] = \"set_operation\";\n    NodeType[\"function_call\"] = \"function_call\";\n    NodeType[\"parameterized_data_type\"] = \"parameterized_data_type\";\n    NodeType[\"array_subscript\"] = \"array_subscript\";\n    NodeType[\"property_access\"] = \"property_access\";\n    NodeType[\"parenthesis\"] = \"parenthesis\";\n    NodeType[\"between_predicate\"] = \"between_predicate\";\n    NodeType[\"case_expression\"] = \"case_expression\";\n    NodeType[\"case_when\"] = \"case_when\";\n    NodeType[\"case_else\"] = \"case_else\";\n    NodeType[\"limit_clause\"] = \"limit_clause\";\n    NodeType[\"all_columns_asterisk\"] = \"all_columns_asterisk\";\n    NodeType[\"literal\"] = \"literal\";\n    NodeType[\"identifier\"] = \"identifier\";\n    NodeType[\"keyword\"] = \"keyword\";\n    NodeType[\"data_type\"] = \"data_type\";\n    NodeType[\"parameter\"] = \"parameter\";\n    NodeType[\"operator\"] = \"operator\";\n    NodeType[\"comma\"] = \"comma\";\n    NodeType[\"line_comment\"] = \"line_comment\";\n    NodeType[\"block_comment\"] = \"block_comment\";\n    NodeType[\"disable_comment\"] = \"disable_comment\";\n})(NodeType = NodeType || (NodeType = {}));\n//# sourceMappingURL=ast.js.map","// Generated automatically by nearley, version 2.20.1\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nfunction id(d) { return d[0]; }\nimport LexerAdapter from './LexerAdapter.js';\nimport { NodeType } from './ast.js';\nimport { TokenType } from '../lexer/token.js';\n// The lexer here is only to provide the has() method,\n// that's used inside the generated grammar definition.\n// A proper lexer gets passed to Nearley Parser constructor.\nconst lexer = new LexerAdapter(chunk => []);\n// Used for unwrapping grammar rules like:\n//\n//   rule -> ( foo | bar | baz )\n//\n// which otherwise produce single element nested inside two arrays\nconst unwrap = ([[el]]) => el;\nconst toKeywordNode = (token) => ({\n    type: NodeType.keyword,\n    tokenType: token.type,\n    text: token.text,\n    raw: token.raw,\n});\nconst toDataTypeNode = (token) => ({\n    type: NodeType.data_type,\n    text: token.text,\n    raw: token.raw,\n});\nconst addComments = (node, { leading, trailing }) => {\n    if (leading === null || leading === void 0 ? void 0 : leading.length) {\n        node = Object.assign(Object.assign({}, node), { leadingComments: leading });\n    }\n    if (trailing === null || trailing === void 0 ? void 0 : trailing.length) {\n        node = Object.assign(Object.assign({}, node), { trailingComments: trailing });\n    }\n    return node;\n};\nconst addCommentsToArray = (nodes, { leading, trailing }) => {\n    if (leading === null || leading === void 0 ? void 0 : leading.length) {\n        const [first, ...rest] = nodes;\n        nodes = [addComments(first, { leading }), ...rest];\n    }\n    if (trailing === null || trailing === void 0 ? void 0 : trailing.length) {\n        const lead = nodes.slice(0, -1);\n        const last = nodes[nodes.length - 1];\n        nodes = [...lead, addComments(last, { trailing })];\n    }\n    return nodes;\n};\n;\n;\n;\n;\nconst grammar = {\n    Lexer: lexer,\n    ParserRules: [\n        { \"name\": \"main$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [\"main$ebnf$1\", \"statement\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main\", \"symbols\": [\"main$ebnf$1\"], \"postprocess\": ([statements]) => {\n                const last = statements[statements.length - 1];\n                if (last && !last.hasSemicolon) {\n                    // we have fully parsed the whole file\n                    // discard the last statement when it's empty\n                    return last.children.length > 0 ? statements : statements.slice(0, -1);\n                }\n                else {\n                    // parsing still in progress, do nothing\n                    return statements;\n                }\n            }\n        },\n        { \"name\": \"statement$subexpression$1\", \"symbols\": [(lexer.has(\"DELIMITER\") ? { type: \"DELIMITER\" } : DELIMITER)] },\n        { \"name\": \"statement$subexpression$1\", \"symbols\": [(lexer.has(\"EOF\") ? { type: \"EOF\" } : EOF)] },\n        { \"name\": \"statement\", \"symbols\": [\"expressions_or_clauses\", \"statement$subexpression$1\"], \"postprocess\": ([children, [delimiter]]) => ({\n                type: NodeType.statement,\n                children,\n                hasSemicolon: delimiter.type === TokenType.DELIMITER,\n            })\n        },\n        { \"name\": \"expressions_or_clauses$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"expressions_or_clauses$ebnf$1\", \"symbols\": [\"expressions_or_clauses$ebnf$1\", \"free_form_sql\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expressions_or_clauses$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"expressions_or_clauses$ebnf$2\", \"symbols\": [\"expressions_or_clauses$ebnf$2\", \"clause\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expressions_or_clauses\", \"symbols\": [\"expressions_or_clauses$ebnf$1\", \"expressions_or_clauses$ebnf$2\"], \"postprocess\": ([expressions, clauses]) => [...expressions, ...clauses]\n        },\n        { \"name\": \"clause$subexpression$1\", \"symbols\": [\"limit_clause\"] },\n        { \"name\": \"clause$subexpression$1\", \"symbols\": [\"select_clause\"] },\n        { \"name\": \"clause$subexpression$1\", \"symbols\": [\"other_clause\"] },\n        { \"name\": \"clause$subexpression$1\", \"symbols\": [\"set_operation\"] },\n        { \"name\": \"clause\", \"symbols\": [\"clause$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"limit_clause$ebnf$1$subexpression$1$ebnf$1\", \"symbols\": [\"free_form_sql\"] },\n        { \"name\": \"limit_clause$ebnf$1$subexpression$1$ebnf$1\", \"symbols\": [\"limit_clause$ebnf$1$subexpression$1$ebnf$1\", \"free_form_sql\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"limit_clause$ebnf$1$subexpression$1\", \"symbols\": [(lexer.has(\"COMMA\") ? { type: \"COMMA\" } : COMMA), \"limit_clause$ebnf$1$subexpression$1$ebnf$1\"] },\n        { \"name\": \"limit_clause$ebnf$1\", \"symbols\": [\"limit_clause$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"limit_clause$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"limit_clause\", \"symbols\": [(lexer.has(\"LIMIT\") ? { type: \"LIMIT\" } : LIMIT), \"_\", \"expression_chain_\", \"limit_clause$ebnf$1\"], \"postprocess\": ([limitToken, _, exp1, optional]) => {\n                if (optional) {\n                    const [comma, exp2] = optional;\n                    return {\n                        type: NodeType.limit_clause,\n                        limitKw: addComments(toKeywordNode(limitToken), { trailing: _ }),\n                        offset: exp1,\n                        count: exp2,\n                    };\n                }\n                else {\n                    return {\n                        type: NodeType.limit_clause,\n                        limitKw: addComments(toKeywordNode(limitToken), { trailing: _ }),\n                        count: exp1,\n                    };\n                }\n            }\n        },\n        { \"name\": \"select_clause$subexpression$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"select_clause$subexpression$1$ebnf$1\", \"symbols\": [\"select_clause$subexpression$1$ebnf$1\", \"free_form_sql\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"select_clause$subexpression$1\", \"symbols\": [\"all_columns_asterisk\", \"select_clause$subexpression$1$ebnf$1\"] },\n        { \"name\": \"select_clause$subexpression$1$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"select_clause$subexpression$1$ebnf$2\", \"symbols\": [\"select_clause$subexpression$1$ebnf$2\", \"free_form_sql\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"select_clause$subexpression$1\", \"symbols\": [\"asteriskless_free_form_sql\", \"select_clause$subexpression$1$ebnf$2\"] },\n        { \"name\": \"select_clause\", \"symbols\": [(lexer.has(\"RESERVED_SELECT\") ? { type: \"RESERVED_SELECT\" } : RESERVED_SELECT), \"select_clause$subexpression$1\"], \"postprocess\": ([nameToken, [exp, expressions]]) => ({\n                type: NodeType.clause,\n                nameKw: toKeywordNode(nameToken),\n                children: [exp, ...expressions],\n            })\n        },\n        { \"name\": \"select_clause\", \"symbols\": [(lexer.has(\"RESERVED_SELECT\") ? { type: \"RESERVED_SELECT\" } : RESERVED_SELECT)], \"postprocess\": ([nameToken]) => ({\n                type: NodeType.clause,\n                nameKw: toKeywordNode(nameToken),\n                children: [],\n            })\n        },\n        { \"name\": \"all_columns_asterisk\", \"symbols\": [(lexer.has(\"ASTERISK\") ? { type: \"ASTERISK\" } : ASTERISK)], \"postprocess\": () => ({ type: NodeType.all_columns_asterisk })\n        },\n        { \"name\": \"other_clause$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"other_clause$ebnf$1\", \"symbols\": [\"other_clause$ebnf$1\", \"free_form_sql\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"other_clause\", \"symbols\": [(lexer.has(\"RESERVED_CLAUSE\") ? { type: \"RESERVED_CLAUSE\" } : RESERVED_CLAUSE), \"other_clause$ebnf$1\"], \"postprocess\": ([nameToken, children]) => ({\n                type: NodeType.clause,\n                nameKw: toKeywordNode(nameToken),\n                children,\n            })\n        },\n        { \"name\": \"set_operation$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"set_operation$ebnf$1\", \"symbols\": [\"set_operation$ebnf$1\", \"free_form_sql\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"set_operation\", \"symbols\": [(lexer.has(\"RESERVED_SET_OPERATION\") ? { type: \"RESERVED_SET_OPERATION\" } : RESERVED_SET_OPERATION), \"set_operation$ebnf$1\"], \"postprocess\": ([nameToken, children]) => ({\n                type: NodeType.set_operation,\n                nameKw: toKeywordNode(nameToken),\n                children,\n            })\n        },\n        { \"name\": \"expression_chain_$ebnf$1\", \"symbols\": [\"expression_with_comments_\"] },\n        { \"name\": \"expression_chain_$ebnf$1\", \"symbols\": [\"expression_chain_$ebnf$1\", \"expression_with_comments_\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expression_chain_\", \"symbols\": [\"expression_chain_$ebnf$1\"], \"postprocess\": id },\n        { \"name\": \"expression_chain$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"expression_chain$ebnf$1\", \"symbols\": [\"expression_chain$ebnf$1\", \"_expression_with_comments\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expression_chain\", \"symbols\": [\"expression\", \"expression_chain$ebnf$1\"], \"postprocess\": ([expr, chain]) => [expr, ...chain]\n        },\n        { \"name\": \"andless_expression_chain$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"andless_expression_chain$ebnf$1\", \"symbols\": [\"andless_expression_chain$ebnf$1\", \"_andless_expression_with_comments\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"andless_expression_chain\", \"symbols\": [\"andless_expression\", \"andless_expression_chain$ebnf$1\"], \"postprocess\": ([expr, chain]) => [expr, ...chain]\n        },\n        { \"name\": \"expression_with_comments_\", \"symbols\": [\"expression\", \"_\"], \"postprocess\": ([expr, _]) => addComments(expr, { trailing: _ })\n        },\n        { \"name\": \"_expression_with_comments\", \"symbols\": [\"_\", \"expression\"], \"postprocess\": ([_, expr]) => addComments(expr, { leading: _ })\n        },\n        { \"name\": \"_andless_expression_with_comments\", \"symbols\": [\"_\", \"andless_expression\"], \"postprocess\": ([_, expr]) => addComments(expr, { leading: _ })\n        },\n        { \"name\": \"free_form_sql$subexpression$1\", \"symbols\": [\"asteriskless_free_form_sql\"] },\n        { \"name\": \"free_form_sql$subexpression$1\", \"symbols\": [\"asterisk\"] },\n        { \"name\": \"free_form_sql\", \"symbols\": [\"free_form_sql$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"asteriskless_free_form_sql$subexpression$1\", \"symbols\": [\"asteriskless_andless_expression\"] },\n        { \"name\": \"asteriskless_free_form_sql$subexpression$1\", \"symbols\": [\"logic_operator\"] },\n        { \"name\": \"asteriskless_free_form_sql$subexpression$1\", \"symbols\": [\"comma\"] },\n        { \"name\": \"asteriskless_free_form_sql$subexpression$1\", \"symbols\": [\"comment\"] },\n        { \"name\": \"asteriskless_free_form_sql$subexpression$1\", \"symbols\": [\"other_keyword\"] },\n        { \"name\": \"asteriskless_free_form_sql\", \"symbols\": [\"asteriskless_free_form_sql$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expression$subexpression$1\", \"symbols\": [\"andless_expression\"] },\n        { \"name\": \"expression$subexpression$1\", \"symbols\": [\"logic_operator\"] },\n        { \"name\": \"expression\", \"symbols\": [\"expression$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"andless_expression$subexpression$1\", \"symbols\": [\"asteriskless_andless_expression\"] },\n        { \"name\": \"andless_expression$subexpression$1\", \"symbols\": [\"asterisk\"] },\n        { \"name\": \"andless_expression\", \"symbols\": [\"andless_expression$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"asteriskless_andless_expression$subexpression$1\", \"symbols\": [\"atomic_expression\"] },\n        { \"name\": \"asteriskless_andless_expression$subexpression$1\", \"symbols\": [\"between_predicate\"] },\n        { \"name\": \"asteriskless_andless_expression$subexpression$1\", \"symbols\": [\"case_expression\"] },\n        { \"name\": \"asteriskless_andless_expression\", \"symbols\": [\"asteriskless_andless_expression$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"array_subscript\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"function_call\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"property_access\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"parenthesis\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"curly_braces\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"square_brackets\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"operator\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"identifier\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"parameter\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"literal\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"data_type\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"keyword\"] },\n        { \"name\": \"atomic_expression\", \"symbols\": [\"atomic_expression$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"array_subscript\", \"symbols\": [(lexer.has(\"ARRAY_IDENTIFIER\") ? { type: \"ARRAY_IDENTIFIER\" } : ARRAY_IDENTIFIER), \"_\", \"square_brackets\"], \"postprocess\": ([arrayToken, _, brackets]) => ({\n                type: NodeType.array_subscript,\n                array: addComments({ type: NodeType.identifier, quoted: false, text: arrayToken.text }, { trailing: _ }),\n                parenthesis: brackets,\n            })\n        },\n        { \"name\": \"array_subscript\", \"symbols\": [(lexer.has(\"ARRAY_KEYWORD\") ? { type: \"ARRAY_KEYWORD\" } : ARRAY_KEYWORD), \"_\", \"square_brackets\"], \"postprocess\": ([arrayToken, _, brackets]) => ({\n                type: NodeType.array_subscript,\n                array: addComments(toKeywordNode(arrayToken), { trailing: _ }),\n                parenthesis: brackets,\n            })\n        },\n        { \"name\": \"function_call\", \"symbols\": [(lexer.has(\"RESERVED_FUNCTION_NAME\") ? { type: \"RESERVED_FUNCTION_NAME\" } : RESERVED_FUNCTION_NAME), \"_\", \"parenthesis\"], \"postprocess\": ([nameToken, _, parens]) => ({\n                type: NodeType.function_call,\n                nameKw: addComments(toKeywordNode(nameToken), { trailing: _ }),\n                parenthesis: parens,\n            })\n        },\n        { \"name\": \"parenthesis\", \"symbols\": [{ \"literal\": \"(\" }, \"expressions_or_clauses\", { \"literal\": \")\" }], \"postprocess\": ([open, children, close]) => ({\n                type: NodeType.parenthesis,\n                children: children,\n                openParen: \"(\",\n                closeParen: \")\",\n            })\n        },\n        { \"name\": \"curly_braces$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"curly_braces$ebnf$1\", \"symbols\": [\"curly_braces$ebnf$1\", \"free_form_sql\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"curly_braces\", \"symbols\": [{ \"literal\": \"{\" }, \"curly_braces$ebnf$1\", { \"literal\": \"}\" }], \"postprocess\": ([open, children, close]) => ({\n                type: NodeType.parenthesis,\n                children: children,\n                openParen: \"{\",\n                closeParen: \"}\",\n            })\n        },\n        { \"name\": \"square_brackets$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"square_brackets$ebnf$1\", \"symbols\": [\"square_brackets$ebnf$1\", \"free_form_sql\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"square_brackets\", \"symbols\": [{ \"literal\": \"[\" }, \"square_brackets$ebnf$1\", { \"literal\": \"]\" }], \"postprocess\": ([open, children, close]) => ({\n                type: NodeType.parenthesis,\n                children: children,\n                openParen: \"[\",\n                closeParen: \"]\",\n            })\n        },\n        { \"name\": \"property_access$subexpression$1\", \"symbols\": [\"identifier\"] },\n        { \"name\": \"property_access$subexpression$1\", \"symbols\": [\"array_subscript\"] },\n        { \"name\": \"property_access$subexpression$1\", \"symbols\": [\"all_columns_asterisk\"] },\n        { \"name\": \"property_access$subexpression$1\", \"symbols\": [\"parameter\"] },\n        { \"name\": \"property_access\", \"symbols\": [\"atomic_expression\", \"_\", (lexer.has(\"PROPERTY_ACCESS_OPERATOR\") ? { type: \"PROPERTY_ACCESS_OPERATOR\" } : PROPERTY_ACCESS_OPERATOR), \"_\", \"property_access$subexpression$1\"], \"postprocess\": \n            // Allowing property to be <array_subscript> is currently a hack.\n            // A better way would be to allow <property_access> on the left side of array_subscript,\n            // but we currently can't do that because of another hack that requires\n            // %ARRAY_IDENTIFIER on the left side of <array_subscript>.\n            ([object, _1, dot, _2, [property]]) => {\n                return {\n                    type: NodeType.property_access,\n                    object: addComments(object, { trailing: _1 }),\n                    operator: dot.text,\n                    property: addComments(property, { leading: _2 }),\n                };\n            }\n        },\n        { \"name\": \"between_predicate\", \"symbols\": [(lexer.has(\"BETWEEN\") ? { type: \"BETWEEN\" } : BETWEEN), \"_\", \"andless_expression_chain\", \"_\", (lexer.has(\"AND\") ? { type: \"AND\" } : AND), \"_\", \"andless_expression\"], \"postprocess\": ([betweenToken, _1, expr1, _2, andToken, _3, expr2]) => ({\n                type: NodeType.between_predicate,\n                betweenKw: toKeywordNode(betweenToken),\n                expr1: addCommentsToArray(expr1, { leading: _1, trailing: _2 }),\n                andKw: toKeywordNode(andToken),\n                expr2: [addComments(expr2, { leading: _3 })],\n            })\n        },\n        { \"name\": \"case_expression$ebnf$1\", \"symbols\": [\"expression_chain_\"], \"postprocess\": id },\n        { \"name\": \"case_expression$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"case_expression$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"case_expression$ebnf$2\", \"symbols\": [\"case_expression$ebnf$2\", \"case_clause\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"case_expression\", \"symbols\": [(lexer.has(\"CASE\") ? { type: \"CASE\" } : CASE), \"_\", \"case_expression$ebnf$1\", \"case_expression$ebnf$2\", (lexer.has(\"END\") ? { type: \"END\" } : END)], \"postprocess\": ([caseToken, _, expr, clauses, endToken]) => ({\n                type: NodeType.case_expression,\n                caseKw: addComments(toKeywordNode(caseToken), { trailing: _ }),\n                endKw: toKeywordNode(endToken),\n                expr: expr || [],\n                clauses,\n            })\n        },\n        { \"name\": \"case_clause\", \"symbols\": [(lexer.has(\"WHEN\") ? { type: \"WHEN\" } : WHEN), \"_\", \"expression_chain_\", (lexer.has(\"THEN\") ? { type: \"THEN\" } : THEN), \"_\", \"expression_chain_\"], \"postprocess\": ([whenToken, _1, cond, thenToken, _2, expr]) => ({\n                type: NodeType.case_when,\n                whenKw: addComments(toKeywordNode(whenToken), { trailing: _1 }),\n                thenKw: addComments(toKeywordNode(thenToken), { trailing: _2 }),\n                condition: cond,\n                result: expr,\n            })\n        },\n        { \"name\": \"case_clause\", \"symbols\": [(lexer.has(\"ELSE\") ? { type: \"ELSE\" } : ELSE), \"_\", \"expression_chain_\"], \"postprocess\": ([elseToken, _, expr]) => ({\n                type: NodeType.case_else,\n                elseKw: addComments(toKeywordNode(elseToken), { trailing: _ }),\n                result: expr,\n            })\n        },\n        { \"name\": \"comma$subexpression$1\", \"symbols\": [(lexer.has(\"COMMA\") ? { type: \"COMMA\" } : COMMA)] },\n        { \"name\": \"comma\", \"symbols\": [\"comma$subexpression$1\"], \"postprocess\": ([[token]]) => ({ type: NodeType.comma }) },\n        { \"name\": \"asterisk$subexpression$1\", \"symbols\": [(lexer.has(\"ASTERISK\") ? { type: \"ASTERISK\" } : ASTERISK)] },\n        { \"name\": \"asterisk\", \"symbols\": [\"asterisk$subexpression$1\"], \"postprocess\": ([[token]]) => ({ type: NodeType.operator, text: token.text }) },\n        { \"name\": \"operator$subexpression$1\", \"symbols\": [(lexer.has(\"OPERATOR\") ? { type: \"OPERATOR\" } : OPERATOR)] },\n        { \"name\": \"operator\", \"symbols\": [\"operator$subexpression$1\"], \"postprocess\": ([[token]]) => ({ type: NodeType.operator, text: token.text }) },\n        { \"name\": \"identifier$subexpression$1\", \"symbols\": [(lexer.has(\"IDENTIFIER\") ? { type: \"IDENTIFIER\" } : IDENTIFIER)] },\n        { \"name\": \"identifier$subexpression$1\", \"symbols\": [(lexer.has(\"QUOTED_IDENTIFIER\") ? { type: \"QUOTED_IDENTIFIER\" } : QUOTED_IDENTIFIER)] },\n        { \"name\": \"identifier$subexpression$1\", \"symbols\": [(lexer.has(\"VARIABLE\") ? { type: \"VARIABLE\" } : VARIABLE)] },\n        { \"name\": \"identifier\", \"symbols\": [\"identifier$subexpression$1\"], \"postprocess\": ([[token]]) => ({ type: NodeType.identifier, quoted: token.type !== \"IDENTIFIER\", text: token.text }) },\n        { \"name\": \"parameter$subexpression$1\", \"symbols\": [(lexer.has(\"NAMED_PARAMETER\") ? { type: \"NAMED_PARAMETER\" } : NAMED_PARAMETER)] },\n        { \"name\": \"parameter$subexpression$1\", \"symbols\": [(lexer.has(\"QUOTED_PARAMETER\") ? { type: \"QUOTED_PARAMETER\" } : QUOTED_PARAMETER)] },\n        { \"name\": \"parameter$subexpression$1\", \"symbols\": [(lexer.has(\"NUMBERED_PARAMETER\") ? { type: \"NUMBERED_PARAMETER\" } : NUMBERED_PARAMETER)] },\n        { \"name\": \"parameter$subexpression$1\", \"symbols\": [(lexer.has(\"POSITIONAL_PARAMETER\") ? { type: \"POSITIONAL_PARAMETER\" } : POSITIONAL_PARAMETER)] },\n        { \"name\": \"parameter$subexpression$1\", \"symbols\": [(lexer.has(\"CUSTOM_PARAMETER\") ? { type: \"CUSTOM_PARAMETER\" } : CUSTOM_PARAMETER)] },\n        { \"name\": \"parameter\", \"symbols\": [\"parameter$subexpression$1\"], \"postprocess\": ([[token]]) => ({ type: NodeType.parameter, key: token.key, text: token.text }) },\n        { \"name\": \"literal$subexpression$1\", \"symbols\": [(lexer.has(\"NUMBER\") ? { type: \"NUMBER\" } : NUMBER)] },\n        { \"name\": \"literal$subexpression$1\", \"symbols\": [(lexer.has(\"STRING\") ? { type: \"STRING\" } : STRING)] },\n        { \"name\": \"literal\", \"symbols\": [\"literal$subexpression$1\"], \"postprocess\": ([[token]]) => ({ type: NodeType.literal, text: token.text }) },\n        { \"name\": \"keyword$subexpression$1\", \"symbols\": [(lexer.has(\"RESERVED_KEYWORD\") ? { type: \"RESERVED_KEYWORD\" } : RESERVED_KEYWORD)] },\n        { \"name\": \"keyword$subexpression$1\", \"symbols\": [(lexer.has(\"RESERVED_KEYWORD_PHRASE\") ? { type: \"RESERVED_KEYWORD_PHRASE\" } : RESERVED_KEYWORD_PHRASE)] },\n        { \"name\": \"keyword$subexpression$1\", \"symbols\": [(lexer.has(\"RESERVED_JOIN\") ? { type: \"RESERVED_JOIN\" } : RESERVED_JOIN)] },\n        { \"name\": \"keyword\", \"symbols\": [\"keyword$subexpression$1\"], \"postprocess\": ([[token]]) => toKeywordNode(token)\n        },\n        { \"name\": \"data_type$subexpression$1\", \"symbols\": [(lexer.has(\"RESERVED_DATA_TYPE\") ? { type: \"RESERVED_DATA_TYPE\" } : RESERVED_DATA_TYPE)] },\n        { \"name\": \"data_type$subexpression$1\", \"symbols\": [(lexer.has(\"RESERVED_DATA_TYPE_PHRASE\") ? { type: \"RESERVED_DATA_TYPE_PHRASE\" } : RESERVED_DATA_TYPE_PHRASE)] },\n        { \"name\": \"data_type\", \"symbols\": [\"data_type$subexpression$1\"], \"postprocess\": ([[token]]) => toDataTypeNode(token)\n        },\n        { \"name\": \"data_type\", \"symbols\": [(lexer.has(\"RESERVED_PARAMETERIZED_DATA_TYPE\") ? { type: \"RESERVED_PARAMETERIZED_DATA_TYPE\" } : RESERVED_PARAMETERIZED_DATA_TYPE), \"_\", \"parenthesis\"], \"postprocess\": ([nameToken, _, parens]) => ({\n                type: NodeType.parameterized_data_type,\n                dataType: addComments(toDataTypeNode(nameToken), { trailing: _ }),\n                parenthesis: parens,\n            })\n        },\n        { \"name\": \"logic_operator$subexpression$1\", \"symbols\": [(lexer.has(\"AND\") ? { type: \"AND\" } : AND)] },\n        { \"name\": \"logic_operator$subexpression$1\", \"symbols\": [(lexer.has(\"OR\") ? { type: \"OR\" } : OR)] },\n        { \"name\": \"logic_operator$subexpression$1\", \"symbols\": [(lexer.has(\"XOR\") ? { type: \"XOR\" } : XOR)] },\n        { \"name\": \"logic_operator\", \"symbols\": [\"logic_operator$subexpression$1\"], \"postprocess\": ([[token]]) => toKeywordNode(token)\n        },\n        { \"name\": \"other_keyword$subexpression$1\", \"symbols\": [(lexer.has(\"WHEN\") ? { type: \"WHEN\" } : WHEN)] },\n        { \"name\": \"other_keyword$subexpression$1\", \"symbols\": [(lexer.has(\"THEN\") ? { type: \"THEN\" } : THEN)] },\n        { \"name\": \"other_keyword$subexpression$1\", \"symbols\": [(lexer.has(\"ELSE\") ? { type: \"ELSE\" } : ELSE)] },\n        { \"name\": \"other_keyword$subexpression$1\", \"symbols\": [(lexer.has(\"END\") ? { type: \"END\" } : END)] },\n        { \"name\": \"other_keyword\", \"symbols\": [\"other_keyword$subexpression$1\"], \"postprocess\": ([[token]]) => toKeywordNode(token)\n        },\n        { \"name\": \"_$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"_$ebnf$1\", \"symbols\": [\"_$ebnf$1\", \"comment\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"_\", \"symbols\": [\"_$ebnf$1\"], \"postprocess\": ([comments]) => comments },\n        { \"name\": \"comment\", \"symbols\": [(lexer.has(\"LINE_COMMENT\") ? { type: \"LINE_COMMENT\" } : LINE_COMMENT)], \"postprocess\": ([token]) => ({\n                type: NodeType.line_comment,\n                text: token.text,\n                precedingWhitespace: token.precedingWhitespace,\n            })\n        },\n        { \"name\": \"comment\", \"symbols\": [(lexer.has(\"BLOCK_COMMENT\") ? { type: \"BLOCK_COMMENT\" } : BLOCK_COMMENT)], \"postprocess\": ([token]) => ({\n                type: NodeType.block_comment,\n                text: token.text,\n                precedingWhitespace: token.precedingWhitespace,\n            })\n        },\n        { \"name\": \"comment\", \"symbols\": [(lexer.has(\"DISABLE_COMMENT\") ? { type: \"DISABLE_COMMENT\" } : DISABLE_COMMENT)], \"postprocess\": ([token]) => ({\n                type: NodeType.disable_comment,\n                text: token.text,\n                precedingWhitespace: token.precedingWhitespace,\n            })\n        }\n    ],\n    ParserStart: \"main\",\n};\nexport default grammar;\n//# sourceMappingURL=grammar.js.map","import nearley from 'nearley';\nimport { disambiguateTokens } from '../lexer/disambiguateTokens.js';\nimport grammar from './grammar.js';\nimport LexerAdapter from './LexerAdapter.js';\nimport { createEofToken } from '../lexer/token.js';\nconst { Parser: NearleyParser, Grammar } = nearley;\n/**\n * Creates a parser object which wraps the setup of Nearley parser\n */\nexport function createParser(tokenizer) {\n    let paramTypesOverrides = {};\n    const lexer = new LexerAdapter(chunk => [\n        ...disambiguateTokens(tokenizer.tokenize(chunk, paramTypesOverrides)),\n        createEofToken(chunk.length),\n    ]);\n    const parser = new NearleyParser(Grammar.fromCompiled(grammar), { lexer });\n    return {\n        parse: (sql, paramTypes) => {\n            // share paramTypesOverrides with Tokenizer\n            paramTypesOverrides = paramTypes;\n            const { results } = parser.feed(sql);\n            if (results.length === 1) {\n                return results[0];\n            }\n            else if (results.length === 0) {\n                // Ideally we would report a line number where the parser failed,\n                // but I haven't found a way to get this info from Nearley :(\n                throw new Error('Parse error: Invalid SQL');\n            }\n            else {\n                throw new Error(`Parse error: Ambiguous grammar\\n${JSON.stringify(results, undefined, 2)}`);\n            }\n        },\n    };\n}\n//# sourceMappingURL=createParser.js.map","import { last } from '../utils.js';\n/** Whitespace modifiers to be used with add() method */\nexport var WS;\n(function (WS) {\n    WS[WS[\"SPACE\"] = 0] = \"SPACE\";\n    WS[WS[\"NO_SPACE\"] = 1] = \"NO_SPACE\";\n    WS[WS[\"NO_NEWLINE\"] = 2] = \"NO_NEWLINE\";\n    WS[WS[\"NEWLINE\"] = 3] = \"NEWLINE\";\n    WS[WS[\"MANDATORY_NEWLINE\"] = 4] = \"MANDATORY_NEWLINE\";\n    WS[WS[\"INDENT\"] = 5] = \"INDENT\";\n    WS[WS[\"SINGLE_INDENT\"] = 6] = \"SINGLE_INDENT\";\n})(WS = WS || (WS = {}));\n/**\n * API for constructing SQL string (especially the whitespace part).\n *\n * It hides the internal implementation.\n * Originally it used plain string concatenation, which was expensive.\n * Now it's storing items to array and builds the string only in the end.\n */\nexport default class Layout {\n    constructor(indentation) {\n        this.indentation = indentation;\n        this.items = [];\n    }\n    /**\n     * Appends token strings and whitespace modifications to SQL string.\n     */\n    add(...items) {\n        for (const item of items) {\n            switch (item) {\n                case WS.SPACE:\n                    this.items.push(WS.SPACE);\n                    break;\n                case WS.NO_SPACE:\n                    this.trimHorizontalWhitespace();\n                    break;\n                case WS.NO_NEWLINE:\n                    this.trimWhitespace();\n                    break;\n                case WS.NEWLINE:\n                    this.trimHorizontalWhitespace();\n                    this.addNewline(WS.NEWLINE);\n                    break;\n                case WS.MANDATORY_NEWLINE:\n                    this.trimHorizontalWhitespace();\n                    this.addNewline(WS.MANDATORY_NEWLINE);\n                    break;\n                case WS.INDENT:\n                    this.addIndentation();\n                    break;\n                case WS.SINGLE_INDENT:\n                    this.items.push(WS.SINGLE_INDENT);\n                    break;\n                default:\n                    this.items.push(item);\n            }\n        }\n    }\n    trimHorizontalWhitespace() {\n        while (isHorizontalWhitespace(last(this.items))) {\n            this.items.pop();\n        }\n    }\n    trimWhitespace() {\n        while (isRemovableWhitespace(last(this.items))) {\n            this.items.pop();\n        }\n    }\n    addNewline(newline) {\n        if (this.items.length > 0) {\n            switch (last(this.items)) {\n                case WS.NEWLINE:\n                    this.items.pop();\n                    this.items.push(newline);\n                    break;\n                case WS.MANDATORY_NEWLINE:\n                    // keep as is\n                    break;\n                default:\n                    this.items.push(newline);\n                    break;\n            }\n        }\n    }\n    addIndentation() {\n        for (let i = 0; i < this.indentation.getLevel(); i++) {\n            this.items.push(WS.SINGLE_INDENT);\n        }\n    }\n    /**\n     * Returns the final SQL string.\n     */\n    toString() {\n        return this.items.map(item => this.itemToString(item)).join('');\n    }\n    /**\n     * Returns the internal layout data\n     */\n    getLayoutItems() {\n        return this.items;\n    }\n    itemToString(item) {\n        switch (item) {\n            case WS.SPACE:\n                return ' ';\n            case WS.NEWLINE:\n            case WS.MANDATORY_NEWLINE:\n                return '\\n';\n            case WS.SINGLE_INDENT:\n                return this.indentation.getSingleIndent();\n            default:\n                return item;\n        }\n    }\n}\nconst isHorizontalWhitespace = (item) => item === WS.SPACE || item === WS.SINGLE_INDENT;\nconst isRemovableWhitespace = (item) => item === WS.SPACE || item === WS.SINGLE_INDENT || item === WS.NEWLINE;\n//# sourceMappingURL=Layout.js.map","import { isLogicalOperator, TokenType } from '../lexer/token.js';\n/**\n * When tabular style enabled,\n * produces a 10-char wide version of token text.\n */\nexport default function toTabularFormat(tokenText, indentStyle) {\n    if (indentStyle === 'standard') {\n        return tokenText;\n    }\n    let tail = []; // rest of keyword\n    if (tokenText.length >= 10 && tokenText.includes(' ')) {\n        // split for long keywords like INNER JOIN or UNION DISTINCT\n        [tokenText, ...tail] = tokenText.split(' ');\n    }\n    if (indentStyle === 'tabularLeft') {\n        tokenText = tokenText.padEnd(9, ' ');\n    }\n    else {\n        tokenText = tokenText.padStart(9, ' ');\n    }\n    return tokenText + ['', ...tail].join(' ');\n}\n/**\n * True when the token can be formatted in tabular style\n */\nexport function isTabularToken(type) {\n    return (isLogicalOperator(type) ||\n        type === TokenType.RESERVED_CLAUSE ||\n        type === TokenType.RESERVED_SELECT ||\n        type === TokenType.RESERVED_SET_OPERATION ||\n        type === TokenType.RESERVED_JOIN ||\n        type === TokenType.LIMIT);\n}\n//# sourceMappingURL=tabularStyle.js.map","import { last } from '../utils.js';\nconst INDENT_TYPE_TOP_LEVEL = 'top-level';\nconst INDENT_TYPE_BLOCK_LEVEL = 'block-level';\n/**\n * Manages indentation levels.\n *\n * There are two types of indentation levels:\n *\n * - BLOCK_LEVEL : increased by open-parenthesis\n * - TOP_LEVEL : increased by RESERVED_CLAUSE words\n */\nexport default class Indentation {\n    /**\n     * @param {string} indent A string to indent with\n     */\n    constructor(indent) {\n        this.indent = indent;\n        this.indentTypes = [];\n    }\n    /**\n     * Returns indentation string for single indentation step.\n     */\n    getSingleIndent() {\n        return this.indent;\n    }\n    /**\n     * Returns current indentation level\n     */\n    getLevel() {\n        return this.indentTypes.length;\n    }\n    /**\n     * Increases indentation by one top-level indent.\n     */\n    increaseTopLevel() {\n        this.indentTypes.push(INDENT_TYPE_TOP_LEVEL);\n    }\n    /**\n     * Increases indentation by one block-level indent.\n     */\n    increaseBlockLevel() {\n        this.indentTypes.push(INDENT_TYPE_BLOCK_LEVEL);\n    }\n    /**\n     * Decreases indentation by one top-level indent.\n     * Does nothing when the previous indent is not top-level.\n     */\n    decreaseTopLevel() {\n        if (this.indentTypes.length > 0 && last(this.indentTypes) === INDENT_TYPE_TOP_LEVEL) {\n            this.indentTypes.pop();\n        }\n    }\n    /**\n     * Decreases indentation by one block-level indent.\n     * If there are top-level indents within the block-level indent,\n     * throws away these as well.\n     */\n    decreaseBlockLevel() {\n        while (this.indentTypes.length > 0) {\n            const type = this.indentTypes.pop();\n            if (type !== INDENT_TYPE_TOP_LEVEL) {\n                break;\n            }\n        }\n    }\n}\n//# sourceMappingURL=Indentation.js.map","// eslint-disable-next-line max-classes-per-file\nimport Indentation from './Indentation.js';\nimport Layout, { WS } from './Layout.js';\n/**\n * Like Layout, but only formats single-line expressions.\n *\n * Throws InlineLayoutError:\n * - when encountering a newline\n * - when exceeding configured expressionWidth\n */\nexport default class InlineLayout extends Layout {\n    constructor(expressionWidth) {\n        super(new Indentation('')); // no indentation in inline layout\n        this.expressionWidth = expressionWidth;\n        this.length = 0;\n        // Keeps track of the trailing whitespace,\n        // so that we can decrease length when encountering WS.NO_SPACE,\n        // but only when there actually is a space to remove.\n        this.trailingSpace = false;\n    }\n    add(...items) {\n        items.forEach(item => this.addToLength(item));\n        if (this.length > this.expressionWidth) {\n            // We have exceeded the allowable width\n            throw new InlineLayoutError();\n        }\n        super.add(...items);\n    }\n    addToLength(item) {\n        if (typeof item === 'string') {\n            this.length += item.length;\n            this.trailingSpace = false;\n        }\n        else if (item === WS.MANDATORY_NEWLINE || item === WS.NEWLINE) {\n            // newlines not allowed within inline block\n            throw new InlineLayoutError();\n        }\n        else if (item === WS.INDENT || item === WS.SINGLE_INDENT || item === WS.SPACE) {\n            if (!this.trailingSpace) {\n                this.length++;\n                this.trailingSpace = true;\n            }\n        }\n        else if (item === WS.NO_NEWLINE || item === WS.NO_SPACE) {\n            if (this.trailingSpace) {\n                this.trailingSpace = false;\n                this.length--;\n            }\n        }\n    }\n}\n/**\n * Thrown when block of SQL can't be formatted as a single line.\n */\nexport class InlineLayoutError extends Error {\n}\n//# sourceMappingURL=InlineLayout.js.map","import { equalizeWhitespace, isMultiline, last } from '../utils.js';\nimport { isTabularStyle } from './config.js';\nimport { TokenType } from '../lexer/token.js';\nimport { NodeType, } from '../parser/ast.js';\nimport { WS } from './Layout.js';\nimport toTabularFormat, { isTabularToken } from './tabularStyle.js';\nimport InlineLayout, { InlineLayoutError } from './InlineLayout.js';\n/** Formats a generic SQL expression */\nexport default class ExpressionFormatter {\n    constructor({ cfg, dialectCfg, params, layout, inline = false }) {\n        this.inline = false;\n        this.nodes = [];\n        this.index = -1;\n        this.cfg = cfg;\n        this.dialectCfg = dialectCfg;\n        this.inline = inline;\n        this.params = params;\n        this.layout = layout;\n    }\n    format(nodes) {\n        this.nodes = nodes;\n        for (this.index = 0; this.index < this.nodes.length; this.index++) {\n            this.formatNode(this.nodes[this.index]);\n        }\n        return this.layout;\n    }\n    formatNode(node) {\n        this.formatComments(node.leadingComments);\n        this.formatNodeWithoutComments(node);\n        this.formatComments(node.trailingComments);\n    }\n    formatNodeWithoutComments(node) {\n        switch (node.type) {\n            case NodeType.function_call:\n                return this.formatFunctionCall(node);\n            case NodeType.parameterized_data_type:\n                return this.formatParameterizedDataType(node);\n            case NodeType.array_subscript:\n                return this.formatArraySubscript(node);\n            case NodeType.property_access:\n                return this.formatPropertyAccess(node);\n            case NodeType.parenthesis:\n                return this.formatParenthesis(node);\n            case NodeType.between_predicate:\n                return this.formatBetweenPredicate(node);\n            case NodeType.case_expression:\n                return this.formatCaseExpression(node);\n            case NodeType.case_when:\n                return this.formatCaseWhen(node);\n            case NodeType.case_else:\n                return this.formatCaseElse(node);\n            case NodeType.clause:\n                return this.formatClause(node);\n            case NodeType.set_operation:\n                return this.formatSetOperation(node);\n            case NodeType.limit_clause:\n                return this.formatLimitClause(node);\n            case NodeType.all_columns_asterisk:\n                return this.formatAllColumnsAsterisk(node);\n            case NodeType.literal:\n                return this.formatLiteral(node);\n            case NodeType.identifier:\n                return this.formatIdentifier(node);\n            case NodeType.parameter:\n                return this.formatParameter(node);\n            case NodeType.operator:\n                return this.formatOperator(node);\n            case NodeType.comma:\n                return this.formatComma(node);\n            case NodeType.line_comment:\n                return this.formatLineComment(node);\n            case NodeType.block_comment:\n                return this.formatBlockComment(node);\n            case NodeType.disable_comment:\n                return this.formatBlockComment(node);\n            case NodeType.data_type:\n                return this.formatDataType(node);\n            case NodeType.keyword:\n                return this.formatKeywordNode(node);\n        }\n    }\n    formatFunctionCall(node) {\n        this.withComments(node.nameKw, () => {\n            this.layout.add(this.showFunctionKw(node.nameKw));\n        });\n        this.formatNode(node.parenthesis);\n    }\n    formatParameterizedDataType(node) {\n        this.withComments(node.dataType, () => {\n            this.layout.add(this.showDataType(node.dataType));\n        });\n        this.formatNode(node.parenthesis);\n    }\n    formatArraySubscript(node) {\n        let formattedArray;\n        switch (node.array.type) {\n            case NodeType.data_type:\n                formattedArray = this.showDataType(node.array);\n                break;\n            case NodeType.keyword:\n                formattedArray = this.showKw(node.array);\n                break;\n            default:\n                formattedArray = this.showIdentifier(node.array);\n                break;\n        }\n        this.withComments(node.array, () => {\n            this.layout.add(formattedArray);\n        });\n        this.formatNode(node.parenthesis);\n    }\n    formatPropertyAccess(node) {\n        this.formatNode(node.object);\n        this.layout.add(WS.NO_SPACE, node.operator);\n        this.formatNode(node.property);\n    }\n    formatParenthesis(node) {\n        const inlineLayout = this.formatInlineExpression(node.children);\n        if (inlineLayout) {\n            this.layout.add(node.openParen);\n            this.layout.add(...inlineLayout.getLayoutItems());\n            this.layout.add(WS.NO_SPACE, node.closeParen, WS.SPACE);\n        }\n        else {\n            this.layout.add(node.openParen, WS.NEWLINE);\n            if (isTabularStyle(this.cfg)) {\n                this.layout.add(WS.INDENT);\n                this.layout = this.formatSubExpression(node.children);\n            }\n            else {\n                this.layout.indentation.increaseBlockLevel();\n                this.layout.add(WS.INDENT);\n                this.layout = this.formatSubExpression(node.children);\n                this.layout.indentation.decreaseBlockLevel();\n            }\n            this.layout.add(WS.NEWLINE, WS.INDENT, node.closeParen, WS.SPACE);\n        }\n    }\n    formatBetweenPredicate(node) {\n        this.layout.add(this.showKw(node.betweenKw), WS.SPACE);\n        this.layout = this.formatSubExpression(node.expr1);\n        this.layout.add(WS.NO_SPACE, WS.SPACE, this.showNonTabularKw(node.andKw), WS.SPACE);\n        this.layout = this.formatSubExpression(node.expr2);\n        this.layout.add(WS.SPACE);\n    }\n    formatCaseExpression(node) {\n        this.formatNode(node.caseKw);\n        this.layout.indentation.increaseBlockLevel();\n        this.layout = this.formatSubExpression(node.expr);\n        this.layout = this.formatSubExpression(node.clauses);\n        this.layout.indentation.decreaseBlockLevel();\n        this.layout.add(WS.NEWLINE, WS.INDENT);\n        this.formatNode(node.endKw);\n    }\n    formatCaseWhen(node) {\n        this.layout.add(WS.NEWLINE, WS.INDENT);\n        this.formatNode(node.whenKw);\n        this.layout = this.formatSubExpression(node.condition);\n        this.formatNode(node.thenKw);\n        this.layout = this.formatSubExpression(node.result);\n    }\n    formatCaseElse(node) {\n        this.layout.add(WS.NEWLINE, WS.INDENT);\n        this.formatNode(node.elseKw);\n        this.layout = this.formatSubExpression(node.result);\n    }\n    formatClause(node) {\n        if (this.isOnelineClause(node)) {\n            this.formatClauseInOnelineStyle(node);\n        }\n        else if (isTabularStyle(this.cfg)) {\n            this.formatClauseInTabularStyle(node);\n        }\n        else {\n            this.formatClauseInIndentedStyle(node);\n        }\n    }\n    isOnelineClause(node) {\n        if (isTabularStyle(this.cfg)) {\n            return this.dialectCfg.tabularOnelineClauses[node.nameKw.text];\n        }\n        else {\n            return this.dialectCfg.onelineClauses[node.nameKw.text];\n        }\n    }\n    formatClauseInIndentedStyle(node) {\n        this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node.nameKw), WS.NEWLINE);\n        this.layout.indentation.increaseTopLevel();\n        this.layout.add(WS.INDENT);\n        this.layout = this.formatSubExpression(node.children);\n        this.layout.indentation.decreaseTopLevel();\n    }\n    formatClauseInOnelineStyle(node) {\n        this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node.nameKw), WS.SPACE);\n        this.layout = this.formatSubExpression(node.children);\n    }\n    formatClauseInTabularStyle(node) {\n        this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node.nameKw), WS.SPACE);\n        this.layout.indentation.increaseTopLevel();\n        this.layout = this.formatSubExpression(node.children);\n        this.layout.indentation.decreaseTopLevel();\n    }\n    formatSetOperation(node) {\n        this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node.nameKw), WS.NEWLINE);\n        this.layout.add(WS.INDENT);\n        this.layout = this.formatSubExpression(node.children);\n    }\n    formatLimitClause(node) {\n        this.withComments(node.limitKw, () => {\n            this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node.limitKw));\n        });\n        this.layout.indentation.increaseTopLevel();\n        if (isTabularStyle(this.cfg)) {\n            this.layout.add(WS.SPACE);\n        }\n        else {\n            this.layout.add(WS.NEWLINE, WS.INDENT);\n        }\n        if (node.offset) {\n            this.layout = this.formatSubExpression(node.offset);\n            this.layout.add(WS.NO_SPACE, ',', WS.SPACE);\n            this.layout = this.formatSubExpression(node.count);\n        }\n        else {\n            this.layout = this.formatSubExpression(node.count);\n        }\n        this.layout.indentation.decreaseTopLevel();\n    }\n    formatAllColumnsAsterisk(_node) {\n        this.layout.add('*', WS.SPACE);\n    }\n    formatLiteral(node) {\n        this.layout.add(node.text, WS.SPACE);\n    }\n    formatIdentifier(node) {\n        this.layout.add(this.showIdentifier(node), WS.SPACE);\n    }\n    formatParameter(node) {\n        this.layout.add(this.params.get(node), WS.SPACE);\n    }\n    formatOperator({ text }) {\n        if (this.cfg.denseOperators || this.dialectCfg.alwaysDenseOperators.includes(text)) {\n            this.layout.add(WS.NO_SPACE, text);\n        }\n        else if (text === ':') {\n            this.layout.add(WS.NO_SPACE, text, WS.SPACE);\n        }\n        else {\n            this.layout.add(text, WS.SPACE);\n        }\n    }\n    formatComma(_node) {\n        if (!this.inline) {\n            this.layout.add(WS.NO_SPACE, ',', WS.NEWLINE, WS.INDENT);\n        }\n        else {\n            this.layout.add(WS.NO_SPACE, ',', WS.SPACE);\n        }\n    }\n    withComments(node, fn) {\n        this.formatComments(node.leadingComments);\n        fn();\n        this.formatComments(node.trailingComments);\n    }\n    formatComments(comments) {\n        if (!comments) {\n            return;\n        }\n        comments.forEach(com => {\n            if (com.type === NodeType.line_comment) {\n                this.formatLineComment(com);\n            }\n            else {\n                this.formatBlockComment(com);\n            }\n        });\n    }\n    formatLineComment(node) {\n        if (isMultiline(node.precedingWhitespace || '')) {\n            this.layout.add(WS.NEWLINE, WS.INDENT, node.text, WS.MANDATORY_NEWLINE, WS.INDENT);\n        }\n        else if (this.layout.getLayoutItems().length > 0) {\n            this.layout.add(WS.NO_NEWLINE, WS.SPACE, node.text, WS.MANDATORY_NEWLINE, WS.INDENT);\n        }\n        else {\n            // comment is the first item in code - no need to add preceding spaces\n            this.layout.add(node.text, WS.MANDATORY_NEWLINE, WS.INDENT);\n        }\n    }\n    formatBlockComment(node) {\n        if (node.type === NodeType.block_comment && this.isMultilineBlockComment(node)) {\n            this.splitBlockComment(node.text).forEach(line => {\n                this.layout.add(WS.NEWLINE, WS.INDENT, line);\n            });\n            this.layout.add(WS.NEWLINE, WS.INDENT);\n        }\n        else {\n            this.layout.add(node.text, WS.SPACE);\n        }\n    }\n    isMultilineBlockComment(node) {\n        return isMultiline(node.text) || isMultiline(node.precedingWhitespace || '');\n    }\n    isDocComment(comment) {\n        const lines = comment.split(/\\n/);\n        return (\n        // first line starts with /* or /**\n        /^\\/\\*\\*?$/.test(lines[0]) &&\n            // intermediate lines start with *\n            lines.slice(1, lines.length - 1).every(line => /^\\s*\\*/.test(line)) &&\n            // last line ends with */\n            /^\\s*\\*\\/$/.test(last(lines)));\n    }\n    // Breaks up block comment to multiple lines.\n    // For example this doc-comment (dots representing leading whitespace):\n    //\n    //   ..../**\n    //   .....* Some description here\n    //   .....* and here too\n    //   .....*/\n    //\n    // gets broken to this array (note the leading single spaces):\n    //\n    //   [ '/**',\n    //     '.* Some description here',\n    //     '.* and here too',\n    //     '.*/' ]\n    //\n    // However, a normal comment (non-doc-comment) like this:\n    //\n    //   ..../*\n    //   ....Some description here\n    //   ....*/\n    //\n    // gets broken to this array (no leading spaces):\n    //\n    //   [ '/*',\n    //     'Some description here',\n    //     '*/' ]\n    //\n    splitBlockComment(comment) {\n        if (this.isDocComment(comment)) {\n            return comment.split(/\\n/).map(line => {\n                if (/^\\s*\\*/.test(line)) {\n                    return ' ' + line.replace(/^\\s*/, '');\n                }\n                else {\n                    return line;\n                }\n            });\n        }\n        else {\n            return comment.split(/\\n/).map(line => line.replace(/^\\s*/, ''));\n        }\n    }\n    formatSubExpression(nodes) {\n        return new ExpressionFormatter({\n            cfg: this.cfg,\n            dialectCfg: this.dialectCfg,\n            params: this.params,\n            layout: this.layout,\n            inline: this.inline,\n        }).format(nodes);\n    }\n    formatInlineExpression(nodes) {\n        const oldParamIndex = this.params.getPositionalParameterIndex();\n        try {\n            return new ExpressionFormatter({\n                cfg: this.cfg,\n                dialectCfg: this.dialectCfg,\n                params: this.params,\n                layout: new InlineLayout(this.cfg.expressionWidth),\n                inline: true,\n            }).format(nodes);\n        }\n        catch (e) {\n            if (e instanceof InlineLayoutError) {\n                // While formatting, some of the positional parameters might have\n                // been consumed, which increased the current parameter index.\n                // We reset the index to an earlier state, so we can run the\n                // formatting again and re-consume these parameters in non-inline mode.\n                this.params.setPositionalParameterIndex(oldParamIndex);\n                return undefined;\n            }\n            else {\n                // forward all unexpected errors\n                throw e;\n            }\n        }\n    }\n    formatKeywordNode(node) {\n        switch (node.tokenType) {\n            case TokenType.RESERVED_JOIN:\n                return this.formatJoin(node);\n            case TokenType.AND:\n            case TokenType.OR:\n            case TokenType.XOR:\n                return this.formatLogicalOperator(node);\n            default:\n                return this.formatKeyword(node);\n        }\n    }\n    formatJoin(node) {\n        if (isTabularStyle(this.cfg)) {\n            // in tabular style JOINs are at the same level as clauses\n            this.layout.indentation.decreaseTopLevel();\n            this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node), WS.SPACE);\n            this.layout.indentation.increaseTopLevel();\n        }\n        else {\n            this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node), WS.SPACE);\n        }\n    }\n    formatKeyword(node) {\n        this.layout.add(this.showKw(node), WS.SPACE);\n    }\n    formatLogicalOperator(node) {\n        if (this.cfg.logicalOperatorNewline === 'before') {\n            if (isTabularStyle(this.cfg)) {\n                // In tabular style AND/OR is placed on the same level as clauses\n                this.layout.indentation.decreaseTopLevel();\n                this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node), WS.SPACE);\n                this.layout.indentation.increaseTopLevel();\n            }\n            else {\n                this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node), WS.SPACE);\n            }\n        }\n        else {\n            this.layout.add(this.showKw(node), WS.NEWLINE, WS.INDENT);\n        }\n    }\n    formatDataType(node) {\n        this.layout.add(this.showDataType(node), WS.SPACE);\n    }\n    showKw(node) {\n        if (isTabularToken(node.tokenType)) {\n            return toTabularFormat(this.showNonTabularKw(node), this.cfg.indentStyle);\n        }\n        else {\n            return this.showNonTabularKw(node);\n        }\n    }\n    // Like showKw(), but skips tabular formatting\n    showNonTabularKw(node) {\n        switch (this.cfg.keywordCase) {\n            case 'preserve':\n                return equalizeWhitespace(node.raw);\n            case 'upper':\n                return node.text;\n            case 'lower':\n                return node.text.toLowerCase();\n        }\n    }\n    showFunctionKw(node) {\n        if (isTabularToken(node.tokenType)) {\n            return toTabularFormat(this.showNonTabularFunctionKw(node), this.cfg.indentStyle);\n        }\n        else {\n            return this.showNonTabularFunctionKw(node);\n        }\n    }\n    // Like showFunctionKw(), but skips tabular formatting\n    showNonTabularFunctionKw(node) {\n        switch (this.cfg.functionCase) {\n            case 'preserve':\n                return equalizeWhitespace(node.raw);\n            case 'upper':\n                return node.text;\n            case 'lower':\n                return node.text.toLowerCase();\n        }\n    }\n    showIdentifier(node) {\n        if (node.quoted) {\n            return node.text;\n        }\n        else {\n            switch (this.cfg.identifierCase) {\n                case 'preserve':\n                    return node.text;\n                case 'upper':\n                    return node.text.toUpperCase();\n                case 'lower':\n                    return node.text.toLowerCase();\n            }\n        }\n    }\n    showDataType(node) {\n        switch (this.cfg.dataTypeCase) {\n            case 'preserve':\n                return equalizeWhitespace(node.raw);\n            case 'upper':\n                return node.text;\n            case 'lower':\n                return node.text.toLowerCase();\n        }\n    }\n}\n//# sourceMappingURL=ExpressionFormatter.js.map","import { indentString } from './config.js';\nimport Params from './Params.js';\nimport { createParser } from '../parser/createParser.js';\nimport ExpressionFormatter from './ExpressionFormatter.js';\nimport Layout, { WS } from './Layout.js';\nimport Indentation from './Indentation.js';\n/** Main formatter class that produces a final output string from list of tokens */\nexport default class Formatter {\n    constructor(dialect, cfg) {\n        this.dialect = dialect;\n        this.cfg = cfg;\n        this.params = new Params(this.cfg.params);\n    }\n    /**\n     * Formats an SQL query.\n     * @param {string} query - The SQL query string to be formatted\n     * @return {string} The formatter query\n     */\n    format(query) {\n        const ast = this.parse(query);\n        const formattedQuery = this.formatAst(ast);\n        return formattedQuery.trimEnd();\n    }\n    parse(query) {\n        return createParser(this.dialect.tokenizer).parse(query, this.cfg.paramTypes || {});\n    }\n    formatAst(statements) {\n        return statements\n            .map(stat => this.formatStatement(stat))\n            .join('\\n'.repeat(this.cfg.linesBetweenQueries + 1));\n    }\n    formatStatement(statement) {\n        const layout = new ExpressionFormatter({\n            cfg: this.cfg,\n            dialectCfg: this.dialect.formatOptions,\n            params: this.params,\n            layout: new Layout(new Indentation(indentString(this.cfg))),\n        }).format(statement.children);\n        if (!statement.hasSemicolon) {\n            // do nothing\n        }\n        else if (this.cfg.newlineBeforeSemicolon) {\n            layout.add(WS.NEWLINE, ';');\n        }\n        else {\n            layout.add(WS.NO_NEWLINE, ';');\n        }\n        return layout.toString();\n    }\n}\n//# sourceMappingURL=Formatter.js.map","export class ConfigError extends Error {\n}\nexport function validateConfig(cfg) {\n    const removedOptions = [\n        'multilineLists',\n        'newlineBeforeOpenParen',\n        'newlineBeforeCloseParen',\n        'aliasAs',\n        'commaPosition',\n        'tabulateAlias',\n    ];\n    for (const optionName of removedOptions) {\n        if (optionName in cfg) {\n            throw new ConfigError(`${optionName} config is no more supported.`);\n        }\n    }\n    if (cfg.expressionWidth <= 0) {\n        throw new ConfigError(`expressionWidth config must be positive number. Received ${cfg.expressionWidth} instead.`);\n    }\n    if (cfg.params && !validateParams(cfg.params)) {\n        // eslint-disable-next-line no-console\n        console.warn('WARNING: All \"params\" option values should be strings.');\n    }\n    if (cfg.paramTypes && !validateParamTypes(cfg.paramTypes)) {\n        throw new ConfigError('Empty regex given in custom paramTypes. That would result in matching infinite amount of parameters.');\n    }\n    return cfg;\n}\nfunction validateParams(params) {\n    const paramValues = params instanceof Array ? params : Object.values(params);\n    return paramValues.every(p => typeof p === 'string');\n}\nfunction validateParamTypes(paramTypes) {\n    if (paramTypes.custom && Array.isArray(paramTypes.custom)) {\n        return paramTypes.custom.every(p => p.regex !== '');\n    }\n    return true;\n}\n//# sourceMappingURL=validateConfig.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as allDialects from './allDialects.js';\nimport { createDialect } from './dialect.js';\nimport Formatter from './formatter/Formatter.js';\nimport { ConfigError, validateConfig } from './validateConfig.js';\nconst dialectNameMap = {\n    bigquery: 'bigquery',\n    db2: 'db2',\n    db2i: 'db2i',\n    duckdb: 'duckdb',\n    hive: 'hive',\n    mariadb: 'mariadb',\n    mysql: 'mysql',\n    n1ql: 'n1ql',\n    plsql: 'plsql',\n    postgresql: 'postgresql',\n    redshift: 'redshift',\n    spark: 'spark',\n    sqlite: 'sqlite',\n    sql: 'sql',\n    tidb: 'tidb',\n    trino: 'trino',\n    transactsql: 'transactsql',\n    tsql: 'transactsql',\n    singlestoredb: 'singlestoredb',\n    snowflake: 'snowflake',\n};\nexport const supportedDialects = Object.keys(dialectNameMap);\nconst defaultOptions = {\n    tabWidth: 2,\n    useTabs: false,\n    keywordCase: 'preserve',\n    identifierCase: 'preserve',\n    dataTypeCase: 'preserve',\n    functionCase: 'preserve',\n    indentStyle: 'standard',\n    logicalOperatorNewline: 'before',\n    expressionWidth: 50,\n    linesBetweenQueries: 1,\n    denseOperators: false,\n    newlineBeforeSemicolon: false,\n};\n/**\n * Format whitespace in a query to make it easier to read.\n *\n * @param {string} query - input SQL query string\n * @param {FormatOptionsWithLanguage} cfg Configuration options (see docs in README)\n * @return {string} formatted query\n */\nexport const format = (query, cfg = {}) => {\n    if (typeof cfg.language === 'string' && !supportedDialects.includes(cfg.language)) {\n        throw new ConfigError(`Unsupported SQL dialect: ${cfg.language}`);\n    }\n    const canonicalDialectName = dialectNameMap[cfg.language || 'sql'];\n    return formatDialect(query, Object.assign(Object.assign({}, cfg), { dialect: allDialects[canonicalDialectName] }));\n};\n/**\n * Like the above format(), but language parameter is mandatory\n * and must be a Dialect object instead of a string.\n *\n * @param {string} query - input SQL query string\n * @param {FormatOptionsWithDialect} cfg Configuration options (see docs in README)\n * @return {string} formatted query\n */\nexport const formatDialect = (query, _a) => {\n    var { dialect } = _a, cfg = __rest(_a, [\"dialect\"]);\n    if (typeof query !== 'string') {\n        throw new Error('Invalid query argument. Expected string, instead got ' + typeof query);\n    }\n    const options = validateConfig(Object.assign(Object.assign({}, defaultOptions), cfg));\n    return new Formatter(createDialect(dialect), options).format(query);\n};\n//# sourceMappingURL=sqlFormatter.js.map","import { Monaco, MonacoEditor, monacoTypes } from '@grafana/ui';\nimport { format } from 'sql-formatter';\n\ndeclare const monaco: Monaco;\n\ninterface Model {\n  getValueInRange: Function;\n  getWordUntilPosition: Function;\n  getValue: Function;\n  getOffsetAt: Function;\n}\n\ninterface Position {\n  lineNumber: number;\n  column: number;\n}\n\nexport interface Range {\n  startLineNumber: number;\n  endLineNumber: number;\n  startColumn: number;\n  endColumn: number;\n}\n\nexport interface SuggestionResponse {\n  suggestions: monacoTypes.languages.CompletionItem[];\n}\n\nexport interface Suggestion {\n  label: string;\n  kind: number;\n  documentation: string;\n  insertText: string;\n  range: Range;\n  detail?: string;\n  sortText?: string;\n}\n\nexport type Fetcher = {\n  (text: string, range: Range, cursorPosition: number): Promise<SuggestionResponse>;\n};\n\nexport function formatSql(rawSql: string, tabWidth = 4): string {\n  // The default formatter doesn't like the $, so we swap it out\n  const macroPrefix = '$';\n  const swapIdentifier = 'GRAFANA_DOLLAR_TOKEN';\n  const removedVariables = rawSql.replaceAll(macroPrefix, swapIdentifier);\n  const formattedRaw = format(removedVariables, {\n    language: 'postgresql',\n    tabWidth,\n  });\n\n  const formatted = formattedRaw.replaceAll(swapIdentifier, macroPrefix);\n  return formatted;\n}\n\nexport function registerSQL(lang: string, editor: MonacoEditor, fetchSuggestions: Fetcher) {\n  // show options outside query editor\n  editor.updateOptions({ fixedOverflowWidgets: true, scrollBeyondLastLine: false });\n\n  // const registeredLang = monaco.languages.getLanguages().find((l: Lang) => l.id === lang);\n  // if (registeredLang !== undefined) {\n  //   return monaco.editor;\n  // }\n\n  // monaco.languages.register({ id: lang });\n\n  // just extend sql for now so we get syntax highlighting\n  monaco.languages.registerCompletionItemProvider('sql', {\n    triggerCharacters: [' ', '.', '$'],\n    provideCompletionItems: async (model: Model, position: Position) => {\n      const word = model.getWordUntilPosition(position);\n      const range: Range = {\n        startLineNumber: position.lineNumber,\n        endLineNumber: position.lineNumber,\n        startColumn: word.startColumn,\n        endColumn: word.endColumn,\n      };\n\n      return fetchSuggestions(model.getValue(), range, model.getOffsetAt(position));\n    },\n  });\n\n  monaco.languages.registerDocumentFormattingEditProvider('sql', {\n    provideDocumentFormattingEdits(model, options) {\n      return [\n        {\n          range: model.getFullModelRange(),\n          text: formatSql(model.getValue(), options.tabSize),\n        },\n      ];\n    },\n  });\n\n  return monaco.editor;\n}\n","/**\n * Enum for all token types supported by the lexer\n */\nexport enum TokenType {\n  Whitespace,\n  Comment,\n\n  BareWord, // Either keyword (SELECT) or identifier (column)\n\n  Number, // Always non-negative. No leading plus. 123 or something like 123.456e12, 0x123p12\n  StringLiteral, // 'hello word', 'hello''word', 'hello\\'word\\\\'\n\n  QuotedIdentifier, // \"x\", `x`\n\n  OpeningRoundBracket,\n  ClosingRoundBracket,\n\n  OpeningSquareBracket,\n  ClosingSquareBracket,\n\n  OpeningCurlyBrace,\n  ClosingCurlyBrace,\n\n  Comma,\n  Semicolon,\n  VerticalDelimiter, // Vertical delimiter \\G\n  Dot, // Compound identifiers, like a.b or tuple access operator a.1, (x, y).2.\n  // Need to be distinguished from floating point number with omitted integer part: .1\n\n  Asterisk, // Could be used as multiplication operator or on it's own: \"SELECT *\"\n\n  HereDoc,\n\n  DollarSign,\n  Plus,\n  Minus,\n  Slash,\n  Percent,\n  Arrow, // ->. Should be distinguished from minus operator.\n  QuestionMark,\n  Colon,\n  Caret,\n  DoubleColon,\n  Equals,\n  NotEquals,\n  Less,\n  Greater,\n  LessOrEquals,\n  GreaterOrEquals,\n  Spaceship, // <=>. Used in MySQL for NULL-safe equality comparison.\n  PipeMark,\n  Concatenation, // String concatenation operator: ||\n\n  At, // @. Used for specifying user names and also for MySQL-style variables.\n  DoubleAt, // @@. Used for MySQL-style global variables.\n\n  // Order is important. EndOfStream goes after all usual tokens, and special error tokens goes after EndOfStream.\n\n  EndOfStream,\n\n  // Something unrecognized.\n  Error,\n  // Something is wrong and we have more information.\n  ErrorMultilineCommentIsNotClosed,\n  ErrorSingleQuoteIsNotClosed,\n  ErrorDoubleQuoteIsNotClosed,\n  ErrorBackQuoteIsNotClosed,\n  ErrorSingleExclamationMark,\n  ErrorSinglePipeMark,\n  ErrorWrongNumber,\n  ErrorMaxQuerySizeExceeded,\n}\n\nexport const keywords = new Set([\n  'SELECT',\n  'FROM',\n  'WHERE',\n  'GROUP',\n  'BY',\n  'HAVING',\n  'ORDER',\n  'LIMIT',\n  'OFFSET',\n  'JOIN',\n  'INNER',\n  'OUTER',\n  'LEFT',\n  'RIGHT',\n  'FULL',\n  'CROSS',\n  'ON',\n  'USING',\n  'AS',\n  'WITH',\n  'UNION',\n  'ALL',\n  'DISTINCT',\n  'CASE',\n  'WHEN',\n  'THEN',\n  'ELSE',\n  'END',\n  'AND',\n  'OR',\n  'NOT',\n  'IN',\n  'EXISTS',\n  'BETWEEN',\n  'LIKE',\n  'IS',\n  'NULL',\n  'ASC',\n  'DESC',\n]);\n\n/**\n * A token representing a lexical unit in the input\n */\nexport class Token {\n  type: TokenType;\n  begin: number;\n  end: number;\n  text: string;\n\n  constructor(type: TokenType, begin: number, end: number, text: string) {\n    this.type = type;\n    this.begin = begin;\n    this.end = end;\n    this.text = text;\n  }\n\n  size(): number {\n    return this.end - this.begin;\n  }\n\n  isSignificant(): boolean {\n    return this.type !== TokenType.Whitespace && this.type !== TokenType.Comment;\n  }\n\n  matchKeyword(keyword: string): boolean {\n    return (\n      this.type === TokenType.BareWord &&\n      keywords.has(keyword.toUpperCase()) &&\n      this.text.toUpperCase() === keyword.toUpperCase()\n    );\n  }\n\n  isKeyword(): boolean {\n    return this.type === TokenType.BareWord && keywords.has(this.text.toUpperCase());\n  }\n\n  isError(): boolean {\n    return this.type > TokenType.EndOfStream;\n  }\n\n  isEnd(): boolean {\n    return this.type === TokenType.EndOfStream;\n  }\n}\n\n/**\n * Get the name of a token type (for debugging)\n */\nexport function getTokenName(type: TokenType): string {\n  return TokenType[type];\n}\n\n/**\n * Get the description of an error token\n */\nexport function getErrorTokenDescription(type: TokenType): string {\n  switch (type) {\n    case TokenType.Error:\n      return 'Unrecognized token';\n    case TokenType.ErrorMultilineCommentIsNotClosed:\n      return 'Multiline comment is not closed';\n    case TokenType.ErrorSingleQuoteIsNotClosed:\n      return 'Single quoted string is not closed';\n    case TokenType.ErrorDoubleQuoteIsNotClosed:\n      return 'Double quoted string is not closed';\n    case TokenType.ErrorBackQuoteIsNotClosed:\n      return 'Back quoted string is not closed';\n    case TokenType.ErrorSingleExclamationMark:\n      return 'Exclamation mark can only occur in != operator';\n    case TokenType.ErrorSinglePipeMark:\n      return 'Pipe symbol could only occur in || operator';\n    case TokenType.ErrorWrongNumber:\n      return 'Wrong number';\n    case TokenType.ErrorMaxQuerySizeExceeded:\n      return 'Max query size exceeded (can be increased with the `max_query_size` setting)';\n    default:\n      return 'Not an error';\n  }\n}\n","/**\n * Helper functions for character classification and string handling\n */\n\n/**\n * Check if a character is a whitespace ASCII character\n */\nexport function isWhitespaceASCII(c: string): boolean {\n  return c === ' ' || c === '\\t' || c === '\\n' || c === '\\r' || c === '\\f' || c === '\\v';\n}\n\n/**\n * Check if a character is a numeric ASCII character\n */\nexport function isNumericASCII(c: string): boolean {\n  return c >= '0' && c <= '9';\n}\n\n/**\n * Check if a character is a word character (letter, digit, or underscore)\n */\nexport function isWordCharASCII(c: string): boolean {\n  return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c === '_';\n}\n\n/**\n * Check if a character is a hexadecimal digit\n */\nexport function isHexDigit(c: string): boolean {\n  return (c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F');\n}\n\n/**\n * Check if a character is a valid number separator, like underscore in 1_000_000\n */\nexport function isNumberSeparator(startOfBlock: boolean, hex: boolean, pos: number, text: string): boolean {\n  if (startOfBlock) {\n    return false;\n  }\n\n  if (pos >= text.length) {\n    return false;\n  }\n\n  if (text[pos] !== '_') {\n    return false;\n  }\n\n  if (pos + 1 >= text.length) {\n    return false;\n  }\n\n  if (hex) {\n    return isHexDigit(text[pos + 1]);\n  }\n\n  return isNumericASCII(text[pos + 1]);\n}\n\n/**\n * Find the first occurrence of any of the given characters\n */\nexport function findFirstSymbols(text: string, pos: number, end: number, ...symbols: string[]): number {\n  while (pos < end) {\n    if (symbols.includes(text[pos])) {\n      return pos;\n    }\n    pos++;\n  }\n  return end;\n}\n\n/**\n * Find the first character that is not any of the given characters\n */\nexport function findFirstNotSymbols(text: string, pos: number, end: number, ...symbols: string[]): number {\n  while (pos < end) {\n    if (!symbols.includes(text[pos])) {\n      return pos;\n    }\n    pos++;\n  }\n  return end;\n}\n\n/**\n * Skip UTF-8 whitespaces (including Unicode ones)\n */\nexport function skipWhitespacesUTF8(text: string, pos: number, end: number): number {\n  // Skip whitespace characters in Unicode\n  // This is a simplified version that just skips common Unicode whitespace\n  while (pos < end) {\n    const code = text.charCodeAt(pos);\n\n    // Skip ASCII whitespace\n    if (code <= 127 && isWhitespaceASCII(String.fromCharCode(code))) {\n      pos++;\n      continue;\n    }\n\n    // Skip some common Unicode whitespace\n    // U+00A0 - NO-BREAK SPACE\n    // U+2000 to U+200A - Various space characters\n    // U+2028 - LINE SEPARATOR\n    // U+2029 - PARAGRAPH SEPARATOR\n    // U+202F - NARROW NO-BREAK SPACE\n    // U+205F - MEDIUM MATHEMATICAL SPACE\n    // U+3000 - IDEOGRAPHIC SPACE\n    if (\n      code === 0x00a0 ||\n      (code >= 0x2000 && code <= 0x200a) ||\n      code === 0x2028 ||\n      code === 0x2029 ||\n      code === 0x202f ||\n      code === 0x205f ||\n      code === 0x3000\n    ) {\n      pos++;\n      continue;\n    }\n\n    break;\n  }\n\n  return pos;\n}\n\n/**\n * Check if a character is a UTF-8 continuation octet\n */\nexport function isContinuationOctet(c: string): boolean {\n  const code = c.charCodeAt(0);\n  return (code & 0xc0) === 0x80;\n}\n","import { Token, TokenType } from './types';\nimport {\n  isWhitespaceASCII,\n  isNumericASCII,\n  isWordCharASCII,\n  isHexDigit,\n  isNumberSeparator,\n  findFirstNotSymbols,\n  skipWhitespacesUTF8,\n  isContinuationOctet,\n} from './helpers';\n\n/**\n * Lexer class for tokenizing input text\n */\nexport class Lexer {\n  private readonly text: string;\n  private pos: number;\n  private readonly end: number;\n  private readonly maxQuerySize: number;\n  private prevSignificantTokenType: TokenType = TokenType.Whitespace;\n\n  /**\n   * Create a new lexer for the given input\n   * @param text The input text to tokenize\n   * @param maxQuerySize Optional maximum query size (0 for unlimited)\n   */\n  public constructor(text: string, maxQuerySize = 0) {\n    this.text = text;\n    this.pos = 0;\n    this.end = text.length;\n    this.maxQuerySize = maxQuerySize;\n  }\n\n  /**\n   * Get the next token from the input\n   */\n  public nextToken(): Token {\n    const res = this.nextTokenImpl();\n    if (this.maxQuerySize && res.end > this.maxQuerySize) {\n      return new Token(\n        TokenType.ErrorMaxQuerySizeExceeded,\n        res.begin,\n        res.end,\n        this.text.substring(res.begin, res.end)\n      );\n    }\n    if (res.isSignificant()) {\n      this.prevSignificantTokenType = res.type;\n    }\n    return res;\n  }\n\n  /**\n   * Parse a quoted string\n   */\n  private parseQuotedString(quote: string, successToken: TokenType, errorToken: TokenType): Token {\n    const tokenBegin = this.pos;\n\n    // Skip opening quote\n    this.pos++;\n\n    while (this.pos < this.end) {\n      const nextQuotePos = this.text.indexOf(quote, this.pos);\n      const nextEscapePos = this.text.indexOf('\\\\', this.pos);\n\n      if (nextQuotePos === -1) {\n        // No closing quote found\n        this.pos = this.end;\n        return new Token(errorToken, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n      }\n\n      if (nextEscapePos !== -1 && nextEscapePos < nextQuotePos) {\n        // Found escape character before quote\n        this.pos = nextEscapePos + 2; // Skip escape and the escaped character\n        continue;\n      }\n\n      // Found quote\n      this.pos = nextQuotePos + 1;\n\n      // Check for doubled quote which represents a single quote character\n      if (this.pos < this.end && this.text[this.pos] === quote) {\n        // Skip the second quote and continue searching\n        this.pos++;\n        continue;\n      }\n\n      // Found end of quoted string\n      return new Token(successToken, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n    }\n\n    // Reached end of input without closing quote\n    return new Token(errorToken, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n  }\n\n  /**\n   * Parse a quoted hex or binary string (x'AB' or b'101')\n   */\n  private parseQuotedHexOrBinString(): Token {\n    const tokenBegin = this.pos;\n    const isHex = this.text[this.pos].toLowerCase() === 'x';\n\n    // Skip 'x' and opening quote\n    this.pos += 2;\n\n    if (isHex) {\n      // Find the first non-hex digit\n      while (this.pos < this.end && isHexDigit(this.text[this.pos])) {\n        this.pos++;\n      }\n    } else {\n      // Find the first non-binary digit\n      this.pos = findFirstNotSymbols(this.text, this.pos, this.end, '0', '1');\n    }\n\n    if (this.pos >= this.end || this.text[this.pos] !== \"'\") {\n      this.pos = this.end;\n      return new Token(\n        TokenType.ErrorSingleQuoteIsNotClosed,\n        tokenBegin,\n        this.pos,\n        this.text.substring(tokenBegin, this.pos)\n      );\n    }\n\n    this.pos++; // Skip closing quote\n    return new Token(TokenType.StringLiteral, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n  }\n\n  /**\n   * Handle comment until end of line\n   */\n  private commentUntilEndOfLine(): Token {\n    const tokenBegin = this.pos;\n    const newlinePos = this.text.indexOf('\\n', this.pos);\n\n    if (newlinePos === -1) {\n      this.pos = this.end;\n    } else {\n      this.pos = newlinePos;\n    }\n\n    return new Token(TokenType.Comment, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n  }\n\n  /**\n   * Parse a unicode quoted string\n   */\n  private parseUnicodeQuotedString(expectedEndByte: number, successToken: TokenType, errorToken: TokenType): Token {\n    const tokenBegin = this.pos - 3; // Account for the starting quote sequence\n\n    while (this.pos + 2 < this.end) {\n      const e2Pos = this.text.indexOf('\\u00E2', this.pos);\n      if (e2Pos === -1 || e2Pos + 2 >= this.end) {\n        this.pos = this.end;\n        return new Token(errorToken, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n      }\n\n      this.pos = e2Pos;\n\n      if (\n        this.text.charCodeAt(this.pos) === 0xe2 &&\n        this.text.charCodeAt(this.pos + 1) === 0x80 &&\n        this.text.charCodeAt(this.pos + 2) === expectedEndByte\n      ) {\n        this.pos += 3; // Skip the closing quote\n        return new Token(successToken, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n      }\n\n      this.pos++;\n    }\n\n    this.pos = this.end;\n    return new Token(errorToken, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n  }\n\n  /**\n   * Implementation of nextToken that actually does the tokenization\n   */\n  private nextTokenImpl(): Token {\n    if (this.pos >= this.end) {\n      return new Token(TokenType.EndOfStream, this.end, this.end, '');\n    }\n\n    const tokenBegin = this.pos;\n    const currentChar = this.text[this.pos];\n\n    // Handle whitespace\n    if (isWhitespaceASCII(currentChar)) {\n      this.pos++;\n      while (this.pos < this.end && isWhitespaceASCII(this.text[this.pos])) {\n        this.pos++;\n      }\n      return new Token(TokenType.Whitespace, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n    }\n\n    // Handle numbers\n    if (isNumericASCII(currentChar)) {\n      // For chained tuple access operators (x.1.1)\n      if (this.prevSignificantTokenType === TokenType.Dot) {\n        this.pos++;\n        while (\n          this.pos < this.end &&\n          (isNumericASCII(this.text[this.pos]) || isNumberSeparator(false, false, this.pos, this.text))\n        ) {\n          this.pos++;\n        }\n      } else {\n        let startOfBlock = false;\n        let hex = false;\n\n        // Check for hex (0x) or binary (0b) notation\n        if (\n          this.pos + 2 < this.end &&\n          currentChar === '0' &&\n          (this.text[this.pos + 1].toLowerCase() === 'x' || this.text[this.pos + 1].toLowerCase() === 'b')\n        ) {\n          let isValid = false;\n          if (this.text[this.pos + 1].toLowerCase() === 'x') {\n            if (this.pos + 2 < this.end && isHexDigit(this.text[this.pos + 2])) {\n              hex = true;\n              isValid = true; // hex\n            }\n          } else if (this.text[this.pos + 2] === '0' || this.text[this.pos + 2] === '1') {\n            isValid = true; // binary\n          }\n\n          if (isValid) {\n            this.pos += 2;\n            startOfBlock = true;\n          } else {\n            this.pos++; // consume the leading zero\n          }\n        } else {\n          this.pos++;\n        }\n\n        // Parse integer part\n        while (\n          this.pos < this.end &&\n          ((hex ? isHexDigit(this.text[this.pos]) : isNumericASCII(this.text[this.pos])) ||\n            isNumberSeparator(startOfBlock, hex, this.pos, this.text))\n        ) {\n          this.pos++;\n          startOfBlock = false;\n        }\n\n        // Check for decimal point\n        if (this.pos < this.end && this.text[this.pos] === '.') {\n          startOfBlock = true;\n          this.pos++;\n\n          // Parse fractional part\n          while (\n            this.pos < this.end &&\n            ((hex ? isHexDigit(this.text[this.pos]) : isNumericASCII(this.text[this.pos])) ||\n              isNumberSeparator(startOfBlock, hex, this.pos, this.text))\n          ) {\n            this.pos++;\n            startOfBlock = false;\n          }\n        }\n\n        // Check for exponent\n        if (\n          this.pos + 1 < this.end &&\n          (hex\n            ? this.text[this.pos] === 'p' || this.text[this.pos] === 'P'\n            : this.text[this.pos] === 'e' || this.text[this.pos] === 'E')\n        ) {\n          startOfBlock = true;\n          this.pos++;\n\n          // Check for sign of exponent\n          if (this.pos + 1 < this.end && (this.text[this.pos] === '-' || this.text[this.pos] === '+')) {\n            this.pos++;\n          }\n\n          // Parse exponent\n          while (\n            this.pos < this.end &&\n            (isNumericASCII(this.text[this.pos]) || isNumberSeparator(startOfBlock, false, this.pos, this.text))\n          ) {\n            this.pos++;\n            startOfBlock = false;\n          }\n        }\n      }\n\n      // Check if this is actually a numeric identifier (1identifier)\n      if (this.pos < this.end && isWordCharASCII(this.text[this.pos])) {\n        this.pos++;\n        while (this.pos < this.end && isWordCharASCII(this.text[this.pos])) {\n          this.pos++;\n        }\n\n        // Check if it's a valid identifier or an error\n        for (let i = tokenBegin; i < this.pos; i++) {\n          if (!isWordCharASCII(this.text[i]) && this.text[i] !== '$') {\n            return new Token(\n              TokenType.ErrorWrongNumber,\n              tokenBegin,\n              this.pos,\n              this.text.substring(tokenBegin, this.pos)\n            );\n          }\n        }\n\n        return new Token(TokenType.BareWord, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n      }\n\n      return new Token(TokenType.Number, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n    }\n\n    // Handle quoted strings\n    switch (currentChar) {\n      case \"'\":\n        return this.parseQuotedString(\"'\", TokenType.StringLiteral, TokenType.ErrorSingleQuoteIsNotClosed);\n      case '\"':\n        return this.parseQuotedString('\"', TokenType.QuotedIdentifier, TokenType.ErrorDoubleQuoteIsNotClosed);\n      case '`':\n        return this.parseQuotedString('`', TokenType.QuotedIdentifier, TokenType.ErrorBackQuoteIsNotClosed);\n\n      // Handle brackets\n      case '(':\n        return new Token(TokenType.OpeningRoundBracket, tokenBegin, ++this.pos, '(');\n      case ')':\n        return new Token(TokenType.ClosingRoundBracket, tokenBegin, ++this.pos, ')');\n      case '[':\n        return new Token(TokenType.OpeningSquareBracket, tokenBegin, ++this.pos, '[');\n      case ']':\n        return new Token(TokenType.ClosingSquareBracket, tokenBegin, ++this.pos, ']');\n      case '{':\n        return new Token(TokenType.OpeningCurlyBrace, tokenBegin, ++this.pos, '{');\n      case '}':\n        return new Token(TokenType.ClosingCurlyBrace, tokenBegin, ++this.pos, '}');\n\n      // Handle simple punctuation\n      case ',':\n        return new Token(TokenType.Comma, tokenBegin, ++this.pos, ',');\n      case ';':\n        return new Token(TokenType.Semicolon, tokenBegin, ++this.pos, ';');\n\n      // Handle dot (qualifier, tuple access operator or start of floating point number)\n      case '.': {\n        // Check if dot follows an identifier, complex expression or number\n        if (\n          this.pos > 0 &&\n          (!(this.pos + 1 < this.end && isNumericASCII(this.text[this.pos + 1])) ||\n            this.prevSignificantTokenType === TokenType.ClosingRoundBracket ||\n            this.prevSignificantTokenType === TokenType.ClosingSquareBracket ||\n            this.prevSignificantTokenType === TokenType.BareWord ||\n            this.prevSignificantTokenType === TokenType.QuotedIdentifier ||\n            this.prevSignificantTokenType === TokenType.Number)\n        ) {\n          return new Token(TokenType.Dot, tokenBegin, ++this.pos, '.');\n        }\n\n        // Otherwise it's a number with fractional part but no integer part\n        let startOfBlock = true;\n        this.pos++;\n\n        while (\n          this.pos < this.end &&\n          (isNumericASCII(this.text[this.pos]) || isNumberSeparator(startOfBlock, false, this.pos, this.text))\n        ) {\n          this.pos++;\n          startOfBlock = false;\n        }\n\n        // Check for exponent\n        if (this.pos + 1 < this.end && (this.text[this.pos] === 'e' || this.text[this.pos] === 'E')) {\n          startOfBlock = true;\n          this.pos++;\n\n          // Check for sign of exponent\n          if (this.pos + 1 < this.end && (this.text[this.pos] === '-' || this.text[this.pos] === '+')) {\n            this.pos++;\n          }\n\n          // Parse exponent\n          while (\n            this.pos < this.end &&\n            (isNumericASCII(this.text[this.pos]) || isNumberSeparator(startOfBlock, false, this.pos, this.text))\n          ) {\n            this.pos++;\n            startOfBlock = false;\n          }\n        }\n\n        return new Token(TokenType.Number, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n      }\n\n      // Handle operators\n      case '+':\n        return new Token(TokenType.Plus, tokenBegin, ++this.pos, '+');\n\n      case '-': {\n        this.pos++;\n\n        // Check for arrow operator\n        if (this.pos < this.end && this.text[this.pos] === '>') {\n          return new Token(TokenType.Arrow, tokenBegin, ++this.pos, '->');\n        }\n\n        // Check for comment\n        if (this.pos < this.end && this.text[this.pos] === '-') {\n          this.pos++;\n          return this.commentUntilEndOfLine();\n        }\n\n        return new Token(TokenType.Minus, tokenBegin, this.pos, '-');\n      }\n\n      case '*':\n        return new Token(TokenType.Asterisk, tokenBegin, ++this.pos, '*');\n\n      case '/': {\n        this.pos++;\n\n        // Check for comment\n        if (this.pos < this.end) {\n          if (this.text[this.pos] === '/') {\n            this.pos++;\n            return this.commentUntilEndOfLine();\n          }\n\n          if (this.text[this.pos] === '*') {\n            this.pos++;\n            let nestingLevel = 1;\n\n            while (this.pos + 1 < this.end) {\n              if (this.text[this.pos] === '/' && this.text[this.pos + 1] === '*') {\n                this.pos += 2;\n                nestingLevel++;\n              } else if (this.text[this.pos] === '*' && this.text[this.pos + 1] === '/') {\n                this.pos += 2;\n                nestingLevel--;\n\n                if (nestingLevel === 0) {\n                  return new Token(TokenType.Comment, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n                }\n              } else {\n                this.pos++;\n              }\n            }\n\n            this.pos = this.end;\n            return new Token(\n              TokenType.ErrorMultilineCommentIsNotClosed,\n              tokenBegin,\n              this.pos,\n              this.text.substring(tokenBegin, this.pos)\n            );\n          }\n        }\n\n        return new Token(TokenType.Slash, tokenBegin, this.pos, '/');\n      }\n\n      case '#': {\n        this.pos++;\n\n        // Comments only if followed by space or '!'\n        if (this.pos < this.end && (this.text[this.pos] === ' ' || this.text[this.pos] === '!')) {\n          return this.commentUntilEndOfLine();\n        }\n\n        return new Token(TokenType.Error, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n      }\n\n      case '%':\n        return new Token(TokenType.Percent, tokenBegin, ++this.pos, '%');\n\n      case '=': {\n        this.pos++;\n\n        // Check for == operator\n        if (this.pos < this.end && this.text[this.pos] === '=') {\n          this.pos++;\n        }\n\n        return new Token(TokenType.Equals, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n      }\n\n      case '!': {\n        this.pos++;\n\n        // Only valid as != operator\n        if (this.pos < this.end && this.text[this.pos] === '=') {\n          return new Token(TokenType.NotEquals, tokenBegin, ++this.pos, '!=');\n        }\n\n        return new Token(TokenType.ErrorSingleExclamationMark, tokenBegin, this.pos, '!');\n      }\n\n      case '<': {\n        this.pos++;\n\n        // Check for <=>, <=, <>\n        if (this.pos + 1 < this.end && this.text[this.pos] === '=' && this.text[this.pos + 1] === '>') {\n          this.pos += 2;\n          return new Token(TokenType.Spaceship, tokenBegin, this.pos, '<=>');\n        }\n\n        if (this.pos < this.end && this.text[this.pos] === '=') {\n          return new Token(TokenType.LessOrEquals, tokenBegin, ++this.pos, '<=');\n        }\n\n        if (this.pos < this.end && this.text[this.pos] === '>') {\n          return new Token(TokenType.NotEquals, tokenBegin, ++this.pos, '<>');\n        }\n\n        return new Token(TokenType.Less, tokenBegin, this.pos, '<');\n      }\n\n      case '>': {\n        this.pos++;\n\n        // Check for >= operator\n        if (this.pos < this.end && this.text[this.pos] === '=') {\n          return new Token(TokenType.GreaterOrEquals, tokenBegin, ++this.pos, '>=');\n        }\n\n        return new Token(TokenType.Greater, tokenBegin, this.pos, '>');\n      }\n\n      case '?':\n        return new Token(TokenType.QuestionMark, tokenBegin, ++this.pos, '?');\n\n      case '^':\n        return new Token(TokenType.Caret, tokenBegin, ++this.pos, '^');\n\n      case ':': {\n        this.pos++;\n\n        // Check for :: operator\n        if (this.pos < this.end && this.text[this.pos] === ':') {\n          return new Token(TokenType.DoubleColon, tokenBegin, ++this.pos, '::');\n        }\n\n        return new Token(TokenType.Colon, tokenBegin, this.pos, ':');\n      }\n\n      case '|': {\n        this.pos++;\n\n        // Check for || operator (concatenation)\n        if (this.pos < this.end && this.text[this.pos] === '|') {\n          return new Token(TokenType.Concatenation, tokenBegin, ++this.pos, '||');\n        }\n\n        return new Token(TokenType.PipeMark, tokenBegin, this.pos, '|');\n      }\n\n      case '@': {\n        this.pos++;\n\n        // Check for @@ operator\n        if (this.pos < this.end && this.text[this.pos] === '@') {\n          return new Token(TokenType.DoubleAt, tokenBegin, ++this.pos, '@@');\n        }\n\n        return new Token(TokenType.At, tokenBegin, this.pos, '@');\n      }\n\n      case '\\\\': {\n        this.pos++;\n\n        // Check for \\G vertical delimiter\n        if (this.pos < this.end && this.text[this.pos] === 'G') {\n          return new Token(TokenType.VerticalDelimiter, tokenBegin, ++this.pos, '\\\\G');\n        }\n\n        return new Token(TokenType.Error, tokenBegin, this.pos, '\\\\');\n      }\n\n      // Handle Unicode special cases\n      case '\\u00E2': {\n        // Mathematical minus symbol in UTF-8\n        if (\n          this.pos + 2 < this.end &&\n          this.text.charCodeAt(this.pos + 1) === 0x88 &&\n          this.text.charCodeAt(this.pos + 2) === 0x92\n        ) {\n          this.pos += 3;\n          return new Token(TokenType.Minus, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n        }\n\n        // Unicode quoted string\n        if (\n          this.pos + 2 < this.end &&\n          this.text.charCodeAt(this.pos) === 0xe2 &&\n          this.text.charCodeAt(this.pos + 1) === 0x80 &&\n          (this.text.charCodeAt(this.pos + 2) === 0x98 || this.text.charCodeAt(this.pos + 2) === 0x9c)\n        ) {\n          const expectedEndByte = this.text.charCodeAt(this.pos + 2) + 1;\n          const successToken =\n            this.text.charCodeAt(this.pos + 2) === 0x98 ? TokenType.StringLiteral : TokenType.QuotedIdentifier;\n          const errorToken =\n            this.text.charCodeAt(this.pos + 2) === 0x98\n              ? TokenType.ErrorSingleQuoteIsNotClosed\n              : TokenType.ErrorDoubleQuoteIsNotClosed;\n\n          this.pos += 3;\n          return this.parseUnicodeQuotedString(expectedEndByte, successToken, errorToken);\n        }\n      }\n    }\n\n    // Handle special cases\n\n    // Dollar sign and here-document\n    if (currentChar === '$') {\n      // Try to parse here-doc\n      const tokenStream = this.text.substring(this.pos);\n      const heredocNameEndPosition = tokenStream.indexOf('$', 1);\n\n      if (heredocNameEndPosition !== -1) {\n        const heredocSize = heredocNameEndPosition + 1;\n        const heredoc = tokenStream.substring(0, heredocSize);\n\n        const heredocEndPosition = tokenStream.indexOf(heredoc, heredocSize);\n        if (heredocEndPosition !== -1) {\n          this.pos += heredocEndPosition + heredocSize;\n          return new Token(TokenType.HereDoc, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n        }\n      }\n\n      // Standalone dollar sign\n      if ((this.pos + 1 < this.end && !isWordCharASCII(this.text[this.pos + 1])) || this.pos + 1 === this.end) {\n        return new Token(TokenType.DollarSign, tokenBegin, ++this.pos, '$');\n      }\n    }\n\n    // Hex or binary string literals\n    if (\n      this.pos + 2 < this.end &&\n      this.text[this.pos + 1] === \"'\" &&\n      (currentChar.toLowerCase() === 'x' || currentChar.toLowerCase() === 'b')\n    ) {\n      return this.parseQuotedHexOrBinString();\n    }\n\n    // Bare words (identifiers or keywords)\n    if (isWordCharASCII(currentChar) || currentChar === '$') {\n      this.pos++;\n      while (this.pos < this.end && (isWordCharASCII(this.text[this.pos]) || this.text[this.pos] === '$')) {\n        this.pos++;\n      }\n      return new Token(TokenType.BareWord, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n    }\n\n    // Try to skip Unicode whitespace\n    const newPos = skipWhitespacesUTF8(this.text, this.pos, this.end);\n    if (newPos > this.pos) {\n      this.pos = newPos;\n      return new Token(TokenType.Whitespace, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n    }\n\n    // Skip over any UTF-8 continuation bytes\n    this.pos++;\n    while (this.pos < this.end && isContinuationOctet(this.text[this.pos])) {\n      this.pos++;\n    }\n\n    return new Token(TokenType.Error, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n  }\n}\n","export interface PluginMacro {\n  name: string;\n  isFunction: boolean;\n  columnType?: string;\n  documentation: string;\n  example?: string;\n}\n\n// Taken from README/docs\nexport const pluginMacros: PluginMacro[] = [\n  {\n    name: '$__dateFilter',\n    isFunction: true,\n    documentation: 'Filters the data based on the date range of the panel',\n    example: \"date >= toDate('2022-10-21') AND date <= toDate('2022-10-23')\",\n  },\n  {\n    name: '$__timeFilter',\n    isFunction: true,\n    documentation: 'Filters the data based on the time range of the panel in seconds',\n    example: 'time >= toDateTime(1415792726) AND time <= toDateTime(1447328726)',\n  },\n  {\n    name: '$__timeFilter_ms',\n    isFunction: true,\n    documentation: 'Filters the data based on the time range of the panel in milliseconds',\n    example: 'time >= fromUnixTimestamp64Milli(1415792726123) AND time <= fromUnixTimestamp64Milli(1447328726456)',\n  },\n  {\n    name: '$__dateTimeFilter',\n    isFunction: true,\n    documentation:\n      'Shorthand that combines $__dateFilter() AND $__timeFilter() using separate Date and DateTime columns',\n    example: '$__dateFilter(dateColumn) AND $__timeFilter(timeColumn)',\n  },\n  {\n    name: '$__fromTime',\n    isFunction: false,\n    columnType: 'DateTime',\n    documentation: 'Replaced by the starting time of the range of the panel casted to DateTime',\n    example: 'toDateTime(1415792726)',\n  },\n  {\n    name: '$__toTime',\n    isFunction: false,\n    columnType: 'DateTime',\n    documentation: 'Replaced by the ending time of the range of the panel casted to DateTime',\n    example: 'toDateTime(1447328726)',\n  },\n  {\n    name: '$__fromTime_ms',\n    isFunction: false,\n    columnType: 'DateTime64(3)',\n    documentation: 'Replaced by the starting time of the range of the panel casted to DateTime64(3)',\n    example: 'fromUnixTimestamp64Milli(1415792726123)',\n  },\n  {\n    name: '$__toTime_ms',\n    isFunction: false,\n    columnType: 'Datetime64(3)',\n    documentation: 'Replaced by the ending time of the range of the panel casted to DateTime64(3)',\n    example: 'fromUnixTimestamp64Milli(1447328726456)',\n  },\n  {\n    name: '$__interval_s',\n    isFunction: false,\n    columnType: 'INTERVAL',\n    documentation: 'Replaced by the interval in seconds',\n    example: '20',\n  },\n  {\n    name: '$__timeInterval',\n    isFunction: true,\n    columnType: 'DateTime',\n    documentation:\n      'Replaced by a function calculating the interval based on window size in seconds, useful when grouping',\n    example: 'toStartOfInterval(toDateTime(column), INTERVAL 20 second)',\n  },\n  {\n    name: '$__timeInterval_ms',\n    isFunction: true,\n    columnType: 'DateTime64(3)',\n    documentation:\n      'Replaced by a function calculating the interval based on window size in milliseconds, useful when grouping',\n    example: 'toStartOfInterval(toDateTime64(column, 3), INTERVAL 20 millisecond)',\n  },\n  {\n    name: '$__conditionalAll',\n    isFunction: true,\n    columnType: 'Condition',\n    documentation:\n      'Replaced by the first parameter when the template variable in the second parameter does not select every value. Replaced by 1=1 when the template variable selects every value',\n    example: 'condition or 1=1',\n  },\n];\n","import { Token, TokenType } from './types';\n\nexport class QueryNodeParser {\n  private tokens: Token[];\n  private offset: number;\n\n  constructor(tokens: Token[]) {\n    this.tokens = tokens;\n    this.offset = 0;\n  }\n\n  public advance() {\n    this.offset++;\n  }\n\n  public hasNext(): boolean {\n    return this.offset < this.tokens.length;\n  }\n\n  public next(): Token {\n    const token = this.tokens[this.offset];\n    this.advance();\n\n    return token;\n  }\n\n  public peek(): Token {\n    return this.tokens[this.offset];\n  }\n\n  public nextIs(type: TokenType): boolean {\n    const next = this.peek();\n    if (next.type === type) {\n      this.advance();\n      return true;\n    }\n\n    return false;\n  }\n\n  public peekIs(type: TokenType): boolean {\n    return this.peek().type === type;\n  }\n}\n\nexport enum ClauseType {\n  None,\n  With,\n  Select,\n  From,\n  Join,\n  Where,\n  GroupBy,\n  Having,\n  OrderBy,\n  Limit,\n  Identifier,\n}\n\nexport enum QueryNodeType {\n  Default,\n  Select,\n  From,\n  Identifier,\n}\n\nexport interface QueryNode {\n  type: QueryNodeType;\n  token: Token;\n  clause: ClauseType;\n  children?: QueryNode[];\n}\n\nexport interface FromQueryNode extends QueryNode {\n  token: Token;\n  database?: string;\n  table?: string;\n  prefix?: string;\n}\n\nexport interface IdentifierQueryNode extends QueryNode {\n  prefix?: string;\n}\n\nexport interface SelectQueryNode extends QueryNode {\n  from?: FromQueryNode;\n}\n\nexport function parseSelectQueryNode(parser: QueryNodeParser): SelectQueryNode | null {\n  if (!parser.hasNext()) {\n    return null;\n  }\n\n  const firstToken = parser.peek();\n  const node: SelectQueryNode = {\n    type: QueryNodeType.Select,\n    clause: ClauseType.Select,\n    children: [],\n    token: null!,\n  };\n\n  if (firstToken.matchKeyword('WITH')) {\n    node.children!.push({ type: QueryNodeType.Default, token: firstToken, clause: ClauseType.With });\n  } else if (firstToken.matchKeyword('SELECT')) {\n    node.token = firstToken;\n  } else {\n    return null;\n  }\n  parser.advance();\n\n  let parenDepth = 0;\n  let endOfNode = false;\n  while (!endOfNode && parser.hasNext()) {\n    const token = parser.next();\n\n    if (token.matchKeyword('SELECT')) {\n      node.token = token;\n    } else if (token.matchKeyword('FROM') || token.matchKeyword('JOIN')) {\n      const fromNode: FromQueryNode = { type: QueryNodeType.From, token, clause: ClauseType.From };\n      node.children!.push(fromNode);\n      if (!node.from) {\n        node.from = fromNode;\n      }\n\n      if (parser.hasNext() && parser.peek().isError()) {\n        fromNode.prefix = parser.peek().text;\n      }\n\n      if (\n        parser.hasNext() &&\n        ((parser.peek().type === TokenType.BareWord && !parser.peek().isKeyword()) ||\n          parser.peek().type === TokenType.QuotedIdentifier)\n      ) {\n        const databaseOrTable = parser.next().text;\n        if (parser.hasNext() && parser.peek().type === TokenType.Dot) {\n          parser.next();\n          fromNode.database = databaseOrTable;\n\n          if (parser.hasNext() && parser.peek().isError()) {\n            fromNode.prefix = parser.peek().text;\n          }\n\n          if (\n            parser.hasNext() &&\n            ((parser.peek().type === TokenType.BareWord && !parser.peek().isKeyword()) ||\n              parser.peek().type === TokenType.QuotedIdentifier)\n          ) {\n            fromNode.table = parser.next().text;\n          }\n        } else {\n          fromNode.table = databaseOrTable;\n        }\n      }\n    } else if (token.type === TokenType.OpeningRoundBracket) {\n      const nestedNode = parseSelectQueryNode(parser);\n      if (nestedNode === null) {\n        parenDepth++;\n      } else {\n        node.children!.push(nestedNode);\n      }\n    } else if (token.type === TokenType.ClosingRoundBracket) {\n      if (parenDepth === 0) {\n        endOfNode = true;\n      } else {\n        parenDepth--;\n      }\n    } else if (token.matchKeyword('JOIN')) {\n      node.children!.push({ type: QueryNodeType.Default, token, clause: ClauseType.Join });\n    } else if (token.matchKeyword('GROUP') && parser.hasNext() && parser.peek().matchKeyword('BY')) {\n      node.children!.push({ type: QueryNodeType.Default, token: parser.next(), clause: ClauseType.GroupBy });\n    } else if (token.matchKeyword('WHERE')) {\n      node.children!.push({ type: QueryNodeType.Default, token, clause: ClauseType.Where });\n    } else if (token.matchKeyword('HAVING')) {\n      node.children!.push({ type: QueryNodeType.Default, token, clause: ClauseType.Having });\n    } else if (token.matchKeyword('ORDER') && parser.hasNext() && parser.peek().matchKeyword('BY')) {\n      node.children!.push({ type: QueryNodeType.Default, token: parser.next(), clause: ClauseType.OrderBy });\n    } else if (token.matchKeyword('LIMIT')) {\n      node.children!.push({ type: QueryNodeType.Default, token, clause: ClauseType.Limit });\n    } else if (token.type === TokenType.BareWord && !token.isKeyword()) {\n      let fullIdent = token.text;\n      let identToken = token;\n      while (\n        parser.hasNext() &&\n        (parser.peekIs(TokenType.Dot) || (parser.peekIs(TokenType.BareWord) && !parser.peek().isKeyword()))\n      ) {\n        identToken = parser.next();\n        fullIdent += identToken.text;\n      }\n      node.children!.push({\n        type: QueryNodeType.Identifier,\n        token: identToken,\n        prefix: fullIdent,\n        clause: ClauseType.Identifier,\n      } as IdentifierQueryNode);\n    } else if (token.type === TokenType.DollarSign) {\n      node.children!.push({\n        type: QueryNodeType.Identifier,\n        token,\n        prefix: '$',\n        clause: ClauseType.Identifier,\n      } as IdentifierQueryNode);\n    } else {\n      node.children!.push({ type: QueryNodeType.Default, token, clause: ClauseType.None });\n    }\n  }\n\n  return node;\n}\n","import { getTemplateSrv } from '@grafana/runtime';\nimport { Monaco, monacoTypes } from '@grafana/ui';\nimport { Range } from './sqlProvider';\nimport { Lexer } from 'ch-parser/lexer';\nimport { keywords, TokenType } from 'ch-parser/types';\nimport { SqlFunction, TableColumn } from 'types/queryBuilder';\nimport { pluginMacros } from 'ch-parser/pluginMacros';\nimport {\n  ClauseType,\n  FromQueryNode,\n  IdentifierQueryNode,\n  parseSelectQueryNode,\n  QueryNodeParser,\n  QueryNodeType,\n  SelectQueryNode,\n} from 'ch-parser/parser';\n\ndeclare const monaco: Monaco;\nexport interface Schema {\n  databases: () => Promise<string[]>;\n  tables: (db?: string) => Promise<string[]>;\n  columns: (db: string, table: string) => Promise<TableColumn[]>;\n  functions: () => Promise<SqlFunction[]>;\n  defaultDatabase?: string;\n}\n\ninterface CursorData {\n  clause: ClauseType;\n  identifiers: string[];\n  database?: string;\n  table?: string;\n  prefix?: string;\n\n  begin: number;\n  end: number;\n}\n\nfunction getCursorInSelectQueryNode(root: SelectQueryNode, cursorPosition: number): CursorData {\n  const cursorData: CursorData = {\n    clause: ClauseType.None,\n    identifiers: [],\n    begin: root.token.begin,\n    end: root.token.end,\n  };\n\n  if (cursorPosition > root.token.end) {\n    cursorData.clause = ClauseType.Select;\n  }\n\n  if (root.from) {\n    cursorData.database = root.from.database;\n    cursorData.table = root.from.table;\n  }\n\n  if (!root.children) {\n    return cursorData;\n  }\n\n  for (const node of root.children) {\n    switch (node.type) {\n      case QueryNodeType.Select:\n        const selectNode = node as SelectQueryNode;\n        const nestedCursorData = getCursorInSelectQueryNode(selectNode, cursorPosition);\n        // +1/-1 to exclude subquery parenthesis\n        if (cursorPosition >= nestedCursorData.begin - 1 && cursorPosition <= nestedCursorData.end + 1) {\n          return nestedCursorData;\n        }\n\n        break;\n      default:\n        cursorData.end = node.token.end;\n        if (node.type === QueryNodeType.From) {\n          const fromNode = node as FromQueryNode;\n          const dbLen = fromNode.database?.length || 0;\n          const separatorLen = dbLen > 0 ? 1 : 0;\n          const tableLen = fromNode.table?.length || 0;\n          const extendedTokenLen = dbLen + separatorLen + tableLen;\n          cursorData.end = fromNode.token.end + extendedTokenLen;\n\n          if ((node as FromQueryNode).prefix) {\n            cursorData.prefix = (node as FromQueryNode).prefix;\n          }\n        }\n\n        if (\n          node.token.type === TokenType.QuotedIdentifier ||\n          node.type === QueryNodeType.Identifier ||\n          (node.token.type === TokenType.BareWord && !node.token.isKeyword())\n        ) {\n          if (node.type === QueryNodeType.Identifier) {\n            cursorData.identifiers.push((node as IdentifierQueryNode).prefix || node.token.text);\n          } else {\n            cursorData.identifiers.push(node.token.text);\n          }\n        }\n\n        if (node.type === QueryNodeType.Identifier && cursorPosition === node.token.end) {\n          cursorData.prefix = (node as IdentifierQueryNode).prefix;\n        }\n\n        if (cursorPosition < node.token.begin) {\n          break;\n        } else if (cursorPosition > node.token.end && node.clause !== ClauseType.None) {\n          cursorData.clause = node.clause;\n        }\n    }\n  }\n\n  return cursorData;\n}\n\nexport async function getSuggestions(\n  text: string,\n  schema: Schema,\n  range: Range,\n  cursorPosition: number\n): Promise<monacoTypes.languages.CompletionItem[]> {\n  const lexer = new Lexer(text);\n  const tokens = [];\n  while (true) {\n    const token = lexer.nextToken();\n    if (token.isEnd()) {\n      break;\n    }\n\n    if (!token.isSignificant()) {\n      continue;\n    }\n\n    tokens.push(token);\n  }\n\n  const parser = new QueryNodeParser(tokens);\n  const selectNode = parseSelectQueryNode(parser);\n  // console.log(selectNode);\n\n  if (!selectNode) {\n    return [];\n  }\n\n  const cursorData = getCursorInSelectQueryNode(selectNode, cursorPosition);\n  // console.log('database:', cursorData.database, 'table:', cursorData.table, 'identifiers:', cursorData.identifiers, 'prefix:', cursorData.prefix, 'clause:', cursorData.clause);\n\n  return await getSuggestionsFromCursorData(cursorData, schema, range);\n}\n\nasync function getSuggestionsFromCursorData(\n  data: CursorData,\n  schema: Schema,\n  range: Range\n): Promise<monacoTypes.languages.CompletionItem[]> {\n  let results: monacoTypes.languages.CompletionItem[] = [];\n\n  if (data.database && (data.database.includes('\"') || data.database.includes('`'))) {\n    data.database = data.database.substring(1, data.database.length - 1);\n  }\n  if (data.table && (data.table.includes('\"') || data.table.includes('`'))) {\n    data.table = data.table.substring(1, data.table.length - 1);\n  }\n\n  const mapping = {\n    [ClauseType.None]: 'keyword',\n    [ClauseType.With]: 'column',\n    [ClauseType.Select]: 'column',\n    [ClauseType.From]: 'database_or_table',\n    [ClauseType.Join]: 'database_or_table',\n    [ClauseType.Where]: 'column',\n    [ClauseType.GroupBy]: 'column',\n    [ClauseType.Having]: 'column',\n    [ClauseType.OrderBy]: 'column',\n    [ClauseType.Limit]: 'keyword',\n    [ClauseType.Identifier]: 'column',\n  };\n\n  if (data.database && !data.table) {\n    mapping[ClauseType.From] = 'table';\n    mapping[ClauseType.Join] = 'table';\n  } else if (data.table && !data.database) {\n    mapping[ClauseType.From] = 'database_or_table';\n    mapping[ClauseType.Join] = 'database_or_table';\n  } else if (data.database && data.table) {\n    mapping[ClauseType.From] = 'table';\n    mapping[ClauseType.Join] = 'table';\n  }\n\n  const contextType = mapping[data.clause];\n  // console.log(contextType);\n\n  const db = data.database || schema.defaultDatabase || 'default';\n  switch (contextType) {\n    case 'database':\n      results = await fetchDatabaseSuggestions(schema, range);\n      break;\n\n    case 'database_or_table':\n      const databases = await fetchDatabaseSuggestions(schema, range, data.prefix);\n      const defaultTables = await fetchTableSuggestions(schema, range, db, data.prefix);\n\n      results = [...databases, ...defaultTables];\n      break;\n\n    case 'table':\n      results = await fetchTableSuggestions(schema, range, db, data.prefix);\n      break;\n\n    case 'column':\n      const macros = await getMacroSuggestions(range, data.prefix);\n      results.push(...macros);\n      const variables = await getVariableSuggestions(range);\n      results.push(...variables);\n\n      // Causes duplicates. Must fix identifier parsing first, or filter/dupe check.\n      // results.push(...data.identifiers.map(id => ({\n      //   label: id,\n      //   insertText: id,\n      //   sortText: `!!${id}`,\n      //   kind: monaco.languages.CompletionItemKind.Field,\n      //   documentation: '',\n      //   range\n      // })));\n\n      results.push({\n        label: 'NULL',\n        insertText: 'NULL',\n        sortText: '!!!NULL',\n        kind: monaco.languages.CompletionItemKind.Keyword,\n        documentation: '',\n        range,\n      });\n\n      const sqlFunctions = await fetchFunctionSuggestions(schema, range);\n      results.push(...sqlFunctions);\n\n      if (data.table) {\n        const database = data.database || schema.defaultDatabase || 'default';\n        const columns = await fetchFieldSuggestions(schema, range, database, data.table, data.prefix);\n        results.push(...columns);\n      }\n\n      break;\n    case 'keyword':\n      results = Array.from(keywords).map((keyword) => ({\n        label: keyword,\n        insertText: keyword,\n        kind: monaco.languages.CompletionItemKind.Keyword,\n        documentation: '',\n        range,\n      }));\n      break;\n  }\n\n  return results;\n}\n\nasync function fetchDatabaseSuggestions(schema: Schema, range: Range, prefix?: string) {\n  const databases = await schema.databases();\n  return databases.map((val) => {\n    let quoteType = '';\n    if (prefix && prefix.startsWith('\"')) {\n      quoteType = '\"';\n    } else if (prefix && prefix.startsWith('`')) {\n      quoteType = '`';\n    }\n    const quoteClosed = val.endsWith(quoteType);\n\n    return {\n      label: val,\n      kind: monaco.languages.CompletionItemKind.Module,\n      detail: 'Database',\n      documentation: 'Database',\n      insertText: quoteType ? `${val}${quoteClosed ? '' : quoteType}` : val,\n      insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n      range,\n    };\n  });\n}\n\nasync function fetchTableSuggestions(schema: Schema, range: Range, database: string, prefix?: string) {\n  const tables = await schema.tables(database);\n  return tables.map((val) => {\n    let quoteType = '';\n    if (prefix && prefix.startsWith('\"')) {\n      quoteType = '\"';\n    } else if (prefix && prefix.startsWith('`')) {\n      quoteType = '`';\n    }\n    const quoteClosed = val.endsWith(quoteType);\n\n    return {\n      label: val,\n      kind: monaco.languages.CompletionItemKind.Class,\n      detail: 'Table',\n      documentation: 'Table',\n      insertText: quoteType ? `${val}${quoteClosed ? '' : quoteType}` : val,\n      insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n      range,\n    };\n  });\n}\n\nasync function fetchFieldSuggestions(schema: Schema, range: Range, db: string, table: string, prefix?: string) {\n  const columns = await schema.columns(db, table);\n  return columns\n    .map((c) => ({\n      label: c.label!,\n      kind: monaco.languages.CompletionItemKind.Field,\n      sortText: `!!!!${c.label}`,\n      detail: c.type,\n      documentation: c.type,\n      insertText: prefix && prefix.includes('.') ? c.name.substring(prefix?.length || 0) : c.name,\n      range,\n    }))\n    .filter((c) => !prefix || c.label.startsWith(prefix));\n}\n\nasync function fetchFunctionSuggestions(schema: Schema, range: Range) {\n  const sqlFunctions = await schema.functions();\n  return sqlFunctions.map((c) => ({\n    label: c.name,\n    kind: monaco.languages.CompletionItemKind.Function,\n    sortText: `${c.name}`,\n    detail: c.categories || (c.isAggregate && 'Aggregate') || '',\n    documentation: [\n      `Category: ${c.categories || '(none)'}`,\n      `Alias: ${c.aliasTo || '(none)'}`,\n      `Aggregate: ${c.isAggregate}`,\n      `Case insensitive: ${c.caseInsensitive}`,\n      `Origin: ${c.origin}`,\n      `Description: ${c.description || '(none)'}`,\n      `Syntax: ${c.syntax || '(none)'}`,\n      `Arguments: ${c.arguments || '(none)'}`,\n      `Returned value: ${c.returnedValue || '(none)'}`,\n    ].join('\\n'),\n    insertText: `${c.name}(\\${1})`,\n    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n    range,\n  }));\n}\n\nexport function getVariableSuggestions(range: Range) {\n  const templateSrv = getTemplateSrv();\n  if (!templateSrv) {\n    return [];\n  }\n  return templateSrv.getVariables().map((variable) => {\n    const label = `\\${${variable.name}}`;\n    const val = templateSrv.replace(label);\n    return {\n      label,\n      detail: `(Template Variable) ${val}`,\n      kind: monaco.languages.CompletionItemKind.Variable,\n      sortText: `!!!${label}`,\n      documentation: `(Template Variable) ${val}`,\n      insertText: `\\${${variable.name}}`,\n      range,\n    };\n  });\n}\n\nexport function getMacroSuggestions(range: Range, prefix?: string) {\n  return pluginMacros.map((macro) => {\n    const hasPrefix = (prefix || '').includes('$');\n    const nameNoPrefix = macro.name.substring(1);\n\n    return {\n      label: macro.name,\n      detail: `(Plugin Macro) ${macro.columnType || ''}`,\n      kind: macro.isFunction\n        ? monaco.languages.CompletionItemKind.Function\n        : monaco.languages.CompletionItemKind.Variable,\n      sortText: `!!${macro.name.substring(3)}`,\n      documentation: macro.documentation + (macro.example ? '\\nExample output: ' + macro.example : ''),\n      insertText: macro.isFunction\n        ? `${hasPrefix ? nameNoPrefix : macro.name.replaceAll('$', '\\\\$')}(\\${1})`\n        : hasPrefix\n          ? nameNoPrefix\n          : macro.name,\n      insertTextRules: macro.isFunction ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : undefined,\n      range,\n    };\n  });\n}\n","import * as parser from 'js-sql-parser';\n\nexport interface Error {\n  startLine: number;\n  endLine: number;\n  startCol: number;\n  endCol: number;\n  message: string;\n  expected: string;\n}\n\nexport interface Validation {\n  valid: boolean;\n  error?: Error;\n}\n\nexport interface ParseError {\n  message: string;\n  hash: {\n    text: string;\n    loc: {\n      first_line: number;\n      last_line: number;\n      first_column: number;\n      last_column: number;\n    };\n  };\n}\n\n// the sql parser only handles generic syntax, allow any clickhouse specific syntax\nconst allow = ['INTERVAL'];\n\nexport function validate(sql: string): Validation {\n  try {\n    parser.parse(sql);\n    return { valid: true };\n  } catch (e: any) {\n    const err = e as ParseError;\n    const parts = err.message.split('\\n');\n    const loc = err.hash.loc;\n    const lines = sql.split('\\n');\n    const line = lines[loc.first_line - 1];\n    const bad = line.substring(loc.first_column, loc.last_column);\n    if (allow.includes(bad.toUpperCase())) {\n      return { valid: true };\n    }\n\n    if (line.trim() === bad) {\n      // issue is on next line\n      const nextLine = lines[loc.first_line];\n      if (nextLine?.trim().startsWith('$')) {\n        return { valid: true };\n      }\n    }\n\n    const badSection = line.substring(loc.last_column + 1);\n    if (badSection.trim().startsWith('$')) {\n      return { valid: true };\n    }\n\n    return {\n      valid: false,\n      error: {\n        startLine: loc.first_line,\n        endLine: loc.last_line,\n        startCol: loc.first_column + 1,\n        endCol: loc.last_column + 1,\n        message: e.message,\n        expected: parts[3],\n      },\n    };\n  }\n}\n","import { Schema } from 'components/suggestions';\nimport { Datasource } from 'data/CHDatasource';\nimport { useRef } from 'react';\nimport { SqlFunction, TableColumn } from 'types/queryBuilder';\n\nexport interface SchemaCache {\n  functions: SqlFunction[] | null;\n  databases: string[] | null;\n  tables: Map<string, string[]>;\n  columns: Map<string, TableColumn[]>;\n}\n\nfunction defaultSchemaCache(): SchemaCache {\n  return {\n    functions: null,\n    databases: null,\n    tables: new Map<string, string[]>(),\n    columns: new Map<string, TableColumn[]>(),\n  };\n}\n\n/**\n * Provides an interface for the auto-complete to read schema data from.\n * This data is cached since the auto-complete is always looking for schema data.\n *\n * Sometimes another CH datasource's suggestions will show up.\n * There's no way to detect this (tried using datasource.uid), it could be monaco caching suggestions since it does show a mix\n */\nexport function useSchemaSuggestionsProvider(datasource: Datasource): Schema {\n  const cache = useRef<SchemaCache>(defaultSchemaCache());\n\n  async function fetchFunctions() {\n    if (cache.current.functions === null) {\n      cache.current.functions = await datasource.fetchSqlFunctions();\n    }\n\n    return cache.current.functions;\n  }\n\n  async function fetchDatabases() {\n    if (cache.current.databases === null) {\n      cache.current.databases = await datasource.fetchDatabases();\n    }\n\n    return cache.current.databases;\n  }\n\n  async function fetchTables(db?: string) {\n    if (db === undefined) {\n      db = '';\n    }\n\n    if (!cache.current.tables.has(db)) {\n      const tables = await datasource.fetchTables(db);\n      cache.current.tables.set(db, tables);\n\n      return tables;\n    }\n\n    return cache.current.tables.get(db)!;\n  }\n\n  async function fetchColumns(db: string, table: string) {\n    const key = `${db || ''}.${table || ''}`;\n\n    if (!cache.current.columns.has(key)) {\n      const columns = await datasource.fetchColumnsFromTable(db, table);\n      cache.current.columns.set(key, columns);\n\n      return columns;\n    }\n\n    return cache.current.columns.get(key)!;\n  }\n\n  return {\n    functions: fetchFunctions,\n    databases: fetchDatabases,\n    tables: fetchTables,\n    columns: fetchColumns,\n    defaultDatabase: datasource.getDefaultDatabase(),\n  };\n}\n","import React, { useMemo } from 'react';\nimport { css } from '@emotion/css';\n\nimport { Icon, IconButton, Stack, Tooltip, useTheme2 } from '@grafana/ui';\n\ninterface QueryToolboxProps {\n  showTools?: boolean;\n  onFormatCode?: () => void;\n}\n\nexport function QueryToolbox({ showTools, onFormatCode }: QueryToolboxProps) {\n  const theme = useTheme2();\n\n  const styles = useMemo(() => {\n    return {\n      container: css({\n        border: `1px solid ${theme.colors.border.medium}`,\n        borderTop: 'none',\n        padding: theme.spacing(0.5, 0.5, 0.5, 0.5),\n        display: 'flex',\n        flexGrow: 1,\n        justifyContent: 'space-between',\n        fontSize: theme.typography.bodySmall.fontSize,\n      }),\n      error: css({\n        color: theme.colors.error.text,\n        fontSize: theme.typography.bodySmall.fontSize,\n        fontFamily: theme.typography.fontFamilyMonospace,\n      }),\n      valid: css({\n        color: theme.colors.success.text,\n      }),\n      info: css({\n        color: theme.colors.text.secondary,\n      }),\n      hint: css({\n        color: theme.colors.text.disabled,\n        whiteSpace: 'nowrap',\n        cursor: 'help',\n      }),\n    };\n  }, [theme]);\n\n  let style = {};\n\n  if (!showTools) {\n    style = { height: 0, padding: 0, visibility: 'hidden' };\n  }\n\n  return (\n    <div className={styles.container} style={style}>\n      {showTools && (\n        <div>\n          <Stack>\n            {onFormatCode && (\n              <IconButton\n                onClick={() => {\n                  onFormatCode();\n                }}\n                name=\"brackets-curly\"\n                size=\"xs\"\n                tooltip=\"Format query\"\n              />\n            )}\n            <Tooltip content=\"Hit CTRL/CMD+Return to run query\">\n              <Icon className={styles.hint} name=\"keyboard\" />\n            </Tooltip>\n          </Stack>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useRef } from 'react';\nimport { QueryEditorProps } from '@grafana/data';\nimport { CodeEditor, monacoTypes } from '@grafana/ui';\nimport { Datasource } from 'data/CHDatasource';\nimport { registerSQL, Range, Fetcher } from './sqlProvider';\nimport { CHConfig } from 'types/config';\nimport { CHQuery, EditorType, CHSqlQuery } from 'types/sql';\nimport { styles } from 'styles';\nimport { getSuggestions } from './suggestions';\nimport { validate } from 'data/validate';\nimport { mapQueryTypeToGrafanaFormat } from 'data/utils';\nimport { QueryType } from 'types/queryBuilder';\nimport { QueryTypeSwitcher } from 'components/queryBuilder/QueryTypeSwitcher';\nimport { pluginVersion } from 'utils/version';\nimport { useSchemaSuggestionsProvider } from 'hooks/useSchemaSuggestionsProvider';\nimport { QueryToolbox } from './QueryToolbox';\n\ntype SqlEditorProps = QueryEditorProps<Datasource, CHQuery, CHConfig>;\n\nfunction setupAutoSize(editor: monacoTypes.editor.IStandaloneCodeEditor) {\n  const container = editor.getDomNode();\n  const updateHeight = () => {\n    if (container) {\n      const contentHeight = Math.max(100, Math.min(1000, editor.getContentHeight()));\n      const width = parseInt(container.style.width, 10);\n      container.style.width = `${width}px`;\n      container.style.height = `${contentHeight}px`;\n      editor.layout({ width, height: contentHeight });\n    }\n  };\n  editor.onDidContentSizeChange(updateHeight);\n  updateHeight();\n}\n\nexport const SqlEditor = (props: SqlEditorProps) => {\n  const { query, onChange, datasource } = props;\n  const editorRef = useRef<monacoTypes.editor.IStandaloneCodeEditor | null>(null);\n  const sqlQuery = query as CHSqlQuery;\n  const queryType = sqlQuery.queryType || QueryType.Table;\n\n  const saveChanges = (changes: Partial<CHSqlQuery>) => {\n    onChange({\n      ...sqlQuery,\n      pluginVersion,\n      editorType: EditorType.SQL,\n      format: mapQueryTypeToGrafanaFormat(changes.queryType || queryType),\n      ...changes,\n    });\n  };\n\n  const schema = useSchemaSuggestionsProvider(datasource);\n\n  const _getSuggestions: Fetcher = async (text: string, range: Range, cursorPosition: number) => {\n    const suggestions = await getSuggestions(text, schema, range, cursorPosition);\n    return { suggestions };\n  };\n\n  const validateSql = (sql: string, model: any, me: any) => {\n    const v = validate(sql);\n    const errorSeverity = 8;\n    if (v.valid) {\n      me.setModelMarkers(model, 'clickhouse', []);\n    } else {\n      const err = v.error!;\n      me.setModelMarkers(model, 'clickhouse', [\n        {\n          startLineNumber: err.startLine,\n          startColumn: err.startCol,\n          endLineNumber: err.endLine,\n          endColumn: err.endCol,\n          message: err.expected,\n          severity: errorSeverity,\n        },\n      ]);\n    }\n  };\n\n  const handleMount = (editor: monacoTypes.editor.IStandaloneCodeEditor, monaco: typeof monacoTypes) => {\n    editorRef.current = editor;\n    const me = registerSQL('sql', editor, _getSuggestions);\n    setupAutoSize(editor);\n    editor.onKeyUp((e: any) => {\n      if (datasource.settings.jsonData.validateSql) {\n        const sql = editor.getValue();\n        validateSql(sql, editor.getModel(), me);\n      }\n    });\n\n    editor.addAction({\n      id: 'run-query',\n      label: 'Run Query',\n      keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter],\n      contextMenuGroupId: 'navigation',\n      contextMenuOrder: 1.5,\n      run: (editor: monacoTypes.editor.IStandaloneCodeEditor) => {\n        saveChanges({ rawSql: editor.getValue() });\n        props.onRunQuery();\n      },\n    });\n  };\n\n  const onEditorWillUnmount = () => {\n    editorRef.current = null;\n  };\n  const triggerFormat = () => {\n    if (editorRef.current !== null) {\n      editorRef.current.trigger('editor', 'editor.action.formatDocument', '');\n    }\n  };\n\n  return (\n    <>\n      <div className={'gf-form ' + styles.QueryEditor.queryType}>\n        <QueryTypeSwitcher queryType={queryType} onChange={(queryType) => saveChanges({ queryType })} sqlEditor />\n      </div>\n      <div className={styles.Common.wrapper}>\n        <CodeEditor\n          aria-label=\"SQL Editor\"\n          language=\"sql\"\n          value={query.rawSql}\n          onSave={(sql) => saveChanges({ rawSql: sql })}\n          showMiniMap={false}\n          showLineNumbers={true}\n          onBlur={(sql) => saveChanges({ rawSql: sql })}\n          onEditorDidMount={handleMount}\n          onEditorWillUnmount={onEditorWillUnmount}\n        />\n        <QueryToolbox showTools onFormatCode={triggerFormat} />\n      </div>\n    </>\n  );\n};\n","import { ColumnHint, Filter, QueryBuilderOptions, QueryType, SelectedColumn } from 'types/queryBuilder';\nimport { CHBuilderQuery, CHQuery, CHSqlQuery, EditorType } from 'types/sql';\nimport { isVersionGtOrEq, pluginVersion } from 'utils/version';\nimport { mapGrafanaFormatToQueryType } from './utils';\n\nexport type AnyCHQuery = Partial<CHQuery> & { [k: string]: any };\nexport type AnyQueryBuilderOptions = Partial<QueryBuilderOptions> & { [k: string]: any };\n\n/**\n * Takes a CHQuery and transforms it to the latest interface.\n */\nexport const migrateCHQuery = (savedQuery: CHQuery): CHQuery => {\n  const isGrafanaDefaultQuery = savedQuery.rawSql === undefined;\n  if (isGrafanaDefaultQuery) {\n    return savedQuery;\n  }\n\n  if (isV3CHQuery(savedQuery)) {\n    return migrateV3CHQuery(savedQuery);\n  }\n\n  return savedQuery;\n};\n\n/**\n * Takes v3 CHQuery and returns a version compatible with the latest editor.\n */\nconst migrateV3CHQuery = (savedQuery: AnyCHQuery): CHQuery => {\n  // Builder Query\n  if (savedQuery['queryType'] === 'builder') {\n    const builderQuery: CHBuilderQuery = {\n      ...savedQuery,\n      pluginVersion,\n      editorType: EditorType.Builder,\n      builderOptions: migrateV3QueryBuilderOptions(savedQuery['builderOptions'] || {}),\n      rawSql: savedQuery.rawSql || '',\n      refId: savedQuery.refId || '',\n      format: savedQuery.format,\n    };\n\n    if (savedQuery?.meta?.timezone) {\n      builderQuery.meta = {\n        timezone: savedQuery.meta.timezone,\n      };\n    }\n\n    // delete unwanted properties from v3\n    delete (builderQuery as any)['queryType'];\n    delete (builderQuery as any)['selectedFormat'];\n\n    return builderQuery;\n  }\n\n  // Raw SQL Query\n  const rawSqlQuery: CHSqlQuery = {\n    ...savedQuery,\n    pluginVersion,\n    editorType: EditorType.SQL,\n    rawSql: savedQuery.rawSql || '',\n    refId: savedQuery.refId || '',\n    format: savedQuery.format,\n    queryType: mapGrafanaFormatToQueryType(savedQuery.format),\n    meta: {},\n  };\n\n  if (savedQuery.expand) {\n    rawSqlQuery.expand = savedQuery.expand;\n  }\n\n  if (savedQuery.meta) {\n    const meta = savedQuery.meta as any;\n    if (meta.timezone) {\n      rawSqlQuery.meta!.timezone = meta.timezone;\n    }\n\n    if (meta.builderOptions) {\n      // When changing from builder to raw editor, the builder options are saved and also require migration\n      rawSqlQuery.meta!.builderOptions = migrateV3QueryBuilderOptions(meta.builderOptions);\n    }\n  }\n\n  // delete unwanted properties from v3\n  delete (rawSqlQuery as any)['builderOptions'];\n  delete (rawSqlQuery as any)['selectedFormat'];\n\n  return rawSqlQuery;\n};\n\n/**\n * Takes v3 options and returns a version compatible with the latest builder.\n */\nconst migrateV3QueryBuilderOptions = (savedOptions: AnyQueryBuilderOptions): QueryBuilderOptions => {\n  const mapped: QueryBuilderOptions = {\n    database: savedOptions.database || '',\n    table: savedOptions.table || '',\n    queryType: getV3QueryType(savedOptions),\n    columns: [],\n  };\n\n  if (savedOptions.mode) {\n    mapped.mode = savedOptions.mode;\n  }\n\n  if (savedOptions['fields'] || Array.isArray(savedOptions['fields'])) {\n    const oldColumns: string[] = savedOptions['fields'];\n    mapped.columns = oldColumns.map((name: string) => ({ name }));\n  }\n\n  const timeField: string = savedOptions['timeField'];\n  const timeFieldType: string = savedOptions['timeFieldType'];\n  if (timeField) {\n    const timeColumn: SelectedColumn = {\n      name: timeField,\n      type: timeFieldType,\n      hint: ColumnHint.Time,\n    };\n\n    mapped.columns!.push(timeColumn);\n  }\n\n  const logLevelField: string = savedOptions['logLevelField'];\n  if (logLevelField) {\n    const logLevelColumn: SelectedColumn = {\n      name: logLevelField,\n      hint: ColumnHint.LogLevel,\n    };\n\n    mapped.columns!.push(logLevelColumn);\n  }\n\n  if (savedOptions['metrics'] || Array.isArray(savedOptions['metrics'])) {\n    const oldAggregates: any[] = savedOptions['metrics'];\n    mapped.aggregates = oldAggregates.map((agg) => ({\n      aggregateType: agg['aggregation'],\n      column: agg['field'],\n      alias: agg['alias'],\n    }));\n  }\n\n  if (savedOptions.filters || Array.isArray(savedOptions.filters)) {\n    const oldFilters: Filter[] = savedOptions.filters;\n\n    mapped.filters = oldFilters.map((filter: Filter) => {\n      const result: Filter = {\n        ...filter,\n      };\n\n      if (filter.key === timeField) {\n        result.hint = ColumnHint.Time;\n      } else if (filter.key === logLevelField) {\n        result.hint = ColumnHint.LogLevel;\n      }\n\n      return result;\n    });\n  }\n\n  if (savedOptions.groupBy || Array.isArray(savedOptions.groupBy)) {\n    mapped.groupBy = savedOptions.groupBy;\n  }\n\n  if (savedOptions.orderBy || Array.isArray(savedOptions.orderBy)) {\n    mapped.orderBy = savedOptions.orderBy;\n  }\n\n  if (savedOptions.limit !== undefined && savedOptions.limit >= 0) {\n    mapped.limit = savedOptions.limit;\n  }\n\n  return mapped;\n};\n\n/**\n * Checks if CHQuery is from <= v3 options.\n */\nconst isV3CHQuery = (savedQuery: AnyCHQuery): boolean => {\n  // pluginVersion was added in v4\n  const oldPluginVersion = !savedQuery['pluginVersion'] || !isVersionGtOrEq(savedQuery.pluginVersion, '4.0.0');\n  const oldQueryType = savedQuery['queryType'] === 'sql' || savedQuery['queryType'] === 'builder';\n  return oldPluginVersion || oldQueryType;\n};\n\n/**\n * Takes v3 options and returns the optimal QueryType. Defaults to QueryType.Table.\n */\nconst getV3QueryType = (savedOptions: AnyQueryBuilderOptions): QueryType => {\n  if (savedOptions['timeField']) {\n    return QueryType.TimeSeries;\n  } else if (savedOptions['logLevelField']) {\n    return QueryType.Logs;\n  }\n\n  return QueryType.Table;\n};\n","import React, { useEffect, useRef } from 'react';\nimport { QueryEditorProps } from '@grafana/data';\nimport { Datasource } from 'data/CHDatasource';\nimport { EditorTypeSwitcher } from 'components/queryBuilder/EditorTypeSwitcher';\nimport { styles } from 'styles';\nimport { Button } from '@grafana/ui';\nimport { CHBuilderQuery, CHQuery, EditorType } from 'types/sql';\nimport { CHConfig } from 'types/config';\nimport { QueryBuilder } from 'components/queryBuilder/QueryBuilder';\nimport { generateSql } from 'data/sqlGenerator';\nimport { SqlEditor } from 'components/SqlEditor';\nimport { isBuilderOptionsRunnable, mapQueryBuilderOptionsToGrafanaFormat } from 'data/utils';\nimport { setAllOptions, useBuilderOptionsState } from 'hooks/useBuilderOptionsState';\nimport { pluginVersion } from 'utils/version';\nimport { migrateCHQuery } from 'data/migration';\n\nexport type CHQueryEditorProps = QueryEditorProps<Datasource, CHQuery, CHConfig>;\n\n/**\n * Top level query editor component\n */\nexport const CHQueryEditor = (props: CHQueryEditorProps) => {\n  const { datasource, query: savedQuery, onRunQuery } = props;\n  const query = migrateCHQuery(savedQuery);\n\n  return (\n    <>\n      <div className={'gf-form ' + styles.QueryEditor.queryType}>\n        <EditorTypeSwitcher {...props} query={query} datasource={datasource} />\n        <Button onClick={() => onRunQuery()}>Run Query</Button>\n      </div>\n      <CHEditorByType {...props} query={query} />\n    </>\n  );\n};\n\nconst CHEditorByType = (props: CHQueryEditorProps) => {\n  const { query, onChange, app } = props;\n  const [builderOptions, builderOptionsDispatch] = useBuilderOptionsState((query as CHBuilderQuery).builderOptions);\n\n  /**\n   * Grafana will sometimes replace the builder options directly, so we need to sync in both directions.\n   * For example, selecting an entry from the query history will cause the local state to fall out of sync.\n   * The \"key\" property is present on these historical entries.\n   */\n  const queryKey = query.key || '';\n  const lastKey = useRef<string>(queryKey);\n  if (queryKey !== lastKey.current && query.editorType === EditorType.Builder) {\n    builderOptionsDispatch(setAllOptions((query as CHBuilderQuery).builderOptions || {}));\n    lastKey.current = queryKey;\n  }\n\n  /**\n   * Sync builder options when switching from SQL Editor to Query Builder\n   */\n  const lastEditorType = useRef<EditorType | undefined>(undefined);\n  if (query.editorType !== lastEditorType.current && query.editorType === EditorType.Builder) {\n    builderOptionsDispatch(setAllOptions((query as CHBuilderQuery).builderOptions || {}));\n  }\n  lastEditorType.current = query.editorType;\n\n  // Prevent trying to run empty query on load\n  const shouldSkipChanges = useRef<boolean>(true);\n  if (isBuilderOptionsRunnable(builderOptions)) {\n    shouldSkipChanges.current = false;\n  }\n\n  useEffect(() => {\n    if (shouldSkipChanges.current || query.editorType === EditorType.SQL) {\n      return;\n    }\n\n    onChange({\n      ...query,\n      pluginVersion,\n      editorType: EditorType.Builder,\n      rawSql: generateSql(builderOptions),\n      builderOptions,\n      format: mapQueryBuilderOptionsToGrafanaFormat(builderOptions),\n    });\n\n    // TODO: fix dependency warning with \"useEffectEvent\" once added to stable version of react\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [builderOptions]);\n\n  if (query.editorType === EditorType.SQL) {\n    return (\n      <div data-testid=\"query-editor-section-sql\">\n        <SqlEditor {...props} />\n      </div>\n    );\n  }\n\n  return (\n    <QueryBuilder\n      datasource={props.datasource}\n      builderOptions={builderOptions}\n      builderOptionsDispatch={builderOptionsDispatch}\n      generatedSql={query.rawSql}\n      app={app}\n    />\n  );\n};\n","import { DataSourcePlugin, DashboardLoadedEvent, FeatureToggles } from '@grafana/data';\nimport { Datasource } from './data/CHDatasource';\nimport { ConfigEditor as ConfigEditorV1 } from './views/CHConfigEditor';\nimport { ConfigEditor as ConfigEditorV2 } from './views/config-v2/CHConfigEditor';\nimport { CHQueryEditor } from './views/CHQueryEditor';\nimport { CHConfig } from 'types/config';\nimport { CHQuery } from 'types/sql';\nimport { config, getAppEvents } from '@grafana/runtime';\nimport { analyzeQueries, trackClickhouseDashboardLoaded } from 'tracking';\nimport pluginJson from './plugin.json';\nimport clickhouseVersion from '../package.json';\n\n// ConfigEditorV2 is the new design for the Clickhouse configuration page\nconst configEditor = config.featureToggles['newClickhouseConfigPageDesign' as keyof FeatureToggles]\n  ? ConfigEditorV2\n  : ConfigEditorV1;\n\nexport const plugin = new DataSourcePlugin<Datasource, CHQuery, CHConfig>(Datasource)\n  .setConfigEditor(configEditor)\n  .setQueryEditor(CHQueryEditor);\n\n// Track dashboard loads to RudderStack\ngetAppEvents().subscribe<DashboardLoadedEvent<CHQuery>>(\n  DashboardLoadedEvent,\n  ({ payload: { dashboardId, orgId, grafanaVersion, queries } }) => {\n    const clickhouseQueries = queries[pluginJson.id]?.filter((q) => !q.hide);\n    if (!clickhouseQueries?.length) {\n      return;\n    }\n\n    trackClickhouseDashboardLoaded({\n      clickhouse_plugin_version: clickhouseVersion.version,\n      grafana_version: grafanaVersion,\n      dashboard_id: dashboardId,\n      org_id: orgId,\n      ...analyzeQueries(clickhouseQueries),\n    });\n  }\n);\n","import { reportInteraction } from '@grafana/runtime';\nimport { CHQuery, EditorType } from 'types/sql';\nimport { QueryType, BuilderMode } from 'types/queryBuilder';\n\nexport const trackClickhouseDashboardLoaded = (props: ClickhouseDashboardLoadedProps) => {\n  reportInteraction('grafana_ds_clickhouse_dashboard_loaded', props);\n};\n\nexport type ClickhouseCounters = {\n  sql_queries: number;\n  sql_query_type_table: number;\n  sql_query_type_logs: number;\n  sql_query_type_timeseries: number;\n  sql_query_type_traces: number;\n\n  builder_queries: number;\n  builder_query_type_table: number;\n  builder_query_type_table_simple: number;\n  builder_query_type_table_aggregate: number;\n  builder_query_type_logs: number;\n  builder_query_type_timeseries: number;\n  builder_query_type_timeseries_simple: number;\n  builder_query_type_timeseries_aggregate: number;\n  builder_query_type_traces: number;\n  builder_query_type_traces_search: number;\n  builder_query_type_traces_id: number;\n  builder_minimized_queries: number;\n  builder_otel_queries: number;\n};\n\nexport interface ClickhouseDashboardLoadedProps extends ClickhouseCounters {\n  clickhouse_plugin_version?: string;\n  grafana_version?: string;\n  dashboard_id: string;\n  org_id?: number;\n  [key: string]: any;\n}\n\nexport const analyzeQueries = (queries: CHQuery[]): ClickhouseCounters => {\n  const c: ClickhouseCounters = {\n    sql_queries: 0,\n    sql_query_type_table: 0,\n    sql_query_type_logs: 0,\n    sql_query_type_timeseries: 0,\n    sql_query_type_traces: 0,\n\n    builder_queries: 0,\n    builder_query_type_table: 0,\n    builder_query_type_table_simple: 0,\n    builder_query_type_table_aggregate: 0,\n    builder_query_type_logs: 0,\n    builder_query_type_timeseries: 0,\n    builder_query_type_timeseries_simple: 0,\n    builder_query_type_timeseries_aggregate: 0,\n    builder_query_type_traces: 0,\n    builder_query_type_traces_search: 0,\n    builder_query_type_traces_id: 0,\n    builder_minimized_queries: 0,\n    builder_otel_queries: 0,\n  };\n\n  queries.forEach((q) => {\n    if (q.editorType === EditorType.SQL) {\n      c.sql_queries++;\n\n      if (q.queryType === QueryType.Table) {\n        c.sql_query_type_table++;\n      } else if (q.queryType === QueryType.Logs) {\n        c.sql_query_type_logs++;\n      } else if (q.queryType === QueryType.TimeSeries) {\n        c.sql_query_type_timeseries++;\n      } else if (q.queryType === QueryType.Traces) {\n        c.sql_query_type_traces++;\n      }\n    } else if (q.editorType === EditorType.Builder) {\n      c.builder_queries++;\n\n      if (!q.builderOptions) {\n        return;\n      }\n\n      if (q.builderOptions.queryType === QueryType.Table) {\n        c.builder_query_type_table++;\n\n        if (q.builderOptions.mode === BuilderMode.Aggregate) {\n          c.builder_query_type_table_aggregate++;\n        } else {\n          c.builder_query_type_table_simple++;\n        }\n      } else if (q.builderOptions.queryType === QueryType.Logs) {\n        c.builder_query_type_logs++;\n      } else if (q.builderOptions.queryType === QueryType.TimeSeries) {\n        c.builder_query_type_timeseries++;\n\n        if (q.builderOptions.mode === BuilderMode.Trend) {\n          c.builder_query_type_timeseries_aggregate++;\n        } else {\n          c.builder_query_type_timeseries_simple++;\n        }\n      } else if (q.builderOptions.queryType === QueryType.Traces) {\n        c.builder_query_type_traces++;\n\n        if (q.builderOptions.meta?.isTraceIdMode) {\n          c.builder_query_type_traces_id++;\n        } else {\n          c.builder_query_type_traces_search++;\n        }\n      }\n\n      if (q.builderOptions.meta?.minimized) {\n        c.builder_minimized_queries++;\n      }\n\n      if (q.builderOptions.meta?.otelEnabled) {\n        c.builder_otel_queries++;\n      }\n    }\n  });\n\n  return c;\n};\n"],"names":["compare","module","exports","a","b","loose","compareBuild","list","sort","Range","range","options","set","map","comp","c","value","join","trim","split","parse","version1","version2","v1","v2","comparison","v1Higher","highVersion","lowVersion","highHasPre","prerelease","length","patch","minor","compareMain","prefix","major","r1","r2","intersects","constructor","this","max","Map","get","key","undefined","delete","size","firstKey","keys","next","hasOwnProperty","Object","prototype","toString","hasSticky","RegExp","sticky","isRegExp","o","call","isObject","Array","isArray","reEscape","s","replace","reGroups","exec","reCapture","reUnion","regexps","regexpOrLiteral","obj","ignoreCase","Error","global","multiline","source","pad","lastNLines","string","numLines","position","lineBreaks","idx","lastIndexOf","startPosition","substring","objectToRules","object","getOwnPropertyNames","result","i","thing","rules","concat","match","forEach","rule","push","ruleOptions","j","include","arrayToRules","array","type","JSON","stringify","defaultType","error","fallback","pop","shouldThrow","toRules","spec","defaultErrorRule","compileRules","hasStates","errorRule","fast","create","fastAllowed","unicodeFlag","groups","parts","slice","shift","charCodeAt","unicode","pat","regexp","test","fallbackRule","flags","suffix","compile","Lexer","start","checkStateGroup","g","name","state","compileStates","states","all","$all","ruleMap","included","splice","newRules","k","newRule","indexOf","apply","fastKeys","keywordTransform","isMap","reverseMap","types","tokenType","item","keyword","startState","buffer","stack","reset","data","info","index","line","col","queuedToken","queuedText","queuedThrow","setState","save","re","popState","pushState","eat","tokenToString","_getGroup","groupCount","queuedGroup","token","_token","group","charAt","lastIndex","text","offset","matchNL","nl","formatError","Symbol","iterator","LexerIterator","lexer","done","message","numLinesAround","firstDisplayedLine","Math","lastDisplayedLine","lastLineDigits","String","displayedLines","errorLines","lineNo","clone","has","freeze","keywords","__WEBPACK_EXTERNAL_MODULE__1269__","__WEBPACK_EXTERNAL_MODULE__1308__","satisfies","versions","first","prev","v","version","ranges","min","simplified","original","raw","SemVer","er","__WEBPACK_EXTERNAL_MODULE__2007__","versionA","versionB","__WEBPACK_EXTERNAL_MODULE__3241__","gt","minver","comparators","setMin","comparator","compver","semver","operator","format","eq","neq","gte","lt","lte","op","TypeError","numeric","compareIdentifiers","anum","bnum","rcompareIdentifiers","outside","safeRe","t","rtl","coerceRtlRegex","includePrerelease","COERCERTLFULL","COERCERTL","COERCEFULL","COERCE","build","Comparator","ANY","hilo","gtfn","ltefn","ltfn","ecomp","high","low","throwErrors","release","identifier","identifierBase","inc","__WEBPACK_EXTERNAL_MODULE__5959__","__WEBPACK_EXTERNAL_MODULE__6089__","sqlParser","l","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","$VV","$VW","$VX","$VY","$VZ","$V_","$V$","$V01","$V11","$V21","$V31","$V41","$V51","$V61","$V71","$V81","$V91","$Va1","$Vb1","$Vc1","$Vd1","$Ve1","$Vf1","$Vg1","$Vh1","$Vi1","$Vj1","$Vk1","$Vl1","$Vm1","$Vn1","$Vo1","$Vp1","$Vq1","$Vr1","$Vs1","$Vt1","$Vu1","$Vv1","$Vw1","$Vx1","$Vy1","$Vz1","$VA1","$VB1","$VC1","$VD1","$VE1","$VF1","$VG1","$VH1","$VI1","$VJ1","$VK1","$VL1","$VM1","$VN1","$VO1","$VP1","$VQ1","$VR1","$VS1","$VT1","$VU1","$VV1","$VW1","$VX1","$VY1","$VZ1","$V_1","$V$1","$V02","parser","trace","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","nodeType","hasSemicolon","$","orderBy","limit","left","distinctOpt","right","highPriorityOpt","maxStateMentTimeOpt","straightJoinOpt","sqlSmallResultOpt","sqlBigResultOpt","sqlBufferResultOpt","sqlCacheOpt","sqlCalcFoundRowsOpt","selectItems","from","partition","where","groupBy","having","procedure","updateLockMode","alias","hasAs","$01","params","when","then","caseExprOpt","whenThenList","else","hasRow","hasExists","hasNot","escape","subQueryOpt","rollUp","sortOpt","offsetMode","hasOj","leftRight","outOpt","innerCrossOpt","condition","forOpt","indexOrKey","indexHintOpt","hasParentheses","param","table","defaultActions","parseError","str","hash","recoverable","input","self","vstack","lstack","recovering","args","arguments","sharedState","setInput","yylloc","yyloc","getPrototypeOf","symbol","preErrorSymbol","action","r","p","len","newState","expected","lex","yyval","errStr","showPosition","loc","first_line","last_line","first_column","last_column","EOF","_input","_more","_backtrack","matched","conditionStack","ch","unput","lines","substr","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","upcomingInput","pre","test_match","indexed_rule","backup","matches","tempMatch","_currentRules","flex","begin","conditions","topState","abs","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","Sql","ast","sql","travelMain","travel","append","noSuffixFlag","appendKeyword","noPrefix","noSuffix","toUpperCase","word","travelSelect","travelSelectExpr","exprList","travelIsExpression","travelNotExpression","travelOrExpression","travelAndExpression","travelXORExpression","travelNull","travelBoolean","travelBooleanExtra","travelNumber","travelString","travelFunctionCall","travelFunctionCallParam","travelIdentifier","travelIdentifierList","travelWhenThenList","travelCaseWhen","travelPrefix","travelSimpleExprParentheses","travelSubQuery","travelIdentifierExpr","travelBitExpression","travelInSubQueryPredicate","travelInExpressionListPredicate","travelBetweenPredicate","travelSoundsLikePredicate","travelLikePredicate","travelRegexpPredicate","travelIsNullBooleanPrimary","travelComparisonBooleanPrimary","travelComparisonSubQueryBooleanPrimary","travelExpressionList","travelGroupBy","travelOrderBy","travelGroupByOrderByItem","travelLimit","travelTableReferences","TableReferences","travelTableReference","travelInnerCrossJoinTable","travelStraightJoinTable","travelLeftRightJoinTable","travelNaturalJoinTable","travelOnJoinCondition","travelUsingJoinCondition","travelPartitions","travelForOptIndexHint","travelIndexList","travelUseIndexHint","travelIgnoreIndexHint","travelForceIndexHint","travelTableFactor","travelUnion","travelSelectParenthesized","travelPlaceHolder","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","MAX_LENGTH","debug","src","safeSrc","R","LETTERDASHNUMBER","safeRegexReplacements","createToken","isGlobal","safe","makeSafeRegex","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCEPLAIN","LONETILDE","tildeTrimReplace","LONECARET","caretTrimReplace","comparatorTrimReplace","looseOption","emptyOpts","__WEBPACK_EXTERNAL_MODULE__7781__","maxSV","rangeObj","e","modules","installedModules","moduleId","m","d","getter","defineProperty","enumerable","toStringTag","mode","__esModule","ns","bind","property","unbox","doubleQuoted","box","track","tracking","trackingComments","lexerAny","moo_1","keywords_1","keywordsMap","sqlKeywords","toLowerCase","transform","caseInsensitiveKeywords","x","wordQuoted","eString","_","qparam","commentLine","commentFullOpen","commentFullClose","star","comma","space","int","float","lparen","rparen","lbracket","rbracket","semicolon","dot","op_cast","op_colon","op_plus","op_eq","op_neq","op_membertext","op_member","op_minus","op_div","op_not_ilike","op_not_like","op_ilike","op_like","op_mod","op_exp","op_additive","op_compare","ops_others","codeblock","tok","commentFull","nested","comments","makeComment","trackingLoc","end","_location","comment","act","xs","ret","seek","literal","doubleQuotedSym","unwrapNoBox","diff","uw","_a","AstDefaultMapper","arrayNilMap","assignChanged","astMapper","utils_1","orig","assign","changed","trimNullish","collection","mapper","val","withAccepts","modifierBuilder","instance","wrapped","super","SkipModifier","statement","alterTable","alterIndex","transaction","createIndex","createTable","truncateTable","insert","with","withRecursive","selection","update","createExtension","tablespace","setGlobal","setTimezone","setNames","createSequence","alterSequence","drop","createEnum","alterEnum","createCompositeType","union","show","prepare","deallocate","createView","createMaterializedView","refreshMaterializedView","createSchema","raise","do","createFunction","dropFunction","values","NotSupported","never","query","select","ref","tableRef","dataType","returns","kind","columns","attributes","seq","change","as","expr","sets","returning","selectionColumn","_b","into","on","onConflict","exprs","ocdo","formatExprs","using","u","createColumn","likeTable","like","constraint","def","default","foreignTable","st","expressions","expression","changes","hasChanged","currentChange","tableAlteration","addColumn","addConstraint","alterColumn","renameTable","renameColumn","renameConstraint","dropColumn","dropConstraint","setTableOwner","inTable","alter","setColumnDefault","column","setColumnType","alterColumnSimple","alterColumnAddGenerated","inColumn","constraints","by","_in","in","fromTable","fromStatement","fromCall","y","nfrom","binary","unary","constant","arraySelect","cast","case","member","arrayIndex","ternary","valueKeyword","parameter","extract","callOverlay","callSubstring","lo","hi","operand","whens","w","filter","withinGroupList","withinGroup","for","placing","proto","configurable","skipNext","impl","parent","__webpack_require__","intervalToString","normalizeInterval","buildInterval","unwrap","_c","_d","_e","_f","_g","_h","_j","mul","floor","ceil","nk","months","years","hours","minutes","seconds","milliseconds","sign","round","num","neg","vals","days","time","astVisitor","ast_mapper_1","Visitor","SkipVisitor","mapperProto","visitor","visitorBuilder","what","msg","depth","Date","__createBinding","k2","desc","getOwnPropertyDescriptor","writable","__exportStar","toSql","parseWithComments","parseIntervalLiteral","parseGeometricLiteral","parseArrayLiteral","parseFirst","parser_1","ast_visitor_1","to_sql_1","interval_builder_1","__importDefault","mod","nearley_1","main_ne_1","array_ne_1","geometric_ne_1","interval_ne_1","interval_iso_ne_1","lexer_1","sqlCompiled","arrayCompiled","geometricCompiled","intervalTextCompiled","intervalIsoCompiled","optEntry","Grammar","fromCompiled","entry","opts","doParse","_parse","parsed","locationTracking","grammar","feed","asts","finish","reg","startsWith","id","lexer_2","asName","asNameWithColumns","toStr","asLit","last","flatten","asStr","flattenStr","fromEntries","kwSensitivity","sensitivity","notReservedKw","kw","rej","localeCompare","anyKw","kwSet","Set","setSeqOpts","defs","unboxed","add","ParserRules","parseFloat","parseInt","kw_primary","kw_unique","quoted_word","head","tail","kw_not","kw_with","kw_null","kw_array","asArray","config","arrayOf","kw_precision","kw_as","schema","kw_current_schema","kw_all","kw_analyse","kw_analyze","kw_and","kw_any","kw_asc","kw_asymmetric","kw_authorization","kw_binary","kw_both","kw_case","kw_cast","kw_check","kw_collate","kw_collation","kw_concurrently","kw_constraint","kw_create","kw_cross","kw_current_catalog","kw_current_date","kw_current_role","kw_current_time","kw_current_timestamp","kw_current_user","kw_default","kw_deferrable","kw_desc","kw_distinct","kw_do","kw_else","kw_end","kw_except","kw_false","kw_fetch","kw_for","kw_foreign","kw_freeze","kw_from","kw_full","kw_grant","kw_group","kw_having","kw_ilike","kw_in","kw_initially","kw_inner","kw_intersect","kw_into","kw_is","kw_isnull","kw_join","kw_lateral","kw_leading","kw_left","kw_like","kw_limit","kw_localtime","kw_localtimestamp","kw_natural","kw_notnull","kw_offset","kw_on","kw_only","kw_or","kw_order","kw_outer","kw_overlaps","kw_placing","kw_references","kw_returning","kw_right","kw_select","kw_session_user","kw_similar","kw_some","kw_symmetric","kw_table","kw_tablesample","kw_then","kw_to","kw_trailing","kw_true","kw_union","kw_user","kw_using","kw_variadic","kw_verbose","kw_when","kw_where","kw_window","_groupBy","_selectFor","selectFor","skip","columnNames","lateral","withOrdinality","distinct","order","nulls","opSchema","to","function","over","partitionBy","field","cols","ifNotExists","unlogged","locality","temporary","constraintName","localColumns","foreignColumns","reduce","onDelete","onUpdate","collate","verb","option","inherits","unique","concurrently","indexName","opclass","extension","variable","scope","level","isolationLevel","writeable","deferrable","overriding","_t","ifExists","only","behaviour","always","sequence","tables","identity","cascade","temp","owner","newName","newSchema","names","target","orReplace","recursive","parameters","checkOption","withData","specs","language","purity","code","leakproof","onNullInput","_tail","ParserStart","array_lexer_1","start_list","end_list","valueString","valueRaw","geometric_lexer_1","arg","lcurl","rcurl","path","closed","lcomp","rcomp","interval_lexer_1","elts","colon","interval_iso_lexer_1","T","P","Y","M","W","D","H","S","pg_escape_1","nm","ident","forceDoubleQuote","elems","addParen","visitGenerated","visitQualifiedName","cs","visitQualifiedNameAliased","visitOrderBy","visitSetVal","visitSeqOpts","incrementBy","minValue","maxValue","startWith","cache","cycle","ownedBy","visitQColumn","restart","tbl","visitOp","cname","updateExisting","Number","isInteger","cst","beg","appendConfig","ix","vlist","entries","tblCnt","f","locationOf","node","minSV","MAX_SAFE_INTEGER","parseOptions","LOOSE","FULL","other","comparePre","base","isNaN","SPACE_CHARACTERS","formatted","parseRange","isNullSet","isAny","comps","memoKey","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","cached","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","TILDETRIM","CARETTRIM","rangeList","parseComparator","replaceGTE0","COMPARATORLOOSE","rangeMap","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","testSet","remainingComparators","testComparator","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","replaceTilde","TILDELOOSE","TILDE","pr","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","fM","fm","fp","fpr","fb","tM","tm","tp","tpr","allowed","internalRe","constants","identifiers","valid","clean","rcompare","compareLoose","rsort","cmp","coerce","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","gtr","ltr","simplifyRange","subset","tokens","SEMVER_SPEC_VERSION","RELEASE_TYPES","__WEBPACK_EXTERNAL_MODULE__8531__","root","factory","Rule","symbols","postprocess","highestId","State","reference","wantedBy","isComplete","Column","wants","scannable","completed","byName","StreamLexer","keepHistory","lexerState","predict","process","current","getSymbolShortDisplay","withCursorAt","symbolSequence","nextState","child","children","reverse","fail","nextColumn","complete","exp","copy","lastLineBreak","nextLineBreak","chunk","err","reportLexerError","expect","isToken","reportError","results","lexerError","tokenDisplay","lexerMessage","reportErrorCommon","lastColumnIndex","lastColumn","expectantStates","nextSymbol","displayStateStack","buildFirstStateStack","stateStack","symbolDisplay","getSymbolDisplay","lastDisplay","sameDisplayCount","display","getSymbolLongDisplay","visited","prevState","childVisited","childResult","restore","rewind","considerations","nearley","minimumVersionWithPreRelease","minimumVersion","simpleSubset","sub","dom","eqSet","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","COMPARATOR","includes","env","NODE_DEBUG","console","__webpack_module_cache__","cachedModule","__webpack_modules__","definition","prop","BuilderMode","QueryType","AggregateType","ColumnHint","TimeUnit","OrderByDirection","FilterOperator","EditorType","defaultCHBuilderQuery","pluginVersion","editorType","rawSql","builderOptions","database","queryType","Table","List","meta","getReplacementKey","isVariable","random","sqlToStatement","replaceVars","variableSql","replaceVariables","variableRegex","regExpArray","startIndex","replacementName","si","replaceMacroVariables","replaceFuncs","keywordRegex","replaceMacroFunctions","replaceParts","rfs","find","rft","rf","getTable","stm","tableName","AdHocFilter","setTargetTableFromQuery","_targetTable","adHocFilters","filters","isValid","warn","endsWith","escapeKey","escapeValueBasedOnOperator","convertOperatorToClickHouseOperator","GraphDrawStyle","GraphDrawStyle2","StackingMode","StackingMode2","BarAlignment","BarAlignment2","SECOND","MINUTE","HOUR","LogLevelColor","LogLevel","critical","colors","warning","unknown","dark","light","bootData","user","lightTheme","queryLogsVolume","datasource","logsVolumeRequest","Observable","observer","rawLogsVolume","LoadingState","Loading","queryResponse","subscription","isObservable","subscribe","aggregatedLogsVolume","timeField","levelFields","fields","TIME_FIELD_ALIAS","oneLevelDetected","DEFAULT_LOGS_ALIAS","totalLength","logLevel","df","MutableDataFrame","addField","FieldType","number","getLogVolumeFieldConfig","aggregateRawLogsVolume","custom","targets","absoluteRange","valueOf","Done","dataQueryResponse","toDataFrame","unsubscribe","color","displayNameFromDS","FieldColorModeId","Fixed","fixedColor","drawStyle","Bars","barAlignment","Center","lineColor","pointColor","fillColor","lineWidth","fillOpacity","stacking","Normal","getTimeFieldRoundingClause","scopedVars","interval","__interval_ms","intervalMs","LOG_LEVEL_TO_IN_CLAUSE","levels","allLevels","defaultLogsTable","defaultTraceTable","otel129","specUrl","logsTable","logColumnMap","Time","LogMessage","LogLabels","TraceId","logLevels","traceTable","traceColumnMap","TraceSpanId","TraceParentSpanId","TraceServiceName","TraceOperationName","TraceDurationTime","TraceTags","TraceServiceTags","TraceStatusCode","TraceKind","TraceStatusMessage","TraceState","flattenNested","traceDurationUnit","Nanoseconds","traceEventsColumnPrefix","traceLinksColumnPrefix","traceTimestampTableSuffix","getLatestVersion","getVersion","generateSql","hasTraceIdFilter","isTraceIdMode","traceId","Traces","generateTraceIdQuery","generateTraceSearchQuery","Logs","generateLogsQuery","TimeSeries","Trend","generateSimpleTimeSeriesQuery","generateAggregateTimeSeriesQuery","generateTableQuery","queryParts","selectParts","getColumnByHint","escapeIdentifier","traceServiceName","traceOperationName","traceStartTime","traceDurationTime","timeUnit","getTraceDurationSelectSql","selectPartsSql","getTableIdentifier","filterParts","getFilters","getOrderBy","getLimit","concatQueryParts","traceSpanId","traceParentSpanId","convertTimeFieldToMilliseconds","traceTags","traceServiceTags","traceStatusCode","Boolean","traceEventsPrefix","traceLinksPrefix","traceKind","traceStatusMessage","traceInstrumentationLibraryName","TraceInstrumentationLibraryName","traceInstrumentationLibraryVersion","TraceInstrumentationLibraryVersion","traceState","otelVersion","otel","applyTraceIdOptimization","otelEnabled","timestampTable","_options","logTime","logColumnHintsToAlias","getColumnIdentifier","logMessage","logLabels","hint","hasLogMessageFilter","logMessageLike","selectNames","timeColumn","columnsExcludingTimeColumn","aggregateSelectParts","aggregates","agg","aggregateType","hasAggregates","hasGroupBy","groupByTime","isAggregateMode","Aggregate","colName","sep","escapeValue","columnIdentifier","Seconds","Milliseconds","Microseconds","orderByParts","hintedColumn","dir","builtFilters","IsAnything","mapKey","negate","IsEmpty","IsNotEmpty","NotLike","OutsideGrafanaTimeRange","WithInGrafanaTimeRange","isNullFilter","isBooleanFilter","isNumberFilter","isDateFilter","isDateFilterWithoutValue","isDateType","isStringFilter","Like","isMultiFilter","unshift","builtFilter","isBooleanType","numberTypes","isNumberType","isStringType","stripTypeModifiers","IsNull","IsNotNull","In","NotIn","logAliasToColumnHintsEntries","logAliasToColumnHints","pluginPackage","versionPattern","SemVersion","isGtOrEq","compared","comparable","isNumber","isVersionGtOrEq","isBuilderOptionsRunnable","mapQueryBuilderOptionsToGrafanaFormat","mapQueryTypeToGrafanaFormat","mapGrafanaFormatToQueryType","tryApplyColumnHints","hintsToColumns","columnsToHints","columnLabelToPlaceholder","label","Components","QueryEditor","CodeEditor","container","Expand","Format","tooltip","AUTO","TABLE","TIME_SERIES","LOGS","TRACE","Types","SQLEditor","QueryBuilder","switcher","title","body","confirmText","dismissText","cannotConvert","TYPES","LIST","AGGREGATE","TREND","DATABASE","FROM","SELECT","tooltipTable","tooltipAggregate","ALIAS","AddLabel","RemoveLabel","AGGREGATES","WHERE","GROUP_BY","ORDER_BY","LIMIT","TIME_FIELD","LOGS_VOLUME_TIME_FIELD","LOG_LEVEL_FIELD","PREVIEW","Config","HttpHeaderConfig","headerEditor","addHeaderButton","removeHeaderButton","headerSecureSwitch","headerNameInput","headerValueInput","forwardGrafanaHeadersSwitch","AliasTableConfig","aliasEditor","addEntryButton","removeEntryButton","targetDatabaseInput","targetTableInput","aliasDatabaseInput","aliasTableInput","LogsContextPanel","alert","LogsContextKey","expandBuilderButton","LogsQueryBuilder","LogMessageLikeInput","AggregateEditor","sectionLabel","itemWrapper","itemRemoveButton","addButton","ColumnsEditor","multiSelectWrapper","GroupByEditor","LimitEditor","TraceIdInput","selectors","LogsContextPanelStyles","css","iconMatcher","contextName","LogContextKey","props","primaryColor","primaryTextColor","secondaryColor","secondaryTextColor","styles","containerLeft","contextValue","div","className","data-testid","Icon","span","datasourceUid","theme","useTheme2","secondary","main","primary","background","Alert","severity","Stack","direction","style","textDecoration","href","encodeURIComponent","Datasource","DataSourceWithBackend","getDataProvider","request","getSupportedSupplementaryQueryTypes","SupplementaryQueryType","LogsVolume","cloneDeep","intervalInfo","getIntervalInfo","__interval","hideFromInspector","supplementaryQuery","getSupplementaryLogsVolumeQuery","Builder","logLevelColumn","llf","Sum","Count","originalColumn","logVolumeSqlBuilderOptions","ASC","logVolumeSupplementaryQuery","refId","getSupplementaryQuery","originalQuery","metricFindQuery","frame","adHocFiltersStatus","canUseAdhocFilters","chQuery","isString","SQL","runQuery","ids","applyTemplateVariables","scoped","rawQuery","templateSrv","getTemplateSrv","applyConditionalAll","getVariables","skipAdHocFilter","adHocCHVerReq","adHocFilter","templateVars","macro","macroIndex","getMacroArgs","templateVarParam","templateVar","phrase","modifyQuery","columnName","actionFrame","actionValue","prefixIndex","lookupByAlias","lookupByName","lookupByLogsAlias","lookupByLogLabels","logLabelsFieldName","labels","dataFrameHasLogLabelWithName","columnType","hasMapKey","nextFilters","Equals","NotEquals","filterType","nextOptions","argsIndex","bracketCount","lastArgEndIndex","argsSubstr","foundNode","getDefaultDatabase","settings","jsonData","defaultDatabase","getDefaultTable","defaultTable","getDefaultLogsDatabase","logs","getDefaultLogsTable","getDefaultLogsColumns","logsConfig","otelConfig","levelColumn","messageColumn","shouldSelectLogContextColumns","selectContextColumns","getLogContextColumnNames","contextColumns","getLogsOtelVersion","logConfig","getDefaultTraceDatabase","traces","getDefaultTraceTable","getDefaultTraceColumns","traceConfig","traceIdColumn","spanIdColumn","operationNameColumn","parentSpanIdColumn","serviceNameColumn","durationColumn","startTimeColumn","tagsColumn","serviceTagsColumn","kindColumn","statusCodeColumn","statusMessageColumn","instrumentationLibraryNameColumn","instrumentationLibraryVersionColumn","stateColumn","getTraceOtelVersion","getDefaultTraceDurationUnit","durationUnit","getDefaultTraceFlattenNested","getDefaultTraceEventsColumnPrefix","getDefaultTraceLinksColumnPrefix","fetchDatabases","fetchData","fetchTables","db","mapColumn","fetchEntities","fetchFields","jsonColumnName","view","DataFrameView","jsonPathsAndTypes","kv","pathAndTypes","picklistValues","Promise","fetchPathsForJSONColumns","flat","isAggregate","caseInsensitive","aliasTo","origin","description","syntax","returnedValue","examples","categories","fullTableName","getAliasTable","targetDatabase","targetTable","matchedEntry","aliasTables","matchDatabase","matchTable","aliasDatabase","aliasTable","fetchColumns","fullAliasTableName","fetchColumnsFromAliasTable","fetchColumnsFromTable","getTimezone","timezone","localTimezoneInfo","getTimeZoneInfo","getTimeZone","now","ianaName","hide","pipe","res","req","traceIdQuery","traceLogsQuery","traceField","minimized","defaultColumns","openInNewWindow","app","CoreApp","Explore","links","targetBlank","url","internal","uid","datasourceName","panelsState","spanId","transformQueryResponseWithTraceAndLogLinks","resolve","timeRange","getTagKeys","fetchTags","getTagValues","getTagSource","fetchTagValuesFromQuery","fetchTagValuesFromSchema","tagSource","ADHOC_VAR","isEmpty","verString","ver","getLogContextColumnsFromLogRow","row","contextColumnNames","isMapKey","mapName","keyName","dataFrame","contextColumnName","rowIndex","cacheFilters","contextQuery","LogRowContextQueryDirection","Forward","DESC","GreaterThanOrEqual","LessThanOrEqual","timeEpochNs","contextColumnFilters","firstValueFrom","showContextToggle","getLogRowContextUi","runContextQuery","createReactElement","instanceSettings","annotations","CertificationKey","hasCert","onChange","onClick","placeholder","Field","Input","disabled","width","Button","variant","marginLeft","TextArea","rows","required","Protocol","GenericConfigSection","isCollapsible","isInitiallyOpen","typography","spacing","isOpen","setIsOpen","useState","iconName","isSubSection","collapsibleButtonAriaLabel","header","justifyContent","alignItems","margin","subtitle","fontWeight","fontWeightRegular","descriptionText","marginTop","marginBottom","bodySmall","content","h3","h6","IconButton","aria-label","ConfigSection","ConfigSubSection","DataSourceDescription","dataSourceName","docsLink","hasRequiredFields","link","cx","rel","Divider","buildInfo","GrafanaDivider","borderTop","border","weak","components","ConfigEditor","serverAddress","serverPort","insecureNativePort","insecureHttpPort","secureNativePort","secureHttpPort","protocol","username","password","tlsSkipVerify","tlsClientAuth","tlsAuthWithCACert","tlsCACert","tlsClientCert","tlsClientKey","secure","secureSocksProxy","enableRowLimit","testid","HttpHeadersConfig","headerNameLabel","headerNamePlaceholder","insecureHeaderValueLabel","secureHeaderValueLabel","secureLabel","addHeaderLabel","forwardGrafanaHeaders","descriptionParts","addTableLabel","targetDatabaseLabel","targetDatabasePlaceholder","targetTableLabel","aliasDatabaseLabel","aliasDatabasePlaceholder","aliasTableLabel","DefaultDatabaseTableConfig","QuerySettingsConfig","connMaxLifetime","dialTimeout","maxIdleConns","maxOpenConns","queryTimeout","validateSql","TracesConfig","parentSpanId","serviceName","operationName","startTime","durationTime","tags","serviceTags","eventsPrefix","linksPrefix","statusCode","statusMessage","instrumentationLibraryName","instrumentationLibraryVersion","LogsConfig","EditorTypeSwitcher","QueryTypeSwitcher","sqlTooltip","DatabaseSelect","empty","TableSelect","OtelVersionSelect","SqlPreview","AggregatesEditor","aliasLabel","aliasTooltip","addLabel","OrderByEditor","FilterEditor","mapKeyPlaceholder","logTimeColumn","logMessageColumn","logLabelsColumn","liveView","logMessageFilter","clearButton","logLevelFilter","TimeSeriesQueryBuilder","simpleQueryModeLabel","aggregateQueryModeLabel","builderModeLabel","builderModeTooltip","TableQueryBuilder","TraceQueryBuilder","traceIdModeLabel","traceSearchModeLabel","traceModeLabel","traceModeTooltip","columnsSection","filtersSection","traceIdFilter","builder","timeseries","onDefaultDatabaseChange","onDefaultTableChange","allLabels","onConnMaxIdleConnsChange","onConnMaxLifetimeChange","onConnMaxOpenConnsChange","onDialTimeoutChange","onQueryTimeoutChange","onValidateSqlChange","Switch","role","enabled","onEnabledChange","selectedVersion","onVersionChange","wide","useEffect","useTheme","switchContainerStyle","padding","sm","height","formInputHeight","InlineFormLabel","GrafanaSwitch","currentTarget","checked","Select","menuPlacement","LabeledInput","Common","check","wrapper","smallBtn","selectWrapper","inlineSelect","firstLabel","expand","subHeader","inlineField","FormatSelector","formatSelector","VariablesEditor","inline","labelStyle","onOtelEnabledChange","onOtelVersionChange","onTimeColumnChange","onLevelColumnChange","onMessageColumnChange","onSelectContextColumnsChange","onContextColumnsChange","br","TagsInput","durationUnitOptions","DurationUnitSelect","unit","onTraceIdColumnChange","onSpanIdColumnChange","onOperationNameColumnChange","onParentSpanIdColumnChange","onServiceNameColumnChange","onDurationColumnChange","onDurationUnitChange","onStartTimeColumnChange","onTagsColumnChange","onServiceTagsColumnChange","onKindColumnChange","onStatusCodeColumnChange","onStatusMessageColumnChange","onStateColumnChange","onInstrumentationLibraryNameColumnChange","onInstrumentationLibraryVersionColumnChange","onFlattenNestedChange","onEventsColumnPrefixChange","onLinksColumnPrefixChange","tracesConfig","secureFields","onHttpHeadersChange","configuredSecureHeaders","useConfiguredSecureHttpHeaders","headers","setHeaders","setForwardGrafanaHeaders","allSelectors","HttpHeaderEditor","isSecureConfigured","onHeaderChange","nextHeaders","updateHeader","onRemove","removeHeader","icon","onForwardGrafanaHeadersChange","updateForwardGrafanaHeaders","setName","setValue","setSecure","setSecureConfigured","valueInput","SecretInput","isConfigured","onReset","onBlur","headerValueLabel","secureJsonFields","useMemo","secureHeaders","onOptionsChange","httpHeaders","secureHttpHeaderKeys","secureHttpHeaderValues","currentSecureJsonFields","secureJsonData","useConfigDefaults","appliedDefaults","useRef","v3ServerField","host","v3TimeoutField","Native","trackInfluxDBConfigV2FeedbackButtonClicked","reportInteraction","trackClickhouseConfigV2HostInput","trackClickhouseConfigV2DatabaseCredentialsUserInput","trackClickhouseConfigV2DatabaseCredentialsPasswordInput","trackClickhouseConfigV2QuerySettings","onAliasTablesChange","setEntries","entryToUniqueKey","removeDuplicateEntries","duplicateKeys","AliasTableEditor","onEntryChange","nextEntries","updateEntry","removeEntry","setTargetDatabase","setTargetTable","setAliasDatabase","setAliasTable","trackClickhouseConfigV1HostInput","trackClickhouseConfigV1QuerySettings","trackClickhouseConfigV1LogsConfig","trackClickhouseConfigV1TracesConfig","resolveSelectors","versionedSelectors","grafanaVersion","resolveSelectorGroup","isVersionedSelectorGroup","assertIsSemverValid","resolveSelector","versionedSelector","versionToUse","selectorName","MIN_GRAFANA_VERSION","versionedComponents","RadioButton","Breadcrumbs","breadcrumb","CanvasGridAddActions","addPanel","groupPanels","ungroup","addRow","pasteRow","addTab","pasteTab","DashboardEditPaneSplitter","primaryBody","EditPaneHeader","deleteButton","copyDropdown","duplicate","backButton","TimePicker","openButton","overlayContent","fromField","toField","applyTimeRange","copyTimeRange","pasteTimeRange","calendar","closeButton","absoluteTimeRangeTitle","DataSourcePermissions","form","roleType","rolePicker","permissionLevel","DateTimePicker","DataSource","TestData","QueryTab","scenarioSelectContainer","scenarioSelect","noise","seriesCount","spread","startValue","DataSourceHttpSettings","urlInput","Jaeger","traceIDInput","Prometheus","configPage","connectionSettings","manageAlerts","allowAsRecordingRulesTarget","scrapeInterval","defaultEditor","disableMetricLookup","prometheusType","prometheusVersion","cacheLevel","incrementalQuerying","queryOverlapWindow","disableRecordingRules","customQueryParameters","httpMethod","exemplarsAddButton","internalLinkSwitch","codeModeMetricNamesSuggestionLimit","seriesLimit","queryEditor","explain","editorToggle","legend","step","exemplars","metricSelect","hints","metricsExplorer","queryAdvisor","queryField","metricsCountInfo","metricsBrowser","selectMetric","metricList","labelNamesFilter","labelValuesFilter","useQuery","useAsRateQuery","validateSelector","clear","exemplarMarker","variableQueryEditor","labelnames","metricRegex","labelValues","labelSelect","metricNames","varQueryResult","seriesQuery","classicQuery","minStep","seriesValueAsTimestamp","Menu","MenuComponent","MenuGroup","MenuItem","SubMenu","Panels","Panel","headerContainer","headerItems","menuItems","menu","containerByTitle","headerCornerInfo","status","loadingBar","HoverWidget","dragIcon","PanelDataErrorMessage","Visualization","Graph","VisualizationTab","legendSection","Legend","legendItemAlias","showLegendSwitch","xAxis","BarGauge","valueV2","PieChart","svgSlice","Text","footer","TableNG","Filters","HeaderButton","Container","SelectAll","Tooltip","Wrapper","Caret","Footer","ReducerLabel","Value","VizLegend","seriesName","Drawer","General","contract","close","rcContentWrapper","DashboardSaveDrawer","saveButton","saveAsButton","saveAsTitleInput","PanelEditor","OptionsPane","fieldLabel","fieldInput","DataPane","applyButton","toggleVizPicker","toggleVizOptions","toggleTableView","showZoomField","showAttributionField","showScaleField","showMeasureField","showDebugField","measureButton","Outline","section","ElementEditPane","variableType","addVariableButton","variableNameInput","variableLabelInput","AutoGridLayout","minColumnWidth","customMinColumnWidth","clearCustomMinColumnWidth","maxColumns","rowHeight","customRowHeight","clearCustomRowHeight","fillScreen","PanelInspector","Data","Stats","Json","Query","refreshButton","jsonObjectKeys","Tab","active","RefreshPicker","runButtonV2","intervalButtonV2","queryInspectorButton","queryHistoryButton","addQuery","addQueryFromLibrary","queryGroupTopSection","addExpression","QueryHistory","queryText","QueryEditorRows","QueryEditorRow","actionButton","AlertTab","AlertRules","groupToggle","toggle","expandedContent","previewButton","ruleNameField","newFolderButton","newFolderNameField","newFolderNameCreateButton","newEvaluationGroupButton","newEvaluationGroupName","newEvaluationGroupInterval","newEvaluationGroupCreate","stepNo","stepAdvancedModeSwitch","alertV2","TransformTab","newTransform","transformationEditor","transformationEditorDebugger","Transforms","card","disableTransformationButton","Reduce","modeLabel","calculationsLabel","SpatialOperations","actionLabel","locationLabel","location","autoOption","coords","latitudeFieldLabel","longitudeFieldLabel","geohash","geohashFieldLabel","lookup","lookupFieldLabel","gazetteerFieldLabel","searchInput","noTransformationsMessage","addTransformationButton","removeAllTransformationsButton","NavBar","Configuration","button","Toggle","Reporting","NavMenu","NavToolbar","commandPaletteTrigger","shareDashboard","markAsFavorite","editDashboard","editButton","exitButton","settingsButton","addRowButton","addLibraryPanelButton","addVisualizationButton","pastePanelButton","discardChangesButton","discardLibraryPanelButton","unlinkLibraryPanelButton","saveLibraryPanelButton","backToDashboardButton","PageToolbar","itemButton","QueryEditorToolbarItem","BackButton","backArrow","OptionsGroup","PluginVisualization","toggleAllOptions","singleValue","FieldConfigEditor","OverridesConfigEditor","FolderPicker","containerV2","ReadonlyFolderPicker","DataSourcePicker","inputV2","dataSourceList","advancedModal","builtInDataSourceList","TimeZonePicker","changeTimeSettingsButton","WeekStartPicker","TraceViewer","spanBar","QueryField","queryPatterns","inputSelect","valueSelect","matchOperatorSelect","ValuePicker","Search","sectionV2","itemsV2","cards","collapseFolder","sectionId","expandFolder","dashboardItem","dashboardCard","folderHeader","folderName","folderContent","dashboardItems","DashboardLinks","dropDown","LoadingIndicator","CallToActionCard","buttonV2","DataLinksContextMenu","singleLink","DataLinksActionsTooltip","tooltipWrapper","ReactMonacoEditor","editorLazy","DashboardImportPage","textarea","submit","ImportDashboardForm","PanelAlertTabContent","VisualizationPreview","ColorSwatch","DashboardRow","UserProfile","profileSaveButton","preferencesSaveButton","orgsTable","sessionsTable","extensionPointTabs","extensionPointTab","tabId","FileUpload","inputField","fileNameSpan","DebugOverlay","OrgRolePicker","AnalyticsToolbarButton","Variables","variableOption","variableLinkWrapper","Annotations","annotationsTypeInput","annotationsChoosePanelInput","editor","testButton","resultContainer","ReturnToPrevious","buttonGroup","dismissButton","SQLQueryEditor","selectColumn","selectColumnInput","selectFunctionParameter","selectAggregation","selectAggregationInput","selectAlias","selectAliasInput","selectInputParameter","filterConjunction","filterField","filterOperator","headerTableSelector","headerFilterSwitch","headerGroupSwitch","headerOrderSwitch","headerPreviewSwitch","EntityNotFound","Portal","ExportImage","formatOptions","png","jpg","rendererAlert","buttons","generate","download","cancel","preview","loading","image","Alerting","AddAlertRule","EditAlertRule","alertRuleUid","Login","PasswordlessLogin","email","Home","readOnly","saveAndTest","DataSources","dataSources","EditDataSource","dataSourceUid","AddDataSource","dataSourcePluginsV2","pluginName","ConfirmModal","SecretsManagement","SecretForm","AddDashboard","addNewPanel","itemButtonAddViz","addNewRow","addNewPanelLibrary","Settings","Edit","annotationIndex","editIndex","ImportDashboard","Dashboard","DashNav","nav","navV2","publicDashboardTag","shareButton","scrollContainer","newShareButton","shareLink","arrowMenu","shareInternally","shareExternally","shareSnapshot","NewExportButton","exportAsJson","exportAsImage","playlistControls","stop","Controls","submenu","submenuItem","submenuItemLabels","submenuItemValueDropDownValueLinkTexts","submenuItemValueDropDownDropDown","submenuItemValueDropDownOptionTexts","annotationsWrapper","annotationLabel","annotationToggle","Actions","deleteDashBoard","sectionItems","saveDashBoard","saveAsDashBoard","urlParams","dashboardUid","addAnnotationCTAV2","NewAnnotation","panelFilterSelect","showInLabel","previewInDashboard","enable","addVariableCTAV2","newButton","tableRowNameFields","variableName","tableRowDefinitionFields","tableRowArrowUpButtons","tableRowArrowDownButtons","tableRowDuplicateButtons","tableRowRemoveButtons","headerLink","modeLabelNew","modeLabelEdit","generalNameInput","generalNameInputV2","generalTypeSelect","generalTypeSelectV2","generalLabelInput","generalLabelInputV2","generalHideSelect","generalHideSelectV2","selectionOptionsAllowCustomValueSwitch","selectionOptionsMultiSwitch","selectionOptionsIncludeAllSwitch","selectionOptionsCustomAllInput","previewOfValuesOption","submitButton","QueryVariable","queryOptionsDataSourceSelect","queryOptionsOpenButton","queryOptionsRefreshSelect","queryOptionsRefreshSelectV2","queryOptionsRegExInput","queryOptionsRegExInputV2","queryOptionsSortSelect","queryOptionsSortSelectV2","queryOptionsQueryInput","queryOptionsStaticOptionsRow","queryOptionsStaticOptionsToggle","queryOptionsStaticOptionsLabelInput","queryOptionsStaticOptionsValueInput","queryOptionsStaticOptionsDeleteButton","queryOptionsStaticOptionsAddButton","queryOptionsStaticOptionsOrderDropdown","valueGroupsTagsEnabledSwitch","valueGroupsTagsTagsQueryInput","valueGroupsTagsTagsValuesQueryInput","ConstantVariable","constantOptionsQueryInput","constantOptionsQueryInputV2","DatasourceVariable","datasourceSelect","nameFilter","TextBoxVariable","textBoxOptionsQueryInput","textBoxOptionsQueryInputV2","CustomVariable","customValueInput","IntervalVariable","intervalsValueInput","autoEnabledCheckbox","stepCountIntervalSelect","minIntervalInput","GroupByVariable","dataSourceSelect","infoText","modeToggle","AdHocFiltersVariable","marker","Rows","Repeated","warningMessage","Dashboards","dashboards","toggleView","SaveDashboardAsModal","SaveDashboardModal","saveVariables","saveTimerange","saveRefresh","variablesWarningAlert","SharePanelModal","linkToRenderedImage","ShareDashboardModal","PublicDashboard","WillBePublicCheckbox","LimitedDSCheckbox","CostIncreaseCheckbox","PauseSwitch","EnableAnnotationsSwitch","CreateButton","DeleteButton","CopyUrlInput","CopyUrlButton","SettingsDropdown","TemplateVariablesWarningAlert","UnsupportedDataSourcesWarningAlert","NoUpsertPermissionsWarningAlert","EnableTimeRangeSwitch","EmailSharingConfiguration","ShareType","EmailSharingInput","EmailSharingInviteButton","EmailSharingList","DeleteEmail","ReshareLink","SnapshotScene","PublishSnapshot","ShareDashboardDrawer","ShareInternally","lockTimeRangeSwitch","shortenUrlSwitch","copyUrlButton","SharePanel","widthInput","heightInput","scaleFactorInput","generateImageButton","downloadImageButton","ShareExternally","publicAlert","emailSharingAlert","shareTypeSelect","Creation","PublicShare","createButton","cancelButton","EmailShare","willBePublicCheckbox","enableTimeRangeSwitch","enableAnnotationsSwitch","revokeAccessButton","toggleAccessButton","ShareSnapshot","publishSnapshot","ExportDashboardDrawer","ExportAsJson","codeEditor","exportExternallyToggle","saveToFileButton","copyToClipboardButton","page","NotAvailable","pausedDescription","PublicDashboardScene","loadingPage","controls","RequestViewAccess","recipientInput","PublicDashboardConfirmAccess","graph","scrollView","addFromQueryLibrary","SoloPanel","PluginsList","listItem","signatureErrorNotice","PluginPage","signatureInfo","disabledInfo","PlaylistForm","itemDelete","BrowseDashboards","checkbox","NewFolderForm","nameInput","SearchDashboards","FolderView","PublicDashboards","ListItem","linkButton","configButton","trashcanButton","pauseSwitch","UserListPage","tabs","allUsers","orgUsers","anonUserDevices","publicDashboardsUsers","users","org","admin","publicDashboards","UserListAdminPage","UsersListPage","UserAnonListPage","UsersListPublicDashboardsPage","DashboardsListModal","ProfilePage","Plugin","pluginId","MigrateToCloud","CONTAINER_MIN_WIDTH","CONFIG_SECTION_HEADERS","isOptional","CONFIG_SECTION_HEADERS_WITH_PDC","PROTOCOL_OPTIONS","Http","HttpHeadersConfigV2","HttpHeaderEditorV2","h","Checkbox","gap","Box","HttpProtocolSettingsSection","onSwitchToggle","optionalHttpIsOpen","setOptionalHttpIsOpen","httpSettingsSection","httpSettingsButton","onUpdateDatasourceJsonDataOption","forward","ServerAndEncryptionSection","defaultPort","portDescription","useStyles2","getStyles","borderStyle","borderColor","minWidth","CollapsableSection","TextLink","external","protocolPortRow","protocolSection","protocolLabel","weight","Toggletip","placement","toggleTipText","toggleTipIcon","RadioButtonGroup","trackClickhouseConfigV2NativeHttpToggleClicked","nativeHttpToggle","portSection","port","onPortChange","trackClickhouseConfigV2PortInput","secureToggle","trackClickhouseConfigV2SecureConnectionChecked","secureConnection","flexDirection","marginRight","whiteSpace","LeftSidebar","pdcInjected","marginY","element","paddingTop","InlineField","labelWidth","grow","LinkButton","fill","preventDefault","document","getElementById","getBoundingClientRect","top","window","scrollY","scrollTo","behavior","sidebarText","sidebarLabel","sidebarOptional","Space","lineHeight","AdditionalSettingsSection","customSettings","setCustomSettings","onUpdateLogsConfig","trackClickhouseConfigV2LogsConfig","onLogsConfigChange","onUpdateTracesConfig","trackClickhouseConfigV2TracesConfig","onTracesConfigChange","onCustomSettingsChange","setting","Badge","badge","trackClickhouseConfigV2EnableRowLimitToggle","rowLimitEnabled","secureSocksDSProxyEnabled","versionGte","enableSecureSocksProxy","changeEvent","newSettings","DatabaseCredentialsSection","credentialsSection","onUpdateDatasourceSecureJsonDataOption","flexWrap","TLSSSLSettingsSection","hasTLSCACert","hasTLSClientCert","hasTLSClientKey","onCertificateChangeFactory","onResetClickFactory","tlsAuth","contentSection","trackClickhouseConfigV2SkipTLSVerifyToggleClicked","skipTlsVerifyToggle","trackClickhouseConfigV2TLSClientAuthToggleClicked","clientAuthToggle","certsSection","trackClickhouseConfigV2WithCACertToggleClicked","caCertToggle","optionsRow","hideOnSmallScreen","breakpoints","down","leftSticky","alignSelf","maxHeight","overflowY","requiredFields","alertHeight","normalizedName","getQueryOptionsFromSql","columnsAndAggregates","selectClauses","columnOrAggregate","selectCallFunc","getAggregatesFromAst","notFlag","getBinaryFilter","getRefFilter","getStringFilter","getIntFilter","getUnaryFilter","getCallFilter","getListFilter","getFiltersFromAst","ob","gb","confirmModalState","setConfirmModalState","cannotConvertModalState","setCannotConvertModalState","errorMessage","setErrorMessage","onEditorTypeChange","confirmed","onConfirmEditorTypeChange","onConfirm","onDismiss","allColumns","selectedColumns","onSelectedColumnsChange","showAllOption","customColumns","setCustomColumns","allColumnNames","selectedColumnNames","columnNamesSet","getCustomColumns","MultiSelect","onOpenMenu","onCloseMenu","selected","customColumnNames","columnMap","currentColumnMap","excludeAllColumn","nextSelectedColumns","tableColumn","existingColumn","allowCustomValue","defaultFilterFn","ColumnSelect","selectedColumn","onColumnChange","columnFilterFn","columnHint","invalid","clearable","selectedColumnName","staleOption","isClearable","sortOptions","OrderByItem","columnOptions","orderByItem","updateOrderByItem","removeOrderByItem","orderByOptions","onOrderByChange","nextOrderBy","fieldSpacer","getOrderByOptions","allOptions","isAggregateQuery","allValues","customValues","setLimit","valueAsNumber","onLimitChange","boolValues","filterOperators","LessThan","GreaterThan","standardTimeOptions","defaultNewFilter","FilterValueNumberItem","FilterValueSingleStringItem","defaultValue","FilterValueMultiStringItem","FilterValueEditor","onFilterChange","fieldsList","getOptions","matchedFilter","utils","onBoolFilterValueChange","onDateFilterValueChange","dateOptions","onStringFilterValueChange","onMultiFilterValueChange","removeFilter","isMapType","isJSONType","mapKeys","setKeys","ignore","fetchUniqueMapKeys","catch","ex","lastDatabase","lastTable","useUniqueMapKeys","mapKeyOptions","HorizontalGroup","wrap","align","justify","newFilter","onFilterConditionChange","restrictToFields","getFields","fieldName","matchingField","filterData","onFilterNameChange","onFilterMapKeyChange","getFilterOperatorsByType","onFilterOperatorChange","FiltersEditor","onFiltersChange","addFilter","newFilters","columnFilterDateTime","columnFilterString","useBuilderOptionChanges","nextValue","setColumns","lastDbTable","dbTable","createAction","payload","createGenericAction","setOptions","setAllOptions","setOtelEnabled","setOtelVersion","setColumnByHint","reducer","actionFn","actions","mergeBuilderOptionsState","buildInitialState","nextQueryType","nextColumns","savedOptions","defaultOptions","builderOptionsDispatch","useColumns","isNewQuery","useIsNewQuery","builderState","labelsColumn","showConfigWarning","setConfigWarningOpen","onOptionChange","didSetDefaults","defaultDb","includedColumns","useLogDefaultsOnMount","didSetColumns","useOtelColumns","hasDefaultColumnConfigured","didSetDefaultTime","useDefaultTimeColumn","appliedDefaultFilters","defaultFilters","defaultOrderBy","useDefaultFilters","configWarning","buttonContent","VerticalGroup","ModeSwitch","labelA","labelB","allAggregateOptions","Min","Max","Average","Any","aggregate","updateAggregate","removeAggregate","setAlias","aggregateOptions","onAggregatesChange","nextAggregates","aggregatesItem","onGroupByChange","onDatabaseChange","databases","setDatabases","useDatabases","onTableChange","setTables","useTables","DatabaseTableSelect","sqlEditor","inputId","setInputId","isColumnsOpen","setColumnsOpen","isFiltersOpen","setFiltersOpen","durationTimeColumn","defaultDurationUnit","defaultFlattenNested","defaultEventsColumnPrefix","defaultLinksColumnPrefix","useTraceDefaultsOnMount","Collapse","collapsible","onToggle","generatedSql","MinimizedQueryViewer","setDatabase","setTable","setQueryType","configQueryType","expandPhrases","phrases","flatMap","expandSinglePhrase","buildCombinations","parsePhrase","stripExtraWhitespace","items","parseAlteration","expectClosing","alterations","term","newIndex","parseConcatenation","parseTerm","parseMandatoryBlock","parseOptionalBlock","stringCombinations","ys","TokenType","createEofToken","EOF_TOKEN","Infinity","testToken","compareToken","ARRAY","RESERVED_DATA_TYPE","BY","RESERVED_KEYWORD","SET","RESERVED_CLAUSE","STRUCT","WINDOW","VALUES","isReserved","RESERVED_FUNCTION_NAME","RESERVED_KEYWORD_PHRASE","RESERVED_DATA_TYPE_PHRASE","RESERVED_SELECT","RESERVED_SET_OPERATION","RESERVED_JOIN","ARRAY_KEYWORD","CASE","END","WHEN","ELSE","THEN","BETWEEN","AND","OR","XOR","reservedSelect","reservedClauses","standardOnelineClauses","tabularOnelineClauses","reservedSetOperations","reservedJoins","reservedKeywordPhrases","reservedDataTypePhrases","bigquery","tokenizerOptions","reservedKeywords","reservedDataTypes","reservedFunctionNames","extraParens","stringTypes","quote","prefixes","requirePrefix","identTypes","identChars","dashes","paramTypes","positional","named","quoted","variableTypes","regex","lineCommentTypes","operators","postProcess","prevToken","detectArraySubscripts","processed","endIndex","findClosingAngleBracketIndex","typeDefTokens","IDENTIFIER","formatTypeDefToken","combineParameterizedTypes","onelineClauses","COMMA","db2","rest","paramChars","db2i","nestedBlockComments","duckdb","supportsXor","underscoresInNumbers","numbered","alwaysDenseOperators","reservedPhrases","hive","nextToken","mariadb","allowFirstCharNumber","mysql","tidb","n1ql","plsql","previousReservedToken","postgresql","operatorKeyword","redshift","spark","OPEN_PAREN","sqlite","trino","transactsql","propertyAccessOperators","singlestoredb","snowflake","arr","sortByLengthDesc","strings","equalizeWhitespace","isMultiline","escapeRegExp","WHITESPACE_REGEX","patternToRegex","pattern","toCaseInsensitivePattern","char","parenthesis","parens","pair","reservedWord","avoidIdentChars","rejectIdentCharsPattern","reservedKeywordsPattern","typesRegex","quotePatterns","specialDelimiterMap","patternList","specialDelimiters","buildQStringPatterns","singleQuotePattern","quoteTypes","prefixesPattern","stringPattern","specialChars","identifierPattern","letter","firstChars","restChars","withDashes","lineColFromIndex","TokenizerEngine","dialectName","tokenize","precedingWhitespace","getWhitespace","getNextToken","createParseError","dialectInfo","matchedText","START","ANY_CHAR","NestedComment","nestLevel","matchSection","Tokenizer","cfg","rulesBeforeParams","buildRulesBeforeParams","rulesAfterParams","buildRulesAfterParams","paramTypesOverrides","buildParamRules","validRules","DISABLE_COMMENT","BLOCK_COMMENT","LINE_COMMENT","QUOTED_IDENTIFIER","NUMBER","toCanonical","OPERATOR","varTypes","VARIABLE","varType","STRING","DELIMITER","CLOSE_PAREN","ASTERISK","PROPERTY_ACCESS_OPERATOR","NAMED_PARAMETER","QUOTED_PARAMETER","tokenKey","quoteChar","NUMBERED_PARAMETER","POSITIONAL_PARAMETER","customParam","CUSTOM_PARAMETER","dialectFromOptions","dialectOptions","tokenizer","processDialectFormatOptions","isTabularStyle","indentStyle","Params","getPositionalParameterIndex","setPositionalParameterIndex","propertyNameKeywordToIdent","prevNonCommentToken","nextNonCommentToken","funcNameToIdent","isOpenParen","dataTypeToParameterizedDataType","RESERVED_PARAMETERIZED_DATA_TYPE","identToArrayIdent","isOpenBracket","ARRAY_IDENTIFIER","dataTypeToArrayKeyword","isComment","LexerAdapter","_info","NodeType","el","toKeywordNode","toDataTypeNode","data_type","addComments","leading","trailing","leadingComments","trailingComments","addCommentsToArray","nodes","lead","statements","delimiter","clauses","limitToken","exp1","optional","exp2","limit_clause","limitKw","count","nameToken","clause","nameKw","all_columns_asterisk","set_operation","chain","arrayToken","brackets","array_subscript","function_call","open","openParen","closeParen","_1","_2","property_access","betweenToken","expr1","andToken","_3","expr2","between_predicate","betweenKw","andKw","caseToken","endToken","case_expression","caseKw","endKw","whenToken","cond","thenToken","case_when","whenKw","thenKw","elseToken","case_else","elseKw","parameterized_data_type","line_comment","block_comment","disable_comment","NearleyParser","WS","Layout","indentation","SPACE","NO_SPACE","trimHorizontalWhitespace","NO_NEWLINE","trimWhitespace","NEWLINE","addNewline","MANDATORY_NEWLINE","INDENT","addIndentation","SINGLE_INDENT","isHorizontalWhitespace","isRemovableWhitespace","newline","getLevel","itemToString","getLayoutItems","getSingleIndent","toTabularFormat","tokenText","padEnd","padStart","isTabularToken","isLogicalOperator","INDENT_TYPE_TOP_LEVEL","Indentation","indent","indentTypes","increaseTopLevel","increaseBlockLevel","decreaseTopLevel","decreaseBlockLevel","InlineLayout","expressionWidth","trailingSpace","addToLength","InlineLayoutError","ExpressionFormatter","dialectCfg","layout","formatNode","formatComments","formatNodeWithoutComments","formatFunctionCall","formatParameterizedDataType","formatArraySubscript","formatPropertyAccess","formatParenthesis","formatBetweenPredicate","formatCaseExpression","formatCaseWhen","formatCaseElse","formatClause","formatSetOperation","formatLimitClause","formatAllColumnsAsterisk","formatLiteral","formatIdentifier","formatParameter","formatOperator","formatComma","formatLineComment","formatBlockComment","formatDataType","formatKeywordNode","withComments","showFunctionKw","showDataType","formattedArray","showKw","showIdentifier","inlineLayout","formatInlineExpression","formatSubExpression","showNonTabularKw","isOnelineClause","formatClauseInOnelineStyle","formatClauseInTabularStyle","formatClauseInIndentedStyle","_node","denseOperators","fn","com","isMultilineBlockComment","splitBlockComment","isDocComment","oldParamIndex","formatJoin","formatLogicalOperator","formatKeyword","logicalOperatorNewline","keywordCase","showNonTabularFunctionKw","functionCase","identifierCase","dataTypeCase","Formatter","dialect","formatAst","trimEnd","createParser","stat","formatStatement","repeat","linesBetweenQueries","useTabs","tabWidth","newlineBeforeSemicolon","ConfigError","validateConfig","removedOptions","optionName","validateParamTypes","__rest","getOwnPropertySymbols","propertyIsEnumerable","dialectNameMap","tsql","supportedDialects","formatDialect","createDialect","formatSql","swapIdentifier","canonicalDialectName","replaceAll","registerSQL","lang","fetchSuggestions","updateOptions","fixedOverflowWidgets","scrollBeyondLastLine","monaco","languages","registerCompletionItemProvider","triggerCharacters","provideCompletionItems","model","getWordUntilPosition","startLineNumber","lineNumber","endLineNumber","startColumn","endColumn","getValue","getOffsetAt","registerDocumentFormattingEditProvider","provideDocumentFormattingEdits","getFullModelRange","tabSize","Token","isSignificant","matchKeyword","isKeyword","isError","isEnd","isWhitespaceASCII","isNumericASCII","isWordCharASCII","isHexDigit","isNumberSeparator","startOfBlock","hex","pos","isContinuationOctet","nextTokenImpl","maxQuerySize","ErrorMaxQuerySizeExceeded","prevSignificantTokenType","successToken","errorToken","tokenBegin","nextQuotePos","nextEscapePos","isHex","findFirstNotSymbols","ErrorSingleQuoteIsNotClosed","StringLiteral","newlinePos","Comment","expectedEndByte","e2Pos","EndOfStream","currentChar","Whitespace","Dot","ErrorWrongNumber","BareWord","parseQuotedString","QuotedIdentifier","ErrorDoubleQuoteIsNotClosed","ErrorBackQuoteIsNotClosed","OpeningRoundBracket","ClosingRoundBracket","OpeningSquareBracket","ClosingSquareBracket","OpeningCurlyBrace","ClosingCurlyBrace","Comma","Semicolon","Plus","Arrow","commentUntilEndOfLine","Minus","Asterisk","nestingLevel","ErrorMultilineCommentIsNotClosed","Slash","Percent","ErrorSingleExclamationMark","Spaceship","LessOrEquals","Less","GreaterOrEquals","Greater","QuestionMark","DoubleColon","Colon","Concatenation","PipeMark","DoubleAt","At","VerticalDelimiter","parseUnicodeQuotedString","tokenStream","heredocNameEndPosition","heredocSize","heredoc","heredocEndPosition","HereDoc","DollarSign","parseQuotedHexOrBinString","newPos","fromCharCode","skipWhitespacesUTF8","pluginMacros","isFunction","documentation","example","QueryNodeParser","advance","hasNext","peek","nextIs","peekIs","ClauseType","QueryNodeType","parseSelectQueryNode","firstToken","parenDepth","endOfNode","fromNode","databaseOrTable","nestedNode","fullIdent","identToken","getCursorInSelectQueryNode","cursorPosition","cursorData","None","nestedCursorData","From","dbLen","extendedTokenLen","Identifier","getSuggestions","selectNode","mapping","With","Join","Where","GroupBy","Having","OrderBy","Limit","contextType","fetchDatabaseSuggestions","fetchTableSuggestions","macros","hasPrefix","nameNoPrefix","detail","CompletionItemKind","Function","Variable","sortText","insertText","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","getMacroSuggestions","variables","getVariableSuggestions","Keyword","sqlFunctions","functions","fetchFunctionSuggestions","fetchFieldSuggestions","getSuggestionsFromCursorData","quoteType","quoteClosed","Module","Class","allow","useSchemaSuggestionsProvider","fetchSqlFunctions","QueryToolbox","showTools","onFormatCode","medium","flexGrow","fontSize","fontFamily","fontFamilyMonospace","success","cursor","visibility","SqlEditor","editorRef","sqlQuery","saveChanges","_getSuggestions","suggestions","me","bad","nextLine","startLine","endLine","startCol","endCol","validate","setModelMarkers","onSave","showMiniMap","showLineNumbers","onEditorDidMount","getDomNode","updateHeight","contentHeight","getContentHeight","onDidContentSizeChange","setupAutoSize","onKeyUp","getModel","addAction","keybindings","KeyMod","CtrlCmd","KeyCode","Enter","contextMenuGroupId","contextMenuOrder","run","onRunQuery","onEditorWillUnmount","trigger","migrateV3CHQuery","savedQuery","builderQuery","migrateV3QueryBuilderOptions","rawSqlQuery","mapped","getV3QueryType","oldColumns","timeFieldType","logLevelField","oldAggregates","oldFilters","isV3CHQuery","oldPluginVersion","oldQueryType","CHEditorByType","dispatch","useReducer","useBuilderOptionsState","queryKey","lastKey","lastEditorType","shouldSkipChanges","configEditor","featureToggles","protocolOptions","onTLSSettingsChange","hasAdditionalSettings","uidWarning","trackingV1","disabledOptions","plugin","DataSourcePlugin","setConfigEditor","setQueryEditor","migrateCHQuery","getAppEvents","DashboardLoadedEvent","dashboardId","orgId","queries","clickhouseQueries","pluginJson","q","clickhouse_plugin_version","clickhouseVersion","grafana_version","dashboard_id","org_id","sql_queries","sql_query_type_table","sql_query_type_logs","sql_query_type_timeseries","sql_query_type_traces","builder_queries","builder_query_type_table","builder_query_type_table_simple","builder_query_type_table_aggregate","builder_query_type_logs","builder_query_type_timeseries","builder_query_type_timeseries_simple","builder_query_type_timeseries_aggregate","builder_query_type_traces","builder_query_type_traces_search","builder_query_type_traces_id","builder_minimized_queries","builder_otel_queries","analyzeQueries"],"sourceRoot":""}